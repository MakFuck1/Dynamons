(function (console, $hx_exports, $global) { "use strict";
$hx_exports.openfl = $hx_exports.openfl || {};
$hx_exports.lime = $hx_exports.lime || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
// hacked
window.hxClasses = $hxClasses;
//
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = StringTools.fastCodeAt(s,i++);
		if(55296 <= c && c <= 56319) c = c - 55232 << 10 | StringTools.fastCodeAt(s,i++) & 1023;
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) return hb;
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v & 255;
	}
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		if(srcpos == 0 && len == src.length) this.b.set(src.b,pos); else this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
	}
	,getDouble: function(pos) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setFloat32(pos,v,true);
	}
	,setUInt16: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setUint16(pos,v,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var openfl_utils_IDataOutput = function() { };
$hxClasses["openfl.utils.IDataOutput"] = openfl_utils_IDataOutput;
openfl_utils_IDataOutput.__name__ = ["openfl","utils","IDataOutput"];
openfl_utils_IDataOutput.prototype = {
	__class__: openfl_utils_IDataOutput
	,__properties__: {set_endian:"set_endian",get_endian:"get_endian"}
};
var openfl_utils_IDataInput = function() { };
$hxClasses["openfl.utils.IDataInput"] = openfl_utils_IDataInput;
openfl_utils_IDataInput.__name__ = ["openfl","utils","IDataInput"];
openfl_utils_IDataInput.prototype = {
	__class__: openfl_utils_IDataInput
	,__properties__: {set_endian:"set_endian",get_endian:"get_endian",get_bytesAvailable:"get_bytesAvailable"}
};
var openfl_utils_ByteArrayData = function(length) {
	if(length == null) length = 0;
	var bytes = haxe_io_Bytes.alloc(length);
	haxe_io_Bytes.call(this,bytes.b.buffer);
	this.__length = length;
	this.__endian = "bigEndian";
	this.position = 0;
};
$hxClasses["openfl.utils.ByteArrayData"] = openfl_utils_ByteArrayData;
openfl_utils_ByteArrayData.__name__ = ["openfl","utils","ByteArrayData"];
openfl_utils_ByteArrayData.__interfaces__ = [openfl_utils_IDataOutput,openfl_utils_IDataInput];
openfl_utils_ByteArrayData.fromBytes = function(bytes) {
	var result = new openfl_utils_ByteArrayData();
	result.__fromBytes(bytes);
	return result;
};
openfl_utils_ByteArrayData.__super__ = haxe_io_Bytes;
openfl_utils_ByteArrayData.prototype = $extend(haxe_io_Bytes.prototype,{
	clear: function() {
		this.__length = 0;
		this.position = 0;
	}
	,compress: function(algorithm) {
		this.__length = this.length;
		this.position = this.__length;
	}
	,deflate: function() {
		this.compress(openfl_utils_CompressionAlgorithm.DEFLATE);
	}
	,inflate: function() {
		this.uncompress(openfl_utils_CompressionAlgorithm.DEFLATE);
	}
	,readBoolean: function() {
		if(this.position < this.length) return this.get(this.position++) != 0; else {
			throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
			return false;
		}
	}
	,readByte: function() {
		var value = this.readUnsignedByte();
		if((value & 128) != 0) return value - 256; else return value;
	}
	,readBytes: function(bytes,offset,length) {
		if(length == null) length = 0;
		if(offset == null) offset = 0;
		if(length == 0) length = this.__length - this.position;
		if(this.position + length > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		if(bytes.__length < offset + length) bytes.__resize(offset + length);
		bytes.blit(offset,this,this.position,length);
		this.position += length;
	}
	,readDouble: function() {
		if(this.position + 8 > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		this.position += 8;
		return this.getDouble(this.position - 8);
	}
	,readFloat: function() {
		if(this.position + 4 > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		this.position += 4;
		return this.getFloat(this.position - 4);
	}
	,readInt: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		var ch3 = this.readUnsignedByte();
		var ch4 = this.readUnsignedByte();
		if(this.__endian == "littleEndian") return ch4 << 24 | ch3 << 16 | ch2 << 8 | ch1; else return ch1 << 24 | ch2 << 16 | ch3 << 8 | ch4;
	}
	,readMultiByte: function(length,charSet) {
		return this.readUTFBytes(length);
	}
	,readShort: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		var value;
		if(this.__endian == "littleEndian") value = ch2 << 8 | ch1; else value = ch1 << 8 | ch2;
		if((value & 32768) != 0) return value - 65536; else return value;
	}
	,readUnsignedByte: function() {
		if(this.position < this.__length) return this.get(this.position++); else {
			throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
			return 0;
		}
	}
	,readUnsignedInt: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		var ch3 = this.readUnsignedByte();
		var ch4 = this.readUnsignedByte();
		if(this.__endian == "littleEndian") return ch4 << 24 | ch3 << 16 | ch2 << 8 | ch1; else return ch1 << 24 | ch2 << 16 | ch3 << 8 | ch4;
	}
	,readUnsignedShort: function() {
		var ch1 = this.readUnsignedByte();
		var ch2 = this.readUnsignedByte();
		if(this.__endian == "littleEndian") return (ch2 << 8) + ch1; else return ch1 << 8 | ch2;
	}
	,readUTF: function() {
		var bytesCount = this.readUnsignedShort();
		return this.readUTFBytes(bytesCount);
	}
	,readUTFBytes: function(length) {
		if(this.position + length > this.__length) throw new js__$Boot_HaxeError(new openfl_errors_EOFError());
		this.position += length;
		return this.getString(this.position - length,length);
	}
	,uncompress: function(algorithm) {
		this.__length = this.length;
		this.position = 0;
	}
	,writeBoolean: function(value) {
		this.writeByte(value?1:0);
	}
	,writeByte: function(value) {
		this.__resize(this.position + 1);
		this.set(this.position++,value & 255);
	}
	,writeBytes: function(bytes,offset,length) {
		if(length == null) length = 0;
		if(offset == null) offset = 0;
		if(openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(bytes) == 0) return;
		if(length == 0) {
			var a = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(bytes);
			length = a - offset;
		}
		this.__resize(this.position + length);
		this.blit(this.position,bytes,offset,length);
		this.position = this.position + length;
	}
	,writeDouble: function(value) {
		this.__resize(this.position + 8);
		this.setDouble(this.position,value);
		this.position += 8;
	}
	,writeFloat: function(value) {
		this.__resize(this.position + 4);
		this.setFloat(this.position,value);
		this.position += 4;
	}
	,writeInt: function(value) {
		this.__resize(this.position + 4);
		if(this.__endian == "littleEndian") {
			this.set(this.position++,value);
			this.set(this.position++,value >> 8);
			this.set(this.position++,value >> 16);
			this.set(this.position++,value >> 24);
		} else {
			this.set(this.position++,value >> 24);
			this.set(this.position++,value >> 16);
			this.set(this.position++,value >> 8);
			this.set(this.position++,value);
		}
	}
	,writeMultiByte: function(value,charSet) {
		this.writeUTFBytes(value);
	}
	,writeShort: function(value) {
		this.__resize(this.position + 2);
		if(this.__endian == "littleEndian") {
			this.set(this.position++,value);
			this.set(this.position++,value >> 8);
		} else {
			this.set(this.position++,value >> 8);
			this.set(this.position++,value);
		}
	}
	,writeUnsignedInt: function(value) {
		this.writeInt(value);
	}
	,writeUTF: function(value) {
		var bytes = haxe_io_Bytes.ofString(value);
		this.writeShort(bytes.length);
		this.writeBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(bytes));
	}
	,writeUTFBytes: function(value) {
		var bytes = haxe_io_Bytes.ofString(value);
		this.writeBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(haxe_io_Bytes.ofString(value)));
	}
	,__fromBytes: function(bytes) {
		this.b = bytes.b;
		this.length = bytes.length;
		this.data = bytes.data;
		this.__length = bytes.length;
	}
	,__resize: function(size) {
		if(size > this.length) {
			var bytes = haxe_io_Bytes.alloc((size + 1) * 3 >> 1);
			bytes.blit(0,this,0,this.length);
			this.b = bytes.b;
			this.length = bytes.length;
			this.data = bytes.data;
		}
		if(this.__length < size) this.__length = size;
	}
	,__setData: function(bytes) {
		this.b = bytes.b;
		this.length = bytes.length;
		this.data = bytes.data;
	}
	,get_bytesAvailable: function() {
		return this.length - this.position;
	}
	,get_endian: function() {
		return this.__endian;
	}
	,set_endian: function(value) {
		return this.__endian = value;
	}
	,__class__: openfl_utils_ByteArrayData
	,__properties__: {set_endian:"set_endian",get_endian:"get_endian",get_bytesAvailable:"get_bytesAvailable"}
});
var _$_$ASSET_$_$data_$gameplay_$js = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$data_$gameplay_$js.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__data_gameplay_js"] = _$_$ASSET_$_$data_$gameplay_$js;
_$_$ASSET_$_$data_$gameplay_$js.__name__ = ["__ASSET__data_gameplay_js"];
_$_$ASSET_$_$data_$gameplay_$js.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$data_$gameplay_$js.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$data_$gameplay_$js
});
var _$_$ASSET_$_$images_$atlas_$0_$json = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$atlas_$0_$json.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_atlas_0_json"] = _$_$ASSET_$_$images_$atlas_$0_$json;
_$_$ASSET_$_$images_$atlas_$0_$json.__name__ = ["__ASSET__images_atlas_0_json"];
_$_$ASSET_$_$images_$atlas_$0_$json.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$atlas_$0_$json.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$atlas_$0_$json
});
var _$_$ASSET_$_$images_$atlas_$1_$json = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$atlas_$1_$json.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_atlas_1_json"] = _$_$ASSET_$_$images_$atlas_$1_$json;
_$_$ASSET_$_$images_$atlas_$1_$json.__name__ = ["__ASSET__images_atlas_1_json"];
_$_$ASSET_$_$images_$atlas_$1_$json.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$atlas_$1_$json.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$atlas_$1_$json
});
var _$_$ASSET_$_$images_$atlas_$2_$json = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$atlas_$2_$json.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_atlas_2_json"] = _$_$ASSET_$_$images_$atlas_$2_$json;
_$_$ASSET_$_$images_$atlas_$2_$json.__name__ = ["__ASSET__images_atlas_2_json"];
_$_$ASSET_$_$images_$atlas_$2_$json.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$atlas_$2_$json.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$atlas_$2_$json
});
var _$_$ASSET_$_$images_$atlas_$3_$json = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$atlas_$3_$json.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_atlas_3_json"] = _$_$ASSET_$_$images_$atlas_$3_$json;
_$_$ASSET_$_$images_$atlas_$3_$json.__name__ = ["__ASSET__images_atlas_3_json"];
_$_$ASSET_$_$images_$atlas_$3_$json.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$atlas_$3_$json.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$atlas_$3_$json
});
var _$_$ASSET_$_$images_$atlas_$4_$json = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$atlas_$4_$json.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_atlas_4_json"] = _$_$ASSET_$_$images_$atlas_$4_$json;
_$_$ASSET_$_$images_$atlas_$4_$json.__name__ = ["__ASSET__images_atlas_4_json"];
_$_$ASSET_$_$images_$atlas_$4_$json.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$atlas_$4_$json.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$atlas_$4_$json
});
var _$_$ASSET_$_$images_$atlas_$5_$json = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$atlas_$5_$json.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_atlas_5_json"] = _$_$ASSET_$_$images_$atlas_$5_$json;
_$_$ASSET_$_$images_$atlas_$5_$json.__name__ = ["__ASSET__images_atlas_5_json"];
_$_$ASSET_$_$images_$atlas_$5_$json.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$atlas_$5_$json.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$atlas_$5_$json
});
var _$_$ASSET_$_$images_$atlas_$6_$json = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$atlas_$6_$json.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_atlas_6_json"] = _$_$ASSET_$_$images_$atlas_$6_$json;
_$_$ASSET_$_$images_$atlas_$6_$json.__name__ = ["__ASSET__images_atlas_6_json"];
_$_$ASSET_$_$images_$atlas_$6_$json.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$atlas_$6_$json.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$atlas_$6_$json
});
var _$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_fonts_black_medium_kern_txt"] = _$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt;
_$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt.__name__ = ["__ASSET__images_fonts_black_medium_kern_txt"];
_$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt
});
var _$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_fonts_black_small_kern_txt"] = _$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt;
_$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt.__name__ = ["__ASSET__images_fonts_black_small_kern_txt"];
_$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt
});
var _$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_fonts_white_shadow_small_kern_txt"] = _$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt;
_$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt.__name__ = ["__ASSET__images_fonts_white_shadow_small_kern_txt"];
_$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt
});
var _$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_fonts_white_small_kern_txt"] = _$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt;
_$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt.__name__ = ["__ASSET__images_fonts_white_small_kern_txt"];
_$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt
});
var _$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_fonts_white_stroked_big_kern_txt"] = _$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt;
_$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt.__name__ = ["__ASSET__images_fonts_white_stroked_big_kern_txt"];
_$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt
});
var _$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt = function(length) {
	if(length == null) length = 0;
	openfl_utils_ByteArrayData.call(this);
	var bytes = haxe_Resource.getBytes(_$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt.resourceName);
	this.__fromBytes(bytes);
};
$hxClasses["__ASSET__images_fonts_white_stroked_small_kern_txt"] = _$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt;
_$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt.__name__ = ["__ASSET__images_fonts_white_stroked_small_kern_txt"];
_$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt.__super__ = openfl_utils_ByteArrayData;
_$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt.prototype = $extend(openfl_utils_ByteArrayData.prototype,{
	__class__: _$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt
});
var ApplicationMain = function() { };
$hxClasses["ApplicationMain"] = ApplicationMain;
ApplicationMain.__name__ = ["ApplicationMain"];
ApplicationMain.config = null;
ApplicationMain.preloader = null;
ApplicationMain.create = function() {
	var app = new openfl_display_Application();
	app.create(ApplicationMain.config);
	var display = new co_doubleduck_dynamons2_Preloader();
	ApplicationMain.preloader = new openfl_display_Preloader(display);
	app.setPreloader(ApplicationMain.preloader);
	ApplicationMain.preloader.onComplete.add(ApplicationMain.init);
	ApplicationMain.preloader.create(ApplicationMain.config);
	var urls = [];
	var types = [];
	urls.push("data/gameplay.js");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$data_$gameplay_$js,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_0.json");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$atlas_$0_$json,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_0.png");
	types.push("IMAGE");
	urls.push("images/atlas_1.json");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$atlas_$1_$json,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_1.png");
	types.push("IMAGE");
	urls.push("images/atlas_2.json");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$atlas_$2_$json,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_2.png");
	types.push("IMAGE");
	urls.push("images/atlas_3.json");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$atlas_$3_$json,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_3.png");
	types.push("IMAGE");
	urls.push("images/atlas_4.json");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$atlas_$4_$json,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_4.png");
	types.push("IMAGE");
	urls.push("images/atlas_5.json");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$atlas_$5_$json,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_5.png");
	types.push("IMAGE");
	urls.push("images/atlas_6.json");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$atlas_$6_$json,[]) , openfl_utils_ByteArrayData));
	urls.push("images/atlas_6.png");
	types.push("IMAGE");
	urls.push("images/fonts/black_medium/kern.txt");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt,[]) , openfl_utils_ByteArrayData));
	urls.push("images/fonts/black_small/kern.txt");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt,[]) , openfl_utils_ByteArrayData));
	urls.push("images/fonts/white_shadow_small/kern.txt");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt,[]) , openfl_utils_ByteArrayData));
	urls.push("images/fonts/white_small/kern.txt");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt,[]) , openfl_utils_ByteArrayData));
	urls.push("images/fonts/white_stroked_big/kern.txt");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt,[]) , openfl_utils_ByteArrayData));
	urls.push("images/fonts/white_stroked_small/kern.txt");
	types.push("TEXT");
	ApplicationMain.embeddedFiles.push(js_Boot.__cast(Type.createInstance(_$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt,[]) , openfl_utils_ByteArrayData));
	urls.push("images/map/bgs/bg1.jpg");
	types.push("IMAGE");
	urls.push("images/map/bgs/bg2.jpg");
	types.push("IMAGE");
	urls.push("images/map/bgs/bg3.jpg");
	types.push("IMAGE");
	urls.push("images/map/bgs/bg4.jpg");
	types.push("IMAGE");
	urls.push("images/session/bgs/arena.jpg");
	types.push("IMAGE");
	urls.push("images/session/bgs/desert.jpg");
	types.push("IMAGE");
	urls.push("images/session/bgs/snow.jpg");
	types.push("IMAGE");
	urls.push("images/session/bgs/volcano.jpg");
	types.push("IMAGE");
	urls.push("images/session/bgs/water.jpg");
	types.push("IMAGE");
	urls.push("images/session/bgs/woods.jpg");
	types.push("IMAGE");
	urls.push("images/team/bg_team.jpg");
	types.push("IMAGE");
	if(ApplicationMain.config.assetsPrefix != null) {
		var _g1 = 0;
		var _g = urls.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(types[i] != "FONT") urls[i] = ApplicationMain.config.assetsPrefix + urls[i];
		}
	}
	ApplicationMain.preloader.load(urls,types);
	var result = app.exec();
};
ApplicationMain.init = function() {
	var loaded = 0;
	var total = 0;
	var library_onLoad = function(__) {
		loaded++;
		if(loaded == total) ApplicationMain.start();
	};
	ApplicationMain.preloader = null;
	if(total == 0) ApplicationMain.start();
};
ApplicationMain.main = function() {
	ApplicationMain.config = { build : "845", company : "Double Duck Ltd.", file : "Dynamons2", fps : 60, name : "Dynamons2", orientation : "portrait", packageName : "com.funtomic.dynamons2", version : "1.0.0", windows : [{ antialiasing : 0, background : 0, borderless : false, depthBuffer : false, display : 0, fullscreen : false, hardware : false, height : 480, parameters : "{}", resizable : true, stencilBuffer : true, title : "Dynamons2", vsync : false, width : 320, x : null, y : null}]};
};
ApplicationMain.start = function() {
	var hasMain = false;
	var entryPoint = Type.resolveClass("Main");
	var _g = 0;
	var _g1 = Type.getClassFields(entryPoint);
	while(_g < _g1.length) {
		var methodName = _g1[_g];
		++_g;
		if(methodName == "main") {
			hasMain = true;
			break;
		}
	}
	lime_Assets.initialize();
	if(hasMain) Reflect.callMethod(entryPoint,Reflect.field(entryPoint,"main"),[]); else {
		var instance = Type.createInstance(DocumentClass,[]);
	}
	if(openfl_Lib.current.stage.window.__fullscreen) openfl_Lib.current.stage.dispatchEvent(new openfl_events_FullScreenEvent(openfl_events_FullScreenEvent.FULL_SCREEN,false,false,true,true));
	openfl_Lib.current.stage.dispatchEvent(new openfl_events_Event(openfl_events_Event.RESIZE,false,false));
};
var openfl_events_IEventDispatcher = function() { };
$hxClasses["openfl.events.IEventDispatcher"] = openfl_events_IEventDispatcher;
openfl_events_IEventDispatcher.__name__ = ["openfl","events","IEventDispatcher"];
openfl_events_IEventDispatcher.prototype = {
	__class__: openfl_events_IEventDispatcher
};
var openfl_events_EventDispatcher = function(target) {
	if(target != null) this.__targetDispatcher = target;
};
$hxClasses["openfl.events.EventDispatcher"] = openfl_events_EventDispatcher;
openfl_events_EventDispatcher.__name__ = ["openfl","events","EventDispatcher"];
openfl_events_EventDispatcher.__interfaces__ = [openfl_events_IEventDispatcher];
openfl_events_EventDispatcher.__sortByPriority = function(l1,l2) {
	if(l1.priority == l2.priority) return 0; else if(l1.priority > l2.priority) return -1; else return 1;
};
openfl_events_EventDispatcher.prototype = {
	addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		if(this.__eventMap == null) {
			this.__dispatching = new haxe_ds_StringMap();
			this.__eventMap = new haxe_ds_StringMap();
			this.__newEventMap = new haxe_ds_StringMap();
		}
		if(!this.__eventMap.exists(type)) {
			var list = [];
			list.push(new openfl_events__$EventDispatcher_Listener(listener,useCapture,priority));
			this.__eventMap.set(type,list);
		} else {
			var list1;
			if(this.__dispatching.get(type) == true) {
				if(!this.__newEventMap.exists(type)) {
					var _this = this.__eventMap.get(type);
					list1 = _this.slice();
					this.__newEventMap.set(type,list1);
				} else list1 = this.__newEventMap.get(type);
			} else list1 = this.__eventMap.get(type);
			var _g1 = 0;
			var _g = list1.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(Reflect.compareMethods(list1[i].callback,listener)) return;
			}
			list1.push(new openfl_events__$EventDispatcher_Listener(listener,useCapture,priority));
			list1.sort(openfl_events_EventDispatcher.__sortByPriority);
		}
	}
	,dispatchEvent: function(event) {
		if(this.__targetDispatcher != null) event.target = this.__targetDispatcher; else event.target = this;
		return this.__dispatchEvent(event);
	}
	,hasEventListener: function(type) {
		if(this.__eventMap == null) return false;
		if(this.__dispatching.get(type) == true && this.__newEventMap.exists(type)) return this.__newEventMap.get(type).length > 0; else return this.__eventMap.exists(type);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		if(this.__eventMap == null) return;
		var list = this.__eventMap.get(type);
		if(list == null) return;
		var dispatching = this.__dispatching.get(type) == true;
		if(dispatching) {
			if(!this.__newEventMap.exists(type)) {
				var _this = this.__eventMap.get(type);
				list = _this.slice();
				this.__newEventMap.set(type,list);
			} else list = this.__newEventMap.get(type);
		}
		var _g1 = 0;
		var _g = list.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(list[i].match(listener,useCapture)) {
				list.splice(i,1);
				break;
			}
		}
		if(!dispatching) {
			if(list.length == 0) this.__eventMap.remove(type);
			if(!this.__eventMap.iterator().hasNext()) {
				this.__eventMap = null;
				this.__newEventMap = null;
			}
		}
	}
	,toString: function() {
		var full = Type.getClassName(js_Boot.getClass(this));
		var $short = full.split(".").pop();
		return "[object " + $short + "]";
	}
	,willTrigger: function(type) {
		return this.hasEventListener(type);
	}
	,__dispatchEvent: function(event) {
		if(this.__eventMap == null || event == null) return false;
		var type = event.type;
		var list;
		if(this.__dispatching.get(type) == true) {
			list = this.__newEventMap.get(type);
			if(list == null) return false;
			list = list.slice();
		} else {
			list = this.__eventMap.get(type);
			if(list == null) return false;
			this.__dispatching.set(type,true);
		}
		if(event.target == null) {
			if(this.__targetDispatcher != null) event.target = this.__targetDispatcher; else event.target = this;
		}
		event.currentTarget = this;
		var capture = event.eventPhase == openfl_events_EventPhase.CAPTURING_PHASE;
		var index = 0;
		var listener;
		while(index < list.length) {
			listener = list[index];
			if(listener.useCapture == capture) {
				listener.callback(event);
				if(event.__isCanceledNow) break;
			}
			if(listener == list[index]) index++;
		}
		if(this.__newEventMap != null && this.__newEventMap.exists(type)) {
			var list1 = this.__newEventMap.get(type);
			if(list1.length > 0) this.__eventMap.set(type,list1); else this.__eventMap.remove(type);
			if(!this.__eventMap.iterator().hasNext()) {
				this.__eventMap = null;
				this.__newEventMap = null;
			} else this.__newEventMap.remove(type);
		}
		this.__dispatching.set(event.type,false);
		return true;
	}
	,__class__: openfl_events_EventDispatcher
};
var openfl_display_IBitmapDrawable = function() { };
$hxClasses["openfl.display.IBitmapDrawable"] = openfl_display_IBitmapDrawable;
openfl_display_IBitmapDrawable.__name__ = ["openfl","display","IBitmapDrawable"];
openfl_display_IBitmapDrawable.prototype = {
	__class__: openfl_display_IBitmapDrawable
};
var openfl_display_DisplayObject = function() {
	this.__cacheAsBitmapSmooth = true;
	this.__cacheAsBitmap = false;
	this.__maskCached = false;
	openfl_events_EventDispatcher.call(this);
	this.__alpha = 1;
	this.__transform = new openfl_geom_Matrix();
	this.__visible = true;
	this.__rotation = 0;
	this.__rotationSine = 0;
	this.__rotationCosine = 1;
	this.__renderTransform = new openfl_geom_Matrix();
	this.__offset = new openfl_geom_Point();
	this.__worldOffset = new openfl_geom_Point();
	this.__worldAlpha = 1;
	this.__worldTransform = new openfl_geom_Matrix();
	this.__worldColorTransform = new openfl_geom_ColorTransform();
	this.set_name("instance" + ++openfl_display_DisplayObject.__instanceCount);
};
$hxClasses["openfl.display.DisplayObject"] = openfl_display_DisplayObject;
openfl_display_DisplayObject.__name__ = ["openfl","display","DisplayObject"];
openfl_display_DisplayObject.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_DisplayObject.__super__ = openfl_events_EventDispatcher;
openfl_display_DisplayObject.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	getBounds: function(targetCoordinateSpace) {
		var matrix;
		if(targetCoordinateSpace != null) {
			matrix = this.__getWorldTransform().clone();
			matrix.concat(targetCoordinateSpace.__getWorldTransform().clone().invert());
		} else {
			matrix = openfl_geom_Matrix.__temp;
			matrix.identity();
		}
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,matrix);
		return bounds;
	}
	,getRect: function(targetCoordinateSpace) {
		return this.getBounds(targetCoordinateSpace);
	}
	,globalToLocal: function(pos) {
		pos = pos.clone();
		this.__getWorldTransform().__transformInversePoint(pos);
		return pos;
	}
	,hitTestObject: function(obj) {
		if(obj != null && obj.parent != null && this.parent != null) {
			var currentBounds = this.getBounds(this);
			var targetBounds = obj.getBounds(this);
			return currentBounds.intersects(targetBounds);
		}
		return false;
	}
	,hitTestPoint: function(x,y,shapeFlag) {
		if(shapeFlag == null) shapeFlag = false;
		if(this.parent != null) {
			var bounds = new openfl_geom_Rectangle();
			this.__getBounds(bounds,this.__getWorldTransform());
			return bounds.containsPoint(new openfl_geom_Point(x,y));
		}
		return false;
	}
	,localToGlobal: function(point) {
		return this.__getWorldTransform().transformPoint(point);
	}
	,__broadcast: function(event,notifyChilden) {
		if(this.__eventMap != null && this.hasEventListener(event.type)) {
			var result = openfl_events_EventDispatcher.prototype.__dispatchEvent.call(this,event);
			if(event.__isCanceled) return true;
			return result;
		}
		return false;
	}
	,__dispatchEvent: function(event) {
		var result = openfl_events_EventDispatcher.prototype.__dispatchEvent.call(this,event);
		if(event.__isCanceled) return true;
		if(event.bubbles && this.parent != null && this.parent != this) {
			event.eventPhase = openfl_events_EventPhase.BUBBLING_PHASE;
			if(event.target == null) event.target = this;
			this.parent.__dispatchEvent(event);
		}
		return result;
	}
	,__enterFrame: function(deltaTime) {
	}
	,__getBounds: function(rect,matrix) {
		if(this.__graphics != null) this.__graphics.__getBounds(rect,matrix);
	}
	,__getCursor: function() {
		return null;
	}
	,__getInteractive: function(stack) {
		return false;
	}
	,__getLocalBounds: function(rect) {
		this.__getBounds(rect,this.__transform);
	}
	,__getRenderBounds: function(rect,matrix) {
		if(this.__scrollRect == null) this.__getBounds(rect,matrix); else {
			var r = openfl_geom_Rectangle.__temp;
			r.copyFrom(this.__scrollRect);
			r.__transform(r,matrix);
			rect.__expand(matrix.tx,matrix.ty,r.width,r.height);
		}
	}
	,__getWorldTransform: function() {
		if(this.__transformDirty || openfl_display_DisplayObject.__worldTransformDirty > 0) {
			var list = [];
			var current = this;
			var transformDirty = this.__transformDirty;
			if(this.parent == null) {
				if(transformDirty) this.__update(true,false);
			} else while(current.parent != null) {
				list.push(current);
				current = current.parent;
				if(current.__transformDirty) transformDirty = true;
			}
			if(transformDirty) {
				var i = list.length;
				while(--i >= 0) list[i].__update(true,false);
			}
		}
		return this.__worldTransform;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(this.__graphics != null) {
			if(!hitObject.get_visible() || this.__isMask) return false;
			if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
			if(this.__graphics.__hitTest(x,y,shapeFlag,this.__getWorldTransform())) {
				if(stack != null && !interactiveOnly) stack.push(hitObject);
				return true;
			}
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		if(this.__graphics != null) {
			if(this.__graphics.__hitTest(x,y,true,this.__getWorldTransform())) return true;
		}
		return false;
	}
	,__renderCairo: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_cairo_CairoShape.render(this,renderSession);
	}
	,__renderCairoMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_cairo_CairoGraphics.renderMask(this.__graphics,renderSession);
	}
	,__renderCanvas: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_canvas_CanvasShape.render(this,renderSession);
	}
	,__renderCanvasMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_canvas_CanvasGraphics.renderMask(this.__graphics,renderSession);
	}
	,__renderDOM: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_dom_DOMShape.render(this,renderSession);
	}
	,__renderGL: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		if(this.__graphics != null) {
			if(this.__graphics.__hardware) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render(this,renderSession); else {
				openfl__$internal_renderer_canvas_CanvasGraphics.render(this.__graphics,renderSession);
				openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession);
			}
		}
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__drawGraphicsGL: function(renderSession) {
		if(this.__graphics != null) {
			if(this.__graphics.__hardware) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render(this,renderSession); else {
				openfl__$internal_renderer_canvas_CanvasGraphics.render(this.__graphics,renderSession);
				openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession);
			}
		}
	}
	,__preRenderGL: function(renderSession) {
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
	}
	,__postRenderGL: function(renderSession) {
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__cacheGL: function(renderSession) {
		var hasCacheMatrix = this.__cacheAsBitmapMatrix != null;
		var x = this.__cachedBitmapBounds.x;
		var y = this.__cachedBitmapBounds.y;
		var w = this.__cachedBitmapBounds.width;
		var h = this.__cachedBitmapBounds.height;
		if(this.__cacheGLMatrix == null) this.__cacheGLMatrix = new openfl_geom_Matrix();
		if(hasCacheMatrix) {
			var bmpBounds = openfl_geom_Rectangle.__temp;
			this.__cachedBitmapBounds.__transform(bmpBounds,this.__cacheAsBitmapMatrix);
			x = bmpBounds.x;
			y = bmpBounds.y;
			w = bmpBounds.width;
			h = bmpBounds.height;
			this.__cacheGLMatrix = this.__cacheAsBitmapMatrix.clone();
		} else this.__cacheGLMatrix.identity();
		if(w <= 0 && h <= 0) throw new js__$Boot_HaxeError("Error creating a cached bitmap. The texture size is " + w + "x" + h);
		if(this.__updateCachedBitmap || this.__updateFilters) {
			if(this.__cachedFilterBounds != null) {
				w += Math.abs(this.__cachedFilterBounds.x) + Math.abs(this.__cachedFilterBounds.width);
				h += Math.abs(this.__cachedFilterBounds.y) + Math.abs(this.__cachedFilterBounds.height);
			}
			if(this.__cachedBitmap == null) this.__cachedBitmap = openfl_display_BitmapData.__asRenderTexture();
			this.__cachedBitmap.__resize(Math.ceil(w),Math.ceil(h));
			var m = this.__cacheGLMatrix.clone();
			m.translate(-x,-y);
			var shader = this.__shader;
			this.__shader = null;
			this.__cachedBitmap.__drawGL(renderSession,this,m,null,null,null,true,false,true);
			this.__shader = shader;
			this.__updateCachedBitmap = false;
		}
		if(this.__updateFilters) {
			openfl_filters_BitmapFilter.__applyFilters(this.__filters,renderSession,this.__cachedBitmap,this.__cachedBitmap,null,null);
			this.__updateFilters = false;
		}
		this.__cacheGLMatrix.invert();
		this.__cacheGLMatrix.__translateTransformed(x,y);
		this.__cacheGLMatrix.concat(this.__renderTransform);
		this.__cacheGLMatrix.translate(this.__offset.x,this.__offset.y);
		renderSession.spriteBatch.renderBitmapData(this.__cachedBitmap,this.__cacheAsBitmapSmooth,this.__cacheGLMatrix,this.__worldColorTransform,this.__worldAlpha,this.blendMode,this.__shader,openfl_display_PixelSnapping.ALWAYS);
	}
	,__setStageReference: function(stage) {
		if(this.stage != stage) {
			if(this.stage != null) {
				if(this.stage.get_focus() == this) this.stage.set_focus(null);
				this.dispatchEvent(new openfl_events_Event(openfl_events_Event.REMOVED_FROM_STAGE,false,false));
			}
			this.stage = stage;
			if(stage != null) this.dispatchEvent(new openfl_events_Event(openfl_events_Event.ADDED_TO_STAGE,false,false));
		}
	}
	,__setRenderDirty: function() {
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
	}
	,__setTransformDirty: function() {
		if(!this.__transformDirty) {
			this.__transformDirty = true;
			openfl_display_DisplayObject.__worldTransformDirty++;
		}
	}
	,__update: function(transformOnly,updateChildren,maskGraphics) {
		this.__renderable = this.get_visible() && this.get_scaleX() != 0 && this.get_scaleY() != 0 && !this.__isMask;
		this.__updateTransforms();
		if(this.parent != null && this.__isMask) this.__maskCached = false;
		if(updateChildren && this.__transformDirty) {
			this.__transformDirty = false;
			openfl_display_DisplayObject.__worldTransformDirty--;
		}
		if(!transformOnly && this.__mask != null && !this.__mask.__maskCached) {
			if(this.__maskGraphics == null) this.__maskGraphics = new openfl_display_Graphics();
			this.__maskGraphics.clear();
			this.__mask.__update(true,true,this.__maskGraphics);
			this.__mask.__maskCached = true;
		}
		if(maskGraphics != null) this.__updateMask(maskGraphics);
		if(!transformOnly && this.__cacheAsBitmap) {
			if(this.__updateCachedBitmap || this.__updateFilters) {
				if(this.__cachedBitmapBounds == null) this.__cachedBitmapBounds = new openfl_geom_Rectangle();
				if(this.cacheAsBitmapBounds != null) this.__cachedBitmapBounds.copyFrom(this.cacheAsBitmapBounds); else {
					this.__cachedBitmapBounds.setEmpty();
					this.__getRenderBounds(this.__cachedBitmapBounds,openfl_geom_Matrix.__identity);
				}
				if(this.__filters != null) {
					if(this.__cachedFilterBounds == null) this.__cachedFilterBounds = new openfl_geom_Rectangle();
					this.__cachedFilterBounds.setEmpty();
					openfl_filters_BitmapFilter.__expandBounds(this.__filters,this.__cachedFilterBounds,openfl_geom_Matrix.__identity);
					this.__cachedBitmapBounds.x += this.__cachedFilterBounds.x;
					this.__cachedBitmapBounds.y += this.__cachedFilterBounds.y;
				}
			}
		}
		if(!transformOnly) {
			if(!this.__worldColorTransform.__equals(this.get_transform().get_colorTransform())) this.__worldColorTransform = this.get_transform().get_colorTransform().__clone();
			if(this.parent != null) {
				this.__worldAlpha = this.get_alpha() * this.parent.__worldAlpha;
				this.__worldColorTransform.__combine(this.parent.__worldColorTransform);
				if(this.blendMode == null || this.blendMode == openfl_display_BlendMode.NORMAL) this.__blendMode = this.parent.__blendMode;
				if(this.shader == null) this.__shader = this.parent.__shader;
			} else this.__worldAlpha = this.get_alpha();
			if(updateChildren && this.__renderDirty) this.__renderDirty = false;
		}
	}
	,__updateChildren: function(transformOnly) {
		this.__renderable = this.get_visible() && this.get_scaleX() != 0 && this.get_scaleY() != 0 && !this.__isMask;
		if(!this.__renderable && !this.__isMask) return;
		this.__worldAlpha = this.get_alpha();
		if(this.__transformDirty) {
			this.__transformDirty = false;
			openfl_display_DisplayObject.__worldTransformDirty--;
		}
	}
	,__updateMask: function(maskGraphics) {
		if(this.__graphics != null) {
			maskGraphics.__commands.overrideMatrix(this.__worldTransform);
			maskGraphics.__commands.append(this.__graphics.__commands);
			maskGraphics.set___dirty(true);
			maskGraphics.__visible = true;
			if(maskGraphics.__bounds == null) maskGraphics.__bounds = new openfl_geom_Rectangle();
			this.__graphics.__getBounds(maskGraphics.__bounds,openfl_geom_Matrix.__identity);
		}
	}
	,__updateTransforms: function(overrideTransform) {
		var overrided = overrideTransform != null;
		var local;
		if(overrided) local = new openfl_geom_Matrix(overrideTransform.a,overrideTransform.b,overrideTransform.c,overrideTransform.d,overrideTransform.tx,overrideTransform.ty); else local = this.__transform;
		if(this.__worldTransform == null) this.__worldTransform = new openfl_geom_Matrix();
		if(!overrided && this.parent != null) {
			var parentTransform = this.parent.__worldTransform;
			this.__worldTransform.a = local.a * parentTransform.a + local.b * parentTransform.c;
			this.__worldTransform.b = local.a * parentTransform.b + local.b * parentTransform.d;
			this.__worldTransform.c = local.c * parentTransform.a + local.d * parentTransform.c;
			this.__worldTransform.d = local.c * parentTransform.b + local.d * parentTransform.d;
			this.__worldTransform.tx = local.tx * parentTransform.a + local.ty * parentTransform.c + parentTransform.tx;
			this.__worldTransform.ty = local.tx * parentTransform.b + local.ty * parentTransform.d + parentTransform.ty;
			this.__worldOffset.copyFrom(this.parent.__worldOffset);
		} else {
			this.__worldTransform.copyFrom(local);
			this.__worldOffset.setTo(0,0);
		}
		if(this.__scrollRect != null) {
			this.__offset = this.__worldTransform.deltaTransformPoint(this.__scrollRect.get_topLeft());
			this.__worldOffset.offset(this.__offset.x,this.__offset.y);
		} else this.__offset.setTo(0,0);
		this.__renderTransform.copyFrom(this.__worldTransform);
		this.__renderTransform.translate(-this.__worldOffset.x,-this.__worldOffset.y);
	}
	,get_alpha: function() {
		return this.__alpha;
	}
	,set_alpha: function(value) {
		if(value > 1.0) value = 1.0;
		if(value != this.__alpha) {
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		return this.__alpha = value;
	}
	,set_blendMode: function(value) {
		this.__blendMode = value;
		return this.blendMode = value;
	}
	,set_shader: function(value) {
		this.__shader = value;
		return this.shader = value;
	}
	,get_cacheAsBitmap: function() {
		return this.__cacheAsBitmap;
	}
	,set_cacheAsBitmap: function(value) {
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
		return this.__forceCacheAsBitmap?this.__cacheAsBitmap = true:this.__cacheAsBitmap = value;
	}
	,get_cacheAsBitmapMatrix: function() {
		return this.__cacheAsBitmapMatrix;
	}
	,set_cacheAsBitmapMatrix: function(value) {
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
		return this.__cacheAsBitmapMatrix = new openfl_geom_Matrix(value.a,value.b,value.c,value.d,value.tx,value.ty);
	}
	,get_cacheAsBitmapSmooth: function() {
		return this.__cacheAsBitmapSmooth;
	}
	,set_cacheAsBitmapSmooth: function(value) {
		return this.__cacheAsBitmapSmooth = value;
	}
	,get_filters: function() {
		if(this.__filters == null) return []; else return this.__filters.slice();
	}
	,set_filters: function(value) {
		if(value != null && value.length > 0) {
			this.__filters = value;
			this.__forceCacheAsBitmap = true;
			this.__cacheAsBitmap = true;
			this.__updateFilters = true;
		} else {
			this.__filters = null;
			this.__forceCacheAsBitmap = false;
			this.__cacheAsBitmap = false;
			this.__updateFilters = false;
		}
		if(!this.__renderDirty) {
			this.__updateCachedBitmap = true;
			this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
			this.__renderDirty = true;
			openfl_display_DisplayObject.__worldRenderDirty++;
		}
		return value;
	}
	,get_height: function() {
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,this.__transform);
		return bounds.height;
	}
	,set_height: function(value) {
		var bounds = new openfl_geom_Rectangle();
		var matrix = openfl_geom_Matrix.__temp;
		matrix.identity();
		this.__getBounds(bounds,matrix);
		if(value != bounds.height) this.set_scaleY(value / bounds.height); else this.set_scaleY(1);
		return value;
	}
	,get_mask: function() {
		return this.__mask;
	}
	,set_mask: function(value) {
		if(value != this.__mask) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		if(this.__mask != null) {
			this.__mask.__isMask = false;
			this.__mask.__maskCached = false;
			this.__mask.__setTransformDirty();
			this.__mask.__setRenderDirty();
			this.__maskGraphics = null;
		}
		if(value != null) value.__isMask = true;
		return this.__mask = value;
	}
	,get_mouseX: function() {
		var mouseX;
		if(this.stage != null) mouseX = this.stage.__mouseX; else mouseX = openfl_Lib.current.stage.__mouseX;
		var mouseY;
		if(this.stage != null) mouseY = this.stage.__mouseY; else mouseY = openfl_Lib.current.stage.__mouseY;
		return this.__getWorldTransform().__transformInverseX(mouseX,mouseY);
	}
	,get_mouseY: function() {
		var mouseX;
		if(this.stage != null) mouseX = this.stage.__mouseX; else mouseX = openfl_Lib.current.stage.__mouseX;
		var mouseY;
		if(this.stage != null) mouseY = this.stage.__mouseY; else mouseY = openfl_Lib.current.stage.__mouseY;
		return this.__getWorldTransform().__transformInverseY(mouseX,mouseY);
	}
	,get_name: function() {
		return this.__name;
	}
	,set_name: function(value) {
		return this.__name = value;
	}
	,get_root: function() {
		if(this.stage != null) return openfl_Lib.current;
		return null;
	}
	,get_rotation: function() {
		return this.__rotation;
	}
	,set_rotation: function(value) {
		if(value != this.__rotation) {
			this.__rotation = value;
			var radians = this.__rotation * (Math.PI / 180);
			this.__rotationSine = Math.sin(radians);
			this.__rotationCosine = Math.cos(radians);
			var __scaleX = this.get_scaleX();
			var __scaleY = this.get_scaleY();
			this.__transform.a = this.__rotationCosine * __scaleX;
			this.__transform.b = this.__rotationSine * __scaleX;
			this.__transform.c = -this.__rotationSine * __scaleY;
			this.__transform.d = this.__rotationCosine * __scaleY;
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return value;
	}
	,get_scaleX: function() {
		if(this.__transform.b == 0) return this.__transform.a; else return Math.sqrt(this.__transform.a * this.__transform.a + this.__transform.b * this.__transform.b);
	}
	,set_scaleX: function(value) {
		if(this.__transform.c == 0) {
			if(value != this.__transform.a) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.a = value;
		} else {
			var a = this.__rotationCosine * value;
			var b = this.__rotationSine * value;
			if(this.__transform.a != a || this.__transform.b != b) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.a = a;
			this.__transform.b = b;
		}
		return value;
	}
	,get_scaleY: function() {
		if(this.__transform.c == 0) return this.__transform.d; else return Math.sqrt(this.__transform.c * this.__transform.c + this.__transform.d * this.__transform.d);
	}
	,set_scaleY: function(value) {
		if(this.__transform.c == 0) {
			if(value != this.__transform.d) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.d = value;
		} else {
			var c = -this.__rotationSine * value;
			var d = this.__rotationCosine * value;
			if(this.__transform.d != d || this.__transform.c != c) {
				if(!this.__transformDirty) {
					this.__transformDirty = true;
					openfl_display_DisplayObject.__worldTransformDirty++;
				}
			}
			this.__transform.c = c;
			this.__transform.d = d;
		}
		return value;
	}
	,get_scrollRect: function() {
		if(this.__scrollRect == null) return null;
		return this.__scrollRect.clone();
	}
	,set_scrollRect: function(value) {
		if(value != this.__scrollRect) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return this.__scrollRect = value;
	}
	,get_transform: function() {
		if(this.__objectTransform == null) this.__objectTransform = new openfl_geom_Transform(this);
		return this.__objectTransform;
	}
	,set_transform: function(value) {
		if(value == null) throw new js__$Boot_HaxeError(new openfl_errors_TypeError("Parameter transform must be non-null."));
		if(this.__objectTransform == null) this.__objectTransform = new openfl_geom_Transform(this);
		if(!this.__transformDirty) {
			this.__transformDirty = true;
			openfl_display_DisplayObject.__worldTransformDirty++;
		}
		this.__objectTransform.set_matrix(value.get_matrix());
		this.__objectTransform.set_colorTransform(value.get_colorTransform().__clone());
		return this.__objectTransform;
	}
	,get_visible: function() {
		return this.__visible;
	}
	,set_visible: function(value) {
		if(value != this.__visible) {
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		return this.__visible = value;
	}
	,get_width: function() {
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,this.__transform);
		return bounds.width;
	}
	,set_width: function(value) {
		var bounds = new openfl_geom_Rectangle();
		var matrix = openfl_geom_Matrix.__temp;
		matrix.identity();
		this.__getBounds(bounds,matrix);
		if(value != bounds.width) this.set_scaleX(value / bounds.width); else this.set_scaleX(1);
		return value;
	}
	,get_x: function() {
		return this.__transform.tx;
	}
	,set_x: function(value) {
		if(value != this.__transform.tx) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return this.__transform.tx = value;
	}
	,get_y: function() {
		return this.__transform.ty;
	}
	,set_y: function(value) {
		if(value != this.__transform.ty) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
		}
		return this.__transform.ty = value;
	}
	,__class__: openfl_display_DisplayObject
	,__properties__: {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_width:"set_width",get_width:"get_width",set_visible:"set_visible",get_visible:"get_visible",set_transform:"set_transform",get_transform:"get_transform",set_shader:"set_shader",set_scrollRect:"set_scrollRect",get_scrollRect:"get_scrollRect",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_rotation:"set_rotation",get_rotation:"get_rotation",get_root:"get_root",set_name:"set_name",get_name:"get_name",get_mouseY:"get_mouseY",get_mouseX:"get_mouseX",set_mask:"set_mask",get_mask:"get_mask",set_height:"set_height",get_height:"get_height",set_filters:"set_filters",get_filters:"get_filters",set_cacheAsBitmapSmooth:"set_cacheAsBitmapSmooth",get_cacheAsBitmapSmooth:"get_cacheAsBitmapSmooth",set_cacheAsBitmapMatrix:"set_cacheAsBitmapMatrix",get_cacheAsBitmapMatrix:"get_cacheAsBitmapMatrix",set_cacheAsBitmap:"set_cacheAsBitmap",get_cacheAsBitmap:"get_cacheAsBitmap",set_blendMode:"set_blendMode",set_alpha:"set_alpha",get_alpha:"get_alpha"}
});
var openfl_display_InteractiveObject = function() {
	openfl_display_DisplayObject.call(this);
	this.doubleClickEnabled = false;
	this.mouseEnabled = true;
	this.needsSoftKeyboard = false;
	this.__tabEnabled = false;
	this.tabIndex = -1;
};
$hxClasses["openfl.display.InteractiveObject"] = openfl_display_InteractiveObject;
openfl_display_InteractiveObject.__name__ = ["openfl","display","InteractiveObject"];
openfl_display_InteractiveObject.__super__ = openfl_display_DisplayObject;
openfl_display_InteractiveObject.prototype = $extend(openfl_display_DisplayObject.prototype,{
	requestSoftKeyboard: function() {
		openfl_Lib.notImplemented("InteractiveObject.requestSoftKeyboard");
		return false;
	}
	,__getInteractive: function(stack) {
		if(stack != null) {
			stack.push(this);
			if(this.parent != null) this.parent.__getInteractive(stack);
		}
		return true;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled) return false;
		return openfl_display_DisplayObject.prototype.__hitTest.call(this,x,y,shapeFlag,stack,interactiveOnly,hitObject);
	}
	,get_tabEnabled: function() {
		return this.__tabEnabled;
	}
	,set_tabEnabled: function(value) {
		return this.__tabEnabled = value;
	}
	,__class__: openfl_display_InteractiveObject
	,__properties__: $extend(openfl_display_DisplayObject.prototype.__properties__,{set_tabEnabled:"set_tabEnabled",get_tabEnabled:"get_tabEnabled"})
});
var openfl_display_DisplayObjectContainer = function() {
	openfl_display_InteractiveObject.call(this);
	this.mouseChildren = true;
	this.__children = [];
	this.__removedChildren = [];
};
$hxClasses["openfl.display.DisplayObjectContainer"] = openfl_display_DisplayObjectContainer;
openfl_display_DisplayObjectContainer.__name__ = ["openfl","display","DisplayObjectContainer"];
openfl_display_DisplayObjectContainer.__super__ = openfl_display_InteractiveObject;
openfl_display_DisplayObjectContainer.prototype = $extend(openfl_display_InteractiveObject.prototype,{
	addChild: function(child) {
		if(child != null) {
			if(child.parent != null) child.parent.removeChild(child);
			this.__children.push(child);
			child.parent = this;
			if(this.stage != null) child.__setStageReference(this.stage);
			if(!child.__transformDirty) {
				child.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!child.__renderDirty) {
				child.__updateCachedBitmap = true;
				child.__updateFilters = child.get_filters() != null && child.get_filters().length > 0;
				child.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			var event = new openfl_events_Event(openfl_events_Event.ADDED,true);
			event.target = child;
			child.__dispatchEvent(event);
		}
		return child;
	}
	,addChildAt: function(child,index) {
		if(index > this.__children.length || index < 0) throw new js__$Boot_HaxeError("Invalid index position " + index);
		if(child.parent == this) HxOverrides.remove(this.__children,child); else {
			if(child.parent != null) child.parent.removeChild(child);
			child.parent = this;
			if(this.stage != null) child.__setStageReference(this.stage);
			if(!child.__transformDirty) {
				child.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!child.__renderDirty) {
				child.__updateCachedBitmap = true;
				child.__updateFilters = child.get_filters() != null && child.get_filters().length > 0;
				child.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			var event = new openfl_events_Event(openfl_events_Event.ADDED,true);
			event.target = child;
			child.__dispatchEvent(event);
		}
		this.__children.splice(index,0,child);
		return child;
	}
	,areInaccessibleObjectsUnderPoint: function(point) {
		return false;
	}
	,contains: function(child) {
		while(child != this && child != null) child = child.parent;
		return child == this;
	}
	,getChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.__children[index];
		return null;
	}
	,getChildByName: function(name) {
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_name() == name) return child;
		}
		return null;
	}
	,getChildIndex: function(child) {
		var _g1 = 0;
		var _g = this.__children.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.__children[i] == child) return i;
		}
		return -1;
	}
	,getObjectsUnderPoint: function(point) {
		var stack = [];
		this.__hitTest(point.x,point.y,false,stack,false,this);
		stack.reverse();
		return stack;
	}
	,removeChild: function(child) {
		if(child != null && child.parent == this) {
			child.__dispatchEvent(new openfl_events_Event(openfl_events_Event.REMOVED,true));
			if(this.stage != null) child.__setStageReference(null);
			child.parent = null;
			HxOverrides.remove(this.__children,child);
			this.__removedChildren.push(child);
			if(!child.__transformDirty) {
				child.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!child.__renderDirty) {
				child.__updateCachedBitmap = true;
				child.__updateFilters = child.get_filters() != null && child.get_filters().length > 0;
				child.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		return child;
	}
	,removeChildAt: function(index) {
		if(index >= 0 && index < this.__children.length) return this.removeChild(this.__children[index]);
		return null;
	}
	,removeChildren: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 2147483647;
		if(beginIndex == null) beginIndex = 0;
		if(endIndex == 2147483647) {
			endIndex = this.__children.length - 1;
			if(endIndex < 0) return;
		}
		if(beginIndex > this.__children.length - 1) return; else if(endIndex < beginIndex || beginIndex < 0 || endIndex > this.__children.length) throw new js__$Boot_HaxeError(new openfl_errors_RangeError("The supplied index is out of bounds."));
		var numRemovals = endIndex - beginIndex;
		while(numRemovals >= 0) {
			this.removeChildAt(beginIndex);
			numRemovals--;
		}
	}
	,resolve: function(fieldName) {
		if(this.__children == null) return null;
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_name() == fieldName) return child;
		}
		return null;
	}
	,setChildIndex: function(child,index) {
		if(index >= 0 && index <= this.__children.length && child.parent == this) {
			HxOverrides.remove(this.__children,child);
			this.__children.splice(index,0,child);
		}
	}
	,swapChildren: function(child1,child2) {
		if(child1.parent == this && child2.parent == this) {
			var index1 = HxOverrides.indexOf(this.__children,child1,0);
			var index2 = HxOverrides.indexOf(this.__children,child2,0);
			this.__children[index1] = child2;
			this.__children[index2] = child1;
		}
	}
	,swapChildrenAt: function(index1,index2) {
		var swap = this.__children[index1];
		this.__children[index1] = this.__children[index2];
		this.__children[index2] = swap;
		swap = null;
	}
	,__broadcast: function(event,notifyChilden) {
		if(event.target == null) event.target = this;
		var result = openfl_display_InteractiveObject.prototype.__broadcast.call(this,event,notifyChilden);
		if(!event.__isCanceled && notifyChilden) {
			var _g = 0;
			var _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.__broadcast(event,true);
				if(event.__isCanceled) return true;
			}
		}
		return result;
	}
	,__enterFrame: function(deltaTime) {
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__enterFrame(deltaTime);
		}
	}
	,__getBounds: function(rect,matrix) {
		openfl_display_InteractiveObject.prototype.__getBounds.call(this,rect,matrix);
		if(this.__children.length == 0) return;
		if(matrix != null) {
			this.__updateTransforms(matrix);
			this.__updateChildren(true);
		}
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_scaleX() == 0 || child.get_scaleY() == 0) continue;
			child.__getBounds(rect,child.__worldTransform);
		}
		if(matrix != null) {
			this.__updateTransforms();
			this.__updateChildren(true);
		}
	}
	,__getRenderBounds: function(rect,matrix) {
		if(this.__scrollRect != null) {
			openfl_display_InteractiveObject.prototype.__getRenderBounds.call(this,rect,matrix);
			return;
		} else openfl_display_InteractiveObject.prototype.__getBounds.call(this,rect,matrix);
		if(this.__children.length == 0) return;
		if(matrix != null) {
			this.__updateTransforms(matrix);
			this.__updateChildren(true);
		}
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_scaleX() == 0 || child.get_scaleY() == 0 || child.__isMask) continue;
			child.__getRenderBounds(rect,child.__worldTransform);
		}
		if(matrix != null) {
			this.__updateTransforms();
			this.__updateChildren(true);
		}
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled && !this.mouseChildren) return false;
		if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
		if(this.get_scrollRect() != null && !this.get_scrollRect().containsPoint(this.globalToLocal(new openfl_geom_Point(x,y)))) return false;
		var i = this.__children.length;
		if(interactiveOnly) {
			if(stack == null || !this.mouseChildren) {
				while(--i >= 0) if(this.__children[i].__hitTest(x,y,shapeFlag,null,true,this.__children[i])) {
					if(stack != null) stack.push(hitObject);
					return true;
				}
			} else if(stack != null) {
				var length = stack.length;
				var interactive = false;
				var hitTest = false;
				while(--i >= 0) {
					interactive = this.__children[i].__getInteractive(null);
					if(interactive || this.mouseEnabled && !hitTest) {
						if(this.__children[i].__hitTest(x,y,shapeFlag,stack,true,this.__children[i])) {
							hitTest = true;
							if(interactive) break;
						}
					}
				}
				if(hitTest) {
					stack.splice(length,0,hitObject);
					return true;
				}
			}
		} else while(--i >= 0) this.__children[i].__hitTest(x,y,shapeFlag,stack,false,this.__children[i]);
		return false;
	}
	,__hitTestMask: function(x,y) {
		var i = this.__children.length;
		while(--i >= 0) if(this.__children[i].__hitTestMask(x,y)) return true;
		return false;
	}
	,__renderCairo: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		openfl_display_InteractiveObject.prototype.__renderCairo.call(this,renderSession);
		if(this.get_scrollRect() != null) renderSession.maskManager.pushRect(this.get_scrollRect(),this.__worldTransform);
		if(this.__mask != null) renderSession.maskManager.pushMask(this.__mask);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderCairo(renderSession);
		}
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
		if(this.__mask != null) renderSession.maskManager.popMask();
		if(this.get_scrollRect() != null) renderSession.maskManager.popRect();
	}
	,__renderCairoMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_cairo_CairoGraphics.renderMask(this.__graphics,renderSession);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderCairoMask(renderSession);
		}
	}
	,__renderCanvas: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		openfl_display_InteractiveObject.prototype.__renderCanvas.call(this,renderSession);
		if(this.get_scrollRect() != null) renderSession.maskManager.pushRect(this.get_scrollRect(),this.__worldTransform);
		if(this.__mask != null) renderSession.maskManager.pushMask(this.__mask);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderCanvas(renderSession);
		}
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
		if(this.__mask != null) renderSession.maskManager.popMask();
		if(this.get_scrollRect() != null) renderSession.maskManager.popRect();
	}
	,__renderCanvasMask: function(renderSession) {
		if(this.__graphics != null) openfl__$internal_renderer_canvas_CanvasGraphics.renderMask(this.__graphics,renderSession);
		var bounds = new openfl_geom_Rectangle();
		this.__getBounds(bounds,this.__transform);
		renderSession.context.rect(0,0,bounds.width,bounds.height);
	}
	,__renderDOM: function(renderSession) {
		openfl_display_InteractiveObject.prototype.__renderDOM.call(this,renderSession);
		if(this.__mask != null) renderSession.maskManager.pushMask(this.__mask);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderDOM(renderSession);
		}
		var _g2 = 0;
		var _g11 = this.__removedChildren;
		while(_g2 < _g11.length) {
			var orphan = _g11[_g2];
			++_g2;
			if(orphan.stage == null) orphan.__renderDOM(renderSession);
		}
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
		if(this.__mask != null) renderSession.maskManager.popMask();
	}
	,__renderGL: function(renderSession) {
		if(!this.__renderable || this.__worldAlpha <= 0) return;
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		if(this.__graphics != null) {
			if(this.__graphics.__hardware) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render(this,renderSession); else {
				openfl__$internal_renderer_canvas_CanvasGraphics.render(this.__graphics,renderSession);
				openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession);
			}
		}
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__renderGL(renderSession);
		}
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
		if(this.__removedChildren.length > 0) this.__removedChildren.splice(0,this.__removedChildren.length);
	}
	,__setStageReference: function(stage) {
		if(this.stage != stage) {
			if(this.stage != null) this.__dispatchEvent(new openfl_events_Event(openfl_events_Event.REMOVED_FROM_STAGE,false,false));
			this.stage = stage;
			if(stage != null) this.__dispatchEvent(new openfl_events_Event(openfl_events_Event.ADDED_TO_STAGE,false,false));
			if(this.__children != null) {
				var _g = 0;
				var _g1 = this.__children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.__setStageReference(stage);
				}
			}
		}
	}
	,__update: function(transformOnly,updateChildren,maskGraphics) {
		openfl_display_InteractiveObject.prototype.__update.call(this,transformOnly,updateChildren,maskGraphics);
		if(!this.__renderable && !this.__isMask) return;
		if(updateChildren) {
			var _g = 0;
			var _g1 = this.__children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.__update(transformOnly,true,maskGraphics);
			}
		}
	}
	,__updateChildren: function(transformOnly) {
		openfl_display_InteractiveObject.prototype.__updateChildren.call(this,transformOnly);
		var _g = 0;
		var _g1 = this.__children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.__update(transformOnly,true);
		}
	}
	,get_numChildren: function() {
		return this.__children.length;
	}
	,__class__: openfl_display_DisplayObjectContainer
	,__properties__: $extend(openfl_display_InteractiveObject.prototype.__properties__,{get_numChildren:"get_numChildren"})
});
var openfl_display_Sprite = function() {
	openfl_display_DisplayObjectContainer.call(this);
	this.buttonMode = false;
	this.useHandCursor = true;
	this.loaderInfo = openfl_display_LoaderInfo.create(null);
};
$hxClasses["openfl.display.Sprite"] = openfl_display_Sprite;
openfl_display_Sprite.__name__ = ["openfl","display","Sprite"];
openfl_display_Sprite.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Sprite.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	startDrag: function(lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
		if(this.stage != null) this.stage.__startDrag(this,lockCenter,bounds);
	}
	,stopDrag: function() {
		if(this.stage != null) this.stage.__stopDrag(this);
	}
	,__getCursor: function() {
		if(this.buttonMode && this.useHandCursor) return lime_ui_MouseCursor.POINTER; else return null;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(this.hitArea != null) {
			if(!this.hitArea.mouseEnabled && this.hitArea.__hitTest(x,y,shapeFlag,stack,interactiveOnly,hitObject)) {
				stack[stack.length - 1] = hitObject;
				return true;
			}
		} else {
			if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled && !this.mouseChildren) return false;
			if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
			if(openfl_display_DisplayObjectContainer.prototype.__hitTest.call(this,x,y,shapeFlag,stack,interactiveOnly,hitObject)) return interactiveOnly; else if((!interactiveOnly || this.mouseEnabled) && this.__graphics != null && this.__graphics.__hitTest(x,y,shapeFlag,this.__getWorldTransform())) {
				if(stack != null) stack.push(hitObject);
				return true;
			}
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		if(openfl_display_DisplayObjectContainer.prototype.__hitTestMask.call(this,x,y)) return true; else if(this.__graphics != null && this.__graphics.__hitTest(x,y,true,this.__getWorldTransform())) return true;
		return false;
	}
	,get_graphics: function() {
		if(this.__graphics == null) {
			this.__graphics = new openfl_display_Graphics();
			this.__graphics.__owner = this;
		}
		return this.__graphics;
	}
	,get_tabEnabled: function() {
		return this.__tabEnabled || this.buttonMode;
	}
	,__class__: openfl_display_Sprite
	,__properties__: $extend(openfl_display_DisplayObjectContainer.prototype.__properties__,{get_graphics:"get_graphics"})
});
var Main = function() {
	openfl_display_Sprite.call(this);
	this.addEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleAddedToStage));
};
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.__super__ = openfl_display_Sprite;
Main.prototype = $extend(openfl_display_Sprite.prototype,{
	handleAddedToStage: function(e) {
		this.removeEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleAddedToStage));
		this.addChild(new co_doubleduck_dynamons2_Game());
	}
	,__class__: Main
});
var DocumentClass = function() {
	openfl_Lib.current.addChild(this);
	Main.call(this);
	this.dispatchEvent(new openfl_events_Event(openfl_events_Event.ADDED_TO_STAGE,false,false));
};
$hxClasses["DocumentClass"] = DocumentClass;
DocumentClass.__name__ = ["DocumentClass"];
DocumentClass.__super__ = Main;
DocumentClass.prototype = $extend(Main.prototype,{
	__class__: DocumentClass
});
var lime_AssetLibrary = function() {
	this.onChange = new lime_app_Event_$Void_$Void();
};
$hxClasses["lime.AssetLibrary"] = lime_AssetLibrary;
lime_AssetLibrary.__name__ = ["lime","AssetLibrary"];
lime_AssetLibrary.prototype = {
	exists: function(id,type) {
		return false;
	}
	,getAudioBuffer: function(id) {
		return null;
	}
	,getBytes: function(id) {
		return null;
	}
	,getFont: function(id) {
		return null;
	}
	,getImage: function(id) {
		return null;
	}
	,getPath: function(id) {
		return null;
	}
	,getText: function(id) {
		var bytes = this.getBytes(id);
		if(bytes == null) return null; else return bytes.getString(0,bytes.length);
	}
	,isLocal: function(id,type) {
		return true;
	}
	,list: function(type) {
		return null;
	}
	,load: function() {
		var _g = this;
		return new lime_app_Future(function() {
			return _g;
		});
	}
	,loadAudioBuffer: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getAudioBuffer(id);
		});
	}
	,loadBytes: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getBytes(id);
		});
	}
	,loadFont: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getFont(id);
		});
	}
	,loadImage: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getImage(id);
		});
	}
	,loadText: function(id) {
		return this.loadBytes(id).then(function(bytes) {
			return new lime_app_Future(function() {
				if(bytes == null) return null; else return bytes.getString(0,bytes.length);
			});
		});
	}
	,unload: function() {
	}
	,__class__: lime_AssetLibrary
};
var DefaultAssetLibrary = function() {
	this.atlasAssets = new haxe_ds_StringMap();
	this.type = new haxe_ds_StringMap();
	this.path = new haxe_ds_StringMap();
	this.className = new haxe_ds_StringMap();
	lime_AssetLibrary.call(this);
	var id;
	id = "data/gameplay.js";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_0.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_0.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/atlas_1.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_1.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/atlas_2.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_2.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/atlas_3.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_3.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/atlas_4.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_4.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/atlas_5.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_5.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/atlas_6.json";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/atlas_6.png";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/fonts/black_medium/kern.txt";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/fonts/black_small/kern.txt";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/fonts/white_shadow_small/kern.txt";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/fonts/white_small/kern.txt";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/fonts/white_stroked_big/kern.txt";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/fonts/white_stroked_small/kern.txt";
	this.path.set(id,id);
	this.type.set(id,"TEXT");
	id = "images/map/bgs/bg1.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/map/bgs/bg2.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/map/bgs/bg3.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/map/bgs/bg4.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/session/bgs/arena.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/session/bgs/desert.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/session/bgs/snow.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/session/bgs/volcano.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/session/bgs/water.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/session/bgs/woods.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	id = "images/team/bg_team.jpg";
	this.path.set(id,id);
	this.type.set(id,"IMAGE");
	var assetsPrefix = null;
	if(ApplicationMain.config != null && Object.prototype.hasOwnProperty.call(ApplicationMain.config,"assetsPrefix")) assetsPrefix = ApplicationMain.config.assetsPrefix;
	if(assetsPrefix != null) {
		var $it0 = this.path.keys();
		while( $it0.hasNext() ) {
			var k = $it0.next();
			var value = assetsPrefix + this.path.get(k);
			this.path.set(k,value);
		}
	}
	this.addAssetsFromAtlas();
};
$hxClasses["DefaultAssetLibrary"] = DefaultAssetLibrary;
DefaultAssetLibrary.__name__ = ["DefaultAssetLibrary"];
DefaultAssetLibrary.__super__ = lime_AssetLibrary;
DefaultAssetLibrary.prototype = $extend(lime_AssetLibrary.prototype,{
	addAssetsFromAtlas: function() {
		var $it0 = this.type.keys();
		while( $it0.hasNext() ) {
			var asset = $it0.next();
			if(this.type.get(asset) == "TEXT" && asset.indexOf("atlas") != -1) {
				var json = JSON.parse(this.getText(asset));
				var assetsArr = json.data;
				var atlasFile = asset.split(".")[0] + ".png";
				var atlasBd = this.getImage(atlasFile);
				var _g = 0;
				while(_g < assetsArr.length) {
					var atlasAsset = assetsArr[_g];
					++_g;
					var key = atlasAsset.path;
					this.type.set(key,"IMAGE");
					var bd = new lime_graphics_Image(null,0,0,atlasAsset.width,atlasAsset.height);
					bd.copyPixels(atlasBd,new lime_math_Rectangle(atlasAsset.x,atlasAsset.y,atlasAsset.width,atlasAsset.height),new lime_math_Vector2(0,0));
					var key1 = atlasAsset.path;
					this.atlasAssets.set(key1,bd);
				}
				atlasBd = null;
			}
		}
	}
	,exists: function(id,type) {
		var requestedType;
		if(type != null) requestedType = js_Boot.__cast(type , String); else requestedType = null;
		var assetType = this.type.get(id);
		if(assetType != null) {
			if(assetType == requestedType || (requestedType == "SOUND" || requestedType == "MUSIC") && (assetType == "MUSIC" || assetType == "SOUND")) return true;
			if(requestedType == "BINARY" || requestedType == null || assetType == "BINARY" && requestedType == "TEXT") return true;
		}
		return false;
	}
	,getAudioBuffer: function(id) {
		return null;
	}
	,getBytes: function(id) {
		var loader;
		var key = this.path.get(id);
		loader = lime_app_Preloader.loaders.get(key);
		if(loader == null) return null;
		var bytes = loader.bytes;
		if(bytes != null) return bytes; else return null;
	}
	,getFont: function(id) {
		return js_Boot.__cast(Type.createInstance(this.className.get(id),[]) , lime_text_Font);
	}
	,getImage: function(id) {
		if(this.path.get(id) == null) {
			if(this.atlasAssets.exists(id)) {
				var ret = this.atlasAssets.get(id);
				this.atlasAssets.remove(id);
				return ret;
			}
			return null;
		}
		return lime_graphics_Image.fromImageElement((function($this) {
			var $r;
			var key = $this.path.get(id);
			$r = lime_app_Preloader.images.get(key);
			return $r;
		}(this)));
	}
	,getPath: function(id) {
		return this.path.get(id);
	}
	,getText: function(id) {
		var loader;
		var key = this.path.get(id);
		loader = lime_app_Preloader.loaders.get(key);
		if(loader == null) return null;
		var bytes = loader.bytes;
		if(bytes != null) return bytes.getString(0,bytes.length); else return null;
	}
	,isLocal: function(id,type) {
		var requestedType;
		if(type != null) requestedType = js_Boot.__cast(type , String); else requestedType = null;
		return true;
	}
	,list: function(type) {
		var requestedType;
		if(type != null) requestedType = js_Boot.__cast(type , String); else requestedType = null;
		var items = [];
		var $it0 = this.type.keys();
		while( $it0.hasNext() ) {
			var id = $it0.next();
			if(requestedType == null || this.exists(id,type)) items.push(id);
		}
		return items;
	}
	,loadAudioBuffer: function(id) {
		var _g = this;
		var promise = new lime_app_Promise();
		promise.completeWith(new lime_app_Future(function() {
			return _g.getAudioBuffer(id);
		}));
		return promise.future;
	}
	,loadBytes: function(id) {
		var promise = new lime_app_Promise();
		if(this.path.exists(id)) {
			var request = new lime_net_HTTPRequest();
			promise.completeWith(request.load(this.path.get(id) + "?" + lime_Assets.cache.version));
		} else promise.complete(this.getBytes(id));
		return promise.future;
	}
	,loadImage: function(id) {
		var promise = new lime_app_Promise();
		if(this.path.exists(id)) {
			var image = new Image();
			image.onload = function(_) {
				promise.complete(lime_graphics_Image.fromImageElement(image));
			};
			image.onerror = $bind(promise,promise.error);
			image.src = this.path.get(id) + "?" + lime_Assets.cache.version;
		} else promise.complete(this.getImage(id));
		return promise.future;
	}
	,loadText: function(id) {
		var promise = new lime_app_Promise();
		if(this.path.exists(id)) {
			var request = new lime_net_HTTPRequest();
			var future = request.load(this.path.get(id) + "?" + lime_Assets.cache.version);
			future.onProgress(function(progress) {
				promise.progress(progress);
			});
			future.onError(function(msg) {
				promise.error(msg);
			});
			future.onComplete(function(bytes) {
				promise.complete(bytes.getString(0,bytes.length));
			});
		} else promise.complete(this.getText(id));
		return promise.future;
	}
	,__class__: DefaultAssetLibrary
});
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) return this.r.m[n]; else throw new js__$Boot_HaxeError("EReg::matched");
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,__class__: EReg
};
var GlobalVars = function() { };
$hxClasses["GlobalVars"] = GlobalVars;
GlobalVars.__name__ = ["GlobalVars"];
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) i = 0;
	}
	while(i < len) {
		if(a[i] === obj) return i;
		i++;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.exists = function(it,f) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(f(x)) return true;
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(f(x)) l.add(x);
	}
	return l;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = [item,this.h];
		this.h = x;
		if(this.q == null) this.q = x;
		this.length++;
	}
	,pop: function() {
		if(this.h == null) return null;
		var x = this.h[0];
		this.h = this.h[1];
		if(this.h == null) this.q = null;
		this.length--;
		return x;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListIterator = function(head) {
	this.head = head;
	this.val = null;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		this.val = this.head[0];
		this.head = this.head[1];
		return this.val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var NMEPreloader = function() {
	openfl_display_Sprite.call(this);
	var backgroundColor = this.getBackgroundColor();
	var r = backgroundColor >> 16 & 255;
	var g = backgroundColor >> 8 & 255;
	var b = backgroundColor & 255;
	var perceivedLuminosity = 0.299 * r + 0.587 * g + 0.114 * b;
	var color = 0;
	if(perceivedLuminosity < 70) color = 16777215;
	var x = 30;
	var height = 7;
	var y = this.getHeight() / 2 - height / 2;
	var width = this.getWidth() - x * 2;
	var padding = 2;
	this.outline = new openfl_display_Sprite();
	this.outline.get_graphics().beginFill(color,0.07);
	this.outline.get_graphics().drawRect(0,0,width,height);
	this.outline.set_x(x);
	this.outline.set_y(y);
	this.addChild(this.outline);
	this.progress = new openfl_display_Sprite();
	this.progress.get_graphics().beginFill(color,0.35);
	this.progress.get_graphics().drawRect(0,0,width - padding * 2,height - padding * 2);
	this.progress.set_x(x + padding);
	this.progress.set_y(y + padding);
	this.progress.set_scaleX(0);
	this.addChild(this.progress);
};
$hxClasses["NMEPreloader"] = NMEPreloader;
NMEPreloader.__name__ = ["NMEPreloader"];
NMEPreloader.__super__ = openfl_display_Sprite;
NMEPreloader.prototype = $extend(openfl_display_Sprite.prototype,{
	getBackgroundColor: function() {
		return 0;
	}
	,getHeight: function() {
		var height = 480;
		if(height > 0) return height; else return openfl_Lib.current.stage.stageHeight;
	}
	,getWidth: function() {
		var width = 320;
		if(width > 0) return width; else return openfl_Lib.current.stage.stageWidth;
	}
	,onInit: function() {
	}
	,onLoaded: function() {
		this.dispatchEvent(new openfl_events_Event(openfl_events_Event.COMPLETE));
	}
	,onUpdate: function(bytesLoaded,bytesTotal) {
		var percentLoaded = bytesLoaded / bytesTotal;
		if(percentLoaded > 1) percentLoaded = 1;
		this.progress.set_scaleX(percentLoaded);
	}
	,__class__: NMEPreloader
});
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) return null; else if(o.__properties__ && (tmp = o.__properties__["get_" + field])) return o[tmp](); else return o[field];
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	if(o.__properties__ && (tmp = o.__properties__["set_" + field])) o[tmp](value); else o[field] = value;
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) return true;
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) return false;
	return f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) return false;
	delete(o[field]);
	return true;
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) return 0; else return Math.floor(Math.random() * x);
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	add: function(x) {
		this.b += Std.string(x);
	}
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.startsWith = function(s,start) {
	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	return c > 8 && c < 14 || c == 32;
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) while(s.length < digits) s = "0" + s;
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getSuperClass = function(c) {
	return c.__super__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) return null;
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
	return null;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw new js__$Boot_HaxeError("No such constructor " + constr);
	if(Reflect.isFunction(f)) {
		if(params == null) throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		return Reflect.callMethod(e,f,params);
	}
	if(params != null && params.length != 0) throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	return Type.createEnum(e,c,params);
};
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
Type.getEnumConstructs = function(e) {
	var a = e.__constructs__;
	return a.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
		return ValueType.TFloat;
	case "object":
		if(v == null) return ValueType.TNull;
		var e = v.__enum__;
		if(e != null) return ValueType.TEnum(e);
		var c = js_Boot.getClass(v);
		if(c != null) return ValueType.TClass(c);
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) return ValueType.TObject;
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) return true;
	try {
		if(a[0] != b[0]) return false;
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) return false;
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) return false;
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
		return false;
	}
	return true;
};
Type.allEnums = function(e) {
	return e.__empty_constructs__;
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = ["_UInt","UInt_Impl_"];
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) return aNeg; else return a > b;
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var $int = this1;
	if($int < 0) return 4294967296.0 + $int; else return $int + 0.0;
};
var co_doubleduck_d2p2_P2Log = function() { };
$hxClasses["co.doubleduck.d2p2.P2Log"] = co_doubleduck_d2p2_P2Log;
co_doubleduck_d2p2_P2Log.__name__ = ["co","doubleduck","d2p2","P2Log"];
co_doubleduck_d2p2_P2Log._data = null;
co_doubleduck_d2p2_P2Log._dataAdapter = null;
co_doubleduck_d2p2_P2Log.init = function(gameDomain) {
	if(co_doubleduck_d2p2_P2Log._dataAdapter == null) co_doubleduck_d2p2_P2Log._dataAdapter = co_doubleduck_utils_data_StorageAdapter.get("d2p2",co_doubleduck_utils_data_StorageAdapterType.LOCAL_STORAGE);
	co_doubleduck_d2p2_P2Log._data = co_doubleduck_d2p2_P2Log._dataAdapter.getValue(co_doubleduck_d2p2_P2Log.DATA_KEY);
	if(co_doubleduck_d2p2_P2Log._data == null || co_doubleduck_d2p2_P2Log._data.data_ver != co_doubleduck_d2p2_P2Log.DATA_VER) {
		var id;
		if(co_doubleduck_d2p2_P2Log._data != null) id = co_doubleduck_d2p2_P2Log._data.p2id; else {
			var seed = "" + gameDomain;
			seed += Std.random(9999999);
			seed += Std.random(9999999);
			seed += new Date().getTime();
			seed += Math.random();
			id = haxe_crypto_Sha1.encode(seed);
		}
		co_doubleduck_d2p2_P2Log._data = { };
		co_doubleduck_d2p2_P2Log._data.p2id = id;
		co_doubleduck_d2p2_P2Log._data.data_ver = co_doubleduck_d2p2_P2Log.DATA_VER;
		co_doubleduck_d2p2_P2Log._data.runs = 0;
		co_doubleduck_d2p2_P2Log._data.domains = "";
		co_doubleduck_d2p2_P2Log._data.skill = co_doubleduck_d2p2_P2Log.newP2Value();
		co_doubleduck_d2p2_P2Log._data.strategy = co_doubleduck_d2p2_P2Log.newP2Value();
	}
	co_doubleduck_d2p2_P2Log._data.runs++;
	var domains = [];
	if(co_doubleduck_d2p2_P2Log._data.domains != "") domains = co_doubleduck_d2p2_P2Log._data.domains.split(",");
	domains.sort(co_doubleduck_d2p2_P2Log.alphabeticSort);
	if(HxOverrides.indexOf(domains,gameDomain,0) == -1) {
		domains.push(gameDomain);
		co_doubleduck_d2p2_P2Log._data.domains = domains.join(",");
	}
	var skillCalc = co_doubleduck_d2p2_P2Log.calcFromSamples(co_doubleduck_d2p2_P2Log._data.skill);
	var strategyCalc = co_doubleduck_d2p2_P2Log.calcFromSamples(co_doubleduck_d2p2_P2Log._data.strategy);
	co_doubleduck_d2p2_P2Log._dataAdapter.setValue(co_doubleduck_d2p2_P2Log.DATA_KEY,co_doubleduck_d2p2_P2Log._data);
	if(skillCalc != null) {
		var event1 = { };
		event1.p2id = co_doubleduck_d2p2_P2Log._data.p2id;
		event1.dataver = co_doubleduck_d2p2_P2Log._data.data_ver;
		event1.runs = "" + co_doubleduck_d2p2_P2Log._data.runs;
		event1.domains = co_doubleduck_d2p2_P2Log._data.domains;
		event1.calcVal = "" + Std.string(skillCalc.val);
		event1.calcConf = "" + Std.string(skillCalc.conf);
		event1.integVal = "" + co_doubleduck_d2p2_P2Log._data.skill.currVal;
		event1.integConf = "" + co_doubleduck_d2p2_P2Log._data.skill.currConf;
		event1.integCount = "" + co_doubleduck_d2p2_P2Log._data.skill.integCount;
		com_funtomic_GameOps.reportEvent("p2calc_skill",event1);
	}
	if(strategyCalc != null) {
		var event2 = { };
		event2.p2id = co_doubleduck_d2p2_P2Log._data.p2id;
		event2.dataver = co_doubleduck_d2p2_P2Log._data.data_ver;
		event2.runs = "" + co_doubleduck_d2p2_P2Log._data.runs;
		event2.domains = co_doubleduck_d2p2_P2Log._data.domains;
		event2.calcVal = "" + Std.string(strategyCalc.val);
		event2.calcConf = "" + Std.string(strategyCalc.conf);
		event2.integVal = "" + co_doubleduck_d2p2_P2Log._data.strategy.currVal;
		event2.integConf = "" + co_doubleduck_d2p2_P2Log._data.strategy.currConf;
		event2.integCount = "" + co_doubleduck_d2p2_P2Log._data.strategy.integCount;
		com_funtomic_GameOps.reportEvent("p2calc_strategy",event2);
	}
	var event = { };
	event.p2id = co_doubleduck_d2p2_P2Log._data.p2id;
	event.dataver = co_doubleduck_d2p2_P2Log._data.data_ver;
	event.runs = "" + co_doubleduck_d2p2_P2Log._data.runs;
	event.domains = co_doubleduck_d2p2_P2Log._data.domains;
	event.skillVal = "" + co_doubleduck_d2p2_P2Log._data.skill.currVal;
	event.skillConf = "" + co_doubleduck_d2p2_P2Log._data.skill.currConf;
	event.skillIntegCount = "" + co_doubleduck_d2p2_P2Log._data.skill.integCount;
	event.strategyVal = "" + co_doubleduck_d2p2_P2Log._data.strategy.currVal;
	event.strategyConf = "" + co_doubleduck_d2p2_P2Log._data.strategy.currConf;
	event.strategyIntegCount = "" + co_doubleduck_d2p2_P2Log._data.strategy.integCount;
	com_funtomic_GameOps.reportEvent("p2data",event);
};
co_doubleduck_d2p2_P2Log.getP2ID = function() {
	return co_doubleduck_d2p2_P2Log._data.p2id;
};
co_doubleduck_d2p2_P2Log.logSkill = function(value) {
	co_doubleduck_d2p2_P2Log.addSample(co_doubleduck_d2p2_P2Log._data.skill,value);
	co_doubleduck_d2p2_P2Log._dataAdapter.setValue(co_doubleduck_d2p2_P2Log.DATA_KEY,co_doubleduck_d2p2_P2Log._data);
};
co_doubleduck_d2p2_P2Log.logStrategy = function(value) {
	co_doubleduck_d2p2_P2Log.addSample(co_doubleduck_d2p2_P2Log._data.strategy,value);
	co_doubleduck_d2p2_P2Log._dataAdapter.setValue(co_doubleduck_d2p2_P2Log.DATA_KEY,co_doubleduck_d2p2_P2Log._data);
};
co_doubleduck_d2p2_P2Log.addSample = function(p2val,sample) {
	if(p2val.samples == null) p2val.samples = [];
	p2val.samples.push(sample);
};
co_doubleduck_d2p2_P2Log.newP2Value = function() {
	var val = { };
	val.samples = [];
	val.currVal = 0.5;
	val.currConf = 0;
	val.integCount = 0;
	return val;
};
co_doubleduck_d2p2_P2Log.calcFromSamples = function(p2val) {
	if(p2val.samples == null || p2val.samples.length == 0) return null;
	var mean = 0;
	var _g1 = 0;
	var _g = p2val.samples.length;
	while(_g1 < _g) {
		var i = _g1++;
		mean += p2val.samples[i];
	}
	mean /= p2val.samples.length;
	var stdDev = 0;
	var _g11 = 0;
	var _g2 = p2val.samples.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		stdDev += Math.pow(p2val.samples[i1] - mean,2);
	}
	stdDev /= p2val.samples.length;
	stdDev = Math.sqrt(stdDev);
	var devConf = co_doubleduck_utils_Utils.map(p2val.samples.length,1,6,0.2,1);
	var meanConf = (1 - 4 * stdDev) * devConf;
	var newVal = co_doubleduck_d2p2_P2Log.integrateVals(mean,meanConf,p2val.currVal,p2val.currConf);
	p2val.currVal = co_doubleduck_d2p2_P2Log.trimFloat(newVal.val);
	p2val.currConf = co_doubleduck_d2p2_P2Log.trimFloat(newVal.conf);
	p2val.samples = [];
	p2val.integCount++;
	var calcVal = { };
	calcVal.val = co_doubleduck_d2p2_P2Log.trimFloat(mean);
	calcVal.conf = co_doubleduck_d2p2_P2Log.trimFloat(meanConf);
	return calcVal;
};
co_doubleduck_d2p2_P2Log.integrateVals = function(aVal,aConf,bVal,bConf) {
	var res = { };
	res.val = aVal * aConf + bVal * bConf;
	res.val /= aConf + bConf;
	var delta = Math.abs(aVal - bVal);
	var maxConf = co_doubleduck_utils_Utils.map(Math.abs(aConf - bConf),0,1,aConf / 2,Math.max(aConf,bConf));
	res.conf = co_doubleduck_utils_Utils.map(delta,0,1,Math.max(aConf,bConf),maxConf);
	return res;
};
co_doubleduck_d2p2_P2Log.trimFloat = function(src) {
	return Math.round(src * 10000) / 10000;
};
co_doubleduck_d2p2_P2Log.alphabeticSort = function(a,b) {
	var i = 0;
	a = a.toLowerCase();
	b = b.toLowerCase();
	while(i < a.length || i < b.length) {
		if(i >= a.length && i < b.length) return -1; else if(i < a.length && i >= b.length) return 1; else if(i >= a.length && i >= b.length) return 0;
		if(HxOverrides.cca(a,i) != HxOverrides.cca(b,i)) return HxOverrides.cca(a,i) - HxOverrides.cca(b,i);
		i++;
	}
	return 0;
};
var co_doubleduck_dynamons2_Game = function() {
	openfl_display_Sprite.call(this);
	this.addEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleAddedToStage));
};
$hxClasses["co.doubleduck.dynamons2.Game"] = co_doubleduck_dynamons2_Game;
co_doubleduck_dynamons2_Game.__name__ = ["co","doubleduck","dynamons2","Game"];
co_doubleduck_dynamons2_Game._screenSize = null;
co_doubleduck_dynamons2_Game.instance = null;
co_doubleduck_dynamons2_Game.reportEvent = function(name,data) {
	data.coins = co_doubleduck_dynamons2_meta_GameState.getPlayerCoins();
	data.healing_kits = co_doubleduck_dynamons2_meta_GameState.getItemAmount("healing_kit");
	data.discatches = co_doubleduck_dynamons2_meta_GameState.getItemAmount("discatch");
	data.omnistones = co_doubleduck_dynamons2_meta_GameState.getItemAmount("levelup_joker");
	data.water_dynastones = co_doubleduck_dynamons2_meta_GameState.getItemAmount("levelup_water");
	data.fire_dynastones = co_doubleduck_dynamons2_meta_GameState.getItemAmount("levelup_fire");
	data.earth_dynastones = co_doubleduck_dynamons2_meta_GameState.getItemAmount("levelup_earth");
	data.team_size = co_doubleduck_dynamons2_meta_GameState.getPlayerMons(true).length;
	com_funtomic_GameOps.reportEvent(name,data);
};
co_doubleduck_dynamons2_Game.getScreenSize = function() {
	return co_doubleduck_dynamons2_Game._screenSize;
};
co_doubleduck_dynamons2_Game.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_Game.prototype = $extend(openfl_display_Sprite.prototype,{
	handleAddedToStage: function(e) {
		this.removeEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleAddedToStage));
		this.initGame();
	}
	,initGame: function() {
		co_doubleduck_dynamons2_Game.instance = this;
		co_doubleduck_dynamons2_data_Persistence.initGameData();
		co_doubleduck_utils_SoundMgr.init(co_doubleduck_dynamons2_data_Persistence.adapter());
		co_doubleduck_utils_SoundMgr.available = false;
		co_doubleduck_utils_Button.defaultClickSound = "button_click";
		co_doubleduck_utils_DDAssets.activeLocale = "en";
		co_doubleduck_dynamons2_Game._screenSize = new openfl_geom_Rectangle(0,0,this.stage.stageWidth,this.stage.stageHeight);
		co_doubleduck_utils_DDAssets.prefix = "";
		co_doubleduck_utils_DDAssets.scale = 1.0;
		co_doubleduck_utils_DDAssets.globalSmoothing = true;
		co_doubleduck_utils_NotifManager.init(co_doubleduck_dynamons2_data_Persistence.adapter());
		co_doubleduck_d2p2_P2Log.init("dynamons2");
		this.handleFlow();
	}
	,waitForSplash: function(flag) {
		if(flag == null) flag = false;
		co_doubleduck_utils_KiziExtension.hideSplash($bind(this,this.handleFlow));
	}
	,handleFlow: function() {
		if(com_funtomic_GameOps.getConfig() != null && com_funtomic_GameOps.getConfig().map != null) co_doubleduck_dynamons2_data_GameplayDB.setData(com_funtomic_GameOps.getConfig());
		if(co_doubleduck_dynamons2_data_GameplayDB.getData().adsLogic != null) co_doubleduck_utils_AdManager.setAdsLogic(co_doubleduck_dynamons2_data_GameplayDB.getData().adsLogic);
		co_doubleduck_utils_AdManager.init(co_doubleduck_dynamons2_data_Persistence.adapter());
		co_doubleduck_utils_AdManager.analyticsCallback = co_doubleduck_dynamons2_Game.reportEvent;
		co_doubleduck_dynamons2_meta_Tutorial.inst().init(co_doubleduck_dynamons2_data_Persistence.adapter(),true,co_doubleduck_dynamons2_Game.getScreenSize());
		co_doubleduck_dynamons2_meta_GameState.init();
		co_doubleduck_utils_PlayTimer.init();
		this.addMap({ });
	}
	,initDummyData: function() {
		co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS,1);
		var monData = "hopchop,3,100,-1,-1,0,0";
		monData += ";vulfrost,1,100,-1,-1,0,1";
		co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.MONS_DATA,monData);
		co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS,100);
		co_doubleduck_dynamons2_data_Persistence.adapter().setValue("TUTOR_STEP","JOVANI_TALK_KOLIN");
	}
	,initDummyData2: function() {
		co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS,1);
		var monData = "hopchop,1,50," + (co_doubleduck_utils_Utils.epochTime() - 30) + "," + (co_doubleduck_utils_Utils.epochTime() + 30) + ",20,0";
		monData += ";nintoise,8,50," + (co_doubleduck_utils_Utils.epochTime() - 30) + "," + (co_doubleduck_utils_Utils.epochTime() + 30) + ",0,1";
		monData += ";flarion,2,100,-1,-1,0,2";
		co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.MONS_DATA,monData);
		var itemsData = "discatch,2;levelup_fire,2;levelup_water,2;levelup_earth,2;healing_kit,1";
		co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA,itemsData);
		co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED,"a,b,c,d,dBoss,e,f,g,h,i,j,l,k");
		co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.NODES_BEATED,"5,10,13");
		co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS,19);
	}
	,addMap: function(data) {
		this._map = new co_doubleduck_dynamons2_meta_NodesMap(data);
		this._map.addEventListener(co_doubleduck_dynamons2_meta_FlowEvents.START_BATTLE,$bind(this,this.handleStartBattle));
		this.addChild(this._map);
	}
	,removeMap: function() {
		this._map.removeEventListener(co_doubleduck_dynamons2_meta_FlowEvents.START_BATTLE,$bind(this,this.handleStartBattle));
		this._map.destroy();
		this.removeChild(this._map);
		this._map = null;
	}
	,startBattle: function(data) {
		this._battle = new co_doubleduck_dynamons2_core_Battle(data);
		this._battle.addEventListener(co_doubleduck_dynamons2_meta_FlowEvents.BACK_TO_MAP,$bind(this,this.handleBackToMap));
		this.addChild(this._battle);
	}
	,removeBattle: function() {
		this._battle.removeEventListener(co_doubleduck_dynamons2_meta_FlowEvents.START_BATTLE,$bind(this,this.handleBackToMap));
		this._battle.destroy();
		this.removeChild(this._battle);
		this._battle = null;
	}
	,handleStartBattle: function(e) {
		this.removeMap();
		this.startBattle(e.data);
	}
	,handleBackToMap: function(e) {
		this.removeBattle();
		this.addMap(e.data);
	}
	,__class__: co_doubleduck_dynamons2_Game
});
var co_doubleduck_utils_KiziPreloader = function(domain,progbarData,maskFrom,maskTo,gameState,portrait) {
	if(portrait == null) portrait = true;
	if(maskTo == null) maskTo = 1;
	if(maskFrom == null) maskFrom = 0;
	NMEPreloader.call(this);
	this._isPortrait = this.getHeight() > this.getWidth();
	this._isShowingAd = false;
	this._isAssetsLoading = true;
	this._isGameOpsLoading = false;
	this._finishedLoading = false;
	if(gameState == null) gameState = { };
	this._progBarData = progbarData;
	if(this._isPortrait) this.addSplashPortrait(); else this.addSplashLandscape();
	this.addProgressBar();
	this._progBar.set_maskFrom(maskFrom);
	this._progBar.set_maskTo(maskTo);
	if(co_doubleduck_utils_KiziPreloader.KIZI) {
		this._isGameOpsLoading = true;
		com_funtomic_GameOps.init(domain,GlobalVars.gameVersion,null,gameState,$bind(this,this.handleGameOpsLoaded));
		com_funtomic_GameOps.KiziAPI_preloaderStarted();
		if(com_funtomic_GameOps.KiziAPI_isAdPlaying()) this.handleAdStarted(); else com_funtomic_GameOps.KiziAPI_onAdStart($bind(this,this.handleAdStarted));
	}
};
$hxClasses["co.doubleduck.utils.KiziPreloader"] = co_doubleduck_utils_KiziPreloader;
co_doubleduck_utils_KiziPreloader.__name__ = ["co","doubleduck","utils","KiziPreloader"];
co_doubleduck_utils_KiziPreloader.__super__ = NMEPreloader;
co_doubleduck_utils_KiziPreloader.prototype = $extend(NMEPreloader.prototype,{
	handleGameOpsLoaded: function(flag) {
		this._isGameOpsLoading = false;
		this.tryEndSplash();
	}
	,addSplashPortrait: function() {
		this._splashBmpData = new co_doubleduck_utils_SplashBG(320,568);
		this._splash = new openfl_display_Bitmap(this._splashBmpData);
		this._splash.smoothing = true;
		var frameWidth = 320 * this._splash.get_scaleX();
		var frameHeight = 568 * this._splash.get_scaleY();
		this.addChild(this._splash);
		this._splash.set_x(this.getWidth() / 2 - frameWidth / 2);
		this._splash.set_y(this.getHeight() / 2 - frameHeight / 2);
	}
	,addSplashLandscape: function() {
		this._splashBmpData = new co_doubleduck_utils_SplashBG(568,320);
		this._splash = new openfl_display_Bitmap(this._splashBmpData);
		this._splash.smoothing = true;
		var frameWidth = 568 * this._splash.get_scaleX();
		var frameHeight = 320 * this._splash.get_scaleY();
		this.addChild(this._splash);
		this._splash.set_x(this.getWidth() / 2 - frameWidth / 2);
		this._splash.set_y(this.getHeight() / 2 - frameHeight / 2);
	}
	,addProgressBar: function() {
		var fill = new openfl_display_Bitmap(new co_doubleduck_utils_ProgFill(this._progBarData.width | 0,this._progBarData.height | 0));
		fill.smoothing = true;
		var bg = new openfl_display_Bitmap(new co_doubleduck_utils_ProgBG(this._progBarData.width | 0,this._progBarData.height | 0));
		bg.smoothing = true;
		this._progBar = new co_doubleduck_utils_ProgBar(bg,fill);
		this.addChild(this._progBar);
		this._progBar.setFillVals(this._progBarData.width,this._progBarData.height);
		this._progBar.setFillPerc(0);
		this._progBar.set_x(this._splash.get_x() + this._progBarData.x);
		this._progBar.set_y(this._splash.get_y() + this._progBarData.y);
	}
	,getHeight: function() {
		return openfl_Lib.current.stage.stageHeight;
	}
	,getWidth: function() {
		return openfl_Lib.current.stage.stageWidth;
	}
	,onLoaded: function() {
		this._isAssetsLoading = false;
		this.tryEndSplash();
		if(!this._finishedLoading) co_doubleduck_utils_Utils.delayedCall(30,$bind(this,this.handleTimeout),null,this);
	}
	,onUpdate: function(bytesLoaded,bytesTotal) {
		var percentLoaded = bytesLoaded / bytesTotal;
		if(percentLoaded > 1) percentLoaded = 1;
		this._progBar.setFillPerc(percentLoaded);
	}
	,handleTimeout: function() {
		if(this._finishedLoading) return;
		this._finishedLoading = true;
		this.reallyEndSplash();
	}
	,tryEndSplash: function() {
		if(!this._isGameOpsLoading && !this._isAssetsLoading && !this._isShowingAd && !this._finishedLoading) {
			this._finishedLoading = true;
			co_doubleduck_utils_Utils.delayedCall(1.5,$bind(this,this.reallyEndSplash));
		}
	}
	,reallyEndSplash: function() {
		if(co_doubleduck_utils_KiziPreloader.KIZI) {
			com_funtomic_GameOps.KiziAPI_onAdComplete(null);
			com_funtomic_GameOps.KiziAPI_onAdStart(null);
			com_funtomic_GameOps.KiziAPI_preloaderEnded();
		}
		co_doubleduck_utils_TweenChain.removeTweens(this);
		this.destroy();
		this.dispatchEvent(new openfl_events_Event(openfl_events_Event.COMPLETE));
	}
	,handleAdStarted: function() {
		com_funtomic_GameOps.KiziAPI_onAdStart(null);
		this._isShowingAd = true;
		com_funtomic_GameOps.KiziAPI_onAdComplete($bind(this,this.handleAdComplete));
	}
	,handleAdComplete: function() {
		com_funtomic_GameOps.KiziAPI_onAdComplete(null);
		this._isShowingAd = false;
		this.tryEndSplash();
	}
	,destroy: function() {
		this.removeChild(this._splash);
		this._splash.bitmapData = null;
		this._splash = null;
		this._splashBmpData.dispose();
		this._splashBmpData = null;
		this.removeChild(this._progBar);
		this._progBar = null;
	}
	,__class__: co_doubleduck_utils_KiziPreloader
});
var co_doubleduck_dynamons2_Preloader = function() {
	co_doubleduck_utils_KiziPreloader.KIZI = true;
	co_doubleduck_dynamons2_data_Persistence.init("dynamons2");
	flambe_Storage.setStorageAdapter("dynamons2",co_doubleduck_dynamons2_data_Persistence.adapter());
	var isKiziApp = Std.string(com_funtomic_GameOps.isInKiziApp()) + "";
	co_doubleduck_utils_KiziPreloader.call(this,"dynamons2",new openfl_geom_Rectangle(42,500,215,40),0,1.05,{ 'isKiziApp' : isKiziApp});
};
$hxClasses["co.doubleduck.dynamons2.Preloader"] = co_doubleduck_dynamons2_Preloader;
co_doubleduck_dynamons2_Preloader.__name__ = ["co","doubleduck","dynamons2","Preloader"];
co_doubleduck_dynamons2_Preloader.__super__ = co_doubleduck_utils_KiziPreloader;
co_doubleduck_dynamons2_Preloader.prototype = $extend(co_doubleduck_utils_KiziPreloader.prototype,{
	__class__: co_doubleduck_dynamons2_Preloader
});
var co_doubleduck_dynamons2_core_Ability = function(id) {
	this._id = id;
	this._data = co_doubleduck_dynamons2_data_GameplayDB.getAbility(this._id);
	this._cooldownCount = 0;
	this._cooldownMax = Std["int"](this._data.cooldown) + 1;
	this._ignoreStats = false;
};
$hxClasses["co.doubleduck.dynamons2.core.Ability"] = co_doubleduck_dynamons2_core_Ability;
co_doubleduck_dynamons2_core_Ability.__name__ = ["co","doubleduck","dynamons2","core","Ability"];
co_doubleduck_dynamons2_core_Ability._fxCache = null;
co_doubleduck_dynamons2_core_Ability._fxCacheCount = null;
co_doubleduck_dynamons2_core_Ability.monKindFactor = function(srcKind,dstKind) {
	var factors = co_doubleduck_dynamons2_data_GameplayDB.getBattleData().kindFactors;
	switch(srcKind) {
	case "fire":
		switch(dstKind) {
		case "earth":
			return factors.strong;
		case "water":
			return factors.weak;
		default:
			return factors.normal;
		}
		break;
	case "earth":
		switch(dstKind) {
		case "water":
			return factors.strong;
		case "fire":
			return factors.weak;
		default:
			return factors.normal;
		}
		break;
	case "water":
		switch(dstKind) {
		case "fire":
			return factors.strong;
		case "earth":
			return factors.weak;
		default:
			return factors.normal;
		}
		break;
	default:
		return factors.normal;
	}
};
co_doubleduck_dynamons2_core_Ability.critChanceForAim = function(aim,data) {
	var _g = 0;
	while(_g < data.length) {
		var curr = data[_g];
		++_g;
		if(aim <= Std["int"](curr.upTo)) return curr.crit;
	}
	return data[data.length - 1].crit;
};
co_doubleduck_dynamons2_core_Ability.missChanceForAim = function(aim,data) {
	var _g = 0;
	while(_g < data.length) {
		var curr = data[_g];
		++_g;
		if(aim <= Std["int"](curr.upTo)) return curr.miss;
	}
	return data[data.length - 1].miss;
};
co_doubleduck_dynamons2_core_Ability.rollFromRange = function(range) {
	var rangeStr = range.split("-");
	var min = Std.parseInt(rangeStr[0]);
	var max = Std.parseInt(rangeStr[1]);
	return min + Std.random(max - min);
};
co_doubleduck_dynamons2_core_Ability.cacheFx = function(name) {
	if(co_doubleduck_dynamons2_core_Ability._fxCache == null) {
		co_doubleduck_dynamons2_core_Ability._fxCache = new haxe_ds_StringMap();
		co_doubleduck_dynamons2_core_Ability._fxCacheCount = new haxe_ds_StringMap();
	}
	if(co_doubleduck_dynamons2_core_Ability._fxCache.exists(name)) {
		var value = co_doubleduck_dynamons2_core_Ability._fxCacheCount.get(name) + 1;
		co_doubleduck_dynamons2_core_Ability._fxCacheCount.set(name,value);
	} else {
		co_doubleduck_dynamons2_core_Ability._fxCacheCount.set(name,1);
		var cache = null;
		var shouldCache = false;
		shouldCache = true;
		switch(name) {
		case "fx-waterblast":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/blast_water.png",shouldCache);
			break;
		case "fx-fireblast":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/blast.png",shouldCache);
			break;
		case "fx-smoke":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/smoke.png",shouldCache);
			break;
		case "fx-freeze":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/freeze_gas.png",shouldCache);
			break;
		case "fx-poisongas":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/poison_gas.png",shouldCache);
			break;
		case "fx-volcano":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/splash_fire.png",shouldCache);
			break;
		case "fx-icesplash":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/splash.png",shouldCache);
			break;
		case "fx-ice-shield":
			cache = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/ice_shield.png",shouldCache);
			break;
		default:
		}
		co_doubleduck_dynamons2_core_Ability._fxCache.set(name,cache);
	}
};
co_doubleduck_dynamons2_core_Ability.uncacheFx = function(name) {
	if(co_doubleduck_dynamons2_core_Ability._fxCacheCount.exists(name)) {
		if(co_doubleduck_dynamons2_core_Ability._fxCacheCount.get(name) > 1) {
			var value = co_doubleduck_dynamons2_core_Ability._fxCacheCount.get(name) - 1;
			co_doubleduck_dynamons2_core_Ability._fxCacheCount.set(name,value);
		} else {
			co_doubleduck_dynamons2_core_Ability._fxCacheCount.remove(name);
			var bmp = co_doubleduck_dynamons2_core_Ability._fxCache.get(name);
			if(bmp != null) bmp = null;
			co_doubleduck_dynamons2_core_Ability._fxCache.remove(name);
		}
	}
};
co_doubleduck_dynamons2_core_Ability.getFxCache = function(name) {
	if(co_doubleduck_dynamons2_core_Ability._fxCache.exists(name)) return co_doubleduck_dynamons2_core_Ability._fxCache.get(name);
	throw new js__$Boot_HaxeError("DDError: uncached data requested for " + name);
	return null;
};
co_doubleduck_dynamons2_core_Ability.printFxCache = function() {
	var $it0 = co_doubleduck_dynamons2_core_Ability._fxCacheCount.keys();
	while( $it0.hasNext() ) {
		var name = $it0.next();
		null;
	}
};
co_doubleduck_dynamons2_core_Ability.abilityForItem = function(itemId) {
	var abil = null;
	if(itemId == "heal_spray" || itemId == "antidote" || itemId == "aim_shroom" || itemId == "atk_pepper" || itemId == "def_berry") abil = new co_doubleduck_dynamons2_core_Ability("item-" + itemId);
	if(HxOverrides.substr(itemId,0,4) == "can_") abil = new co_doubleduck_dynamons2_core_Ability("can-" + HxOverrides.substr(itemId,4,null));
	if(abil != null) abil.ignoreStats();
	return abil;
};
co_doubleduck_dynamons2_core_Ability.prototype = {
	ignoreStats: function() {
		this._ignoreStats = true;
	}
	,getKind: function() {
		return this._data.kind;
	}
	,getIcon: function() {
		if(this._iconBox == null) {
			this._iconBox = new openfl_display_Sprite();
			this._btn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/icons/" + this._id + ".png"));
			this._btn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBtn));
			this._iconBox.addChild(this._btn);
			if(this._cooldownMax > 0) {
				this._cooldownOverlay = co_doubleduck_utils_DDAssets.getImage("images/session/ui/icon_off.png");
				var _g = this._cooldownOverlay;
				_g.set_x(_g.get_x() - this._cooldownOverlay.get_width() / 2);
				var _g1 = this._cooldownOverlay;
				_g1.set_y(_g1.get_y() - this._cooldownOverlay.get_height() / 2);
				this._cooldown = new co_doubleduck_utils_ProgBar(co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_small_bg.png"),co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_small_fill.png"));
				var _g2 = this._cooldown;
				_g2.set_x(_g2.get_x() - this._cooldown.get_width() / 2);
				this._cooldown.set_y(this._btn.get_height() * 0.3 - this._cooldown.get_height() / 2);
			}
		}
		return this._iconBox;
	}
	,getId: function() {
		return this._id;
	}
	,getTitle: function() {
		return this._data.title;
	}
	,killIcon: function() {
		if(this._iconBox != null) {
			this._cooldownCount = 0;
			this._btn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBtn));
			this._iconBox = null;
		}
	}
	,inCooldown: function() {
		return this._cooldownCount > 0;
	}
	,handleBtn: function(e) {
		if(this._iconBox.hasEventListener("ActedEvent")) this._iconBox.dispatchEvent(new co_doubleduck_utils_DynamicEvent("ActedEvent",{ ability : this}));
	}
	,toggleCacheFx: function(toggle) {
		var stepsData = this._data.visualSteps;
		var _g = 0;
		while(_g < stepsData.length) {
			var stepData = stepsData[_g];
			++_g;
			var actName = stepData.action;
			if(HxOverrides.substr(actName,0,3) == "fx-") {
				actName = actName.split(":")[0];
				if(toggle) co_doubleduck_dynamons2_core_Ability.cacheFx(actName); else co_doubleduck_dynamons2_core_Ability.uncacheFx(actName);
			}
		}
	}
	,passedTurn: function() {
		var _g = this;
		if(this._cooldownCount > 0) {
			this._cooldownCount--;
			if(this._iconBox != null) {
				this._cooldown.setFillPerc(1 - this._cooldownCount / this._cooldownMax,300);
				if(this._cooldownCount == 0) co_doubleduck_utils_TweenChain.get(this._cooldown).wait(320).call(function() {
					_g._iconBox.removeChild(_g._cooldownOverlay);
					_g._iconBox.removeChild(_g._cooldown);
					_g._btn.enabled = true;
				});
			}
		}
	}
	,actOut: function(actor,other,battle,animBox,forcePower) {
		if(forcePower == null) forcePower = -1;
		if(this._cooldownMax > 0) {
			this._cooldownCount = this._cooldownMax;
			if(this._iconBox != null) {
				this._btn.enabled = false;
				this._iconBox.addChild(this._cooldownOverlay);
				this._cooldown.setFillPerc(1,0);
				this._cooldown.setFillPerc(0,400);
				this._iconBox.addChild(this._cooldown);
			}
		}
		this._anim = new openfl_display_Sprite();
		animBox.addChild(this._anim);
		this._willMiss = false;
		this._willCrit = false;
		if(!this._ignoreStats && forcePower == -1) {
			var effects = this._data.effect.split(",");
			var battleDat = co_doubleduck_dynamons2_data_GameplayDB.getBattleData();
			var missable = battleDat.missableEffects;
			var testMiss = false;
			var _g = 0;
			while(_g < effects.length) {
				var effName = effects[_g];
				++_g;
				if(HxOverrides.indexOf(missable,effName,0) != -1) {
					testMiss = true;
					break;
				}
			}
			if(testMiss) {
				var aim = actor.getStat("aim");
				var missChance = co_doubleduck_dynamons2_core_Ability.missChanceForAim(aim,battleDat.aiming);
				var chanceRange1 = missChance.split(":");
				var odds1 = Std.parseInt(chanceRange1[0]) / Std.parseInt(chanceRange1[1]);
				if(Math.random() <= odds1) {
					this._willMiss = true;
					null;
				}
			}
			var critChance = co_doubleduck_dynamons2_core_Ability.critChanceForAim(actor.getStat("aim"),battleDat.aiming);
			var chanceRange = critChance.split(":");
			var odds = Std.parseInt(chanceRange[0]) / Std.parseInt(chanceRange[1]);
			if(Math.random() <= odds) this._willCrit = true;
		}
		var willHypnoBackfire = false;
		if(actor.getState() == "hypno") {
			if(this._ignoreStats || this._willMiss) actor.getStateData().hypnoActive = false; else {
				willHypnoBackfire = Math.random() <= actor.getStateData().chance;
				actor.getStateData().hypnoActive = willHypnoBackfire;
			}
		}
		var titleInDur = 600;
		var titleWaitDur = 1200;
		var titleOutDur = 300;
		var minTime = titleInDur + titleWaitDur + titleOutDur;
		var nameTitle = "" + Std.string(this._data.title);
		if(this._willMiss) {
			nameTitle = "MISS";
			titleWaitDur = 600;
		}
		this._abilTitle = co_doubleduck_utils_Fonter.getString(nameTitle,"images/fonts/white_stroked_big/");
		this._abilTitle.set_x(-this._abilTitle.get_width());
		this._abilTitle.set_y(150 * co_doubleduck_utils_DDAssets.scale);
		this._abilTitle.set_alpha(0);
		this._anim.addChild(this._abilTitle);
		this._abilStatBar = null;
		if(!this._willMiss) {
			var effects1 = this._data.effect;
			if(effects1.indexOf("incr_") != -1 || effects1.indexOf("decr_") != -1) {
				titleInDur = 400;
				titleWaitDur = 800;
				minTime = titleInDur + titleWaitDur + titleOutDur + 2100;
				var allEffects = effects1.split(",");
				var statIs = "";
				var whoseStat = null;
				var isIncr = false;
				var _g1 = 0;
				while(_g1 < allEffects.length) {
					var eff = allEffects[_g1];
					++_g1;
					if(eff.indexOf("incr_") == 0) {
						statIs = HxOverrides.substr(eff,5,null);
						isIncr = true;
						whoseStat = actor;
						break;
					}
					if(eff.indexOf("decr_") == 0) {
						statIs = HxOverrides.substr(eff,5,null);
						isIncr = false;
						if(willHypnoBackfire) whoseStat = actor; else whoseStat = other;
						break;
					}
				}
				this._abilStatBar = new co_doubleduck_dynamons2_meta_StatsBar(statIs);
				var statVal = this._abilStatBar.calcRatio(whoseStat.getStat(statIs,true));
				this._abilStatBar.setFill(statVal);
				if(isIncr) statVal = this._abilStatBar.calcRatio(Math.round(whoseStat.getStat(statIs,true) * (1 + Std["int"](this._data.amount) / 100))); else statVal = this._abilStatBar.calcRatio(Math.round(whoseStat.getStat(statIs,true) * (1 - Std["int"](this._data.amount) / 100)));
				var targetY = 0;
				if(whoseStat.getVisBody().get_x() < co_doubleduck_dynamons2_Game.getScreenSize().width / 2) {
					this._abilStatBar.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 23 * co_doubleduck_utils_DDAssets.scale - this._abilStatBar.get_width());
					this._abilStatBar.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height - 120 * co_doubleduck_utils_DDAssets.scale);
					targetY = this._abilStatBar.get_y() - 45 * co_doubleduck_utils_DDAssets.scale;
				} else {
					this._abilStatBar.set_x(15 * co_doubleduck_utils_DDAssets.scale);
					this._abilStatBar.set_y(75 * co_doubleduck_utils_DDAssets.scale);
					targetY = this._abilStatBar.get_y() + 45 * co_doubleduck_utils_DDAssets.scale;
				}
				this._anim.addChild(this._abilStatBar);
				co_doubleduck_utils_TweenChain.get(this._abilStatBar).wait(titleInDur + titleWaitDur + titleOutDur).tto({ y : targetY},300,motion_easing_Sine.get_easeOut()).wait(400).call(($_=this._abilStatBar,$bind($_,$_.setFill)),[statVal,800]).wait(1200).tto({ y : this._abilStatBar.get_y()},200,motion_easing_Sine.get_easeIn()).call(($_=this._anim,$bind($_,$_.removeChild)),[this._abilStatBar]);
			}
			if(effects1.indexOf("attack") != -1) {
				var textPosY = this._abilTitle.get_y() + 25 * co_doubleduck_utils_DDAssets.scale;
				var textNextTime = titleInDur;
				this._abilFactor = null;
				if(willHypnoBackfire) this._abilFactor = co_doubleduck_utils_DDAssets.getCenteredImage("images/session/ui/report_backfire.png"); else {
					var kindFactor = co_doubleduck_dynamons2_core_Ability.monKindFactor(this.getKind(),other.getKind());
					if(kindFactor < 1) this._abilFactor = co_doubleduck_utils_DDAssets.getCenteredImage("images/session/ui/report_weak.png"); else if(kindFactor > 1) this._abilFactor = co_doubleduck_utils_DDAssets.getCenteredImage("images/session/ui/report_strong.png");
				}
				if(this._abilFactor != null) {
					this._abilFactor.set_x(80 * co_doubleduck_utils_DDAssets.scale);
					this._abilFactor.set_y(textPosY);
					textPosY += 25 * co_doubleduck_utils_DDAssets.scale;
					this._abilFactor.set_scaleX(this._abilFactor.set_scaleY(1.6));
					this._abilFactor.set_alpha(0);
					this._anim.addChild(this._abilFactor);
					co_doubleduck_utils_TweenChain.get(this._abilFactor).wait(textNextTime).tto({ alpha : 1, scaleX : 1, scaleY : 1},200,motion_easing_Sine.get_easeIn()).wait(titleInDur + titleWaitDur - textNextTime - 200).tto({ alpha : 0},titleOutDur).call(($_=this._anim,$bind($_,$_.removeChild)),[this._abilFactor]);
					textNextTime += 200;
				}
				this._abilCrit = null;
				if(this._willCrit) {
					this._abilCrit = co_doubleduck_utils_DDAssets.getCenteredImage("images/session/ui/report_critical.png");
					this._abilCrit.set_x(80 * co_doubleduck_utils_DDAssets.scale);
					this._abilCrit.set_y(textPosY);
					textPosY += 25 * co_doubleduck_utils_DDAssets.scale;
					this._abilCrit.set_scaleX(this._abilCrit.set_scaleY(1.6));
					this._abilCrit.set_alpha(0);
					this._anim.addChild(this._abilCrit);
					co_doubleduck_utils_TweenChain.get(this._abilCrit).wait(textNextTime).tto({ alpha : 1, scaleX : 1, scaleY : 1},200,motion_easing_Sine.get_easeIn()).wait(titleInDur + titleWaitDur - textNextTime - 200).tto({ alpha : 0},titleOutDur).call(($_=this._anim,$bind($_,$_.removeChild)),[this._abilCrit]);
					textNextTime += 200;
				}
			}
		}
		co_doubleduck_utils_TweenChain.get(this._abilTitle).tto({ alpha : 1, x : 80 * co_doubleduck_utils_DDAssets.scale},titleInDur,motion_easing_Sine.get_easeOut()).wait(titleWaitDur).tto({ alpha : 0},titleOutDur).call(($_=this._anim,$bind($_,$_.removeChild)),[this._abilTitle]);
		var stepsData = this._data.visualSteps;
		if(this._willMiss) stepsData = co_doubleduck_dynamons2_data_GameplayDB.getBattleData().missVisualSteps; else stepsData = this._data.visualSteps;
		var totalTime = 0;
		var _g2 = 0;
		while(_g2 < stepsData.length) {
			var stepData = stepsData[_g2];
			++_g2;
			var stepAt = Std["int"](stepData.at);
			var stepDur = Std["int"](stepData.duration);
			co_doubleduck_utils_TweenChain.get(this._anim).wait(titleInDur + stepAt).call($bind(this,this.actStep),[actor,other,battle,stepData,forcePower]);
			if(stepAt + stepDur > totalTime) totalTime = stepAt + stepDur;
		}
		if(totalTime < minTime) totalTime = minTime;
		totalTime += 100;
		co_doubleduck_utils_TweenChain.get(this._anim).wait(totalTime).tto({ alpha : 0},100).call($bind(animBox,animBox.removeChild),[this._anim]);
		return totalTime;
	}
	,actStep: function(actor,other,battle,stepData,forcePower) {
		if(forcePower == null) forcePower = -1;
		var _g = this;
		var duration = Std["int"](stepData.duration);
		var actorBody = actor.getVisBody();
		var otherBody = other.getVisBody();
		var action = stepData.action;
		var isHypno = false;
		if(actor.getState() == "hypno" && actor.getStateData().hypnoActive == true) isHypno = true;
		var target = null;
		var nonTarget = null;
		if(action.indexOf(":") != -1) {
			var splitted = action.split(":");
			if(splitted[1] == "actor") {
				target = actorBody;
				nonTarget = otherBody;
			} else if(splitted[1] == "other") {
				target = otherBody;
				nonTarget = actorBody;
			}
			action = splitted[0];
		} else {
			target = otherBody;
			nonTarget = actorBody;
		}
		if(isHypno) {
			if(stepData.inHypno == "none") return;
			if(stepData.inHypno != "noChange") {
				var tempSpr = target;
				target = nonTarget;
				nonTarget = tempSpr;
			}
		}
		switch(action) {
		case "effect":
			var effects = this._data.effect.split(",");
			var _g1 = 0;
			while(_g1 < effects.length) {
				var effectName = effects[_g1];
				++_g1;
				this.applyEffect(effectName,actor,other,duration,forcePower);
			}
			break;
		case "ram":
			var toPos = new openfl_geom_Point();
			toPos.x = target.get_x() + 0.4 * (nonTarget.get_x() - target.get_x());
			toPos.y = target.get_y() + 0.4 * (nonTarget.get_y() - target.get_y());
			co_doubleduck_utils_TweenChain.get(target).tto({ x : toPos.x, y : toPos.y},Math.floor(duration * 0.4),motion_easing_Sine.get_easeOut()).tto({ x : target.get_x(), y : target.get_y()},Math.floor(duration * 0.6),motion_easing_Sine.get_easeIn());
			break;
		case "recoil":
			var toPos1 = new openfl_geom_Point();
			toPos1.x = target.get_x() - 0.2 * (nonTarget.get_x() - target.get_x());
			toPos1.y = target.get_y() - 0.2 * (nonTarget.get_y() - target.get_y());
			co_doubleduck_utils_TweenChain.get(target).tto({ x : toPos1.x, y : toPos1.y},Math.floor(duration / 2),motion_easing_Sine.get_easeOut()).tto({ x : target.get_x(), y : target.get_y()},Math.floor(duration / 2),motion_easing_Sine.get_easeIn());
			break;
		case "evade":
			var toPos2 = new openfl_geom_Point();
			toPos2.x = target.get_x() - 0.5 * (nonTarget.get_x() - target.get_x());
			co_doubleduck_utils_TweenChain.get(target).tto({ x : toPos2.x},Math.floor(duration / 2),motion_easing_Sine.get_easeOut()).tto({ x : target.get_x()},Math.floor(duration / 2),motion_easing_Sine.get_easeIn());
			break;
		case "shake":
			co_doubleduck_utils_TweenAnimator.shake(target,Math.floor(15 * co_doubleduck_utils_DDAssets.scale),30);
			co_doubleduck_utils_TweenChain.get(target).wait(duration - 10).call(co_doubleduck_utils_TweenChain.removeTweens,[target]);
			break;
		case "fx-waterblast":case "fx-fireblast":case "fx-rainbow":
			var sheet;
			if(action == "fx-rainbow") sheet = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/rainbow.png"); else sheet = co_doubleduck_dynamons2_core_Ability.getFxCache(action);
			var blast = new co_doubleduck_dynamons2_core_BlastAnim(sheet);
			blast.set_x(target.get_x() - blast.get_width() / 2);
			blast.set_y(target.get_y() - blast.get_height() + 20 * co_doubleduck_utils_DDAssets.scale);
			this._anim.addChild(blast);
			co_doubleduck_utils_TweenChain.get(blast).wait(duration).call(($_=this._anim,$bind($_,$_.removeChild)),[blast]).call($bind(blast,blast.destroy));
			break;
		case "fx-rain_ice":case "fx-rain_fire":case "fx-rain_leaf":case "fx-rain_pods":
			var particle = co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/" + HxOverrides.substr(action,3,null) + ".png");
			var ltr = nonTarget.get_x() < co_doubleduck_dynamons2_Game.getScreenSize().width / 2;
			var anim = new co_doubleduck_dynamons2_core_RainAnim(particle,duration,ltr);
			if(!ltr) {
				var _g2 = anim;
				_g2.set_x(_g2.get_x() + co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
			}
			this._anim.addChild(anim);
			break;
		case "fx-scratch":
			var _g3 = 0;
			while(_g3 < 3) {
				var i = _g3++;
				var slash = new co_doubleduck_dynamons2_core_SlashAnim(duration);
				this._anim.addChild(slash);
				slash.set_x(target.get_x() - 20 * co_doubleduck_utils_DDAssets.scale);
				slash.set_y(target.get_y() - 140 * co_doubleduck_utils_DDAssets.scale * 0.55);
				slash.set_rotation(-45);
				var _g11 = slash;
				_g11.set_x(_g11.get_x() + i * (15 * co_doubleduck_utils_DDAssets.scale));
				var _g12 = slash;
				_g12.set_y(_g12.get_y() + i * (10 * co_doubleduck_utils_DDAssets.scale));
			}
			break;
		case "fx-whip":
			var dur = Math.floor(duration / 3);
			var delay = Math.floor((duration - dur) / 5);
			var _g4 = 0;
			while(_g4 < 5) {
				var i1 = _g4++;
				var slash1 = new co_doubleduck_dynamons2_core_SlashAnim(dur,delay * i1);
				this._anim.addChild(slash1);
				slash1.set_x(target.get_x() - 20 * co_doubleduck_utils_DDAssets.scale);
				slash1.set_y(target.get_y() - 140 * co_doubleduck_utils_DDAssets.scale * 0.55);
				slash1.set_rotation(i1 * 45);
				var _g13 = slash1;
				_g13.set_x(_g13.get_x() + (Std.random(Math.floor(40 * co_doubleduck_utils_DDAssets.scale)) - 20 * co_doubleduck_utils_DDAssets.scale));
				var _g14 = slash1;
				_g14.set_y(_g14.get_y() + (Std.random(Math.floor(40 * co_doubleduck_utils_DDAssets.scale)) - 20 * co_doubleduck_utils_DDAssets.scale));
			}
			break;
		case "fx-smoke":case "fx-freeze":case "fx-poisongas":
			var sheet1 = co_doubleduck_dynamons2_core_Ability.getFxCache(action);
			var vines = new co_doubleduck_dynamons2_core_CloudAnim(sheet1,duration);
			vines.set_x(target.get_x());
			vines.set_y(target.get_y() - target.get_height() / 2);
			this._anim.addChild(vines);
			co_doubleduck_utils_TweenChain.get(vines).wait(duration).call(($_=this._anim,$bind($_,$_.removeChild)),[vines]);
			break;
		case "jump":
			var targetMon;
			if(target == actorBody) targetMon = actor; else targetMon = other;
			var actorOnly = targetMon.getVisBodyImg();
			var origY = actorOnly.get_y();
			var destY = origY - 65 * co_doubleduck_utils_DDAssets.scale;
			co_doubleduck_utils_TweenChain.get(actorOnly).tto({ y : destY},300).wait(150).tto({ y : origY},100,motion_easing_Quad.get_easeOut());
			var shadow = targetMon.getVisBodyShadow();
			co_doubleduck_utils_TweenChain.get(shadow).tto({ alpha : 0.3},300).wait(150).tto({ alpha : 1},100,motion_easing_Quad.get_easeOut());
			break;
		case "fx-volcano":case "fx-icesplash":
			var sheet2 = co_doubleduck_dynamons2_core_Ability.getFxCache(action);
			var splash = new co_doubleduck_dynamons2_core_SplashAnim(sheet2);
			splash.set_x(target.get_x() - splash.get_width() / 2);
			splash.set_y(target.get_y() - splash.get_height() + 20 * co_doubleduck_utils_DDAssets.scale);
			var delay1 = 0;
			this._anim.addChild(splash);
			splash.play();
			co_doubleduck_utils_TweenChain.get(splash).wait(duration + delay1).call(($_=this._anim,$bind($_,$_.removeChild)),[splash]).call($bind(splash,splash.destroy));
			break;
		case "revive":
			var reviveAnim = new co_doubleduck_dynamons2_core_ReviveAnim(duration);
			reviveAnim.set_x(actorBody.get_x());
			reviveAnim.set_y(actorBody.get_y() - actorBody.get_height() / 2);
			this._anim.addChild(reviveAnim);
			co_doubleduck_utils_TweenChain.get(reviveAnim).wait(duration).call(($_=this._anim,$bind($_,$_.removeChild)),[reviveAnim]);
			break;
		case "sonic_waves":
			var sonicDest = new openfl_geom_Point(target.get_x(),target.get_y());
			sonicDest.x -= nonTarget.get_x();
			sonicDest.y -= nonTarget.get_y();
			var sonicAnim = new co_doubleduck_dynamons2_core_SonicAnim(duration,sonicDest);
			sonicAnim.set_x(nonTarget.get_x());
			sonicAnim.set_y(nonTarget.get_y() - nonTarget.get_height() / 2);
			this._anim.addChild(sonicAnim);
			co_doubleduck_utils_TweenChain.get(sonicAnim).wait(duration).call(($_=this._anim,$bind($_,$_.removeChild)),[sonicAnim]);
			break;
		case "flash":
			var whiteTime = 1200;
			var white = new openfl_display_Sprite();
			white.get_graphics().beginFill(16777215);
			white.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
			white.get_graphics().endFill();
			battle.addChild(white);
			co_doubleduck_utils_TweenChain.get(white).wait(Math.floor(whiteTime * 0.1)).tto({ alpha : 0},Math.floor(whiteTime * 0.9)).call($bind(battle,battle.removeChild),[white]);
			var targetMon1;
			if(target == actorBody) targetMon1 = actor; else targetMon1 = other;
			var targetOnly = targetMon1.getVisBodyImg();
			var flashingOther = co_doubleduck_utils_BmpMagic.invert(targetOnly.bitmapData);
			var flashingBitmap = new openfl_display_Bitmap(flashingOther);
			flashingBitmap.set_x(targetOnly.get_x());
			flashingBitmap.set_y(targetOnly.get_y());
			flashingBitmap.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
			target.addChildAt(flashingBitmap,target.getChildIndex(targetOnly) + 1);
			flashingBitmap.set_alpha(0);
			var numFlashes = 4;
			var flashTime = 200;
			var tween = co_doubleduck_utils_TweenChain.get(flashingBitmap).wait(Math.floor(whiteTime / 3)).wait(Math.floor(flashTime / 2)).tto({ alpha : 1},50).wait(Math.floor(flashTime / 2)).tto({ alpha : 0},50);
			var _g15 = 0;
			var _g5 = numFlashes - 1;
			while(_g15 < _g5) {
				var flashNum = _g15++;
				tween.wait(Math.floor(flashTime / 2)).tto({ alpha : 1},50).wait(Math.floor(flashTime / 2)).tto({ alpha : 0},50);
			}
			tween.call($bind(target,target.removeChild),[flashingBitmap]).call(($_=flashingBitmap.bitmapData,$bind($_,$_.dispose)));
			break;
		case "grip_vine":case "grip_tentacle":
			var strangleAnim = new co_doubleduck_dynamons2_core_StrangleAnim(HxOverrides.substr(action,5,null),duration,target);
			this._anim.addChild(strangleAnim);
			strangleAnim.set_x(target.get_x());
			strangleAnim.set_y(target.get_y() - target.get_height() * 0.3);
			break;
		case "heatwave":case "subzero":
			var durPart = Math.floor(duration / 5);
			var type;
			if(action == "heatwave") type = "heatwave"; else type = "winter";
			var wind = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/fx/" + type + ".png");
			wind.set_scaleX(14);
			wind.set_scaleY(3.5);
			wind.set_x(-wind.get_width() - co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
			wind.set_y(-wind.get_height() / 2);
			wind.set_alpha(0);
			var windBox = new openfl_display_Sprite();
			windBox.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
			windBox.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2);
			windBox.set_rotation(7);
			windBox.addChild(wind);
			this._anim.addChild(windBox);
			co_doubleduck_utils_TweenChain.get(wind).tto({ x : co_doubleduck_dynamons2_Game.getScreenSize().width * 1.5},duration,motion_easing_Sine.get_easeInOut());
			co_doubleduck_utils_TweenChain.get(wind).tto({ alpha : 0.5},durPart).tto({ alpha : 0.55},durPart).tto({ alpha : 0.6},durPart).tto({ alpha : 0.45},durPart).tto({ alpha : 0},durPart).call(($_=this._anim,$bind($_,$_.removeChild)),[windBox]);
			var heat = new openfl_display_Sprite();
			heat.get_graphics().beginFill(type == "heatwave"?13843470:11468796);
			heat.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
			heat.get_graphics().endFill();
			heat.set_alpha(0);
			this._anim.addChild(heat);
			co_doubleduck_utils_TweenChain.get(heat).tto({ alpha : 0.55},durPart).tto({ alpha : 0.5},durPart).tto({ alpha : 0.55},durPart).tto({ alpha : 0.5},durPart).tto({ alpha : 0},durPart).call(($_=this._anim,$bind($_,$_.removeChild)),[heat]);
			break;
		case "spore_clouds":
			var clouds = 5;
			var overlap = 4;
			var area = new openfl_geom_Rectangle(-40 * co_doubleduck_utils_DDAssets.scale,-40 * co_doubleduck_utils_DDAssets.scale,80 * co_doubleduck_utils_DDAssets.scale,80 * co_doubleduck_utils_DDAssets.scale);
			var durPart1 = Math.floor(duration / (clouds + overlap - 1));
			var _g6 = 0;
			while(_g6 < clouds) {
				var i2 = _g6++;
				var cloud = co_doubleduck_utils_DDAssets.getCenteredImage("images/session/abilities/fx/spores_cloud.png");
				cloud.set_alpha(0);
				cloud.set_x(area.x + co_doubleduck_utils_Utils.nrand() * area.width);
				cloud.set_y(area.y + co_doubleduck_utils_Utils.nrand() * area.height);
				cloud.set_scaleX(cloud.set_scaleY(Math.random() * 0.8 + 1));
				this._anim.addChild(cloud);
				var dest = new openfl_geom_Point();
				dest.x = cloud.get_x() + (Math.random() * 20 - 10) * co_doubleduck_utils_DDAssets.scale;
				dest.y = cloud.get_y() + (Math.random() * 20 - 10) * co_doubleduck_utils_DDAssets.scale;
				var _g16 = cloud;
				_g16.set_x(_g16.get_x() + target.get_x());
				var _g17 = cloud;
				_g17.set_y(_g17.get_y() + (target.get_y() - 40 * co_doubleduck_utils_DDAssets.scale));
				dest.x += target.get_x();
				dest.y += target.get_y() - 40 * co_doubleduck_utils_DDAssets.scale;
				co_doubleduck_utils_TweenChain.get(cloud).wait(i2 * durPart1).tto({ x : dest.x, y : dest.y},overlap * durPart1,motion_easing_Sine.get_easeInOut());
				co_doubleduck_utils_TweenChain.get(cloud).wait(i2 * durPart1).tto({ alpha : 0.7},Math.floor(overlap * durPart1 * 0.3)).wait(Math.floor(overlap * durPart1 * 0.4)).tto({ alpha : 0},Math.floor(overlap * durPart1 * 0.3)).call(($_=this._anim,$bind($_,$_.removeChild)),[cloud]);
			}
			break;
		case "fx-rage":
			var rage = new co_doubleduck_dynamons2_core_RageAnimFx("enrage");
			rage.set_x(target.get_x() - rage.get_width() / 2);
			rage.set_y(target.get_y() - rage.get_height() / 2 - 100 * co_doubleduck_utils_DDAssets.scale);
			this._anim.addChild(rage);
			co_doubleduck_utils_TweenChain.get(rage).wait(duration).call(($_=this._anim,$bind($_,$_.removeChild)),[rage]).call($bind(rage,rage.destroy));
			break;
		case "fire_spin":
			var spin = new co_doubleduck_utils_SimpleAnimSprite("images/session/abilities/fx/fire_spin.png",2,5,[0,1,2,3,4,5,6,7,2,3,4,5,8,9],false);
			spin.setAnimFPS(15);
			spin.set_x(target.get_x() - spin.get_width() / 2);
			spin.set_y(target.get_y() - target.get_height() / 2 - spin.get_height() / 2);
			this._anim.addChild(spin);
			spin.addEventListener(openfl_events_Event.COMPLETE,function(e) {
				_g._anim.removeChild(spin);
			});
			break;
		case "fx-earth-shield":case "fx-ice-shield":
			var shield;
			if(action == "fx-ice-shield") {
				shield = new co_doubleduck_dynamons2_core_ShieldAnim(co_doubleduck_dynamons2_core_Ability.getFxCache(action));
				shield.set_alpha(0.9);
			} else shield = new co_doubleduck_dynamons2_core_ShieldAnim(co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/fx/rock_shield.png"));
			shield.onComplete = function() {
				_g._anim.removeChild(shield);
				shield.destroy();
			};
			shield.play();
			shield.set_x(target.get_x() - shield.get_width() / 2);
			shield.set_y(target.get_y() - shield.get_height() / 2 - 80 * co_doubleduck_utils_DDAssets.scale);
			this._anim.addChild(shield);
			break;
		case "confuse":
			var monType;
			var isBack = false;
			if(target == actorBody) {
				monType = actor.getId();
				isBack = actorBody.get_x() < co_doubleduck_dynamons2_Game.getScreenSize().width / 2;
			} else {
				monType = other.getId();
				isBack = otherBody.get_x() < co_doubleduck_dynamons2_Game.getScreenSize().width / 2;
			}
			var moveA = 30 * co_doubleduck_utils_DDAssets.scale;
			var moveB = 10 * co_doubleduck_utils_DDAssets.scale;
			var orientation;
			if(isBack) orientation = "back"; else orientation = "front";
			target.set_visible(false);
			var leftCopy = co_doubleduck_utils_DDAssets.getImage("images/general/mons/" + monType + "/" + orientation + ".png");
			var rightCopy = co_doubleduck_utils_DDAssets.getImage("images/general/mons/" + monType + "/" + orientation + ".png");
			this._anim.addChild(leftCopy);
			this._anim.addChild(rightCopy);
			rightCopy.set_x(leftCopy.set_x(target.get_x() - leftCopy.get_width() / 2));
			rightCopy.set_y(leftCopy.set_y(target.get_y() - leftCopy.get_height()));
			var centerX = leftCopy.set_x(target.get_x() - leftCopy.get_width() / 2);
			co_doubleduck_utils_TweenChain.get(leftCopy).tto({ x : centerX - moveA, alpha : 0.6},400,motion_easing_Sine.get_easeOut()).tto({ x : centerX - (moveA + moveB)},800).tto({ x : centerX, alpha : 1},200,motion_easing_Sine.get_easeOut()).call(($_=this._anim,$bind($_,$_.removeChild)),[leftCopy]).call(function() {
				target.set_visible(true);
			});
			co_doubleduck_utils_TweenChain.get(rightCopy).tto({ x : centerX + moveA, alpha : 0.6},400,motion_easing_Sine.get_easeOut()).tto({ x : centerX + moveA + moveB},800).tto({ x : centerX, alpha : 1},200,motion_easing_Sine.get_easeOut()).call(($_=this._anim,$bind($_,$_.removeChild)),[rightCopy]);
			break;
		case "enflame":
			var flame = new co_doubleduck_utils_SimpleAnimSprite("images/session/abilities/fx/enflame.png",1,6,[0,1,2,3,4,5],false);
			flame.setAnimFPS(20);
			flame.set_x(target.get_x() - flame.get_width() / 2);
			flame.set_y(target.get_y() - target.get_height() / 2 - flame.get_height() / 2);
			this._anim.addChild(flame);
			co_doubleduck_utils_TweenChain.get(flame).wait(duration).call(($_=this._anim,$bind($_,$_.removeChild)),[flame]).call($bind(flame,flame.stopAnim));
			break;
		case "bubbles":
			var bubbles = new co_doubleduck_dynamons2_core_BubblesAnim();
			this._anim.addChild(bubbles);
			bubbles.set_x(target.get_x());
			bubbles.set_y(target.get_y() - target.get_height() / 2);
			bubbles.start();
			co_doubleduck_utils_TweenChain.get(bubbles).wait(duration).call(($_=this._anim,$bind($_,$_.removeChild)),[bubbles]);
			break;
		case "boulders":case "magma":
			var type1;
			if(action == "boulders") type1 = "boulder_earth"; else type1 = "boulder_fire";
			var anim1 = new co_doubleduck_dynamons2_core_BoulderAnim("images/session/abilities/fx/" + type1 + ".png");
			this._anim.addChild(anim1);
			anim1.set_x(target.get_x());
			anim1.set_y(target.get_y());
			anim1.onEnd = function() {
				_g._anim.removeChild(anim1);
			};
			break;
		case "antidote":case "heal_spray":
			var spray = new co_doubleduck_dynamons2_core_SprayAnim(action,new openfl_geom_Point(target.get_x() + target.get_width() / 2,target.get_y() - target.get_height()));
			this._anim.addChild(spray);
			spray.onEnd = function() {
				_g._anim.removeChild(spray);
			};
			break;
		case "atk_pepper":case "def_berry":case "aim_shroom":
			var targetMon2;
			if(target == actorBody) targetMon2 = actor; else targetMon2 = other;
			var eatAnim = new co_doubleduck_dynamons2_core_EatAnim(target,targetMon2,actor.getId(),"images/items/icons/" + action + ".png");
			break;
		case "can_hellfire":case "can_fire_spin":case "can_rage":case "can_ice_shield":case "can_water_blast":case "can_rainbow":case "can_poison_gas":
			var targetMon3;
			if(target == actorBody) targetMon3 = actor; else targetMon3 = other;
			var canAnim = new co_doubleduck_dynamons2_core_CanAnim(target,targetMon3,actor.getId(),"images/items/icons/" + action + ".png");
			break;
		default:
			if(HxOverrides.substr(action,0,4) == "sfx-") {
				var soundName = "attack_" + HxOverrides.substr(action,4,null);
				co_doubleduck_utils_SoundMgr.playSound(soundName);
			}
		}
	}
	,applyEffect: function(effectName,actor,other,duration,forcePower) {
		if(forcePower == null) forcePower = -1;
		switch(effectName) {
		case "attack":
			var atkPower = Std["int"](this._data.power);
			var atkTarget = other;
			if(actor.getState() == "hypno" && actor.getStateData().hypnoActive == true) atkTarget = actor;
			var kindFactor = co_doubleduck_dynamons2_core_Ability.monKindFactor(this.getKind(),atkTarget.getKind());
			if(forcePower != -1) atkPower = forcePower; else {
				var atkDefRatio = actor.getStat("atk") / atkTarget.getStat("def");
				var levelFactor = (40 - atkTarget.getLevel()) / 40;
				if(levelFactor < 0.2) levelFactor = 0.2; else levelFactor = levelFactor;
				var critFactor = 1;
				var hypnoFactor = 1;
				var rageFactor = 1;
				if(actor.getState() == "rage") rageFactor = co_doubleduck_dynamons2_data_GameplayDB.getBattleData().rageFactor;
				if(this._ignoreStats) if(atkDefRatio < 1) atkDefRatio = 1; else atkDefRatio = atkDefRatio; else {
					if(actor.getState() == "hypno" && actor.getStateData().hypnoActive == true) hypnoFactor = 0.5;
					var battleDat = co_doubleduck_dynamons2_data_GameplayDB.getBattleData();
					if(this._willCrit) critFactor = battleDat.critFactor;
				}
				atkPower = Math.round(atkPower * kindFactor * atkDefRatio * levelFactor * critFactor * hypnoFactor * rageFactor);
				if(atkPower < 1) atkPower = 1; else atkPower = atkPower;
			}
			var hadHP = atkTarget.getCurrHP();
			atkTarget.takeDamage(atkPower,duration);
			null;
			break;
		case "heal":
			var healPerc = Std["int"](this._data.percent) / 100;
			var healPower = Math.round(actor.getTotalHP() * healPerc);
			var hadHP1 = actor.getCurrHP();
			actor.takeHeal(healPower,duration);
			null;
			break;
		case "antidote":
			if(actor.getState() == "sick" || actor.getState() == "hypno") actor.setState("");
			break;
		case "state_rage":case "state_sick":case "state_hypno":
			var chanceParts = this._data.state_chance.split(":");
			var chance = Std.parseInt(chanceParts[0]) / Std.parseInt(chanceParts[1]);
			if(forcePower == -1 && Math.random() <= chance) {
				var stateName = effectName.split("_")[1];
				var stateData = null;
				var battleData = co_doubleduck_dynamons2_data_GameplayDB.getBattleData();
				if(stateName == "sick") {
					var dmg = Std["int"](battleData.sickDamage);
					stateData = dmg;
				}
				if(stateName == "hypno") {
					var hypnoParts = battleData.hypnoBackfireChance.split(":");
					var hypnoChance = Std.parseInt(hypnoParts[0]) / Std.parseInt(hypnoParts[1]);
					stateData = { chance : hypnoChance};
				}
				var stateTarget = other;
				if(stateName == "rage") {
					stateTarget = actor;
					stateData = { turnsLeft : 1};
				}
				if(stateName == "sick" || stateName == "hypno") {
					if(actor.getState() == "hypno" && actor.getStateData().hypnoActive == true) stateTarget = actor;
				}
				stateTarget.setState(stateName);
				stateTarget.setStateData(stateData);
				null;
			} else null;
			break;
		case "incr_atk":case "incr_def":case "incr_aim":case "decr_atk":case "decr_def":case "decr_aim":
			var parts = effectName.split("_");
			var amount = Std["int"](this._data.amount);
			if(parts[0] == "decr") {
				var perc = amount;
				amount = Math.round(other.getStat(parts[1],false) * (amount / 100));
				if(amount < 1) amount = 1; else amount = amount;
				amount *= -1;
				other.offsetStat(parts[1],amount);
			} else {
				var perc1 = amount;
				amount = Math.round(actor.getStat(parts[1],false) * (amount / 100));
				if(amount < 1) amount = 1; else amount = amount;
				actor.offsetStat(parts[1],amount);
			}
			break;
		}
	}
	,__class__: co_doubleduck_dynamons2_core_Ability
};
var co_doubleduck_utils_AnimSprite = function(sheet,smoothing) {
	if(smoothing == null) smoothing = false;
	openfl_display_Sprite.call(this);
	this.smoothing = smoothing;
	this.spritesheet = sheet;
	this.behaviorQueue = [];
	this.bitmap = new openfl_display_Bitmap();
	this.addChild(this.bitmap);
};
$hxClasses["co.doubleduck.utils.AnimSprite"] = co_doubleduck_utils_AnimSprite;
co_doubleduck_utils_AnimSprite.__name__ = ["co","doubleduck","utils","AnimSprite"];
co_doubleduck_utils_AnimSprite.__super__ = openfl_display_Sprite;
co_doubleduck_utils_AnimSprite.prototype = $extend(openfl_display_Sprite.prototype,{
	getFrameData: function(index) {
		if(this.currentBehavior != null && this.currentBehavior.frameData.length > index) return this.currentBehavior.frameData[index]; else return null;
	}
	,queueBehavior: function(behavior) {
		var behaviorData = this.resolveBehavior(behavior);
		if(this.currentBehavior == null) this.updateBehavior(behaviorData); else this.behaviorQueue.push(behaviorData);
	}
	,resolveBehavior: function(behavior) {
		if(js_Boot.__instanceof(behavior,spritesheet_data_BehaviorData)) return behavior; else if(typeof(behavior) == "string") {
			if(this.spritesheet != null) return this.spritesheet.behaviors.get(behavior);
		}
		return null;
	}
	,showBehavior: function(behavior,restart) {
		if(restart == null) restart = true;
		this.behaviorQueue = [];
		this.updateBehavior(this.resolveBehavior(behavior),restart);
	}
	,showBehaviors: function(behaviors) {
		this.behaviorQueue = [];
		var _g = 0;
		while(_g < behaviors.length) {
			var behavior = behaviors[_g];
			++_g;
			this.behaviorQueue.push(this.resolveBehavior(behavior));
		}
		if(this.behaviorQueue.length > 0) this.updateBehavior(this.behaviorQueue.shift());
	}
	,update: function(deltaTime) {
		if(!this.behaviorComplete) {
			this.timeElapsed += deltaTime;
			if(this.timeElapsed >= this.loopTime) {
				if(this.currentBehavior.loop) this.timeElapsed = this.timeElapsed % this.loopTime; else {
					this.timeElapsed = this.loopTime;
					this.behaviorComplete = true;
				}
			}
			var ratio = this.timeElapsed / this.loopTime;
			var frameCount = this.currentBehavior.frames.length;
			var newIndex = Math.floor(ratio * frameCount);
			if(!this.currentBehavior.loop) newIndex = Math.min(frameCount - 1,newIndex);
			this.currentFrameIndex = newIndex;
			var frame = this.spritesheet.getFrame(this.currentBehavior.frames[this.currentFrameIndex]);
			this.bitmap.bitmapData = frame.bitmapData;
			this.bitmap.smoothing = this.smoothing;
			this.bitmap.set_x(frame.offsetX - this.currentBehavior.originX);
			this.bitmap.set_y(frame.offsetY - this.currentBehavior.originY);
			if(this.behaviorComplete) {
				if(this.behaviorQueue.length > 0) this.updateBehavior(this.behaviorQueue.shift()); else if(this.hasEventListener(openfl_events_Event.COMPLETE)) this.dispatchEvent(new openfl_events_Event(openfl_events_Event.COMPLETE));
			}
		}
	}
	,updateBehavior: function(behavior,restart) {
		if(restart == null) restart = true;
		if(behavior != null) {
			if(restart || behavior != this.currentBehavior) {
				this.currentBehavior = behavior;
				this.timeElapsed = 0;
				this.behaviorComplete = false;
				this.loopTime = behavior.frames.length / behavior.frameRate * 1000 | 0;
				if(this.bitmap.bitmapData == null) this.update(0);
			}
		} else {
			this.bitmap.bitmapData = null;
			this.currentBehavior = null;
			this.currentFrameIndex = -1;
			this.behaviorComplete = true;
		}
	}
	,__class__: co_doubleduck_utils_AnimSprite
});
var co_doubleduck_dynamons2_core_BlastAnim = function(sheetBmp) {
	var behDatas = [];
	behDatas.push(new spritesheet_data_BehaviorData("anim",[0,1,2,3],true,15));
	var sheet = spritesheet_importers_BitmapImporter.create(sheetBmp,4,1,Math.floor(sheetBmp.width / 4),Math.floor(sheetBmp.height / 1));
	var _g = 0;
	while(_g < behDatas.length) {
		var beh = behDatas[_g];
		++_g;
		sheet.addBehavior(beh);
	}
	co_doubleduck_utils_AnimSprite.call(this,sheet);
	this.showBehavior("anim");
	this._lastTime = openfl_Lib.getTimer();
	this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
};
$hxClasses["co.doubleduck.dynamons2.core.BlastAnim"] = co_doubleduck_dynamons2_core_BlastAnim;
co_doubleduck_dynamons2_core_BlastAnim.__name__ = ["co","doubleduck","dynamons2","core","BlastAnim"];
co_doubleduck_dynamons2_core_BlastAnim.__super__ = co_doubleduck_utils_AnimSprite;
co_doubleduck_dynamons2_core_BlastAnim.prototype = $extend(co_doubleduck_utils_AnimSprite.prototype,{
	handleTick: function(e) {
		var time = openfl_Lib.getTimer();
		var delta = time - this._lastTime;
		this.update(delta);
		this._lastTime = time;
	}
	,destroy: function() {
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,__class__: co_doubleduck_dynamons2_core_BlastAnim
});
var co_doubleduck_dynamons2_core_RainAnim = function(particle,duration,ltr) {
	this.size = 100;
	openfl_display_Sprite.call(this);
	this.size = Math.floor(this.size * co_doubleduck_utils_DDAssets.scale);
	var amount = 18;
	var _g = 0;
	while(_g < amount) {
		var i = _g++;
		var bmp = new openfl_display_Bitmap(particle);
		bmp.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
		this.addChild(bmp);
		bmp.set_x(Math.random() * this.size);
		bmp.set_y(Math.random() * this.size);
		bmp.set_alpha(0);
		bmp.set_scaleX(bmp.set_scaleY(Math.random() * 0.7 + 0.3));
		var pt = new openfl_geom_Point(bmp.get_x(),bmp.get_y());
		bmp.set_rotation(ltr?130:200);
		var offset = openfl_geom_Point.polar(ltr?300 * co_doubleduck_utils_DDAssets.scale:400 * co_doubleduck_utils_DDAssets.scale,(bmp.get_rotation() - 90) * Math.PI / 180);
		pt.offset(offset.x,offset.y);
		var t = co_doubleduck_utils_TweenChain.get(bmp).wait(i * 40).tto({ alpha : 1},0).tto({ x : pt.x, y : pt.y},duration,motion_easing_Sine.get_easeInOut()).call($bind(this,this.removeChild),[bmp]);
		if(i == amount - 1) t.call($bind(this,this.destroy));
	}
};
$hxClasses["co.doubleduck.dynamons2.core.RainAnim"] = co_doubleduck_dynamons2_core_RainAnim;
co_doubleduck_dynamons2_core_RainAnim.__name__ = ["co","doubleduck","dynamons2","core","RainAnim"];
co_doubleduck_dynamons2_core_RainAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_RainAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	destroy: function() {
		if(this.parent != null) this.parent.removeChild(this);
	}
	,__class__: co_doubleduck_dynamons2_core_RainAnim
});
var co_doubleduck_dynamons2_core_SlashAnim = function(duration,delay) {
	if(delay == null) delay = 0;
	openfl_display_Sprite.call(this);
	var slash = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/fx/slash.png");
	var _g = slash;
	_g.set_x(_g.get_x() - slash.get_width() / 2);
	var _g1 = slash;
	_g1.set_y(_g1.get_y() - slash.get_height() / 2);
	this.addChild(slash);
	slash.set_alpha(0);
	co_doubleduck_utils_TweenChain.get(slash).wait(delay).tto({ alpha : 1},0).tto({ scaleX : 0, x : slash.get_x() - 50 * co_doubleduck_utils_DDAssets.scale},duration,motion_easing_Sine.get_easeInOut()).call($bind(this,this.removeChild),[slash]).call($bind(this,this.destroy));
};
$hxClasses["co.doubleduck.dynamons2.core.SlashAnim"] = co_doubleduck_dynamons2_core_SlashAnim;
co_doubleduck_dynamons2_core_SlashAnim.__name__ = ["co","doubleduck","dynamons2","core","SlashAnim"];
co_doubleduck_dynamons2_core_SlashAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_SlashAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	destroy: function() {
		if(this.parent != null) this.parent.removeChild(this);
	}
	,__class__: co_doubleduck_dynamons2_core_SlashAnim
});
var co_doubleduck_dynamons2_core_CloudAnim = function(sheetBmp,duration) {
	openfl_display_Sprite.call(this);
	var vines = [];
	var cloudStartPos = [];
	cloudStartPos.push({ x : 80 * co_doubleduck_utils_DDAssets.scale, y : 0});
	cloudStartPos.push({ x : -80 * co_doubleduck_utils_DDAssets.scale, y : -30 * co_doubleduck_utils_DDAssets.scale});
	cloudStartPos.push({ x : -80 * co_doubleduck_utils_DDAssets.scale, y : 25 * co_doubleduck_utils_DDAssets.scale});
	var cloudCenterPos = [];
	cloudCenterPos.push({ x : 20 * co_doubleduck_utils_DDAssets.scale, y : 0});
	cloudCenterPos.push({ x : -20 * co_doubleduck_utils_DDAssets.scale, y : -30 * co_doubleduck_utils_DDAssets.scale});
	cloudCenterPos.push({ x : -20 * co_doubleduck_utils_DDAssets.scale, y : 25 * co_doubleduck_utils_DDAssets.scale});
	var cloudTweenPos = [];
	cloudTweenPos.push({ x : 33 * co_doubleduck_utils_DDAssets.scale, y : 0});
	cloudTweenPos.push({ x : -33 * co_doubleduck_utils_DDAssets.scale, y : -30 * co_doubleduck_utils_DDAssets.scale});
	cloudTweenPos.push({ x : -33 * co_doubleduck_utils_DDAssets.scale, y : 25 * co_doubleduck_utils_DDAssets.scale});
	var _g1 = 0;
	var _g = cloudStartPos.length;
	while(_g1 < _g) {
		var cloudIndex = _g1++;
		var cloudBmp = new openfl_display_Bitmap(sheetBmp);
		cloudBmp.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
		var _g2 = cloudBmp;
		_g2.set_x(_g2.get_x() - cloudBmp.get_width() / 2);
		var _g21 = cloudBmp;
		_g21.set_y(_g21.get_y() - cloudBmp.get_height() / 2);
		var cloud = new openfl_display_Sprite();
		cloud.addChild(cloudBmp);
		this.addChild(cloud);
		cloud.set_x(cloudStartPos[cloudIndex].x);
		cloud.set_y(cloudStartPos[cloudIndex].y);
		cloud.set_alpha(0.1);
		var entranceTime = Math.floor(duration / 6);
		co_doubleduck_utils_TweenChain.get(cloud).tto({ alpha : 0.9},entranceTime,motion_easing_Sine.get_easeIn());
		var numNudges = 3;
		var tween = co_doubleduck_utils_TweenChain.get(cloud).tto({ x : cloudCenterPos[cloudIndex].x, y : cloudCenterPos[cloudIndex].y},entranceTime);
		var _g22 = 0;
		while(_g22 < numNudges) {
			var nudge = _g22++;
			tween.tto({ x : cloudTweenPos[cloudIndex].x, y : cloudTweenPos[cloudIndex].y},Math.floor(duration / 7),motion_easing_Sine.get_easeIn());
			if(nudge < numNudges - 1) tween.tto({ x : cloudCenterPos[cloudIndex].x, y : cloudCenterPos[cloudIndex].y},Math.floor(duration / 7),motion_easing_Sine.get_easeOut());
		}
		var leaveTime = duration / 12;
		tween.tto({ alpha : 0, x : cloudStartPos[cloudIndex].x, y : cloudStartPos[cloudIndex].y},Math.floor(leaveTime),motion_easing_Sine.get_easeOut());
	}
};
$hxClasses["co.doubleduck.dynamons2.core.CloudAnim"] = co_doubleduck_dynamons2_core_CloudAnim;
co_doubleduck_dynamons2_core_CloudAnim.__name__ = ["co","doubleduck","dynamons2","core","CloudAnim"];
co_doubleduck_dynamons2_core_CloudAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_CloudAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	__class__: co_doubleduck_dynamons2_core_CloudAnim
});
var co_doubleduck_dynamons2_core_SplashAnim = function(sheetBmp) {
	var behDatas = [];
	behDatas.push(new spritesheet_data_BehaviorData("anim",[0,1,2,2,3],false,15));
	var sheet = spritesheet_importers_BitmapImporter.create(sheetBmp,4,1,Math.floor(sheetBmp.width / 4),Math.floor(sheetBmp.height / 1));
	var _g = 0;
	while(_g < behDatas.length) {
		var beh = behDatas[_g];
		++_g;
		sheet.addBehavior(beh);
	}
	co_doubleduck_utils_AnimSprite.call(this,sheet);
	this.showBehavior("anim");
};
$hxClasses["co.doubleduck.dynamons2.core.SplashAnim"] = co_doubleduck_dynamons2_core_SplashAnim;
co_doubleduck_dynamons2_core_SplashAnim.__name__ = ["co","doubleduck","dynamons2","core","SplashAnim"];
co_doubleduck_dynamons2_core_SplashAnim.__super__ = co_doubleduck_utils_AnimSprite;
co_doubleduck_dynamons2_core_SplashAnim.prototype = $extend(co_doubleduck_utils_AnimSprite.prototype,{
	play: function() {
		this._lastTime = openfl_Lib.getTimer();
		this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,handleTick: function(e) {
		var time = openfl_Lib.getTimer();
		var delta = time - this._lastTime;
		this.update(delta);
		this._lastTime = time;
	}
	,destroy: function() {
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,__class__: co_doubleduck_dynamons2_core_SplashAnim
});
var co_doubleduck_dynamons2_core_ReviveAnim = function(duration) {
	openfl_display_Sprite.call(this);
	var numOrbs = 4;
	var waitTime = Math.floor(duration / 4);
	var animTime = Math.floor(duration / 3);
	var alphaTime = Math.floor(duration / 40);
	var _g = 0;
	while(_g < numOrbs) {
		var orbNum = _g++;
		var orb = new openfl_display_Sprite();
		var orbBmp = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/fx/wave.png");
		this.addChild(orb);
		orb.addChild(orbBmp);
		var _g1 = orbBmp;
		_g1.set_x(_g1.get_x() - orbBmp.get_width() / 2);
		var _g11 = orbBmp;
		_g11.set_y(_g11.get_y() - orbBmp.get_height() / 2);
		orb.set_alpha(0);
		co_doubleduck_utils_TweenChain.get(orb).wait(orbNum * waitTime).tto({ alpha : 1},alphaTime).tto({ scaleX : 0.01, scaleY : 0.01},animTime);
	}
};
$hxClasses["co.doubleduck.dynamons2.core.ReviveAnim"] = co_doubleduck_dynamons2_core_ReviveAnim;
co_doubleduck_dynamons2_core_ReviveAnim.__name__ = ["co","doubleduck","dynamons2","core","ReviveAnim"];
co_doubleduck_dynamons2_core_ReviveAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_ReviveAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	__class__: co_doubleduck_dynamons2_core_ReviveAnim
});
var co_doubleduck_dynamons2_core_StrangleAnim = function(typeName,duration,other) {
	openfl_display_Sprite.call(this);
	var vines = [];
	var vineStartPos = [];
	vineStartPos.push({ x : -100 * co_doubleduck_utils_DDAssets.scale, y : -10 * co_doubleduck_utils_DDAssets.scale});
	vineStartPos.push({ x : -100 * co_doubleduck_utils_DDAssets.scale, y : 10 * co_doubleduck_utils_DDAssets.scale});
	vineStartPos.push({ x : 100 * co_doubleduck_utils_DDAssets.scale, y : -10 * co_doubleduck_utils_DDAssets.scale});
	vineStartPos.push({ x : 100 * co_doubleduck_utils_DDAssets.scale, y : 10 * co_doubleduck_utils_DDAssets.scale});
	var vineCenterPos = [];
	vineCenterPos.push({ x : 10 * co_doubleduck_utils_DDAssets.scale, y : -20 * co_doubleduck_utils_DDAssets.scale});
	vineCenterPos.push({ x : 10 * co_doubleduck_utils_DDAssets.scale, y : 0 * co_doubleduck_utils_DDAssets.scale});
	vineCenterPos.push({ x : -10 * co_doubleduck_utils_DDAssets.scale, y : -10 * co_doubleduck_utils_DDAssets.scale});
	vineCenterPos.push({ x : -10 * co_doubleduck_utils_DDAssets.scale, y : 10 * co_doubleduck_utils_DDAssets.scale});
	var vineTweenPos = [];
	vineTweenPos.push({ x : 33 * co_doubleduck_utils_DDAssets.scale, y : 0 * co_doubleduck_utils_DDAssets.scale});
	vineTweenPos.push({ x : 33 * co_doubleduck_utils_DDAssets.scale, y : 25 * co_doubleduck_utils_DDAssets.scale});
	vineTweenPos.push({ x : -33 * co_doubleduck_utils_DDAssets.scale, y : -30 * co_doubleduck_utils_DDAssets.scale});
	vineTweenPos.push({ x : -33 * co_doubleduck_utils_DDAssets.scale, y : 25 * co_doubleduck_utils_DDAssets.scale});
	var vineAngles = [10,-5,-15,5];
	var vineRegX = [291 * co_doubleduck_utils_DDAssets.scale,291 * co_doubleduck_utils_DDAssets.scale,0,0];
	var vineRegY = [0,0,0,0];
	var squeezeTime = Math.floor(duration / 2);
	var entranceTime = Math.floor(squeezeTime / 5);
	var squeezeDelay = 0;
	var leaveTime = Math.floor(squeezeTime / 5);
	var _g1 = 0;
	var _g = vineStartPos.length;
	while(_g1 < _g) {
		var vineIndex = _g1++;
		var vineBmp = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/fx/" + typeName + "_back.png");
		var _g2 = vineBmp;
		_g2.set_x(_g2.get_x() - vineRegX[vineIndex]);
		var _g21 = vineBmp;
		_g21.set_y(_g21.get_y() - vineRegY[vineIndex]);
		var vine = new openfl_display_Sprite();
		vine.addChild(vineBmp);
		this.addChild(vine);
		vine.set_rotation(vineAngles[vineIndex]);
		vine.set_x(vineStartPos[vineIndex].x);
		vine.set_y(vineStartPos[vineIndex].y);
		vine.set_alpha(0.1);
		co_doubleduck_utils_TweenChain.get(vine).tto({ alpha : 0.9},entranceTime,motion_easing_Sine.get_easeIn());
		var numNudges = 0;
		var tween = co_doubleduck_utils_TweenChain.get(vine).tto({ x : vineCenterPos[vineIndex].x, y : vineCenterPos[vineIndex].y},entranceTime).wait(squeezeDelay).wait(squeezeTime).tto({ alpha : 0, x : vineStartPos[vineIndex].x, y : vineStartPos[vineIndex].y},Math.floor(leaveTime),motion_easing_Sine.get_easeIn());
		var leaveTime1 = duration / 12;
	}
	var top = new openfl_display_Sprite();
	var topBmp = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/fx/" + typeName + "_top.png");
	var _g3 = topBmp;
	_g3.set_x(_g3.get_x() - topBmp.get_width() / 2);
	var _g4 = topBmp;
	_g4.set_y(_g4.get_y() - topBmp.get_height() / 2);
	top.addChild(topBmp);
	this.addChild(top);
	top.set_alpha(0);
	co_doubleduck_utils_TweenChain.get(top).wait(Math.floor(entranceTime * 0.9)).tto({ alpha : 1},0).wait(squeezeDelay).call(co_doubleduck_utils_TweenAnimator.shake,[top,2 * co_doubleduck_utils_DDAssets.scale,Math.floor(squeezeTime / 60),10]).tto({ scaleX : 0.7, scaleY : 1.05},squeezeTime,motion_easing_Sine.get_easeOut()).tto({ alpha : 0},Math.floor(leaveTime / 2.5),motion_easing_Sine.get_easeIn());
	co_doubleduck_utils_TweenChain.get(other).wait(entranceTime + squeezeDelay).tto({ scaleX : 0.9, scaleY : 1.05},squeezeTime,motion_easing_Sine.get_easeOut()).tto({ scaleX : 1, scaleY : 1},Math.floor(leaveTime / 1.5),motion_easing_Quad.get_easeOut());
};
$hxClasses["co.doubleduck.dynamons2.core.StrangleAnim"] = co_doubleduck_dynamons2_core_StrangleAnim;
co_doubleduck_dynamons2_core_StrangleAnim.__name__ = ["co","doubleduck","dynamons2","core","StrangleAnim"];
co_doubleduck_dynamons2_core_StrangleAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_StrangleAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	__class__: co_doubleduck_dynamons2_core_StrangleAnim
});
var co_doubleduck_dynamons2_core_SonicAnim = function(duration,destination) {
	openfl_display_Sprite.call(this);
	var numOrbs = 10;
	var waitTime = Math.floor(duration / (numOrbs * 2));
	var animTime = waitTime * 4;
	var alphaTime = waitTime;
	var _g = 0;
	while(_g < numOrbs) {
		var orbNum = _g++;
		var orb = new openfl_display_Sprite();
		var orbBmp = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/fx/wave.png");
		this.addChild(orb);
		orb.addChild(orbBmp);
		var _g1 = orbBmp;
		_g1.set_x(_g1.get_x() - orbBmp.get_width() / 2);
		var _g11 = orbBmp;
		_g11.set_y(_g11.get_y() - orbBmp.get_height() / 2);
		orb.set_alpha(0);
		orb.set_scaleX(orb.set_scaleY(0.1));
		co_doubleduck_utils_TweenChain.get(orb).wait(orbNum * waitTime).tto({ alpha : 1},alphaTime).tto({ scaleX : 1, scaleY : 1, x : destination.x, y : destination.y, alpha : 0.4},animTime).tto({ alpha : 0},alphaTime);
	}
};
$hxClasses["co.doubleduck.dynamons2.core.SonicAnim"] = co_doubleduck_dynamons2_core_SonicAnim;
co_doubleduck_dynamons2_core_SonicAnim.__name__ = ["co","doubleduck","dynamons2","core","SonicAnim"];
co_doubleduck_dynamons2_core_SonicAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_SonicAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	__class__: co_doubleduck_dynamons2_core_SonicAnim
});
var co_doubleduck_dynamons2_core_ShieldAnim = function(sheetBmp) {
	var behDatas = [];
	behDatas.push(new spritesheet_data_BehaviorData("anim",[0,0,1,2,3,4,5,5,5,5,5,5,5,5,5,6,7,8,9,5,5,5,5,5,5,5,5,5,5,5,5,5,4,3,2,1,0],false,20));
	var sheet = spritesheet_importers_BitmapImporter.create(sheetBmp,5,2,Math.floor(sheetBmp.width / 5),Math.floor(sheetBmp.height / 2));
	var _g = 0;
	while(_g < behDatas.length) {
		var beh = behDatas[_g];
		++_g;
		sheet.addBehavior(beh);
	}
	co_doubleduck_utils_AnimSprite.call(this,sheet);
	this.showBehavior("anim");
	this.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleComplete));
};
$hxClasses["co.doubleduck.dynamons2.core.ShieldAnim"] = co_doubleduck_dynamons2_core_ShieldAnim;
co_doubleduck_dynamons2_core_ShieldAnim.__name__ = ["co","doubleduck","dynamons2","core","ShieldAnim"];
co_doubleduck_dynamons2_core_ShieldAnim.__super__ = co_doubleduck_utils_AnimSprite;
co_doubleduck_dynamons2_core_ShieldAnim.prototype = $extend(co_doubleduck_utils_AnimSprite.prototype,{
	handleComplete: function(e) {
		this.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleComplete));
		this.set_visible(false);
		if(this.onComplete != null) this.onComplete();
	}
	,play: function() {
		this._lastTime = openfl_Lib.getTimer();
		this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,handleTick: function(e) {
		var time = openfl_Lib.getTimer();
		var delta = time - this._lastTime;
		this.update(delta);
		this._lastTime = time;
	}
	,destroy: function() {
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,__class__: co_doubleduck_dynamons2_core_ShieldAnim
});
var co_doubleduck_dynamons2_core_BubblesAnim = function() {
	openfl_display_Sprite.call(this);
	this._pos = [];
	this._pos.push([-27,40]);
	this._pos.push([28,48]);
	this._pos.push([0,30]);
	this._pos.push([-27,40]);
	this._pos.push([28,48]);
	this._pos.push([0,50]);
};
$hxClasses["co.doubleduck.dynamons2.core.BubblesAnim"] = co_doubleduck_dynamons2_core_BubblesAnim;
co_doubleduck_dynamons2_core_BubblesAnim.__name__ = ["co","doubleduck","dynamons2","core","BubblesAnim"];
co_doubleduck_dynamons2_core_BubblesAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_BubblesAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	start: function() {
		var ind = 1;
		while(this._pos.length > 0) {
			var randPos = this._pos.splice(Std.random(this._pos.length),1)[0];
			co_doubleduck_utils_Utils.delayedCall(0.1 * ind,$bind(this,this.fireBubble),[randPos]);
			ind++;
		}
	}
	,fireBubble: function(pos) {
		var newBubble = new co_doubleduck_utils_SimpleAnimSprite("images/session/abilities/fx/bubble.png",1,4,[0,0,1,2,3,3]);
		newBubble.setAnimFPS(20);
		newBubble.stopAnim();
		newBubble.set_x(pos[0] * co_doubleduck_utils_DDAssets.scale - newBubble.get_width() / 2);
		newBubble.set_y(pos[1] * co_doubleduck_utils_DDAssets.scale - newBubble.get_height() / 2);
		this.addChild(newBubble);
		newBubble.set_alpha(0.2);
		co_doubleduck_utils_TweenChain.get(newBubble).tto({ y : newBubble.get_y() - 45 * co_doubleduck_utils_DDAssets.scale},500).call($bind(newBubble,newBubble.replayAnim)).wait(200);
		co_doubleduck_utils_TweenChain.get(newBubble).tto({ alpha : 1},200);
		newBubble.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleAnimComplete));
	}
	,handleAnimComplete: function(e) {
		var bubble = e.target;
		bubble.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleAnimComplete));
		co_doubleduck_utils_TweenChain.get(bubble).tto({ alpha : 0},200).call($bind(this,this.removeChild),[bubble]);
	}
	,__class__: co_doubleduck_dynamons2_core_BubblesAnim
});
var co_doubleduck_dynamons2_core_BoulderAnim = function(rockAnim) {
	openfl_display_Sprite.call(this);
	var left = new co_doubleduck_utils_SimpleAnimSprite(rockAnim,1,5,[0,1,2,3,4]);
	left.set_x(-30 * co_doubleduck_utils_DDAssets.scale - left.get_width() / 2);
	var right = new co_doubleduck_utils_SimpleAnimSprite(rockAnim,1,5,[0,1,2,3,4]);
	right.set_x(30 * co_doubleduck_utils_DDAssets.scale - right.get_width() / 2);
	var top = new co_doubleduck_utils_SimpleAnimSprite(rockAnim,1,5,[0,1,2,3,4]);
	top.set_x(-top.get_width() / 2);
	this.addChild(right);
	this.addChild(top);
	this.addChild(left);
	this._rockAnims = [];
	this._rockAnims.push(right);
	this._rockAnims.push(top);
	this._rockAnims.push(left);
	var _g = 0;
	var _g1 = this._rockAnims;
	while(_g < _g1.length) {
		var anim = _g1[_g];
		++_g;
		anim.set_y(-500 * co_doubleduck_utils_DDAssets.scale);
		anim.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleAnimComplete));
		anim.setAnimFPS(20);
		anim.stopAnim();
	}
	co_doubleduck_utils_TweenChain.get(right).tto({ y : -100 * co_doubleduck_utils_DDAssets.scale},300,motion_easing_Sine.get_easeOut()).wait(500).call(co_doubleduck_utils_TweenAnimator.shake,[right,10 * co_doubleduck_utils_DDAssets.scale,30,5]).wait(600).call($bind(right,right.replayAnim));
	co_doubleduck_utils_TweenChain.get(left).wait(100).tto({ y : -100 * co_doubleduck_utils_DDAssets.scale},300,motion_easing_Sine.get_easeOut()).wait(400).call(co_doubleduck_utils_TweenAnimator.shake,[left,10 * co_doubleduck_utils_DDAssets.scale,30,6]).wait(600).call($bind(left,left.replayAnim));
	co_doubleduck_utils_TweenChain.get(top).wait(200).tto({ y : -150 * co_doubleduck_utils_DDAssets.scale},300,motion_easing_Sine.get_easeOut()).wait(300).call(co_doubleduck_utils_TweenAnimator.shake,[top,10 * co_doubleduck_utils_DDAssets.scale,30,5]).wait(600).call($bind(top,top.replayAnim)).wait(500).call($bind(this,this.handleEnd));
};
$hxClasses["co.doubleduck.dynamons2.core.BoulderAnim"] = co_doubleduck_dynamons2_core_BoulderAnim;
co_doubleduck_dynamons2_core_BoulderAnim.__name__ = ["co","doubleduck","dynamons2","core","BoulderAnim"];
co_doubleduck_dynamons2_core_BoulderAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_BoulderAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	handleEnd: function(args) {
		if(this.onEnd != null) this.onEnd();
	}
	,handleAnimComplete: function(e) {
		var anim = e.target;
		anim.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleAnimComplete));
		co_doubleduck_utils_TweenChain.get(anim).tto({ alpha : 0},200).call($bind(this,this.removeChild),[anim]);
	}
	,__class__: co_doubleduck_dynamons2_core_BoulderAnim
});
var co_doubleduck_dynamons2_core_SprayAnim = function(type,destination) {
	openfl_display_Sprite.call(this);
	this._item = co_doubleduck_utils_DDAssets.getImage("images/items/icons/" + type + ".png");
	if(type == "antidote") {
		var _g = this._item;
		_g.set_x(_g.get_x() - 20 * co_doubleduck_utils_DDAssets.scale);
		var _g1 = this._item;
		_g1.set_y(_g1.get_y() - 5 * co_doubleduck_utils_DDAssets.scale);
	} else if(type == "heal_spray") {
		var _g2 = this._item;
		_g2.set_x(_g2.get_x() - 10 * co_doubleduck_utils_DDAssets.scale);
		var _g3 = this._item;
		_g3.set_y(_g3.get_y() - 4 * co_doubleduck_utils_DDAssets.scale);
	}
	this._splash = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/fx/spray.png");
	var _g4 = this._splash;
	_g4.set_x(_g4.get_x() - this._splash.get_width() * .88);
	var _g5 = this._splash;
	_g5.set_y(_g5.get_y() - this._splash.get_height() * .94);
	this._splash.set_rotation(17);
	this.addChild(this._item);
	this.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width + 50 * co_doubleduck_utils_DDAssets.scale);
	this.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 + 50 * co_doubleduck_utils_DDAssets.scale);
	co_doubleduck_utils_TweenChain.get(this).tto({ x : destination.x},400).wait(500).call($bind(this,this.spray)).wait(1100).tto({ x : co_doubleduck_dynamons2_Game.getScreenSize().width + 50 * co_doubleduck_utils_DDAssets.scale, y : co_doubleduck_dynamons2_Game.getScreenSize().height / 2 + 20 * co_doubleduck_utils_DDAssets.scale, rotation : -10},300,motion_easing_Sine.get_easeOut()).call($bind(this,this.end));
	co_doubleduck_utils_TweenChain.get(this).tto({ y : destination.y},400,motion_easing_Sine.get_easeOut());
	co_doubleduck_utils_TweenChain.get(this).wait(50).tto({ rotation : -45},350);
};
$hxClasses["co.doubleduck.dynamons2.core.SprayAnim"] = co_doubleduck_dynamons2_core_SprayAnim;
co_doubleduck_dynamons2_core_SprayAnim.__name__ = ["co","doubleduck","dynamons2","core","SprayAnim"];
co_doubleduck_dynamons2_core_SprayAnim.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_SprayAnim.prototype = $extend(openfl_display_Sprite.prototype,{
	end: function() {
		if(this.onEnd != null) this.onEnd();
	}
	,spray: function() {
		this.addChild(this._splash);
		this._splash.set_alpha(0);
		co_doubleduck_utils_TweenChain.get(this._splash).tto({ alpha : 1},80).wait(100).call($bind(this,this.setAlpha),[0]).wait(100).tto({ alpha : 1},300).wait(150).call($bind(this,this.removeChild),[this._splash]);
	}
	,setAlpha: function(amount) {
		this._splash.set_alpha(amount);
	}
	,__class__: co_doubleduck_dynamons2_core_SprayAnim
});
var co_doubleduck_dynamons2_core_EatAnim = function(target,targetMon,monType,itemIcon) {
	this._target = target;
	this._item = co_doubleduck_utils_DDAssets.getImage(itemIcon);
	this._bodyOnly = targetMon.getVisBodyImg();
	this._shadow = targetMon.getVisBodyShadow();
	this._target.addChildAt(this._item,0);
	this._item.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - this._target.get_x());
	this._item.set_y(-this._target.get_height() * .4 - this._item.get_height() / 2);
	this.targetCenterX = -this._item.get_width() / 2;
	this.targetCenterY = -this._target.get_height() * .4 - this._item.get_height() / 2;
	var mon = co_doubleduck_utils_DDAssets.getRawImage("images/general/mons/" + monType + "/back.png");
	var whiteBmd = co_doubleduck_utils_BmpMagic.silhouette(mon,16777215);
	this._whiteTarget = new openfl_display_Bitmap(whiteBmd);
	var _g = this._whiteTarget;
	_g.set_x(_g.get_x() - this._whiteTarget.get_width() / 2);
	var _g1 = this._whiteTarget;
	_g1.set_y(_g1.get_y() - this._whiteTarget.get_height());
	this._whiteTarget.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
	this.enter();
};
$hxClasses["co.doubleduck.dynamons2.core.EatAnim"] = co_doubleduck_dynamons2_core_EatAnim;
co_doubleduck_dynamons2_core_EatAnim.__name__ = ["co","doubleduck","dynamons2","core","EatAnim"];
co_doubleduck_dynamons2_core_EatAnim.prototype = {
	enter: function() {
		co_doubleduck_utils_TweenChain.get(this._item).tto({ x : co_doubleduck_dynamons2_Game.getScreenSize().width - (30 * co_doubleduck_utils_DDAssets.scale + this._target.get_x() + this._item.get_width())},300,motion_easing_Sine.get_easeOut()).wait(700).call($bind(this,this.bounceUp));
	}
	,bounceUp: function() {
		var time = 250;
		co_doubleduck_utils_TweenChain.get(this._item).tto({ x : this.targetCenterX + 100 * co_doubleduck_utils_DDAssets.scale},time);
		co_doubleduck_utils_TweenChain.get(this._item).tto({ y : this.targetCenterY - 130 * co_doubleduck_utils_DDAssets.scale},time,motion_easing_Sine.get_easeOut()).call($bind(this,this.bounceDown));
	}
	,bounceDown: function() {
		var time = 200;
		co_doubleduck_utils_TweenChain.get(this._item).tto({ x : this.targetCenterX},time);
		co_doubleduck_utils_TweenChain.get(this._item).tto({ y : this.targetCenterY, alpha : 0},time,motion_easing_Sine.get_easeIn());
		this.dynamonHop();
	}
	,endBounce: function() {
		this._target.removeChild(this._item);
		this._target.addChildAt(this._whiteTarget,this._target.getChildIndex(this._bodyOnly) + 1);
		this._whiteTarget.set_alpha(0);
		co_doubleduck_utils_TweenChain.get(this._whiteTarget).tto({ alpha : 1},100).tto({ alpha : 0},200).call($bind(this,this.end));
	}
	,dynamonHop: function() {
		var targY = this._bodyOnly.get_y();
		co_doubleduck_utils_TweenChain.get(this._bodyOnly).wait(50).tto({ y : targY - 20 * co_doubleduck_utils_DDAssets.scale},150,motion_easing_Sine.get_easeOut()).call($bind(this,this.endBounce)).tto({ y : targY},100,motion_easing_Sine.get_easeOut());
		co_doubleduck_utils_TweenChain.get(this._shadow).wait(50).tto({ alpha : 0.5},150,motion_easing_Sine.get_easeOut()).tto({ alpha : 1},100,motion_easing_Sine.get_easeOut());
	}
	,end: function() {
		this.destroy();
	}
	,destroy: function() {
		this._target.removeChild(this._whiteTarget);
		this._whiteTarget.bitmapData.dispose();
		this._whiteTarget.bitmapData = null;
		this._whiteTarget = null;
	}
	,__class__: co_doubleduck_dynamons2_core_EatAnim
};
var co_doubleduck_dynamons2_core_CanAnim = function(target,targetMon,monType,itemIcon) {
	this._whiteBall = new openfl_display_Sprite();
	this._whiteBall.get_graphics().beginFill(16777215);
	this._whiteBall.get_graphics().drawCircle(0,0,15 * co_doubleduck_utils_DDAssets.scale);
	this._whiteBall.get_graphics().endFill();
	this._target = target;
	this._item = co_doubleduck_utils_DDAssets.getImage(itemIcon);
	this._bodyOnly = targetMon.getVisBodyImg();
	this._shadow = targetMon.getVisBodyShadow();
	this._target.addChild(this._item);
	this._item.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - this._target.get_x());
	this._item.set_y(-this._target.get_height() * .4 - this._item.get_height() / 2);
	this.targetCenterX = 0;
	this.targetCenterY = -this._target.get_height() * .4;
	var mon = co_doubleduck_utils_DDAssets.getRawImage("images/general/mons/" + monType + "/back.png");
	var whiteBmd = co_doubleduck_utils_BmpMagic.silhouette(mon,16777215);
	this._whiteTarget = new openfl_display_Bitmap(whiteBmd);
	var _g = this._whiteTarget;
	_g.set_x(_g.get_x() - this._whiteTarget.get_width() / 2);
	var _g1 = this._whiteTarget;
	_g1.set_y(_g1.get_y() - this._whiteTarget.get_height());
	this._whiteTarget.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
	this._canAnim = new co_doubleduck_utils_SimpleAnimSprite("images/session/abilities/fx/can_open.png",1,4,[0,0,0,1,2,3]);
	this._canAnim.setAnimFPS(15);
	this._canAnim.stopAnim();
	this.enter();
};
$hxClasses["co.doubleduck.dynamons2.core.CanAnim"] = co_doubleduck_dynamons2_core_CanAnim;
co_doubleduck_dynamons2_core_CanAnim.__name__ = ["co","doubleduck","dynamons2","core","CanAnim"];
co_doubleduck_dynamons2_core_CanAnim.prototype = {
	enter: function() {
		co_doubleduck_utils_TweenChain.get(this._item).tto({ x : co_doubleduck_dynamons2_Game.getScreenSize().width - (30 * co_doubleduck_utils_DDAssets.scale + this._target.get_x() + this._item.get_width())},300,motion_easing_Sine.get_easeOut()).wait(500).call($bind(this,this.openCan));
	}
	,openCan: function() {
		this._canAnim.set_alpha(0);
		this._target.addChild(this._canAnim);
		this._canAnim.set_x(this._item.get_x() + this._item.get_width() / 2 - this._canAnim.get_width() / 2);
		this._canAnim.set_y(this._item.get_y() + this._item.get_height() / 2 - this._canAnim.get_height() / 2);
		this._canAnim.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleAnimEnd));
		co_doubleduck_utils_TweenChain.get(this._canAnim).tto({ alpha : 1},400).call(($_=this._target,$bind($_,$_.removeChild)),[this._item]).call(($_=this._canAnim,$bind($_,$_.replayAnim)));
		this._target.addChild(this._whiteBall);
		this._whiteBall.set_alpha(0);
		this._whiteBall.set_scaleX(this._whiteBall.set_scaleY(0.1));
		co_doubleduck_utils_TweenChain.get(this._whiteBall).wait(600).tto({ scaleX : 1, scaleY : 1, alpha : 1},200);
		this._whiteBall.set_x(this._item.get_x() + this._item.get_width() / 2 - 15 * co_doubleduck_utils_DDAssets.scale);
		this._whiteBall.set_y(this._item.get_y() + this._item.get_height() / 2 - 6 * co_doubleduck_utils_DDAssets.scale);
	}
	,handleAnimEnd: function(e) {
		this._canAnim.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleAnimEnd));
		co_doubleduck_utils_Utils.delayedCall(0.3,$bind(this,this.gotoDynamon));
	}
	,gotoDynamon: function() {
		co_doubleduck_utils_TweenChain.get(this._canAnim).tto({ x : co_doubleduck_dynamons2_Game.getScreenSize().width},200,motion_easing_Sine.get_easeOut()).call(($_=this._target,$bind($_,$_.removeChild)),[this._canAnim]);
		var time = 300;
		co_doubleduck_utils_TweenChain.get(this._whiteBall).tto({ x : this.targetCenterX, y : this.targetCenterY},time,motion_easing_Sine.get_easeInOut());
		var dx = this.targetCenterX - this._whiteBall.get_x();
		var dy = this.targetCenterY - this._whiteBall.get_y();
		this._whiteBall.set_rotation(-10);
		co_doubleduck_utils_TweenChain.get(this._whiteBall).tto({ scaleX : 1.5, scaleY : 0.8},100);
		co_doubleduck_utils_Utils.delayedCall(time * .7 / 1000,$bind(this,this.dynamonReached));
	}
	,dynamonReached: function() {
		this._target.removeChild(this._whiteBall);
		this._target.addChildAt(this._whiteTarget,this._target.getChildIndex(this._bodyOnly) + 1);
		this._whiteTarget.set_alpha(0);
		co_doubleduck_utils_TweenChain.get(this._whiteTarget).tto({ alpha : 1},300).wait(200).tto({ alpha : 0},200).call($bind(this,this.end));
	}
	,end: function() {
		this.destroy();
	}
	,destroy: function() {
		this._target.removeChild(this._whiteTarget);
		this._whiteTarget.bitmapData.dispose();
		this._whiteTarget.bitmapData = null;
		this._whiteTarget = null;
	}
	,__class__: co_doubleduck_dynamons2_core_CanAnim
};
var co_doubleduck_dynamons2_core_RageAnimFx = function(anim) {
	var behDatas = [];
	behDatas.push(new spritesheet_data_BehaviorData("enrage",[0,1,2,3,4,5,6,7],false,15));
	behDatas.push(new spritesheet_data_BehaviorData("active",[5,6,7],true,12));
	co_doubleduck_utils_AnimSprite.call(this,co_doubleduck_utils_DDAssets.getSpritesheet("images/session/abilities/fx/rage_fx_front.png",4,2,-1,-1,behDatas));
	this.showBehavior(anim);
	this._lastTime = openfl_Lib.getTimer();
	this.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
	this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	this.update(0);
};
$hxClasses["co.doubleduck.dynamons2.core.RageAnimFx"] = co_doubleduck_dynamons2_core_RageAnimFx;
co_doubleduck_dynamons2_core_RageAnimFx.__name__ = ["co","doubleduck","dynamons2","core","RageAnimFx"];
co_doubleduck_dynamons2_core_RageAnimFx.__super__ = co_doubleduck_utils_AnimSprite;
co_doubleduck_dynamons2_core_RageAnimFx.prototype = $extend(co_doubleduck_utils_AnimSprite.prototype,{
	handleTick: function(e) {
		var time = openfl_Lib.getTimer();
		var delta = time - this._lastTime;
		this.update(delta);
		this._lastTime = time;
	}
	,handleDone: function(e) {
		if(this.hasEventListener(openfl_events_Event.ENTER_FRAME)) {
			this.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
			this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
		}
	}
	,destroy: function() {
		this.handleDone(null);
	}
	,__class__: co_doubleduck_dynamons2_core_RageAnimFx
});
var co_doubleduck_dynamons2_core_Battle = function(data) {
	this._hasEscaped = false;
	openfl_display_Sprite.call(this);
	this._node = data.node;
	var node = data.node;
	this._specialBattle = data.specialBattle;
	if(co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_TALK) this._specialBattle = "firstBattle";
	if(this._specialBattle != null && this._specialBattle != "") null;
	co_doubleduck_dynamons2_core_Battle.lastNodeId = node.getId();
	this._playerTurn = false;
	this._deadMon = null;
	this._monsFought = [];
	this._caughtMon = null;
	var _this = co_doubleduck_dynamons2_meta_GameState.getParty();
	this._xpMonsList = _this.slice();
	this._xpAmountList = [];
	var _g1 = 0;
	var _g = this._xpMonsList.length;
	while(_g1 < _g) {
		var i = _g1++;
		this._xpAmountList.push(0);
	}
	this._turnCount = 0;
	var noCatch = false;
	var bgName = "";
	if(this._specialBattle == "vanity") {
		this._nodeData = co_doubleduck_dynamons2_data_GameplayDB.getTutorialData().vanityData;
		this._packData = { };
		this._rigData = this._nodeData.turns;
		this._rigData = this._rigData.slice();
	} else if(this._specialBattle == "firstBattle") {
		this._nodeData = co_doubleduck_dynamons2_data_GameplayDB.getTutorialData().firstBattleData;
		this._packData = { };
		this._rigData = this._nodeData.turns;
		this._rigData = this._rigData.slice();
	} else {
		this._nodeData = co_doubleduck_dynamons2_data_GameplayDB.getMapNode(node.getId());
		this._packData = co_doubleduck_dynamons2_data_GameplayDB.getMapPack(this._nodeData.pack);
	}
	bgName = this._nodeData.bg;
	this._back = co_doubleduck_utils_DDAssets.getImage("images/session/bgs/" + bgName + ".jpg");
	this._back.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - this._back.get_height() / 2);
	this._turnRing = new openfl_display_Sprite();
	var ring = co_doubleduck_utils_DDAssets.getImage("images/session/ui/turn.png");
	var _g2 = ring;
	_g2.set_x(_g2.get_x() - ring.get_width() / 2);
	var _g3 = ring;
	_g3.set_y(_g3.get_y() - ring.get_height() * 0.6);
	this._turnRing.addChild(ring);
	this._turnRing.set_alpha(0);
	this._enemyAI = new co_doubleduck_dynamons2_core_EnemyAI();
	this._enemyAI.addEventListener("ActedEvent",$bind(this,this.handleEnemyAbility));
	if(this._specialBattle == "vanity") {
		var selfMonData = this._nodeData.self;
		if(co_doubleduck_dynamons2_meta_GameState.getPartyMain() == null) co_doubleduck_dynamons2_meta_GameState.addPlayerMon(new co_doubleduck_dynamons2_core_Mon(selfMonData.id,selfMonData.level));
		this.setupSelfMon(co_doubleduck_dynamons2_meta_GameState.getPartyMain());
		noCatch = true;
	} else {
		var totalHP = co_doubleduck_dynamons2_meta_GameState.getPartyHP();
		if(totalHP <= 0) co_doubleduck_dynamons2_meta_GameState.getParty()[0].setCurrHP(1,0);
		if(co_doubleduck_dynamons2_meta_GameState.getPartyMain().getCurrHP() == 0) co_doubleduck_dynamons2_meta_GameState.setPartyMain(co_doubleduck_dynamons2_meta_GameState.getParty()[1]);
		if(co_doubleduck_dynamons2_meta_GameState.getPartyMain().getCurrHP() == 0) co_doubleduck_dynamons2_meta_GameState.setPartyMain(co_doubleduck_dynamons2_meta_GameState.getParty()[2]);
		this.setupSelfMon(co_doubleduck_dynamons2_meta_GameState.getPartyMain());
	}
	var enemMons = node.getEnemMons();
	this._captainMons = null;
	if(this._specialBattle == "firstBattle") this.setupEnemyMon(new co_doubleduck_dynamons2_core_Mon(this._nodeData.enemy.id,Std["int"](this._nodeData.enemy.level))); else if(node.getType() == "wild") this.setupEnemyMon(new co_doubleduck_dynamons2_core_Mon(enemMons[0].id,Std["int"](enemMons[0].level))); else if(node.getType() == "captain" || node.getType() == "boss" || node.getType() == "arena") {
		noCatch = true;
		this._captainMons = [];
		if(node.getType() == "arena") {
			var _g4 = 0;
			while(_g4 < enemMons.length) {
				var enemMon = enemMons[_g4];
				++_g4;
				this._captainMons.push(enemMon);
			}
		} else {
			var _g5 = 0;
			while(_g5 < enemMons.length) {
				var monData = enemMons[_g5];
				++_g5;
				this._captainMons.push(new co_doubleduck_dynamons2_core_Mon(monData.id,Std["int"](monData.level)));
			}
		}
		this.setupEnemyMon(this._captainMons[0]);
		this._captainHud = new co_doubleduck_dynamons2_meta_CaptainHud(node.getEnemy(),enemMons.length);
		this._captainHud.set_x(5 * co_doubleduck_utils_DDAssets.scale);
		this._captainHud.set_y(5 * co_doubleduck_utils_DDAssets.scale);
	}
	this._lootData = node.getRewards();
	this._uiButtons = new co_doubleduck_dynamons2_core_UiHud(noCatch);
	this._uiButtons.addEventListener("ActedEvent",$bind(this,this.handleUi));
	this._uiButtons.addEventListener("CatchEvent",$bind(this,this.handleUi));
	this._uiButtons.addEventListener("EscapeEvent",$bind(this,this.handleUi));
	this._uiButtons.addEventListener("SwapEvent",$bind(this,this.handleUi));
	this._uiButtons.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height);
	if(this._specialBattle == "vanity" || this._specialBattle == "firstBattle") this._uiButtons.toggleMoreVis(false);
	if(this._rigData != null && this._rigData.length > 0) this._uiButtons.rigNextAbil(this._rigData[0].abil);
	this._turnRing.set_x(this._selfMonBody.get_x());
	this._turnRing.set_y(this._selfMonBody.get_y());
	this._battleBox = new openfl_display_Sprite();
	this._battleBox.addChild(this._back);
	this._battleBox.addChild(this._turnRing);
	this._battleBox.addChild(this._enemyMonBody);
	this._battleBox.addChild(this._selfMonBody);
	this.addChild(this._battleBox);
	this._abilAnimBox = new openfl_display_Sprite();
	this.addChild(this._abilAnimBox);
	this.addChild(this._enemyHud);
	this.addChild(this._selfHud);
	this.addChild(this._uiButtons);
	if(this._captainHud != null) this.addChild(this._captainHud);
	this._topHud = new co_doubleduck_dynamons2_meta_TopHud();
	this.addChild(this._topHud);
	this.cacheAllFx(true);
	var dialogToShow = null;
	if(this._nodeData.bossBattle != null && this._nodeData.bossBattle.dialog_start != null && !co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog(this._nodeData.bossBattle.dialog_start)) dialogToShow = this._nodeData.bossBattle.dialog_start; else if(this._nodeData.arenaDialogs != null && this._nodeData.arenaDialogs.dialog_start != null && !co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog(this._nodeData.arenaDialogs.dialog_start)) dialogToShow = this._nodeData.arenaDialogs.dialog_start;
	var _g6 = this._enemyMonBody;
	_g6.set_x(_g6.get_x() + co_doubleduck_dynamons2_Game.getScreenSize().width);
	var _g7 = this._enemyHud;
	_g7.set_x(_g7.get_x() - co_doubleduck_dynamons2_Game.getScreenSize().width);
	var _g8 = this._selfHud;
	_g8.set_x(_g8.get_x() + co_doubleduck_dynamons2_Game.getScreenSize().width);
	var _g9 = this._selfMonBody;
	_g9.set_x(_g9.get_x() - co_doubleduck_dynamons2_Game.getScreenSize().width);
	var _g10 = this._uiButtons;
	_g10.set_y(_g10.get_y() + 100 * co_doubleduck_utils_DDAssets.scale);
	var startTween = co_doubleduck_utils_TweenChain.get(this).wait(50);
	if(dialogToShow != null) startTween.wait(500).call($bind(this,this.showStartDialog),[dialogToShow]); else startTween.call($bind(this,this.animInto));
	co_doubleduck_utils_AdManager.fetchAd();
	co_doubleduck_dynamons2_core_Battle._inBattleNow = true;
	var over = new openfl_display_Sprite();
	over.get_graphics().beginFill(0);
	over.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
	over.get_graphics().endFill();
	over.set_alpha(1);
	this.addChild(over);
	co_doubleduck_utils_TweenChain.get(over).tto({ alpha : 0},150).call($bind(this,this.removeChild),[over]);
	this._isWon = false;
	this.addEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleStage));
	var eventData = this.getNodeEventParams();
	co_doubleduck_dynamons2_Game.reportEvent("node_started",eventData);
};
$hxClasses["co.doubleduck.dynamons2.core.Battle"] = co_doubleduck_dynamons2_core_Battle;
co_doubleduck_dynamons2_core_Battle.__name__ = ["co","doubleduck","dynamons2","core","Battle"];
co_doubleduck_dynamons2_core_Battle.inBattleNow = function() {
	return co_doubleduck_dynamons2_core_Battle._inBattleNow;
};
co_doubleduck_dynamons2_core_Battle.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_Battle.prototype = $extend(openfl_display_Sprite.prototype,{
	getNodeEventParams: function() {
		var result = { };
		result.type = this._node.getType();
		result.nodeId = this._node.getId();
		result.pack = this._node.getPack();
		result.itemsUsed = this._uiButtons.getItemsUsed();
		return result;
	}
	,handleStage: function(e) {
		this.removeEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleStage));
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_TALK,$bind(this,this.handleNowLetsSwap))) {
			this._uiButtons.rigNextAbil("no-ability");
			this._uiButtons.toggleMoreVis(false);
		}
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BOSS_BATTLE);
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_TALK,$bind(this,this.handleNowLetsItem))) {
			this._uiButtons.rigNextAbil("no-ability");
			this._uiButtons.toggleMoreVis(false);
		}
	}
	,handleNowLetsSwap: function() {
		var _g = this;
		co_doubleduck_utils_Utils.delayedCall(0.01,function() {
			if(co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_SHOW)) _g._uiButtons.toggleMoreVis(true);
		});
	}
	,handleNowLetsItem: function() {
		var _g = this;
		co_doubleduck_utils_Utils.delayedCall(0.01,function() {
			if(co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_MORE)) _g._uiButtons.toggleMoreVis(true);
		});
	}
	,cacheAllFx: function(flag) {
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_meta_GameState.getParty();
		while(_g < _g1.length) {
			var mon = _g1[_g];
			++_g;
			mon.toggleCacheFx(flag);
		}
		if(this._captainMons != null) {
			var _g2 = 0;
			var _g11 = this._captainMons;
			while(_g2 < _g11.length) {
				var mon1 = _g11[_g2];
				++_g2;
				mon1.toggleCacheFx(flag);
			}
		} else this._enemyMon.toggleCacheFx(flag);
		var itemsDat = co_doubleduck_dynamons2_data_GameplayDB.getAllItems();
		var _g3 = 0;
		while(_g3 < itemsDat.length) {
			var itemDat = itemsDat[_g3];
			++_g3;
			if(co_doubleduck_dynamons2_meta_GameState.getItemAmount(itemDat.id) == 0) continue;
			var abil = co_doubleduck_dynamons2_core_Ability.abilityForItem(itemDat.id);
			if(abil == null) continue;
			abil.toggleCacheFx(flag);
		}
	}
	,setupSelfMon: function(mon) {
		var addBody = -1;
		var addHud = -1;
		if(this._selfMon != null) {
			addBody = this._battleBox.getChildIndex(this._selfMonBody);
			addHud = this.getChildIndex(this._selfHud);
		}
		this._selfMon = mon;
		this._selfMon.addEventListener("DiedEvent",$bind(this,this.handleMonDied));
		this._selfMonBody = this._selfMon.getVisBody("back");
		this._selfMonBody.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width * 0.25);
		this._selfMonBody.set_y(this._back.get_y() + this._back.get_height() * 0.75);
		this._selfHud = this._selfMon.getPane("big");
		this._selfHud.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 5 * co_doubleduck_utils_DDAssets.scale - this._selfHud.get_width());
		this._selfHud.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height - 125 * co_doubleduck_utils_DDAssets.scale);
		if(addBody != -1) this._battleBox.addChildAt(this._selfMonBody,addBody);
		if(addHud != -1) this.addChildAt(this._selfHud,addHud);
	}
	,setupEnemyMon: function(mon) {
		var addBody = -1;
		var addHud = -1;
		if(this._enemyMon != null) {
			addBody = this._battleBox.getChildIndex(this._enemyMonBody);
			addHud = this.getChildIndex(this._enemyHud);
			this._enemyMon.removeEventListener("DiedEvent",$bind(this,this.handleMonDied));
			this._enemyMon = null;
		}
		this._enemyMon = mon;
		this._enemyMon.addEventListener("DiedEvent",$bind(this,this.handleMonDied));
		this._enemyHud = this._enemyMon.getPane("big");
		this._enemyHud.set_x(5 * co_doubleduck_utils_DDAssets.scale);
		this._enemyHud.set_y(68 * co_doubleduck_utils_DDAssets.scale);
		var isDarkMon = this._nodeData.bossBattle != null && this._nodeData.bossBattle.enemy != null && this._nodeData.bossBattle.enemy == "sumsum";
		this._enemyMonBody = this._enemyMon.getVisBody(isDarkMon?"front_dark":"front");
		this._enemyMonBody.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width * 0.75);
		this._enemyMonBody.set_y(this._back.get_y() + this._back.get_height() * 0.53);
		this._enemyAI.setEnemyMon(this._enemyMon);
		if(addBody != -1) this._battleBox.addChildAt(this._enemyMonBody,addBody);
		if(addHud != -1) this.addChildAt(this._enemyHud,addHud);
	}
	,animInto: function() {
		var _g = this;
		co_doubleduck_utils_TweenChain.get(this._uiButtons).tto({ y : co_doubleduck_dynamons2_Game.getScreenSize().height},800,motion_easing_Sine.get_easeOut());
		this.moveChar(true,true,500);
		this.moveChar(false,true,700);
		co_doubleduck_utils_TweenChain.get(this._turnRing).wait(800).tto({ alpha : 1},200).call(function() {
			_g._playerTurn = true;
		});
	}
	,moveChar: function(isEnemy,moveIn,duration) {
		if(duration == null) duration = 150;
		var offset = -co_doubleduck_dynamons2_Game.getScreenSize().width;
		if(moveIn) offset *= -1;
		var lobj = this._selfMonBody;
		var robj = this._selfHud;
		if(isEnemy) {
			lobj = this._enemyHud;
			robj = this._enemyMonBody;
		}
		co_doubleduck_utils_TweenChain.get(lobj).tto({ x : lobj.get_x() + offset},duration,motion_easing_Sine.get_easeInOut());
		co_doubleduck_utils_TweenChain.get(robj).tto({ x : robj.get_x() - offset},duration,motion_easing_Sine.get_easeInOut());
	}
	,handleUi: function(e) {
		var _g = this;
		if(e.type == "ActedEvent") {
			var dynEvent = e;
			if(this._playerTurn) {
				if(HxOverrides.indexOf(this._monsFought,this._selfMon,0) == -1) this._monsFought.push(this._selfMon);
				this._playerTurn = false;
				this._uiButtons.mouseChildren = false;
				this._uiButtons.set_alpha(0.6);
				var abil = dynEvent.data.ability;
				var abilDur = 0;
				if(this._rigData != null && this._rigData.length > 0) {
					var currRig = this._rigData.shift();
					abilDur = abil.actOut(this._selfMon,this._enemyMon,this._battleBox,this._abilAnimBox,Std["int"](currRig.power));
				} else abilDur = abil.actOut(this._selfMon,this._enemyMon,this._battleBox,this._abilAnimBox);
				co_doubleduck_utils_TweenChain.get(this._turnRing).wait(abilDur + 200).call($bind(this,this.switchTurn),[true]);
			}
		}
		if(e.type == "EscapeEvent") {
			this._uiButtons.mouseChildren = this._uiButtons.mouseEnabled = false;
			this._hasEscaped = true;
			this.fadeToMenu();
		}
		if(e.type == "SwapEvent") {
			var dynEvent1 = e;
			var mon = dynEvent1.data.mon;
			co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_ACT);
			this.moveChar(false,false,400);
			co_doubleduck_dynamons2_meta_GameState.setPartyMain(mon);
			this.setupSelfMon(mon);
			var _g1 = this._selfHud;
			_g1.set_x(_g1.get_x() + co_doubleduck_dynamons2_Game.getScreenSize().width);
			var _g2 = this._selfMonBody;
			_g2.set_x(_g2.get_x() - co_doubleduck_dynamons2_Game.getScreenSize().width);
			this._uiButtons.mouseChildren = false;
			this.moveChar(false,true,1000);
			this._uiButtons.partyUpdated();
			co_doubleduck_utils_TweenChain.get(this._uiButtons).wait(1100).call(function() {
				_g._uiButtons.mouseChildren = true;
			});
		}
		if(e.type == "CatchEvent") {
			if(this._playerTurn) {
				this._playerTurn = false;
				this._uiButtons.mouseChildren = false;
				this._uiButtons.set_alpha(0.6);
				if(this._specialBattle == "firstBattle") {
					co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT);
					this.tryCatch(true);
				} else this.tryCatch();
			}
		}
	}
	,getCatchOdds: function(monId,monLevel) {
		var monData = co_doubleduck_dynamons2_data_GameplayDB.getMon(monId);
		if(monData.catchOdds != null) return monData.catchOdds;
		var ranges = monData.catchOddsRanges;
		var prevData = null;
		var _g1 = 0;
		var _g = ranges.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(monLevel < Std["int"](ranges[i].fromLvl)) break;
			prevData = ranges[i].data;
		}
		return prevData;
	}
	,tryCatch: function(forceCatch) {
		if(forceCatch == null) forceCatch = false;
		var willCatch;
		if(forceCatch) willCatch = true; else {
			var hpRatio = this._enemyMon.getCurrHP() / this._enemyMon.getTotalHP();
			var catchData = this.getCatchOdds(this._enemyMon.getId(),this._enemyMon.getLevel());
			var odds = co_doubleduck_utils_Utils.map(hpRatio,catchData[1].at,catchData[0].at,catchData[1].odds,catchData[0].odds);
			willCatch = Math.random() < odds;
		}
		if(!willCatch) co_doubleduck_dynamons2_Game.reportEvent("catch_failed",this.getNodeEventParams());
		this._catchMonLight = new openfl_display_Sprite();
		var monBmpData = co_doubleduck_utils_DDAssets.getRawImage("images/general/mons/" + this._enemyMon.getId() + "/front.png");
		monBmpData = co_doubleduck_utils_BmpMagic.silhouette(monBmpData,16777215);
		var monBmp = new openfl_display_Bitmap(monBmpData);
		monBmp.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
		var _g = monBmp;
		_g.set_x(_g.get_x() - monBmp.get_width() / 2);
		var _g1 = monBmp;
		_g1.set_y(_g1.get_y() - monBmp.get_height() / 2);
		this._catchMonLight.addChild(monBmp);
		this._catchMonLight.set_y(this._enemyMonBody.get_y() - this._catchMonLight.get_height() / 2);
		this._catchMonLight.set_x(this._enemyMonBody.get_x());
		this._catchMonLight.set_alpha(0);
		this.addChildAt(this._catchMonLight,this.getChildIndex(this._battleBox) + 1);
		co_doubleduck_utils_TweenChain.get(this._catchMonLight).wait(500).tto({ alpha : 1},300);
		co_doubleduck_utils_TweenChain.get(this._enemyMonBody).wait(500).tto({ alpha : 0},300);
		co_doubleduck_utils_TweenChain.get(this._catchMonLight).wait(850).tto({ scaleX : 0.05, scaleY : 0.05},600,motion_easing_Sine.get_easeInOut()).tto({ alpha : 0},10);
		var diskAnim = new co_doubleduck_dynamons2_core_CatchDiskAnim();
		var diskTargetX = this._enemyHud.get_x() + this._enemyHud.get_width() / 2;
		diskAnim.set_y(this._catchMonLight.get_y() - diskAnim.get_height() / 2);
		diskAnim.set_x(-100 * co_doubleduck_utils_DDAssets.scale);
		co_doubleduck_utils_TweenChain.get(diskAnim).wait(300).tto({ x : diskTargetX - diskAnim.get_width() / 2},800,motion_easing_Sine.get_easeOut());
		this.addChild(diskAnim);
		var diskLight = new openfl_display_Sprite();
		diskLight.get_graphics().beginFill(16777215);
		diskLight.get_graphics().drawRect(0,0,52 * co_doubleduck_utils_DDAssets.scale,54 * co_doubleduck_utils_DDAssets.scale);
		diskLight.get_graphics().endFill();
		diskLight.set_x(diskTargetX - diskLight.get_width() / 2);
		diskLight.set_y(diskAnim.get_y() + diskAnim.get_height() / 2 - diskLight.get_height() / 2);
		diskLight.set_alpha(0);
		this.addChild(diskLight);
		co_doubleduck_utils_TweenChain.get(diskLight).wait(1650).tto({ alpha : 0.9},50).tto({ alpha : 0},210).call($bind(this,this.removeChild),[diskLight]);
		var soundName = "catch_failure";
		if(willCatch) soundName = "catch_success";
		this._catchCircLight = new openfl_display_Sprite();
		this._catchCircLight.get_graphics().beginFill(16777215);
		this._catchCircLight.get_graphics().drawCircle(0,0,20 * co_doubleduck_utils_DDAssets.scale);
		this._catchCircLight.get_graphics().endFill();
		this._catchCircLight.set_scaleX(this._catchCircLight.set_scaleY(0.1));
		this._catchCircLight.set_x(this._catchMonLight.get_x());
		this._catchCircLight.set_y(this._catchMonLight.get_y());
		this._catchCircLight.set_alpha(0);
		this.addChildAt(this._catchCircLight,this.getChildIndex(this._catchMonLight));
		co_doubleduck_utils_TweenChain.get(this._catchCircLight).wait(550).call(co_doubleduck_utils_SoundMgr.playSound,[soundName]).wait(250).tto({ alpha : 1},50).tto({ scaleX : 1, scaleY : 1},600,motion_easing_Sine.get_easeOut()).tto({ x : diskTargetX},200,motion_easing_Sine.get_easeIn()).call($bind(diskAnim,diskAnim.catchAnim),[willCatch]);
		diskAnim.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDoneTryCatch));
	}
	,handleDoneTryCatch: function(e) {
		var diskAnim = e.target;
		if(diskAnim.currentBehavior.name != "idle") {
			diskAnim.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDoneTryCatch));
			if(diskAnim.currentBehavior.name == "caught") {
				this.removeChild(this._catchCircLight);
				this._catchCircLight = null;
				this.removeChild(this._catchMonLight);
				this._catchMonLight = null;
				this.addXpForMon(this._enemyMon);
				co_doubleduck_dynamons2_meta_GameState.addPlayerMon(this._enemyMon);
				this._caughtMon = this._enemyMon;
				co_doubleduck_utils_TweenChain.get(this._uiButtons).tto({ alpha : 0},150);
				var teamBtn = co_doubleduck_utils_DDAssets.getCenteredImage("images/map/btn_team.png");
				teamBtn.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 5 * co_doubleduck_utils_DDAssets.scale - teamBtn.get_width() / 2);
				teamBtn.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height + 5 * co_doubleduck_utils_DDAssets.scale + teamBtn.get_height() / 2);
				this.addChild(teamBtn);
				co_doubleduck_utils_TweenChain.get(teamBtn).wait(500).tto({ y : co_doubleduck_dynamons2_Game.getScreenSize().height - 5 * co_doubleduck_utils_DDAssets.scale - teamBtn.get_height() / 2},250,motion_easing_Sine.get_easeOut()).wait(1200).tto({ y : teamBtn.get_y()},150,motion_easing_Sine.get_easeIn()).call($bind(this,this.removeChild),[teamBtn]);
				co_doubleduck_utils_TweenChain.get(this._enemyHud).tto({ x : this._enemyHud.get_x() - co_doubleduck_dynamons2_Game.getScreenSize().width},250,motion_easing_Sine.get_easeIn());
				co_doubleduck_utils_TweenChain.get(diskAnim).wait(1000).tto({ y : teamBtn.get_y() - diskAnim.get_height() / 2},400,co_doubleduck_utils_DDEase.get_overshootIn());
				co_doubleduck_utils_TweenChain.get(diskAnim).wait(1000).tto({ x : teamBtn.get_x() - diskAnim.get_width() / 2},400).tto({ alpha : 0},100).call($bind(this,this.removeChild),[diskAnim]).call($bind(this,this.handleBattleComplete));
			} else if(diskAnim.currentBehavior.name == "failed") {
				co_doubleduck_utils_TweenChain.get(diskAnim).tto({ alpha : 0},100).call($bind(this,this.removeChild),[diskAnim]);
				co_doubleduck_utils_TweenChain.get(this._catchCircLight).tto({ x : this._catchMonLight.get_x()},300,motion_easing_Sine.get_easeOut()).tto({ scaleX : 0.1, scaleY : 0.1},400,motion_easing_Sine.get_easeIn()).call($bind(this,this.removeChild),[this._catchCircLight]);
				co_doubleduck_utils_TweenChain.get(this._catchMonLight).wait(300).tto({ alpha : 1},50).tto({ scaleX : 1, scaleY : 1},350,motion_easing_Sine.get_easeInOut()).tto({ alpha : 0},400).call($bind(this,this.removeChild),[this._catchMonLight]);
				co_doubleduck_utils_TweenChain.get(this._enemyMonBody).wait(800).tto({ alpha : 1},10).wait(600).call($bind(this,this.switchTurn),[true]);
				this._catchCircLight = null;
				this._catchMonLight = null;
			}
		}
	}
	,handleDoneShowCatch: function(e) {
		var team = e.target;
		team.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleDoneShowCatch));
		this.removeChild(team);
		team.destroy();
		co_doubleduck_utils_TweenChain.get(this).wait(10).call($bind(this,this.handleBattleComplete));
	}
	,passTurn: function(forEnemy) {
		if(forEnemy) {
			var _g = 0;
			var _g1 = this._enemyMon.getAbilities();
			while(_g < _g1.length) {
				var abil = _g1[_g];
				++_g;
				abil.passedTurn();
			}
		} else {
			this._turnCount++;
			var _g2 = 0;
			var _g11 = co_doubleduck_dynamons2_meta_GameState.getParty();
			while(_g2 < _g11.length) {
				var mon = _g11[_g2];
				++_g2;
				var _g21 = 0;
				var _g3 = mon.getAbilities();
				while(_g21 < _g3.length) {
					var abil1 = _g3[_g21];
					++_g21;
					abil1.passedTurn();
				}
			}
		}
	}
	,switchTurn: function(toEnemy,duration,realTurn) {
		if(realTurn == null) realTurn = true;
		if(duration == null) duration = 600;
		var _g = this;
		var switchIn = 0;
		if(realTurn) {
			if(toEnemy) switchIn = this._selfMon.passedTurn(); else switchIn = this._enemyMon.passedTurn();
		}
		if(switchIn > 0) {
			var sickDamage = co_doubleduck_utils_DDAssets.getCenteredImage("images/session/ui/report_sick.png");
			sickDamage.set_x(-sickDamage.get_width());
			sickDamage.set_y(150 * co_doubleduck_utils_DDAssets.scale);
			sickDamage.set_alpha(0);
			this._abilAnimBox.addChild(sickDamage);
			co_doubleduck_utils_TweenChain.get(sickDamage).tto({ alpha : 1, x : 80 * co_doubleduck_utils_DDAssets.scale},400,motion_easing_Sine.get_easeOut()).wait(600).tto({ alpha : 0},200).call(($_=this._abilAnimBox,$bind($_,$_.removeChild)),[sickDamage]);
			co_doubleduck_utils_TweenChain.get(this._turnRing).wait(switchIn).call($bind(this,this.switchTurn),[toEnemy,duration,false]);
			return;
		}
		if(this._deadMon != null) {
			this.resolveDeath();
			return;
		}
		this.passTurn(!toEnemy);
		var toMon = this._selfMon;
		if(toEnemy) toMon = this._enemyMon;
		var body = toMon.getVisBody();
		var tween = co_doubleduck_utils_TweenChain.get(this._turnRing).tto({ x : body.get_x(), y : body.get_y()},duration - 200,motion_easing_Sine.get_easeInOut()).wait(200);
		if(toEnemy) {
			if(this._rigData != null && this._rigData.length > 0) tween.call(($_=this._enemyAI,$bind($_,$_.thinkAndAct)),[this._rigData[0].abil]); else tween.call(($_=this._enemyAI,$bind($_,$_.thinkAndAct)));
		} else tween.call(function() {
			_g._playerTurn = true;
			_g._uiButtons.mouseChildren = true;
			_g._uiButtons.set_alpha(1);
			if(_g._rigData != null) {
				if(_g._rigData.length > 0) _g._uiButtons.rigNextAbil(_g._rigData[0].abil); else if(_g._specialBattle == "firstBattle" && co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_TALK,$bind(_g,_g.handleNowLetsCatch))) _g._uiButtons.rigNextAbil("no-ability");
			}
		});
	}
	,handleNowLetsCatch: function() {
		var _g = this;
		co_doubleduck_utils_Utils.delayedCall(0.01,function() {
			if(co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_SHOW)) _g._uiButtons.toggleMoreVis(true);
		});
	}
	,handleEnemyAbility: function(e) {
		var abil = e.data.ability;
		var abilDur = 0;
		if(this._rigData != null && this._rigData.length > 0) {
			var currRig = this._rigData.shift();
			abilDur = abil.actOut(this._enemyMon,this._selfMon,this._battleBox,this._abilAnimBox,Std["int"](currRig.power));
		} else abilDur = abil.actOut(this._enemyMon,this._selfMon,this._battleBox,this._abilAnimBox);
		co_doubleduck_utils_TweenChain.get(this._turnRing).wait(abilDur + 200).call($bind(this,this.switchTurn),[false]);
	}
	,handleMonDied: function(e) {
		this._deadMon = e.target;
		this._deadMon.removeEventListener("DiedEvent",$bind(this,this.handleMonDied));
	}
	,addXpForMon: function(enemMon) {
		var lowDelta = 999;
		var _g = 0;
		var _g1 = this._monsFought;
		while(_g < _g1.length) {
			var mon = _g1[_g];
			++_g;
			if(enemMon.getLevel() - mon.getLevel() < lowDelta) lowDelta = enemMon.getLevel() - mon.getLevel();
		}
		if(lowDelta != 999) {
			var amount = 0;
			var xpData = co_doubleduck_dynamons2_data_GameplayDB.getBattleData().xpData;
			if(lowDelta >= Std["int"](xpData[0].delta)) amount = Std["int"](xpData[0].xp); else if(lowDelta <= Std["int"](xpData[xpData.length - 1].delta)) amount = Std["int"](xpData[xpData.length - 1].xp); else {
				var _g2 = 0;
				while(_g2 < xpData.length) {
					var dat = xpData[_g2];
					++_g2;
					if(lowDelta == Std["int"](dat.delta)) {
						amount = Std["int"](dat.xp);
						break;
					}
				}
			}
			var _g3 = 0;
			var _g11 = this._monsFought;
			while(_g3 < _g11.length) {
				var mon1 = _g11[_g3];
				++_g3;
				this._xpAmountList[HxOverrides.indexOf(this._xpMonsList,mon1,0)] += amount;
			}
		}
		this._monsFought = [];
	}
	,resolveDeath: function() {
		var _g = this;
		if(this._deadMon == this._enemyMon) {
			this.moveChar(true,false,400);
			co_doubleduck_utils_SoundMgr.playSound("monster_faint");
			this.addXpForMon(this._deadMon);
			var battleEnded = false;
			if(this._specialBattle == "vanity") {
				battleEnded = false;
				co_doubleduck_dynamons2_meta_GameState.removePlayerMon(this._selfMon);
				co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.VANITY_BATTLE);
				this.fadeToMenu();
			} else if(this._captainMons == null) battleEnded = true; else {
				var ind = HxOverrides.indexOf(this._captainMons,this._enemyMon,0);
				if(ind + 1 < this._captainMons.length) {
					this._deadMon = null;
					this.setupEnemyMon(this._captainMons[ind + 1]);
					var _g1 = this._enemyMonBody;
					_g1.set_x(_g1.get_x() + co_doubleduck_dynamons2_Game.getScreenSize().width);
					var _g2 = this._enemyHud;
					_g2.set_x(_g2.get_x() - co_doubleduck_dynamons2_Game.getScreenSize().width);
					this.moveChar(true,true,1000);
					this._captainHud.feintMon();
					this.switchTurn(false,1100);
					this.passTurn(false);
				} else battleEnded = true;
			}
			if(battleEnded) this.handleBattleComplete();
		} else {
			this.moveChar(false,false,400);
			co_doubleduck_utils_SoundMgr.playSound("monster_faint");
			if(HxOverrides.indexOf(this._monsFought,this._selfMon,0) != -1) HxOverrides.remove(this._monsFought,this._selfMon);
			this._xpAmountList[HxOverrides.indexOf(this._xpMonsList,this._selfMon,0)] = 0;
			if(co_doubleduck_dynamons2_meta_GameState.getPartyHP() == 0) {
				this._uiButtons.mouseChildren = false;
				co_doubleduck_utils_TweenChain.get(this).wait(1200).call($bind(this,this.fadeToMenu));
			} else {
				this._uiButtons.forcePartySwap();
				this._deadMon = null;
				this.switchTurn(false);
				co_doubleduck_utils_TweenChain.get(this._uiButtons).wait(600).call(function() {
					_g._playerTurn = true;
					_g._uiButtons.mouseChildren = true;
					_g._uiButtons.set_alpha(1);
				});
			}
		}
	}
	,handleBattleComplete: function() {
		if(this._nodeData.unlocksPack != null) {
			if(co_doubleduck_dynamons2_meta_GameState.isPackLocked(this._nodeData.unlocksPack)) {
				co_doubleduck_dynamons2_meta_GameState.setPackUnlocked(this._nodeData.unlocksPack,true);
				co_doubleduck_dynamons2_Game.reportEvent("pack_unlocked",{ 'id' : this._nodeData.unlocksPack});
			}
		}
		co_doubleduck_dynamons2_meta_GameState.setNodeBeated(Std["int"](this._nodeData.id),true);
		if(this._nodeData.arenaBattle == "true") co_doubleduck_dynamons2_meta_GameState.setArenaBeated(true);
		if(this._nodeData.bossBattle != null) co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BOSS_BATTLE);
		var eventData = this.getNodeEventParams();
		eventData.win = true;
		if(this._caughtMon == null) eventData.reason = "win"; else eventData.reason = "catch";
		co_doubleduck_dynamons2_Game.reportEvent("node_ended",eventData);
		this._endOverlay = new openfl_display_Sprite();
		this._endOverlay.get_graphics().beginFill(0);
		this._endOverlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		this._endOverlay.get_graphics().endFill();
		this._endOverlay.set_alpha(0.01);
		this.addChild(this._endOverlay);
		co_doubleduck_utils_TweenChain.get(this._endOverlay).tto({ alpha : 0.85},500);
		this._isWon = true;
		this._endXPScreen = new co_doubleduck_dynamons2_core_LevelUpScr(this._xpMonsList,this._xpAmountList);
		this._endXPScreen.addEventListener("DoneScreenEvent",$bind(this,this.handleDoneEndScr));
		this._endXPScreen.startBattleWin();
		this.addChild(this._endXPScreen);
	}
	,handleDoneEndScr: function(e) {
		if(e.target == this._endXPScreen) {
			this._endXPScreen.removeEventListener("DoneScreenEvent",$bind(this,this.handleDoneEndScr));
			this.removeChild(this._endXPScreen);
			if(this._lootData == null || this._lootData.length == 0) this.fadeToMenu(); else {
				this._endLootScreen = new co_doubleduck_dynamons2_meta_RewardsScr(this._lootData);
				this._endLootScreen.addEventListener("DoneScreenEvent",$bind(this,this.handleDoneEndScr));
				this.addChild(this._endLootScreen);
			}
		}
		if(e.target == this._endLootScreen) {
			this._endLootScreen.removeEventListener("DoneScreenEvent",$bind(this,this.handleDoneEndScr));
			this.removeChild(this._endLootScreen);
			this.fadeToMenu();
		}
	}
	,fadeToMenu: function() {
		if(!this._isWon) {
			var eventData = this.getNodeEventParams();
			eventData.win = false;
			if(this._hasEscaped) eventData.reason = "escape"; else eventData.reason = "defeat";
			co_doubleduck_dynamons2_Game.reportEvent("node_ended",eventData);
		}
		co_doubleduck_dynamons2_core_Battle._inBattleNow = false;
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_meta_GameState.getParty();
		while(_g < _g1.length) {
			var mon = _g1[_g];
			++_g;
			mon.setupAutoHealTimes();
			mon.resetBattleExtras();
			if(mon == this._caughtMon) this._caughtMon = null;
		}
		co_doubleduck_dynamons2_meta_GameState.saveMonsData();
		if(this._caughtMon != null) {
			this._caughtMon.setupAutoHealTimes();
			this._caughtMon.resetBattleExtras();
		}
		var over = new openfl_display_Sprite();
		over.get_graphics().beginFill(0);
		over.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		over.get_graphics().endFill();
		over.set_alpha(0.01);
		this.addChild(over);
		co_doubleduck_utils_TweenChain.get(over).tto({ alpha : 1},250).wait(50).call($bind(this,this.goBackToMenu));
	}
	,goBackToMenu: function() {
		if(co_doubleduck_utils_AdManager.isAdReady()) co_doubleduck_utils_AdManager.showAd($bind(this,this.handleMidrollEnded)); else this.handleMidrollEnded();
	}
	,handleMidrollEnded: function() {
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent(co_doubleduck_dynamons2_meta_FlowEvents.BACK_TO_MAP,{ 'won' : this._isWon, 'nodeId' : this._nodeData.id, 'nodeType' : this._node.getType()}));
	}
	,showStartDialog: function(dialogToShow) {
		var dialog = co_doubleduck_dynamons2_meta_DialogBox.showDialog(dialogToShow);
		this.addChild(dialog);
		dialog.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDialogComplete));
	}
	,handleDialogComplete: function(e) {
		var dialog = e.target;
		this.removeChild(dialog);
		this.animInto();
	}
	,destroy: function() {
		this.cacheAllFx(false);
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_meta_GameState.getParty();
		while(_g < _g1.length) {
			var mon = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = mon.getAbilities();
			while(_g2 < _g3.length) {
				var abil = _g3[_g2];
				++_g2;
				abil.killIcon();
			}
			mon.destroyPane("big");
			mon.destroyPane("thumb");
		}
		if(this._captainMons != null) {
			var _g4 = 0;
			var _g11 = this._captainMons;
			while(_g4 < _g11.length) {
				var mon1 = _g11[_g4];
				++_g4;
				mon1.destroyPane("big");
			}
		} else this._enemyMon.destroyPane("big");
		if(this._selfMon.hasEventListener("DiedEvent")) this._selfMon.removeEventListener("DiedEvent",$bind(this,this.handleMonDied));
		if(this._enemyMon.hasEventListener("DiedEvent")) {
			this._enemyMon.removeEventListener("DiedEvent",$bind(this,this.handleMonDied));
			this._enemyMon.destroy();
		}
		this._enemyAI.removeEventListener("ActedEvent",$bind(this,this.handleEnemyAbility));
		this._uiButtons.removeEventListener("ActedEvent",$bind(this,this.handleUi));
		this._uiButtons.removeEventListener("CatchEvent",$bind(this,this.handleUi));
		this._uiButtons.removeEventListener("EscapeEvent",$bind(this,this.handleUi));
		this._uiButtons.removeEventListener("SwapEvent",$bind(this,this.handleUi));
		this._uiButtons.destroy();
		this._topHud.destroy();
		co_doubleduck_utils_TweenChain.removeTweens(this);
	}
	,__class__: co_doubleduck_dynamons2_core_Battle
});
var co_doubleduck_dynamons2_core_CatchDiskAnim = function() {
	var behDatas = [];
	behDatas.push(new spritesheet_data_BehaviorData("idle",[0],false,5));
	behDatas.push(new spritesheet_data_BehaviorData("blink",[1,0,1,0],false,3));
	behDatas.push(new spritesheet_data_BehaviorData("wait",[0],false,3));
	behDatas.push(new spritesheet_data_BehaviorData("caught",[2,2,2,2],false,5));
	behDatas.push(new spritesheet_data_BehaviorData("failed",[3,3,3,3,3,3,3,3,3,4,5,6],false,12));
	var sheetBmp = co_doubleduck_utils_DDAssets.getRawImage("images/session/ui/catch_disk.png");
	var sheet = spritesheet_importers_BitmapImporter.create(sheetBmp,8,1,Math.floor(sheetBmp.width / 8),Math.floor(sheetBmp.height / 1));
	var _g = 0;
	while(_g < behDatas.length) {
		var beh = behDatas[_g];
		++_g;
		sheet.addBehavior(beh);
	}
	co_doubleduck_utils_AnimSprite.call(this,sheet);
	this.showBehavior("idle");
	this.update(0);
	this._lastTime = openfl_Lib.getTimer();
	this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
};
$hxClasses["co.doubleduck.dynamons2.core.CatchDiskAnim"] = co_doubleduck_dynamons2_core_CatchDiskAnim;
co_doubleduck_dynamons2_core_CatchDiskAnim.__name__ = ["co","doubleduck","dynamons2","core","CatchDiskAnim"];
co_doubleduck_dynamons2_core_CatchDiskAnim.__super__ = co_doubleduck_utils_AnimSprite;
co_doubleduck_dynamons2_core_CatchDiskAnim.prototype = $extend(co_doubleduck_utils_AnimSprite.prototype,{
	catchAnim: function(hasCaught) {
		if(hasCaught) this.showBehaviors(["blink","blink","wait","caught"]); else this.showBehaviors(["blink","blink","wait","failed"]);
	}
	,handleTick: function(e) {
		var time = openfl_Lib.getTimer();
		var delta = time - this._lastTime;
		this.update(delta);
		this._lastTime = time;
	}
	,destroy: function() {
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,__class__: co_doubleduck_dynamons2_core_CatchDiskAnim
});
var co_doubleduck_dynamons2_core_EnemyAI = function(target) {
	openfl_events_EventDispatcher.call(this,target);
};
$hxClasses["co.doubleduck.dynamons2.core.EnemyAI"] = co_doubleduck_dynamons2_core_EnemyAI;
co_doubleduck_dynamons2_core_EnemyAI.__name__ = ["co","doubleduck","dynamons2","core","EnemyAI"];
co_doubleduck_dynamons2_core_EnemyAI.__super__ = openfl_events_EventDispatcher;
co_doubleduck_dynamons2_core_EnemyAI.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	setPlayerMon: function(mon) {
		this._player = mon;
	}
	,setEnemyMon: function(mon) {
		this._enemy = mon;
	}
	,thinkAndAct: function(forceAbil) {
		if(forceAbil == null) forceAbil = "";
		var abils = this._enemy.getAbilities();
		var actAbil = null;
		if(forceAbil != "") {
			var _g = 0;
			while(_g < abils.length) {
				var abil = abils[_g];
				++_g;
				if(abil.getId() == forceAbil) actAbil = abil;
			}
		}
		while(actAbil == null) {
			actAbil = abils[Std.random(abils.length)];
			if(actAbil.inCooldown()) actAbil = null;
		}
		co_doubleduck_utils_TweenChain.get(this).wait(500).call($bind(this,this.dispatchEvent),[new co_doubleduck_utils_DynamicEvent("ActedEvent",{ 'ability' : actAbil})]);
	}
	,__class__: co_doubleduck_dynamons2_core_EnemyAI
});
var co_doubleduck_dynamons2_core_LevelUpScr = function(xpMonsList,xpAmountList) {
	openfl_display_Sprite.call(this);
	this._currMonInd = 0;
	this._isLevelupOnly = false;
	this._xpMons = xpMonsList;
	this._xpAmounts = xpAmountList;
	null;
};
$hxClasses["co.doubleduck.dynamons2.core.LevelUpScr"] = co_doubleduck_dynamons2_core_LevelUpScr;
co_doubleduck_dynamons2_core_LevelUpScr.__name__ = ["co","doubleduck","dynamons2","core","LevelUpScr"];
co_doubleduck_dynamons2_core_LevelUpScr.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_LevelUpScr.prototype = $extend(openfl_display_Sprite.prototype,{
	startBattleWin: function() {
		co_doubleduck_utils_SoundMgr.playSound("win");
		var suplat = new openfl_display_Sprite();
		var img = co_doubleduck_utils_DDAssets.getImage("images/session/endscreen/superlative" + (Std.random(4) + 1) + ".png");
		var _g = img;
		_g.set_x(_g.get_x() - img.get_width() / 2);
		var _g1 = img;
		_g1.set_y(_g1.get_y() - img.get_height() / 2);
		suplat.addChild(img);
		suplat.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		suplat.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height * 0.29);
		img = co_doubleduck_utils_DDAssets.getImage("images/session/endscreen/you_win.png");
		var _g2 = img;
		_g2.set_x(_g2.get_x() - img.get_width() / 2);
		var _g3 = img;
		_g3.set_y(_g3.get_y() - img.get_height() / 2);
		var youwin = new openfl_display_Sprite();
		youwin.addChild(img);
		youwin.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		youwin.set_y(suplat.get_y() + 50 * co_doubleduck_utils_DDAssets.scale);
		youwin.set_scaleX(youwin.set_scaleY(suplat.set_scaleX(suplat.set_scaleY(0.2))));
		youwin.set_alpha(suplat.set_alpha(0));
		this.addChild(suplat);
		this.addChild(youwin);
		co_doubleduck_utils_TweenChain.get(suplat).wait(500).tto({ scaleX : 1, scaleY : 1, alpha : 1},350,motion_easing_Sine.get_easeIn()).wait(1900).tto({ alpha : 0},200).call($bind(this,this.removeChild),[suplat]);
		co_doubleduck_utils_TweenChain.get(youwin).wait(1000).tto({ scaleX : 1, scaleY : 1, alpha : 1},350,motion_easing_Sine.get_easeIn()).wait(1400).tto({ alpha : 0},200).call($bind(this,this.removeChild),[youwin]).call($bind(this,this.grantXPs));
	}
	,grantXPs: function() {
		this.set_alpha(0.01);
		var twn = co_doubleduck_utils_TweenChain.get(this).tto({ alpha : 1},300).wait(100).call($bind(this,this.handleNextMon));
	}
	,startLevelup: function() {
		this._isLevelupOnly = true;
		this._currXPLeft = 0;
		this._levelupOverlay = new openfl_display_Sprite();
		this._levelupOverlay.get_graphics().beginFill(0);
		this._levelupOverlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		this._levelupOverlay.get_graphics().endFill();
		this._levelupOverlay.set_alpha(0.01);
		this.addChild(this._levelupOverlay);
		co_doubleduck_utils_TweenChain.get(this._levelupOverlay).tto({ alpha : 0.9},300).call($bind(this,this.handleNextMon));
	}
	,handleNextMon: function() {
		var _g = this;
		if(!this._isLevelupOnly) while(this._currMonInd < this._xpAmounts.length && this._xpAmounts[this._currMonInd] <= 0) this._currMonInd++;
		if(this._currMonInd >= this._xpAmounts.length) {
			if(this._isLevelupOnly) co_doubleduck_utils_TweenChain.get(this._levelupOverlay).wait(200).tto({ alpha : 0},200).call($bind(this,this.dispatchEvent),[new openfl_events_Event("DoneScreenEvent")]); else co_doubleduck_utils_TweenChain.get(this).wait(250).call($bind(this,this.dispatchEvent),[new openfl_events_Event("DoneScreenEvent")]);
			return;
		}
		if(this._monBox != null) {
			if(this._levelupMark != null && this._monBox == this._levelupMark.parent) this._monBox.removeChild(this._levelupMark);
			if(this._monBox == this._pedestal.parent) this._monBox.removeChild(this._pedestal);
			if(this._monBox == this._xpBar.parent) this._monBox.removeChild(this._xpBar);
			this.removeChild(this._monBox);
			this._monBox = null;
		}
		this._currMon = this._xpMons[this._currMonInd];
		this._monBox = new openfl_display_Sprite();
		if(this._pedestal == null) {
			this._pedestal = co_doubleduck_utils_DDAssets.getImage("images/general/pedestal.png");
			this._pedestal.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._pedestal.get_width() / 2);
			this._pedestal.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - 17 * co_doubleduck_utils_DDAssets.scale);
		}
		this._monBox.addChild(this._pedestal);
		var monShade = co_doubleduck_utils_DDAssets.getImage("images/session/mon_shadow.png");
		monShade.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - monShade.get_width() / 2);
		monShade.set_y(this._pedestal.get_y() + 21 * co_doubleduck_utils_DDAssets.scale);
		this._monBox.addChild(monShade);
		this._monImg = new openfl_display_Sprite();
		this._monImg.addChild(co_doubleduck_utils_DDAssets.getImage("images/general/mons/" + this._currMon.getId() + "/front.png"));
		this._monImg.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._monImg.get_width() / 2);
		this._monImg.set_y(this._pedestal.get_y() + 44 * co_doubleduck_utils_DDAssets.scale - this._monImg.get_height());
		this._monBox.addChild(this._monImg);
		if(!this._isLevelupOnly) {
			this._tooltip = this._currMon.getPane("tooltip");
			this._tooltip.disableLevelupMark();
			this._tooltip.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._tooltip.get_width() / 2);
			this._tooltip.set_y(this._monImg.get_y() - 5 * co_doubleduck_utils_DDAssets.scale - this._tooltip.get_height());
			this._monBox.addChild(this._tooltip);
			if(this._xpBar == null) {
				this._xpBar = new co_doubleduck_utils_ProgBar(co_doubleduck_utils_DDAssets.getImage("images/general/xpbar_bg.png"),co_doubleduck_utils_DDAssets.getImage("images/general/xpbar_fill.png"));
				this._xpBar.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._xpBar.get_width() / 2);
				this._xpBar.set_y(this._pedestal.get_y() + 46 * co_doubleduck_utils_DDAssets.scale);
			}
			this._xpBar.setFillPerc(this._currMon.getXPRatio(),1);
			this._monBox.addChild(this._xpBar);
			if(this._currMon.getXPRatio() == 1) {
				this._levelupMark = co_doubleduck_utils_DDAssets.getCenteredImage("images/general/badge_levelup.png");
				this._levelupMark.set_x(this._xpBar.get_x() + this._xpBar.get_width());
				this._levelupMark.set_y(this._xpBar.get_y() + 17 * co_doubleduck_utils_DDAssets.scale);
				this._monBox.addChild(this._levelupMark);
			}
			this._currXPLeft = this._xpAmounts[this._currMonInd];
		}
		this._currMonInd++;
		var _g1 = this._monBox;
		_g1.set_x(_g1.get_x() - co_doubleduck_dynamons2_Game.getScreenSize().width);
		this.addChild(this._monBox);
		var tween = co_doubleduck_utils_TweenChain.get(this._monBox).tto({ x : this._monBox.get_x() + co_doubleduck_dynamons2_Game.getScreenSize().width},500,motion_easing_Sine.get_easeOut()).wait(200);
		if(this._isLevelupOnly) tween.call($bind(this,this.animateLevelup)); else if(co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_TALK) {
			this._currXPLeft = this._currMon.getTargetXP() - this._currMon.getCurrXP();
			tween.call(function() {
				co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_TALK,$bind(_g,_g.grantCurrXP));
			});
		} else tween.call($bind(this,this.grantCurrXP));
	}
	,grantCurrXP: function() {
		var _g = this;
		var maxXP = this._currMon.getTargetXP();
		if(maxXP == -1) {
			co_doubleduck_utils_TweenChain.get(this._monBox).wait(800).call($bind(this,this.handleDoneWithMon));
			return;
		}
		var xpPercDelta = this._currMon.getXPRatio();
		var newXP = this._currMon.getCurrXP() + this._currXPLeft;
		if(newXP > maxXP) {
			this._currXPLeft = newXP - maxXP;
			newXP = maxXP;
		} else this._currXPLeft = 0;
		this._currMon.setCurrXP(newXP);
		var newRatio = this._currMon.getXPRatio();
		xpPercDelta = newRatio - xpPercDelta;
		var dur = Math.floor(co_doubleduck_utils_Utils.map(xpPercDelta * 100,0,100,100,1500));
		this._xpBar.setFillPerc(newRatio,dur);
		if(newRatio == 1) {
			if(this._levelupMark == null) {
				this._levelupMark = co_doubleduck_utils_DDAssets.getCenteredImage("images/general/badge_levelup.png");
				this._levelupMark.set_x(this._xpBar.get_x() + this._xpBar.get_width());
				this._levelupMark.set_y(this._xpBar.get_y() + 17 * co_doubleduck_utils_DDAssets.scale);
				this._levelupMark.set_alpha(0);
				this._monBox.addChild(this._levelupMark);
				co_doubleduck_utils_TweenChain.get(this._levelupMark).wait(dur + 150).tto({ alpha : 1, scaleX : 1.5, scaleY : 1.5},300,motion_easing_Sine.get_easeIn()).tto({ scaleX : 1, scaleY : 1},400,motion_easing_Sine.get_easeOut());
			} else {
			}
			this.setupLevelupBtn();
			this._levelupBtn.enabled = false;
			this._levelupBtn.set_alpha(0);
			co_doubleduck_utils_TweenChain.get(this._levelupBtn).wait(dur + 800).tto({ alpha : 1, scaleX : 1.2, scaleY : 1.2},150).tto({ scaleX : 1, scaleY : 1},250).call(function() {
				_g._levelupBtn.enabled = true;
				co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_ACT,_g._levelupBtn);
			});
			this._laterBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/endscreen/btn_later.png"));
			this._laterBtn.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
			this._laterBtn.set_y(this._pedestal.get_y() + 145 * co_doubleduck_utils_DDAssets.scale);
			this._laterBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLaterBtn));
			this._laterBtn.set_alpha(0);
			this._monBox.addChild(this._laterBtn);
			co_doubleduck_utils_TweenChain.get(this._laterBtn).wait(dur + 1300).tto({ alpha : 1},150).call(function() {
				_g._laterBtn.enabled = true;
			});
		} else co_doubleduck_utils_TweenChain.get(this._monBox).wait(dur + 700).call($bind(this,this.handleDoneWithMon));
	}
	,setupLevelupBtn: function() {
		var zPos = -1;
		if(this._levelupBtn != null) {
			zPos = this._monBox.getChildIndex(this._levelupBtn);
			this._monBox.removeChild(this._levelupBtn);
			this._levelupBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLevelupBtn));
			this._levelupBtn = null;
		}
		this._levelupBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_levelup.png"));
		this._levelupBtn.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		this._levelupBtn.set_y(this._pedestal.get_y() + 106 * co_doubleduck_utils_DDAssets.scale);
		this._levelupBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLevelupBtn));
		var stone = "levelup_" + this._currMon.getKind();
		var hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
		if(hasStones == 0) {
			stone = "levelup_joker";
			hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
			if(hasStones == 0) stone = "";
		}
		var lvlupText = co_doubleduck_utils_DDAssets.getImage("images/general/btn_levelup_text.png");
		var _g = lvlupText;
		_g.set_x(_g.get_x() - lvlupText.get_width() / 2);
		lvlupText.set_y(-lvlupText.get_height() / 2 - 2 * co_doubleduck_utils_DDAssets.scale);
		if(stone != "") {
			var _g1 = lvlupText;
			_g1.set_x(_g1.get_x() + 10 * co_doubleduck_utils_DDAssets.scale);
			this._levelupStone = co_doubleduck_utils_DDAssets.getImage("images/items/icons/" + stone + ".png");
			this._levelupStone.set_x(-38 * co_doubleduck_utils_DDAssets.scale - this._levelupStone.get_width() / 2);
			this._levelupStone.set_y(-4 * co_doubleduck_utils_DDAssets.scale - this._levelupStone.get_height() / 2);
			this._levelupBtn.addChild(this._levelupStone);
		}
		this._levelupBtn.addChild(lvlupText);
		if(zPos != -1) this._monBox.addChildAt(this._levelupBtn,zPos); else this._monBox.addChild(this._levelupBtn);
	}
	,handleShopClose: function(e) {
		var shop = e.target;
		shop.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleShopClose));
		this.removeChild(shop);
		this.setupLevelupBtn();
	}
	,handleLevelupBtn: function(e) {
		var stone = "levelup_" + this._currMon.getKind();
		var hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
		if(hasStones > 0) {
			co_doubleduck_dynamons2_meta_GameState.setItemAmount(stone,hasStones - 1);
			null;
		} else {
			stone = "levelup_joker";
			hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
			if(hasStones > 0) {
				co_doubleduck_dynamons2_meta_GameState.setItemAmount(stone,hasStones - 1);
				null;
			} else {
				var shop = new co_doubleduck_dynamons2_meta_LootShop("no_levelup_stone");
				shop.addEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleShopClose));
				this.addChild(shop);
				return;
			}
		}
		this._levelupBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLevelupBtn));
		this._levelupBtn.enabled = false;
		this._laterBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLaterBtn));
		this._laterBtn.enabled = false;
		this._levelupBtn.removeChild(this._levelupStone);
		var _g = this._levelupStone;
		_g.set_x(_g.get_x() + this._levelupBtn.get_x());
		var _g1 = this._levelupStone;
		_g1.set_y(_g1.get_y() + this._levelupBtn.get_y());
		this._monBox.addChild(this._levelupStone);
		co_doubleduck_utils_TweenChain.get(this._levelupStone).wait(400).tto({ x : this._monImg.get_x() + this._monImg.get_width() / 2 - this._levelupStone.get_width() / 2, y : this._monImg.get_y() + this._monImg.get_height() - 70 * co_doubleduck_utils_DDAssets.scale},800,motion_easing_Sine.get_easeInOut()).wait(200).call($bind(this,this.absorbStone));
		co_doubleduck_utils_TweenChain.get(this._tooltip).tto({ alpha : 0},100);
		co_doubleduck_utils_TweenChain.get(this._xpBar).tto({ alpha : 0},100);
		co_doubleduck_utils_TweenChain.get(this._levelupMark).tto({ alpha : 0},100).call(($_=this._monBox,$bind($_,$_.removeChild)),[this._levelupMark]);
		this._levelupMark = null;
		co_doubleduck_utils_TweenChain.get(this._laterBtn).tto({ alpha : 0},100).call(($_=this._monBox,$bind($_,$_.removeChild)),[this._laterBtn]);
		co_doubleduck_utils_TweenChain.get(this._levelupBtn).tto({ alpha : 0},100).call(($_=this._monBox,$bind($_,$_.removeChild)),[this._levelupBtn]);
	}
	,absorbStone: function() {
		co_doubleduck_utils_TweenChain.get(this._levelupStone).wait(200).call($bind(this,this.animateLevelup)).tto({ alpha : 0},400).call(($_=this._monBox,$bind($_,$_.removeChild)),[this._levelupStone]);
	}
	,animateLevelup: function() {
		var monBmp = co_doubleduck_utils_DDAssets.getRawImage("images/general/mons/" + this._currMon.getId() + "/front.png");
		this._monWhite = new openfl_display_Bitmap(co_doubleduck_utils_BmpMagic.silhouette(monBmp,16777215));
		this._monBlue = new openfl_display_Bitmap(co_doubleduck_utils_BmpMagic.silhouette(monBmp,44021));
		this._monWhite.set_alpha(0);
		this._monWhite.set_x(this._monBlue.set_x(this._monImg.get_x()));
		this._monWhite.set_y(this._monBlue.set_y(this._monImg.get_y()));
		this._monBox.addChild(this._monWhite);
		co_doubleduck_utils_TweenChain.get(this._monWhite).tto({ alpha : 1},400);
		var blast = new co_doubleduck_dynamons2_core_LevelupBlast("start");
		blast.set_x(this._monImg.get_x() + this._monImg.get_width() / 2 - blast.get_width() / 2);
		blast.set_y(this._monImg.get_y() + this._monImg.get_height() - blast.get_height() + 20 * co_doubleduck_utils_DDAssets.scale);
		blast.onComplete = $bind(this,this.doBlast);
		this._monBox.addChild(blast);
	}
	,doBlast: function(blast) {
		var _g = this;
		blast.onComplete = null;
		this._monBox.removeChild(blast);
		var blastPos = new openfl_geom_Point(blast.get_x(),blast.get_y());
		this._monBox.removeChild(this._monWhite);
		co_doubleduck_utils_TweenChain.removeTweens(this._monWhite);
		this._monWhite.bitmapData.dispose();
		this._monWhite = null;
		blast = new co_doubleduck_dynamons2_core_LevelupBlast("blast");
		blast.set_x(blastPos.x);
		blast.set_y(blastPos.y);
		blast.onComplete = $bind(this,this.fadeBlast);
		this._monBox.addChild(blast);
		this._monBlue.set_alpha(0.3);
		this._monBox.addChild(this._monBlue);
		co_doubleduck_utils_TweenChain.get(this._monBox).wait(850).call(function() {
			_g._levelupBox = _g._currMon.doLevelUp();
			if(_g._xpBar != null) _g._xpBar.setFillPerc(_g._currMon.getXPRatio(),1);
			_g._levelupBox.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
			_g._levelupBox.set_y(_g._pedestal.get_y() + 100 * co_doubleduck_utils_DDAssets.scale);
			_g._monBox.addChild(_g._levelupBox);
			_g._levelupBox.addEventListener(openfl_events_Event.COMPLETE,$bind(_g,_g.handleDoneLevelupBox));
		});
	}
	,fadeBlast: function(blast) {
		blast.onComplete = null;
		this._monBox.removeChild(blast);
		var blastPos = new openfl_geom_Point(blast.get_x(),blast.get_y());
		this._monBox.removeChild(this._monBlue);
		this._monBlue.bitmapData.dispose();
		this._monBlue = null;
		blast = new co_doubleduck_dynamons2_core_LevelupBlast("fade");
		blast.set_x(blastPos.x);
		blast.set_y(blastPos.y);
		co_doubleduck_utils_TweenChain.get(blast).tto({ alpha : 0},380);
		blast.onComplete = $bind(this,this.doneBlast);
		this._monBox.addChild(blast);
	}
	,doneBlast: function(blast) {
		blast.onComplete = null;
		this._monBox.removeChild(blast);
	}
	,handleDoneLevelupBox: function(e) {
		this._levelupBox.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDoneLevelupBox));
		this._monBox.removeChild(this._levelupBox);
		this._levelupBox = null;
		if(this._currXPLeft > 0) {
			co_doubleduck_utils_TweenChain.get(this._tooltip).wait(1500).tto({ alpha : 1},150);
			co_doubleduck_utils_TweenChain.get(this._xpBar).wait(1500).tto({ alpha : 1},150).wait(200).call($bind(this,this.grantCurrXP));
		} else this.handleDoneWithMon();
	}
	,handleLaterBtn: function(e) {
		this._levelupBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLevelupBtn));
		this._levelupBtn.enabled = false;
		this._laterBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLaterBtn));
		this._laterBtn.enabled = false;
		this.handleDoneWithMon();
	}
	,handleDoneWithMon: function() {
		var _g = this;
		co_doubleduck_utils_TweenChain.get(this._monBox).tto({ x : this._monBox.get_x() + co_doubleduck_dynamons2_Game.getScreenSize().width},350,motion_easing_Sine.get_easeIn()).call(function() {
			if(_g._tooltip != null) {
				_g._monBox.removeChild(_g._tooltip);
				_g._tooltip = null;
				_g._currMon.destroyPane("tooltip");
			}
			_g._levelupMark = null;
		}).call($bind(this,this.handleNextMon));
	}
	,__class__: co_doubleduck_dynamons2_core_LevelUpScr
});
var co_doubleduck_dynamons2_core_LevelupBlast = function(anim) {
	var behDatas = [];
	behDatas.push(new spritesheet_data_BehaviorData("start",[0,1,2,3,4,5,6],false,15));
	behDatas.push(new spritesheet_data_BehaviorData("blast",[7,8,9,10,11,9,10,11,9,10,11,9,10,11],false,15));
	behDatas.push(new spritesheet_data_BehaviorData("fade",[12,13,6,5,4],false,13));
	co_doubleduck_utils_AnimSprite.call(this,co_doubleduck_utils_DDAssets.getSpritesheet("images/general/levelup_blast.png",7,2,-1,-1,behDatas));
	this.showBehavior(anim);
	this._lastTime = openfl_Lib.getTimer();
	this.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
	this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	this.update(0);
	this.set_scaleX(this.set_scaleY(2));
};
$hxClasses["co.doubleduck.dynamons2.core.LevelupBlast"] = co_doubleduck_dynamons2_core_LevelupBlast;
co_doubleduck_dynamons2_core_LevelupBlast.__name__ = ["co","doubleduck","dynamons2","core","LevelupBlast"];
co_doubleduck_dynamons2_core_LevelupBlast.__super__ = co_doubleduck_utils_AnimSprite;
co_doubleduck_dynamons2_core_LevelupBlast.prototype = $extend(co_doubleduck_utils_AnimSprite.prototype,{
	stopAnim: function() {
		this.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,replayAnim: function(anim) {
		this.showBehavior(anim,true);
		if(!this.hasEventListener(openfl_events_Event.ENTER_FRAME)) {
			this._lastTime = openfl_Lib.getTimer();
			this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
		}
		this.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
	}
	,handleTick: function(e) {
		var time = openfl_Lib.getTimer();
		var delta = time - this._lastTime;
		this.update(delta);
		this._lastTime = time;
	}
	,handleDone: function(e) {
		this.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
		if(this.onComplete != null) this.onComplete(this);
	}
	,__class__: co_doubleduck_dynamons2_core_LevelupBlast
});
var co_doubleduck_dynamons2_core_Mon = function(monId,monLevel) {
	openfl_events_EventDispatcher.call(this);
	this._id = monId;
	this._data = co_doubleduck_dynamons2_data_GameplayDB.getMon(this._id);
	this._level = monLevel;
	this._currXP = 0;
	this._autoHealStartTime = this._autoHealTargetTime = -1;
	if(this.getLevelData(this._level + 1) == null) this._targetXP = -1; else this._targetXP = Std["int"](this.getLevelData(this._level + 1).xp);
	this._statDeltas = new haxe_ds_StringMap();
	this._panes = new haxe_ds_StringMap();
	this.getAbilities();
	this.updateMaxHP();
	this._hpCurr = this._hpMax;
	this.resetBattleExtras();
	if(co_doubleduck_dynamons2_core_Mon._autoHealTimer == null) {
		co_doubleduck_dynamons2_core_Mon._autoHealTimer = new co_doubleduck_utils_Delayer(co_doubleduck_dynamons2_core_Mon.AUTO_HEAL_DELAY);
		co_doubleduck_dynamons2_core_Mon._autoHealTimer.handler = co_doubleduck_dynamons2_core_Mon.handleAutoHeal;
		co_doubleduck_dynamons2_core_Mon._autoHealTimer.start();
	}
};
$hxClasses["co.doubleduck.dynamons2.core.Mon"] = co_doubleduck_dynamons2_core_Mon;
co_doubleduck_dynamons2_core_Mon.__name__ = ["co","doubleduck","dynamons2","core","Mon"];
co_doubleduck_dynamons2_core_Mon._autoHealTimer = null;
co_doubleduck_dynamons2_core_Mon.handleAutoHeal = function() {
	var monsToHeal = co_doubleduck_dynamons2_meta_GameState.getPlayerMons(true);
	var nowTime = Math.floor(co_doubleduck_utils_Utils.epochTime());
	var teamMons = co_doubleduck_dynamons2_meta_GameState.getParty();
	var _g = 0;
	while(_g < monsToHeal.length) {
		var mon = monsToHeal[_g];
		++_g;
		if(co_doubleduck_dynamons2_core_Battle.inBattleNow() && HxOverrides.indexOf(teamMons,mon,0) != -1) continue;
		var currHP = mon.getCurrHP();
		if(currHP >= mon.getTotalHP()) continue;
		var res = Math.round(co_doubleduck_utils_Utils.map(nowTime - mon._autoHealStartTime,0,mon._autoHealTargetTime - mon._autoHealStartTime,0,100));
		if(res == currHP) continue;
		mon.setCurrHP(res,co_doubleduck_dynamons2_core_Mon.AUTO_HEAL_DELAY - 10);
	}
};
co_doubleduck_dynamons2_core_Mon.getMonAbilities = function(monId,monLevel) {
	var monData = co_doubleduck_dynamons2_data_GameplayDB.getMon(monId);
	var abilDatas = monData.abilities;
	var abilities = [];
	var _g = 0;
	while(_g < abilDatas.length) {
		var abilData = abilDatas[_g];
		++_g;
		if(Std["int"](abilData.getsAt) <= monLevel) {
			var abil = new co_doubleduck_dynamons2_core_Ability(abilData.id);
			if(Std["int"](abilData.index) >= abilities.length) abilities.push(abil); else abilities[Std["int"](abilData.index)] = abil;
		}
	}
	return abilities;
};
co_doubleduck_dynamons2_core_Mon.getAutoHealTimer = function() {
	return co_doubleduck_dynamons2_core_Mon._autoHealTimer;
};
co_doubleduck_dynamons2_core_Mon.__super__ = openfl_events_EventDispatcher;
co_doubleduck_dynamons2_core_Mon.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	updateMaxHP: function() {
		this._hpMax = Std["int"](co_doubleduck_dynamons2_data_GameplayDB.getBattleData().maxHP);
		this.dispatchEvent(new openfl_events_Event("HPChangeEvent"));
	}
	,getId: function() {
		return this._id;
	}
	,getData: function() {
		return this._data;
	}
	,setAutoHealTimes: function(start,target) {
		this._autoHealStartTime = start;
		this._autoHealTargetTime = target;
	}
	,setupAutoHealTimes: function() {
		if(this._hpCurr >= this._hpMax) {
			this.setAutoHealTimes(-1,-1);
			return;
		}
		var healTimeStr = co_doubleduck_dynamons2_data_GameplayDB.getMonLevelData(this._level).healTime;
		var timeParts = healTimeStr.split(":");
		var healTime = Std.parseInt(timeParts[0]) * 3600;
		healTime += Std.parseInt(timeParts[1]) * 60;
		healTime += Std.parseInt(timeParts[2]);
		var nowTime = Math.floor(co_doubleduck_utils_Utils.epochTime());
		var hpRatio = this._hpCurr / this._hpMax;
		this._autoHealStartTime = nowTime - Math.floor(hpRatio * healTime);
		this._autoHealTargetTime = this._autoHealStartTime + healTime;
	}
	,getAutoHealStartTime: function() {
		return this._autoHealStartTime;
	}
	,getAutoHealTargetTime: function() {
		return this._autoHealTargetTime;
	}
	,getPane: function(type) {
		var pane;
		if(this._panes.exists(type)) pane = this._panes.get(type); else {
			pane = new co_doubleduck_dynamons2_core_MonPane(this,type);
			this._panes.set(type,pane);
		}
		return pane;
	}
	,destroyPane: function(type) {
		if(this._panes.exists(type)) {
			this._panes.get(type).destroy();
			this._panes.remove(type);
		}
	}
	,resetBattleExtras: function() {
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_core_Mon.STAT_NAMES;
		while(_g < _g1.length) {
			var stat = _g1[_g];
			++_g;
			this._statDeltas.set(stat,0);
		}
		this.setState("");
		this._stateData = null;
	}
	,getState: function() {
		return this._hasState;
	}
	,setState: function(newState) {
		if(newState == this._hasState) return;
		var _g = this._hasState;
		switch(_g) {
		case "rage":
			var backAnim = this._stateAnimBack.removeChildAt(0);
			backAnim.stopAnim();
			var frontAnim = this._stateAnimFront.removeChildAt(0);
			frontAnim.destroy();
			break;
		case "sick":
			var sickAnim = this._stateAnimFront.removeChildAt(0);
			sickAnim.stopAnim();
			break;
		case "hypno":
			var hypnoMark = this._stateAnimFront.removeChildAt(0);
			co_doubleduck_utils_TweenChain.removeTweens(hypnoMark);
			break;
		}
		this._hasState = newState;
		var _g1 = this._hasState;
		switch(_g1) {
		case "rage":
			var backAnim1 = new co_doubleduck_utils_SimpleAnimSprite("images/session/abilities/fx/rage_fx_back.png",1,3,[0,1,2],true);
			backAnim1.setAnimFPS(10);
			backAnim1.set_x(-backAnim1.get_width() / 2);
			backAnim1.set_y(-backAnim1.get_height());
			this._stateAnimBack.addChild(backAnim1);
			var frontAnim1 = new co_doubleduck_dynamons2_core_RageAnimFx("active");
			frontAnim1.set_x(-frontAnim1.get_width() / 2);
			frontAnim1.set_y(-frontAnim1.get_height());
			this._stateAnimFront.addChild(frontAnim1);
			break;
		case "sick":
			var sickAnim1 = new co_doubleduck_utils_SimpleAnimSprite("images/session/abilities/fx/sick_fx.png",1,5,[0,0,0,0,0,0,0,1,2,3,4,4,4,3,2,1,0],true);
			sickAnim1.setAnimFPS(20);
			sickAnim1.set_x(-sickAnim1.get_width() / 2);
			sickAnim1.set_y(-this._bodyImg.get_height() - 20 * co_doubleduck_utils_DDAssets.scale - sickAnim1.get_height() / 2);
			this._stateAnimFront.addChild(sickAnim1);
			break;
		case "hypno":
			var hypnoMark1 = co_doubleduck_utils_DDAssets.getCenteredImage("images/session/abilities/fx/hypno_fx.png");
			hypnoMark1.set_y(-this._bodyImg.get_height() - 20 * co_doubleduck_utils_DDAssets.scale);
			co_doubleduck_utils_TweenAnimator.spin(hypnoMark1,1500);
			this._stateAnimFront.addChild(hypnoMark1);
			break;
		}
		this.dispatchEvent(new openfl_events_Event("ChangeStateEvent"));
	}
	,getStateData: function() {
		return this._stateData;
	}
	,setStateData: function(data) {
		this._stateData = data;
	}
	,offsetStat: function(stat,val) {
		if(HxOverrides.indexOf(co_doubleduck_dynamons2_core_Mon.STAT_NAMES,stat,0) == -1) return;
		var value = this._statDeltas.get(stat) + val;
		this._statDeltas.set(stat,value);
		null;
	}
	,getStat: function(stat,withDelta) {
		if(withDelta == null) withDelta = true;
		if(HxOverrides.indexOf(co_doubleduck_dynamons2_core_Mon.STAT_NAMES,stat,0) == -1) throw new js__$Boot_HaxeError("DDError: No such stat as '" + stat + "'");
		var dat = this.getLevelData(this._level);
		var val = Std["int"](Reflect.field(dat,stat));
		if(withDelta) val += this._statDeltas.get(stat);
		if(val < 1) return 1; else if(val > 150) return 150; else return val;
	}
	,getKind: function() {
		return this._data.kind;
	}
	,getLevel: function() {
		return this._level;
	}
	,getCurrXP: function() {
		return this._currXP;
	}
	,getTargetXP: function() {
		return this._targetXP;
	}
	,getXPRatio: function() {
		if(this._targetXP == -1) return 0.999;
		return Math.min(1,Math.max(0,this._currXP / this._targetXP));
	}
	,setCurrXP: function(xp) {
		this._currXP = xp;
	}
	,doLevelUp: function() {
		var _g2 = this;
		var box = new openfl_display_Sprite();
		this._currXP = 0;
		var oldStats = [];
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_core_Mon.STAT_NAMES;
		while(_g < _g1.length) {
			var stat = _g1[_g];
			++_g;
			oldStats.push(this.getStat(stat,false));
		}
		this._level++;
		this.updateMaxHP();
		this.setCurrHP(this._hpMax);
		if(this.getLevelData(this._level + 1) == null) this._targetXP = -1; else this._targetXP = Std["int"](this.getLevelData(this._level + 1).xp);
		this.dispatchEvent(new openfl_events_Event("ShowLevelupEvent"));
		var newAbils = co_doubleduck_dynamons2_core_Mon.getMonAbilities(this._id,this._level);
		var newAbil = this.compareAbils(this._abilities,newAbils);
		var newAbilIndex = 0;
		while(newAbil != null) {
			this._abilities[HxOverrides.indexOf(newAbils,newAbil,0)] = newAbil;
			var newSkillLabel = co_doubleduck_utils_Fonter.getString("NEW SKILL!",co_doubleduck_dynamons2_core_Mon.SKILL_FONT);
			newSkillLabel.set_y(40 * co_doubleduck_utils_DDAssets.scale);
			newSkillLabel.set_alpha(0);
			co_doubleduck_utils_TweenChain.get(newSkillLabel).wait(3500 * newAbilIndex).tto({ alpha : 1},200).wait(2500).tto({ alpha : 0},200).call($bind(box,box.removeChild),[newSkillLabel]);
			box.addChild(newSkillLabel);
			var skillIcon = new openfl_display_Sprite();
			var iconImg = co_doubleduck_utils_DDAssets.getImage("images/session/abilities/icons/" + newAbil.getId() + ".png");
			skillIcon.addChild(iconImg);
			var _g3 = iconImg;
			_g3.set_x(_g3.get_x() - iconImg.get_width() / 2);
			var _g4 = iconImg;
			_g4.set_y(_g4.get_y() - iconImg.get_height() / 2);
			skillIcon.set_y(newSkillLabel.get_y() + 60 * co_doubleduck_utils_DDAssets.scale);
			skillIcon.set_alpha(0);
			var skillTitle = co_doubleduck_utils_Fonter.getString(newAbil.getTitle(),co_doubleduck_dynamons2_core_Mon.LEVEL_FONT);
			skillTitle.set_alpha(0);
			skillTitle.set_y(skillIcon.get_y());
			var targetX = skillIcon.get_width() / 2 + skillTitle.get_width() / 2;
			var leMove = skillTitle.get_width() / 2;
			targetX -= leMove;
			box.addChild(skillTitle);
			box.addChild(skillIcon);
			var pad = 10 * co_doubleduck_utils_DDAssets.scale;
			skillIcon.set_scaleX(skillIcon.set_scaleY(0.1));
			var targetScale = 1.2;
			co_doubleduck_utils_TweenChain.get(skillIcon).wait(3500 * newAbilIndex).wait(500).tto({ scaleX : targetScale, scaleY : targetScale, alpha : 1},300,motion_easing_Sine.get_easeOut()).tto({ scaleX : 1, scaleY : 1},200,motion_easing_Sine.get_easeIn()).tto({ alpha : 1, x : skillIcon.get_x() - leMove - pad / 2},200).wait(1500).tto({ alpha : 0},200).call($bind(box,box.removeChild),[skillIcon]);
			co_doubleduck_utils_TweenChain.get(skillTitle).wait(3500 * newAbilIndex).wait(1000).tto({ alpha : 1, x : targetX + pad / 2},200).wait(1500).tto({ alpha : 0},200).call($bind(box,box.removeChild),[skillTitle]).call($bind(box,box.dispatchEvent),[new openfl_events_Event(openfl_events_Event.COMPLETE)]);
			newAbilIndex++;
			newAbil = this.compareAbils(this._abilities,newAbils);
		}
		if(newAbilIndex == 0) {
			var newStats = new co_doubleduck_dynamons2_meta_StatsPane();
			var _g5 = 0;
			var _g11 = co_doubleduck_dynamons2_core_Mon.STAT_NAMES;
			while(_g5 < _g11.length) {
				var stat1 = _g11[_g5];
				++_g5;
				newStats.setStat(stat1,co_doubleduck_dynamons2_meta_StatsBar.ratioForStat(stat1,oldStats.shift()));
			}
			newStats.set_x(-newStats.get_width() / 2);
			newStats.set_y(-5 * co_doubleduck_utils_DDAssets.scale);
			newStats.set_alpha(0);
			co_doubleduck_utils_TweenChain.get(newStats).tto({ alpha : 1},300).wait(500).call(function() {
				var _g6 = 0;
				var _g12 = co_doubleduck_dynamons2_core_Mon.STAT_NAMES;
				while(_g6 < _g12.length) {
					var stat2 = _g12[_g6];
					++_g6;
					newStats.setStat(stat2,co_doubleduck_dynamons2_meta_StatsBar.ratioForStat(stat2,_g2.getStat(stat2,false)),900);
				}
			}).wait(1700).tto({ alpha : 0},200).call($bind(box,box.removeChild),[newStats]).call($bind(box,box.dispatchEvent),[new openfl_events_Event(openfl_events_Event.COMPLETE)]);
			box.addChild(newStats);
		} else this._abilities = newAbils;
		return box;
	}
	,compareAbils: function(abilsA,abilsB) {
		var _g1 = 0;
		var _g = abilsB.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(i + 1 > abilsA.length) return abilsB[i];
			if(abilsB[i].getId() != abilsA[i].getId()) return abilsB[i];
		}
		return null;
	}
	,getLevelData: function(level) {
		var lvlTable = this._data.lvlTable;
		if(lvlTable.length >= level && Std["int"](lvlTable[level - 1].lvl) == level) return lvlTable[level - 1];
		var _g = 0;
		while(_g < lvlTable.length) {
			var lvlData = lvlTable[_g];
			++_g;
			if(lvlData.lvl == level) return lvlData;
		}
		return null;
	}
	,toggleCacheFx: function(flag) {
		var _g = 0;
		var _g1 = this.getAbilities();
		while(_g < _g1.length) {
			var abil = _g1[_g];
			++_g;
			abil.toggleCacheFx(flag);
		}
	}
	,getAbilities: function() {
		if(this._abilities == null) this._abilities = co_doubleduck_dynamons2_core_Mon.getMonAbilities(this._id,this._level);
		return this._abilities;
	}
	,getVisBodyImg: function() {
		return this._bodyImg;
	}
	,getVisBodyShadow: function() {
		return this._bodyShadow;
	}
	,getVisBody: function(facing) {
		if(facing == null) facing = "cache";
		if(facing != "cache") {
			var loc = "images/general/mons/" + this._id + "/" + facing + ".png";
			this._bodyImg = co_doubleduck_utils_DDAssets.getImage(loc);
			var _g = this._bodyImg;
			_g.set_x(_g.get_x() - this._bodyImg.get_width() / 2);
			var _g1 = this._bodyImg;
			_g1.set_y(_g1.get_y() - this._bodyImg.get_height());
			this._body = new openfl_display_Sprite();
			this._bodyShadow = co_doubleduck_utils_DDAssets.getImage("images/session/mon_shadow.png");
			var _g2 = this._bodyShadow;
			_g2.set_x(_g2.get_x() - this._bodyShadow.get_width() / 2);
			var _g3 = this._bodyShadow;
			_g3.set_y(_g3.get_y() - this._bodyShadow.get_height() * 0.75);
			this._stateAnimBack = new openfl_display_Sprite();
			this._stateAnimFront = new openfl_display_Sprite();
			this._body.addChild(this._bodyShadow);
			this._body.addChild(this._stateAnimBack);
			this._body.addChild(this._bodyImg);
			this._body.addChild(this._stateAnimFront);
		}
		return this._body;
	}
	,takeDamage: function(amount,duration) {
		this._hpCurr -= amount;
		if(this._hpCurr < 0) this._hpCurr = 0; else this._hpCurr = this._hpCurr;
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent("HPChangeEvent",{ dur : duration}));
		if(this._hpCurr == 0) this.dispatchEvent(new openfl_events_Event("DiedEvent"));
	}
	,passedTurn: function() {
		var _g = this._hasState;
		switch(_g) {
		case "rage":
			var left = Std["int"](this._stateData.turnsLeft);
			if(left == 0) this.setState("");
			this._stateData.turnsLeft = left - 1;
			break;
		case "sick":
			this.takeDamage(Std["int"](this._stateData),500);
			return 1300;
		}
		return 0;
	}
	,takeHeal: function(amount,duration) {
		this._hpCurr += amount;
		if(this._hpCurr > this._hpMax) this._hpCurr = this._hpMax; else this._hpCurr = this._hpCurr;
		if(!co_doubleduck_dynamons2_core_Battle.inBattleNow()) this.setupAutoHealTimes();
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent("HPChangeEvent",{ dur : duration}));
	}
	,getTotalHP: function() {
		return this._hpMax;
	}
	,setCurrHP: function(hp,duration) {
		if(duration == null) duration = 0;
		if(hp < this._hpCurr) this.takeDamage(this._hpCurr - hp,duration);
		if(hp > this._hpCurr) this.takeHeal(hp - this._hpCurr,duration);
	}
	,getCurrHP: function() {
		return this._hpCurr;
	}
	,destroy: function() {
		this.setState("");
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_core_MonPane.PANE_TYPES;
		while(_g < _g1.length) {
			var paneType = _g1[_g];
			++_g;
			this.destroyPane(paneType);
		}
	}
	,__class__: co_doubleduck_dynamons2_core_Mon
});
var co_doubleduck_dynamons2_core_MonPane = function(mon,type) {
	this._counted = false;
	this._healLabelPaused = false;
	openfl_display_Sprite.call(this);
	if(HxOverrides.indexOf(co_doubleduck_dynamons2_core_MonPane.PANE_TYPES,type,0) == -1) throw new js__$Boot_HaxeError("DDERROR: mon pane of type '" + type + "' doesn't exist");
	if(co_doubleduck_dynamons2_core_MonPane.HEAL_TIME_LABEL_THRESHOLD == -1) co_doubleduck_dynamons2_core_MonPane.HEAL_TIME_LABEL_THRESHOLD = Std["int"](co_doubleduck_dynamons2_data_GameplayDB.getGenData().healTimeLabelThreshold);
	this._mon = mon;
	this._type = type;
	this._showLevelupMark = true;
	this._prevLabelTimeDelta = -1;
	var monData = co_doubleduck_dynamons2_data_GameplayDB.getMon(this._mon.getId());
	this._counted = true;
	co_doubleduck_dynamons2_core_MonPane._typeCounts[HxOverrides.indexOf(co_doubleduck_dynamons2_core_MonPane.PANE_TYPES,this._type,0)]++;
	this._bg = co_doubleduck_utils_DDAssets.getImage("images/general/huds/pane_" + this._type + "_" + this._mon.getKind() + ".png");
	this.addChild(this._bg);
	var icon;
	if(this._type == "mini" || this._type == "thumb") {
		icon = co_doubleduck_utils_DDAssets.getImage("images/general/mons/" + this._mon.getId() + "/icon.png");
		if(this._type == "mini") {
			icon.set_x(5 * co_doubleduck_utils_DDAssets.scale);
			icon.set_y(6 * co_doubleduck_utils_DDAssets.scale);
		}
		if(this._type == "thumb") {
			icon.set_x(7 * co_doubleduck_utils_DDAssets.scale);
			icon.set_y(5 * co_doubleduck_utils_DDAssets.scale);
		}
		this.addChild(icon);
	}
	var title;
	if(this._type == "thumb" || this._type == "tooltip") {
		title = co_doubleduck_utils_Fonter.getString(monData.title,"images/fonts/white_stroked_small/");
		if(this._type == "thumb") {
			title.set_x(this._bg.get_width() / 2 - co_doubleduck_utils_DDAssets.scale);
			title.set_y(3 * co_doubleduck_utils_DDAssets.scale);
		}
		if(this._type == "tooltip") {
			title.set_x(7 * co_doubleduck_utils_DDAssets.scale + title.get_width() / 2);
			title.set_y(32 * co_doubleduck_utils_DDAssets.scale);
		}
		this.addChild(title);
	}
	if(this._type == "big") {
		title = co_doubleduck_utils_Fonter.getString(monData.title,"images/fonts/white_stroked_big/");
		title.set_x(7 * co_doubleduck_utils_DDAssets.scale + title.get_width() / 2);
		title.set_y(21 * co_doubleduck_utils_DDAssets.scale);
		this.addChild(title);
	}
	this._level = co_doubleduck_utils_Fonter.getString("#" + this._mon.getLevel(),"images/fonts/black_medium/");
	if(this._type == "big") {
		this._level.set_x(this._bg.get_width() - 28 * co_doubleduck_utils_DDAssets.scale);
		this._level.set_y(21 * co_doubleduck_utils_DDAssets.scale);
	}
	if(this._type == "mini") {
		this._level.set_x(this._bg.get_width() / 2);
		this._level.set_y(this._bg.get_height() - 11 * co_doubleduck_utils_DDAssets.scale);
	}
	if(this._type == "thumb") {
		this._level.set_x(76 * co_doubleduck_utils_DDAssets.scale);
		this._level.set_y(33 * co_doubleduck_utils_DDAssets.scale);
	}
	if(this._type == "tooltip") {
		this._level.set_x(this._bg.get_width() - 17 * co_doubleduck_utils_DDAssets.scale);
		this._level.set_y(32 * co_doubleduck_utils_DDAssets.scale);
	}
	this.addChild(this._level);
	if(this._type == "big") {
		this._hpBar = new co_doubleduck_utils_ProgBar(co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_big_bg.png"),co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_big_fill.png"));
		this._hpBar.set_maskFrom(0.03);
		this._hpBar.set_maskTo(0.97);
		this._hpBar.set_x(this._bg.get_width() / 2 - this._hpBar.get_width() / 2 - 3 * co_doubleduck_utils_DDAssets.scale);
		this._hpBar.set_y(this._bg.get_height() - 3 * co_doubleduck_utils_DDAssets.scale - this._hpBar.get_height());
	}
	if(this._type == "thumb") {
		this._hpBar = new co_doubleduck_utils_ProgBar(co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_small_bg.png"),co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_small_fill.png"));
		this._hpBar.set_maskFrom(0.09);
		this._hpBar.set_maskTo(0.91);
		this._hpBar.set_x(this._bg.get_width() - 8 * co_doubleduck_utils_DDAssets.scale - this._hpBar.get_width());
		this._hpBar.set_y(this._bg.get_height() - 3 * co_doubleduck_utils_DDAssets.scale - this._hpBar.get_height());
	}
	if(this._type == "tooltip") {
		this._hpBar = new co_doubleduck_utils_ProgBar(co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_med_bg.png"),co_doubleduck_utils_DDAssets.getImage("images/general/huds/hpbar_med_fill.png"));
		this._hpBar.set_maskFrom(0.04);
		this._hpBar.set_maskTo(0.96);
		this._hpBar.set_x(this._bg.get_width() / 2 - this._hpBar.get_width() / 2 + co_doubleduck_utils_DDAssets.scale);
		this._hpBar.set_y(this._bg.get_height() - 8 * co_doubleduck_utils_DDAssets.scale - this._hpBar.get_height());
	}
	if(this._hpBar != null) {
		this._hpBar.setFillPerc(this._mon.getCurrHP() / this._mon.getTotalHP());
		this.addChild(this._hpBar);
	}
	this.checkLevelupMark();
	this.checkStateMark();
	this._mon.addEventListener("HPChangeEvent",$bind(this,this.handleMon));
	this._mon.addEventListener("GainXPEvent",$bind(this,this.handleMon));
	this._mon.addEventListener("ChangeStateEvent",$bind(this,this.handleMon));
	this._mon.addEventListener("ShowLevelupEvent",$bind(this,this.handleMon));
};
$hxClasses["co.doubleduck.dynamons2.core.MonPane"] = co_doubleduck_dynamons2_core_MonPane;
co_doubleduck_dynamons2_core_MonPane.__name__ = ["co","doubleduck","dynamons2","core","MonPane"];
co_doubleduck_dynamons2_core_MonPane.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_MonPane.prototype = $extend(openfl_display_Sprite.prototype,{
	disableLevelupMark: function() {
		this._showLevelupMark = false;
		if(this._levelupMark != null) {
			this.removeChild(this._levelupMark);
			this._levelupMark = null;
		}
	}
	,enableLevelupMark: function() {
		this._showLevelupMark = true;
		this.checkLevelupMark();
	}
	,getMon: function() {
		return this._mon;
	}
	,handleMon: function(e) {
		if(e.type == "HPChangeEvent") {
			if(this._hpBar != null) {
				var dur = 200;
				if(js_Boot.__instanceof(e,co_doubleduck_utils_DynamicEvent)) dur = (js_Boot.__cast(e , co_doubleduck_utils_DynamicEvent)).data.dur;
				this._hpBar.setFillPerc(this._mon.getCurrHP() / this._mon.getTotalHP(),dur);
			}
		}
		if(e.type == "GainXPEvent") this.checkLevelupMark();
		if(e.type == "ChangeStateEvent") this.checkStateMark();
		if(e.type == "ShowLevelupEvent") {
			var newLevel = co_doubleduck_utils_Fonter.getString("#" + this._mon.getLevel(),"images/fonts/black_medium/");
			newLevel.set_x(this._level.get_x());
			newLevel.set_y(this._level.get_y());
			this.removeChild(this._level);
			this._level = newLevel;
			this.addChild(this._level);
		}
	}
	,checkLevelupMark: function() {
		if(!this._showLevelupMark) return;
		if(this._type == "big" || this._type == "thumb" || this._type == "tooltip") {
			if(this._mon.getXPRatio() == 1 && this._levelupMark == null) {
				this._levelupMark = co_doubleduck_utils_DDAssets.getImage("images/general/badge_levelup.png");
				if(this._type == "big") {
					this._levelupMark.set_x(this._bg.get_width() - 16 * co_doubleduck_utils_DDAssets.scale - this._levelupMark.get_width());
					this._levelupMark.set_y(-this._levelupMark.get_height() / 2 + 4 * co_doubleduck_utils_DDAssets.scale);
				}
				if(this._type == "thumb") {
					this._levelupMark.set_x(this._bg.get_width() - 8 * co_doubleduck_utils_DDAssets.scale - this._levelupMark.get_width());
					this._levelupMark.set_y(-this._levelupMark.get_height() / 2 + 3 * co_doubleduck_utils_DDAssets.scale);
				}
				if(this._type == "tooltip") this._levelupMark.set_x(this._bg.get_width() - 28 * co_doubleduck_utils_DDAssets.scale - this._levelupMark.get_width());
				this.addChild(this._levelupMark);
			}
			if(this._mon.getXPRatio() < 1 && this._levelupMark != null) {
				this.removeChild(this._levelupMark);
				this._levelupMark = null;
			}
		}
	}
	,updateHealTimeLabel: function() {
		if(this._type != "tooltip" || this._healLabelPaused) return;
		var timeDelta = this._mon.getAutoHealTargetTime() - Std["int"](co_doubleduck_utils_Utils.epochTime());
		if(timeDelta <= 0) {
			this._prevLabelTimeDelta = -1;
			if(this._healTimeLabel != null) {
				this.removeChild(this._healTimeLabel);
				this._healTimeLabel = null;
			}
			return;
		}
		if(this._prevLabelTimeDelta == -1 || this._prevLabelTimeDelta != timeDelta) {
			this._prevLabelTimeDelta = timeDelta;
			var labelX;
			var labelY;
			if(this._healTimeLabel != null) {
				labelX = this._healTimeLabel.get_x();
				labelY = this._healTimeLabel.get_y();
				this.removeChild(this._healTimeLabel);
				this._healTimeLabel = null;
			} else {
				labelX = this._hpBar.get_x() + this._hpBar.get_width() / 2;
				labelY = this._hpBar.get_y() + this._hpBar.get_height() / 2;
			}
			var label = "";
			if(timeDelta >= 3600) {
				var hours = Math.floor(timeDelta / 3600);
				if(hours > 0) {
					timeDelta -= hours * 3600;
					label += hours + "h ";
				}
			}
			if(timeDelta > 60) {
				var mins = Math.floor(timeDelta / 60);
				if(mins > 0) {
					timeDelta -= mins * 60;
					label += mins + "m ";
				}
			}
			if(this._prevLabelTimeDelta <= co_doubleduck_dynamons2_core_MonPane.HEAL_TIME_LABEL_THRESHOLD) {
				if(timeDelta > 0) label += timeDelta + "s ";
			}
			label = HxOverrides.substr(label,0,label.length - 1);
			this._healTimeLabel = co_doubleduck_utils_Fonter.getString(label,"images/fonts/white_shadow_small/");
			this._healTimeLabel.set_x(labelX);
			this._healTimeLabel.set_y(labelY);
			this.addChild(this._healTimeLabel);
		}
		co_doubleduck_utils_TweenChain.get(this._hpBar).wait(250).call($bind(this,this.updateHealTimeLabel));
	}
	,pauseHealTimeLabel: function(flag) {
		this._healLabelPaused = flag;
		if(!flag) this.updateHealTimeLabel();
	}
	,checkStateMark: function() {
		if(this._type != "big" && this._type != "thumb") return;
		if(this._monState != null) {
			this.removeChild(this._monState);
			this._monState = null;
		}
		var state = this._mon.getState();
		if(state != "") {
			this._monState = co_doubleduck_utils_DDAssets.getImage("images/session/ui/icon_" + state + ".png");
			if(this._type == "big") {
				this._monState.set_x(this._bg.get_x() + this._bg.get_width() / 2 - 5 * co_doubleduck_utils_DDAssets.scale - this._monState.get_width() / 2);
				this._monState.set_y(this._bg.get_y() + this._bg.get_height() - this._monState.get_height() / 2 - co_doubleduck_utils_DDAssets.scale);
			}
			if(this._type == "thumb") {
				this._monState.set_x(this._bg.get_x() + 34 * co_doubleduck_utils_DDAssets.scale - this._monState.get_width() / 2);
				this._monState.set_y(this._bg.get_y() + this._bg.get_height() - this._monState.get_height() / 2 - 4 * co_doubleduck_utils_DDAssets.scale);
			}
			this.addChild(this._monState);
		}
	}
	,destroy: function() {
		if(this._counted) {
			this._counted = false;
			co_doubleduck_dynamons2_core_MonPane._typeCounts[HxOverrides.indexOf(co_doubleduck_dynamons2_core_MonPane.PANE_TYPES,this._type,0)]--;
			null;
		} else null;
		if(this._type == "tooltip") co_doubleduck_utils_TweenChain.removeTweens(this._hpBar);
		this._mon.removeEventListener("HPChangeEvent",$bind(this,this.handleMon));
		this._mon.removeEventListener("GainXPEvent",$bind(this,this.handleMon));
		this._mon.removeEventListener("ChangeStateEvent",$bind(this,this.handleMon));
		this._mon.removeEventListener("ShowLevelupEvent",$bind(this,this.handleMon));
	}
	,__class__: co_doubleduck_dynamons2_core_MonPane
});
var co_doubleduck_dynamons2_core_UiHud = function(disableCatch) {
	openfl_display_Sprite.call(this);
	this._itemsUsed = 0;
	if(co_doubleduck_dynamons2_core_UiHud.BTN_SIZE == -1) co_doubleduck_dynamons2_core_UiHud.BTN_SIZE = 55 * co_doubleduck_utils_DDAssets.scale;
	this._disableCatch = disableCatch;
	this._seenTutor = false;
	this._overlay = new openfl_display_Sprite();
	this._overlay.get_graphics().beginFill(0);
	this._overlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
	this._overlay.get_graphics().endFill();
	var _g = this._overlay;
	_g.set_y(_g.get_y() - co_doubleduck_dynamons2_Game.getScreenSize().height);
	this._back = co_doubleduck_utils_DDAssets.getImage("images/general/hud_bg.png");
	var _g1 = this._back;
	_g1.set_y(_g1.get_y() - this._back.get_height());
	this.addChild(this._back);
	this._btnsY = this._back.get_y() + 6 * co_doubleduck_utils_DDAssets.scale;
	this._forcedPartySwap = false;
	this._mainBox = new openfl_display_Sprite();
	this.setupAbilities(co_doubleduck_dynamons2_meta_GameState.getPartyMain().getAbilities());
	this.addChild(this._mainBox);
	this._back.set_x(this._mainBox.get_x() - 13 * co_doubleduck_utils_DDAssets.scale);
	this._moreBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/ui/btn_more.png"));
	this._moreBtn.set_x(5 * co_doubleduck_utils_DDAssets.scale + this._moreBtn.get_width() / 2);
	this._moreBtn.set_y(this._btnsY);
	this._moreBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleMore));
	this.addChild(this._moreBtn);
	this._backBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/ui/btn_back.png"));
	this._backBtn.set_x(5 * co_doubleduck_utils_DDAssets.scale + this._backBtn.get_width() / 2);
	this._backBtn.set_y(this._btnsY);
	this._backBtn.set_alpha(0);
	this._backBtn.set_visible(false);
	this._backBtn.enabled = false;
	this._backBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleMoreBack));
	this.addChild(this._backBtn);
	this._miscBox = new openfl_display_Sprite();
	this._miscBox.mouseChildren = false;
	this._escapeBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/ui/btn_escape.png"));
	this._escapeBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleEscape));
	this._miscBox.addChild(this._escapeBtn);
	this._itemsBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/map/btn_items.png"));
	this._itemsBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleItemsBtn));
	this._miscBox.addChild(this._itemsBtn);
	this.setupCatchBtn();
	this.setupBox(this._miscBox,true);
	this._swapBox = new openfl_display_Sprite();
	this._swapBox.mouseChildren = this._swapBox.mouseEnabled = false;
	this.setupSwapPanes();
	var _g2 = this._swapBox;
	_g2.set_x(_g2.get_x() - 200 * co_doubleduck_utils_DDAssets.scale);
	var _g3 = this._swapBox;
	_g3.set_y(_g3.get_y() - 65 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(this._swapBox);
	var _g4 = this._miscBox;
	_g4.set_y(_g4.get_y() + 100 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(this._miscBox);
};
$hxClasses["co.doubleduck.dynamons2.core.UiHud"] = co_doubleduck_dynamons2_core_UiHud;
co_doubleduck_dynamons2_core_UiHud.__name__ = ["co","doubleduck","dynamons2","core","UiHud"];
co_doubleduck_dynamons2_core_UiHud.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_core_UiHud.prototype = $extend(openfl_display_Sprite.prototype,{
	partyUpdated: function() {
		this.setupAbilities(co_doubleduck_dynamons2_meta_GameState.getPartyMain().getAbilities());
		this.setupSwapPanes();
	}
	,setupCatchBtn: function() {
		if(this._disableCatch) return;
		var prevHas = this._hasDiscatch;
		this._hasDiscatch = co_doubleduck_dynamons2_meta_GameState.getItemAmount("discatch") > 0;
		var addBubble = false;
		if(this._catchBtn == null) {
			if(this._hasDiscatch) this._catchBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/ui/btn_catch.png")); else this._catchBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/ui/btn_catch_off.png"));
			addBubble = true;
			this._catchBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleCatch));
			this._miscBox.addChild(this._catchBtn);
		} else if(prevHas && !this._hasDiscatch) {
			this._catchBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleCatch));
			var newCatch = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/ui/btn_catch_off.png"));
			newCatch.set_x(this._catchBtn.get_x());
			newCatch.set_y(this._catchBtn.get_y());
			newCatch.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleCatch));
			this._miscBox.addChildAt(newCatch,this._miscBox.getChildIndex(this._catchBtn));
			this._miscBox.removeChild(this._catchBtn);
			this._catchBtn = newCatch;
			this._discatchAmount = null;
			addBubble = true;
		}
		if(addBubble) {
			var bubble = co_doubleduck_utils_DDAssets.getImage("images/general/badge_red.png");
			bubble.set_x(9 * co_doubleduck_utils_DDAssets.scale);
			bubble.set_y(-34 * co_doubleduck_utils_DDAssets.scale);
			this._catchBtn.addChild(bubble);
		}
		this._catchBtn.enabled = this._hasDiscatch;
		if(this._discatchAmount != null) {
			this._catchBtn.removeChild(this._discatchAmount);
			this._discatchAmount = null;
		}
		this._discatchAmount = co_doubleduck_utils_Fonter.getString("" + co_doubleduck_dynamons2_meta_GameState.getItemAmount("discatch"),"images/fonts/white_stroked_small/");
		this._discatchAmount.set_x(21 * co_doubleduck_utils_DDAssets.scale);
		this._discatchAmount.set_y(-21 * co_doubleduck_utils_DDAssets.scale);
		this._catchBtn.addChild(this._discatchAmount);
	}
	,setupAbilities: function(abilities) {
		var existed = false;
		while(this._mainBox.get_numChildren() > 0) {
			existed = true;
			this._mainBox.removeChildAt(0).removeEventListener("ActedEvent",$bind(this,this.handleAbility));
		}
		var _g1 = 0;
		var _g = abilities.length;
		while(_g1 < _g) {
			var i = _g1++;
			var curr = abilities[i].getIcon();
			curr.addEventListener("ActedEvent",$bind(this,this.handleAbility));
			this._mainBox.addChild(curr);
		}
		this.setupBox(this._mainBox,!existed);
	}
	,setupSwapPanes: function() {
		while(this._swapBox.get_numChildren() > 0) {
			var pane = this._swapBox.getChildAt(0);
			this._swapBox.removeChildAt(0);
			pane.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleMonSwap));
		}
		var _g1 = 1;
		var _g = co_doubleduck_dynamons2_meta_GameState.getParty().length;
		while(_g1 < _g) {
			var monInd = _g1++;
			var curr = co_doubleduck_dynamons2_meta_GameState.getParty()[monInd].getPane("thumb");
			if(curr.getMon().getCurrHP() > 0) curr.addEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleMonSwap)); else curr.set_alpha(0.25);
			curr.set_x(8 * co_doubleduck_utils_DDAssets.scale);
			curr.set_y(-75 * co_doubleduck_utils_DDAssets.scale * monInd);
			this._swapBox.addChild(curr);
		}
	}
	,setupBox: function(box,placeBox) {
		if(placeBox == null) placeBox = true;
		var _g1 = 0;
		var _g = box.get_numChildren();
		while(_g1 < _g) {
			var i = _g1++;
			box.getChildAt(i).set_x((i + 0.5) * co_doubleduck_dynamons2_core_UiHud.BTN_SIZE + i * 4 * co_doubleduck_utils_DDAssets.scale);
		}
		box.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width);
		var _g2 = box;
		_g2.set_x(_g2.get_x() - box.get_numChildren() * (co_doubleduck_dynamons2_core_UiHud.BTN_SIZE + 4 * co_doubleduck_utils_DDAssets.scale));
		if(placeBox) box.set_y(this._btnsY);
	}
	,toggleMoreVis: function(flag) {
		if(flag) {
			this._moreBtn.enabled = true;
			co_doubleduck_utils_TweenChain.get(this._moreBtn).tto({ alpha : 1},200);
		} else this._moreBtn.set_alpha(0);
	}
	,rigNextAbil: function(abilId) {
		if(abilId == "") return;
		this._moreBtn.enabled = false;
		var abils = co_doubleduck_dynamons2_meta_GameState.getPartyMain().getAbilities();
		var _g = 0;
		while(_g < abils.length) {
			var abil = abils[_g];
			++_g;
			var abilIcon = abil.getIcon();
			if(abil.getId() == abilId) {
				abilIcon.mouseEnabled = abilIcon.mouseChildren = true;
				if(this._abilForceHand == null) {
					var hand = co_doubleduck_utils_DDAssets.getImage("images/onboarding/hand.png");
					var _g1 = hand;
					_g1.set_x(_g1.get_x() - 17 * co_doubleduck_utils_DDAssets.scale);
					var _g11 = hand;
					_g11.set_y(_g11.get_y() - 9 * co_doubleduck_utils_DDAssets.scale);
					this._abilForceHand = new openfl_display_Sprite();
					this._abilForceHand.addChild(hand);
					this._abilForceHand.mouseChildren = this._abilForceHand.mouseEnabled = false;
					this._abilForceHand.set_alpha(0);
					this._abilForceHand.set_rotation(-90);
					this._mainBox.addChild(this._abilForceHand);
				} else {
					co_doubleduck_utils_TweenChain.removeTweens(this._abilForceHand);
					this._abilForceHand.set_alpha(0);
				}
				this._abilForceHand.set_x(abilIcon.get_x());
				this._abilForceHand.set_y(abilIcon.get_y());
				co_doubleduck_utils_TweenChain.get(this._abilForceHand).tto({ alpha : 1},300);
				co_doubleduck_utils_TweenAnimator.nudge(this._abilForceHand);
			} else abilIcon.mouseEnabled = abilIcon.mouseChildren = false;
		}
	}
	,unrigAblis: function() {
		var abils = co_doubleduck_dynamons2_meta_GameState.getPartyMain().getAbilities();
		var _g = 0;
		while(_g < abils.length) {
			var abil = abils[_g];
			++_g;
			var abilIcon = abil.getIcon();
			abilIcon.mouseEnabled = abilIcon.mouseChildren = true;
		}
	}
	,handleAbility: function(e) {
		if(this._abilForceHand != null) {
			co_doubleduck_utils_TweenChain.removeTweens(this._abilForceHand);
			co_doubleduck_utils_TweenChain.get(this._abilForceHand).tto({ alpha : 0},100);
		}
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent("ActedEvent",e.data));
	}
	,handleMonSwap: function(e) {
		var pane;
		if(js_Boot.__instanceof(e.target,co_doubleduck_dynamons2_core_MonPane)) pane = e.target; else pane = e.currentTarget;
		var eData = { };
		eData.mon = pane.getMon();
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent("SwapEvent",eData));
		if(this._seenTutor) {
			if(this._escapeBtn != null) this._escapeBtn.enabled = true;
			if(this._catchBtn != null) this._catchBtn.enabled = this._hasDiscatch;
		}
		if(this._forcedPartySwap) {
			this._forcedPartySwap = false;
			if(this._catchBtn != null) {
				this._catchBtn.enabled = this._hasDiscatch;
				this._catchBtn.set_alpha(1);
			}
			if(this._itemsBtn != null) {
				this._itemsBtn.enabled = true;
				this._itemsBtn.set_alpha(1);
			}
			this._backBtn.enabled = true;
			this._backBtn.set_alpha(1);
		}
		this._backBtn.enabled = false;
		this._miscBox.mouseChildren = false;
		co_doubleduck_utils_TweenChain.get(this._backBtn).wait(250).call($bind(this,this.toggleMore),[false]);
	}
	,handleItemsBtn: function(e) {
		co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_INVENTORY);
		var invScr = new co_doubleduck_dynamons2_meta_InventoryScr(true,true,!this._disableCatch);
		invScr.addEventListener("ClosedScreenEvent",$bind(this,this.handleItemsScr));
		invScr.set_y(-this.get_y());
		this.addChild(invScr);
	}
	,handleItemsScr: function(e) {
		var invScr = e.target;
		invScr.removeEventListener("ClosedScreenEvent",$bind(this,this.handleItemsScr));
		this.removeChild(invScr);
		if(e.data != null && e.data.choseItem != null) {
			if(e.data.ability != null) {
				this._itemsUsed++;
				this.toggleMore(false);
				this.dispatchEvent(new co_doubleduck_utils_DynamicEvent("ActedEvent",e.data));
			} else if(e.data.choseItem == "discatch") this.tryCatch();
		}
	}
	,handleMore: function(e) {
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_SHOW)) co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT);
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_SHOW)) {
			co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_ACT);
			this.unrigAblis();
		}
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_MORE)) {
			co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_INVENTORY);
			this.unrigAblis();
		}
		this.toggleMore(true);
	}
	,handleMoreBack: function(e) {
		this.toggleMore(false);
	}
	,toggleMore: function(flag) {
		var _g = this;
		var dur = 200;
		var oldBtn = this._backBtn;
		var newBtn = this._moreBtn;
		var oldBox = this._miscBox;
		var newBox = this._mainBox;
		if(flag) {
			oldBtn = this._moreBtn;
			newBtn = this._backBtn;
			oldBox = this._mainBox;
			newBox = this._miscBox;
		}
		oldBtn.enabled = false;
		newBtn.set_visible(true);
		co_doubleduck_utils_TweenChain.get(oldBtn).tto({ alpha : 0},dur);
		co_doubleduck_utils_TweenChain.get(newBtn).tto({ alpha : 1},dur);
		if(flag) {
			co_doubleduck_utils_TweenChain.get(this._swapBox).wait(100).tto({ x : 0},dur,motion_easing_Sine.get_easeOut());
			this._overlay.set_alpha(0);
			this.addChildAt(this._overlay,0);
			co_doubleduck_utils_TweenChain.get(this._overlay).tto({ alpha : 0.7},dur);
		} else {
			this._swapBox.mouseChildren = this._swapBox.mouseEnabled = false;
			co_doubleduck_utils_TweenChain.get(this._swapBox).tto({ x : -200 * co_doubleduck_utils_DDAssets.scale},dur,motion_easing_Sine.get_easeIn());
			co_doubleduck_utils_TweenChain.get(this._overlay).tto({ alpha : 0},dur).call($bind(this,this.removeChild),[this._overlay]);
		}
		oldBox.mouseChildren = false;
		co_doubleduck_utils_TweenChain.get(oldBox).tto({ y : newBox.get_y()},dur,motion_easing_Sine.get_easeIn());
		co_doubleduck_utils_TweenChain.get(newBox).wait(100).tto({ y : oldBox.get_y()},dur,motion_easing_Sine.get_easeOut()).wait(50).call(function() {
			if(flag) _g._swapBox.mouseChildren = _g._swapBox.mouseEnabled = true;
			newBox.mouseChildren = true;
			oldBtn.set_visible(false);
			if(!_g._forcedPartySwap) newBtn.enabled = true;
		});
		if(oldBox.get_numChildren() != newBox.get_numChildren()) co_doubleduck_utils_TweenChain.get(this._back).tto({ x : newBox.get_x() - 13 * co_doubleduck_utils_DDAssets.scale},dur,motion_easing_Sine.get_easeInOut());
	}
	,forcePartySwap: function() {
		if(this._miscBox.get_y() > this._mainBox.get_y()) this.toggleMore(true);
		co_doubleduck_utils_TweenChain.removeTweens(this._backBtn);
		this._forcedPartySwap = true;
		if(this._catchBtn != null) {
			this._catchBtn.enabled = false;
			this._catchBtn.set_alpha(0.3);
		}
		if(this._itemsBtn != null) {
			this._itemsBtn.enabled = false;
			this._itemsBtn.set_alpha(0.3);
		}
		this._backBtn.enabled = false;
		this._backBtn.set_alpha(0);
	}
	,handleCatch: function(e) {
		var discatchAmount = co_doubleduck_dynamons2_meta_GameState.getItemAmount("discatch");
		co_doubleduck_dynamons2_meta_GameState.setItemAmount("discatch",discatchAmount - 1);
		this.tryCatch();
	}
	,tryCatch: function() {
		this.toggleMore(false);
		this.dispatchEvent(new openfl_events_Event("CatchEvent"));
		this.setupCatchBtn();
	}
	,handleEscape: function(e) {
		this._escapeBtn.enabled = false;
		this.dispatchEvent(new openfl_events_Event("EscapeEvent"));
	}
	,getItemsUsed: function() {
		return this._itemsUsed;
	}
	,destroy: function() {
		var _g1 = 0;
		var _g = this._mainBox.get_numChildren();
		while(_g1 < _g) {
			var i = _g1++;
			var curr = this._mainBox.getChildAt(i);
			curr.removeEventListener("ActedEvent",$bind(this,this.handleAbility));
		}
		this._moreBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleMore));
		this._backBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleMoreBack));
		this._escapeBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleEscape));
		if(this._catchBtn != null) this._catchBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleCatch));
		var _g11 = 0;
		var _g2 = this._miscBox.get_numChildren();
		while(_g11 < _g2) {
			var i1 = _g11++;
			var curr1 = this._miscBox.getChildAt(i1);
			if(curr1.hasEventListener("SwapEvent")) curr1.removeEventListener("SwapEvent",$bind(this,this.handleMonSwap));
		}
	}
	,__class__: co_doubleduck_dynamons2_core_UiHud
});
var co_doubleduck_dynamons2_data_DynaUtils = function() { };
$hxClasses["co.doubleduck.dynamons2.data.DynaUtils"] = co_doubleduck_dynamons2_data_DynaUtils;
co_doubleduck_dynamons2_data_DynaUtils.__name__ = ["co","doubleduck","dynamons2","data","DynaUtils"];
co_doubleduck_dynamons2_data_DynaUtils.rollWithOdds = function(pool) {
	if(pool == null || pool.length == 0) return null;
	var totalOdds = 0;
	var _g = 0;
	while(_g < pool.length) {
		var currDat = pool[_g];
		++_g;
		totalOdds += Std["int"](currDat.odds);
	}
	var rolled = Std.random(totalOdds);
	var _g1 = 0;
	while(_g1 < pool.length) {
		var currDat1 = pool[_g1];
		++_g1;
		rolled -= Std["int"](currDat1.odds);
		if(rolled < 0) return currDat1;
	}
	return pool[pool.length - 1];
};
co_doubleduck_dynamons2_data_DynaUtils.getByAdvance = function(datas) {
	var data = null;
	var advScore = co_doubleduck_dynamons2_meta_GameState.getAdvanceScore();
	var _g = 0;
	while(_g < datas.length) {
		var curr = datas[_g];
		++_g;
		if(Std["int"](curr.ifAdvancedTo) > advScore) return data;
		data = curr;
	}
	return data;
};
co_doubleduck_dynamons2_data_DynaUtils.getByAdvanceDist = function(datas,currAdv) {
	var data = null;
	var advDist = co_doubleduck_dynamons2_meta_GameState.getAdvanceScore() - currAdv;
	var _g = 0;
	while(_g < datas.length) {
		var curr = datas[_g];
		++_g;
		if(Std["int"](curr.distFromAdvance) == advDist) return curr;
		if(Std["int"](curr.distFromAdvance) > advDist) return data;
		data = curr;
	}
	return data;
};
var co_doubleduck_dynamons2_data_GameplayDB = function() {
	this.data = JSON.parse(openfl_Assets.getText("data/gameplay.js"));
};
$hxClasses["co.doubleduck.dynamons2.data.GameplayDB"] = co_doubleduck_dynamons2_data_GameplayDB;
co_doubleduck_dynamons2_data_GameplayDB.__name__ = ["co","doubleduck","dynamons2","data","GameplayDB"];
co_doubleduck_dynamons2_data_GameplayDB._instance = null;
co_doubleduck_dynamons2_data_GameplayDB.instance = function() {
	if(co_doubleduck_dynamons2_data_GameplayDB._instance == null) co_doubleduck_dynamons2_data_GameplayDB._instance = new co_doubleduck_dynamons2_data_GameplayDB();
	return co_doubleduck_dynamons2_data_GameplayDB._instance;
};
co_doubleduck_dynamons2_data_GameplayDB.getData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.instance().data;
};
co_doubleduck_dynamons2_data_GameplayDB.setData = function(data) {
	co_doubleduck_dynamons2_data_GameplayDB.instance().data = data;
};
co_doubleduck_dynamons2_data_GameplayDB.getMapNodes = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().mapNodes;
};
co_doubleduck_dynamons2_data_GameplayDB.getMapNode = function(nodeId) {
	var nodes = co_doubleduck_dynamons2_data_GameplayDB.getMapNodes();
	if(nodeId <= nodes.length && nodes[nodeId - 1].id == nodeId) return nodes[nodeId - 1];
	var _g = 0;
	while(_g < nodes.length) {
		var dat = nodes[_g];
		++_g;
		if(dat.id == nodeId) return dat;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.getMapData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().mapData;
};
co_doubleduck_dynamons2_data_GameplayDB.getMapPacks = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().mapPacks;
};
co_doubleduck_dynamons2_data_GameplayDB.getMapPack = function(packId) {
	var packs = co_doubleduck_dynamons2_data_GameplayDB.getMapPacks();
	var _g = 0;
	while(_g < packs.length) {
		var dat = packs[_g];
		++_g;
		if(dat.id == packId) return dat;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.getLootData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().loot;
};
co_doubleduck_dynamons2_data_GameplayDB.getAllItems = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().items;
};
co_doubleduck_dynamons2_data_GameplayDB.getItem = function(itemId) {
	var items = co_doubleduck_dynamons2_data_GameplayDB.getAllItems();
	var _g = 0;
	while(_g < items.length) {
		var dat = items[_g];
		++_g;
		if(dat.id == itemId) return dat;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.getAllMons = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().mons;
};
co_doubleduck_dynamons2_data_GameplayDB.getMon = function(monId) {
	var mons = co_doubleduck_dynamons2_data_GameplayDB.getAllMons();
	var _g = 0;
	while(_g < mons.length) {
		var dat = mons[_g];
		++_g;
		if(dat.id == monId) return dat;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.getMonMaxLevel = function(monId) {
	var levelsDat = co_doubleduck_dynamons2_data_GameplayDB.getMon(monId).lvlTable;
	return Std["int"](levelsDat[levelsDat.length - 1].lvl);
};
co_doubleduck_dynamons2_data_GameplayDB.getAllAbilities = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().abilities;
};
co_doubleduck_dynamons2_data_GameplayDB.getAbility = function(id) {
	var abilities = co_doubleduck_dynamons2_data_GameplayDB.getAllAbilities();
	var _g = 0;
	while(_g < abilities.length) {
		var dat = abilities[_g];
		++_g;
		if(dat.id == id) return dat;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.getEnergyData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().energy;
};
co_doubleduck_dynamons2_data_GameplayDB.getGenData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().genData;
};
co_doubleduck_dynamons2_data_GameplayDB.getBattleData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().battleData;
};
co_doubleduck_dynamons2_data_GameplayDB.getTutorialData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().tutorial;
};
co_doubleduck_dynamons2_data_GameplayDB.getArenaData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().arenaData;
};
co_doubleduck_dynamons2_data_GameplayDB.getShopData = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().lootShop;
};
co_doubleduck_dynamons2_data_GameplayDB.getShopProducts = function() {
	return co_doubleduck_dynamons2_data_GameplayDB.getData().lootShop.products;
};
co_doubleduck_dynamons2_data_GameplayDB.getShopProduct = function(prodId) {
	var prods = co_doubleduck_dynamons2_data_GameplayDB.getShopProducts();
	var _g = 0;
	while(_g < prods.length) {
		var dat = prods[_g];
		++_g;
		if(dat.id == prodId) return dat;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.getMonLevelData = function(monLevel) {
	var levelsDat = co_doubleduck_dynamons2_data_GameplayDB.getData().monLevels;
	if(monLevel <= levelsDat.length && Std["int"](levelsDat[monLevel - 1].level) == monLevel) return levelsDat[monLevel - 1];
	var _g = 0;
	while(_g < levelsDat.length) {
		var dat = levelsDat[_g];
		++_g;
		if(Std["int"](dat.level) == monLevel) return dat;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.getDialog = function(id) {
	var allDialogs = co_doubleduck_dynamons2_data_GameplayDB.getData().dialogs;
	var _g1 = 0;
	var _g = allDialogs.length;
	while(_g1 < _g) {
		var dialogInd = _g1++;
		var currDialog = allDialogs[dialogInd];
		if(currDialog.id == id) return currDialog;
	}
	return null;
};
co_doubleduck_dynamons2_data_GameplayDB.prototype = {
	__class__: co_doubleduck_dynamons2_data_GameplayDB
};
var co_doubleduck_dynamons2_data_Persistence = function() { };
$hxClasses["co.doubleduck.dynamons2.data.Persistence"] = co_doubleduck_dynamons2_data_Persistence;
co_doubleduck_dynamons2_data_Persistence.__name__ = ["co","doubleduck","dynamons2","data","Persistence"];
co_doubleduck_dynamons2_data_Persistence._storageAdapter = null;
co_doubleduck_dynamons2_data_Persistence.init = function(domain) {
	if(domain == null) domain = "";
	co_doubleduck_dynamons2_data_Persistence._storageAdapter = co_doubleduck_utils_data_StorageAdapter.get(domain,co_doubleduck_utils_data_StorageAdapterType.LOCAL_STORAGE);
};
co_doubleduck_dynamons2_data_Persistence.initGameData = function() {
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.SEEN_DIALOGS);
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.MUTE_STATE,"false");
	co_doubleduck_dynamons2_data_Persistence.initInt(co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS,1);
	co_doubleduck_dynamons2_data_Persistence.initInt(co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS,-1);
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED,"a");
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.MONS_DATA,"");
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA,"init");
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.NODES_BEATED,"1");
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.ARENA_ROLL,"");
	co_doubleduck_dynamons2_data_Persistence.initString(co_doubleduck_dynamons2_data_DataKey.ARENA_BEATED,"false");
	co_doubleduck_dynamons2_data_Persistence.initInt(co_doubleduck_dynamons2_data_DataKey.ARENA_LAST_ROLL,-1);
};
co_doubleduck_dynamons2_data_Persistence.getInt = function(key) {
	return co_doubleduck_dynamons2_data_Persistence._storageAdapter.getInt(key);
};
co_doubleduck_dynamons2_data_Persistence.setInt = function(key,val) {
	co_doubleduck_dynamons2_data_Persistence._storageAdapter.setInt(key,val);
};
co_doubleduck_dynamons2_data_Persistence.initInt = function(key,defaultValue) {
	if(defaultValue == null) defaultValue = 0;
	co_doubleduck_dynamons2_data_Persistence._storageAdapter.initInt(key,defaultValue);
};
co_doubleduck_dynamons2_data_Persistence.getFloat = function(key) {
	return co_doubleduck_dynamons2_data_Persistence._storageAdapter.getFloat(key);
};
co_doubleduck_dynamons2_data_Persistence.setFloat = function(key,val) {
	co_doubleduck_dynamons2_data_Persistence._storageAdapter.setFloat(key,val);
};
co_doubleduck_dynamons2_data_Persistence.initFloat = function(key,defaultValue) {
	if(defaultValue == null) defaultValue = 0;
	co_doubleduck_dynamons2_data_Persistence._storageAdapter.initFloat(key,defaultValue);
};
co_doubleduck_dynamons2_data_Persistence.getString = function(key) {
	return co_doubleduck_dynamons2_data_Persistence._storageAdapter.getString(key);
};
co_doubleduck_dynamons2_data_Persistence.setString = function(key,val) {
	co_doubleduck_dynamons2_data_Persistence._storageAdapter.setString(key,val);
};
co_doubleduck_dynamons2_data_Persistence.initString = function(key,defaultValue) {
	if(defaultValue == null) defaultValue = "";
	co_doubleduck_dynamons2_data_Persistence._storageAdapter.initString(key,defaultValue);
};
co_doubleduck_dynamons2_data_Persistence.clear = function() {
	co_doubleduck_dynamons2_data_Persistence._storageAdapter.clear();
};
co_doubleduck_dynamons2_data_Persistence.adapter = function() {
	return co_doubleduck_dynamons2_data_Persistence._storageAdapter;
};
var co_doubleduck_dynamons2_data_DataKey = $hxClasses["co.doubleduck.dynamons2.data.DataKey"] = { __ename__ : ["co","doubleduck","dynamons2","data","DataKey"], __constructs__ : ["SEEN_DIALOGS","MUTE_STATE","PLAYER_COINS","MAP_PACKS_UNLOCKED","NODES_BEATED","MAP_PLAYER_POS","MONS_DATA","ITEMS_DATA","ARENA_ROLL","ARENA_LAST_ROLL","ARENA_BEATED"] };
co_doubleduck_dynamons2_data_DataKey.SEEN_DIALOGS = ["SEEN_DIALOGS",0];
co_doubleduck_dynamons2_data_DataKey.SEEN_DIALOGS.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.SEEN_DIALOGS.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.MUTE_STATE = ["MUTE_STATE",1];
co_doubleduck_dynamons2_data_DataKey.MUTE_STATE.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.MUTE_STATE.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS = ["PLAYER_COINS",2];
co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED = ["MAP_PACKS_UNLOCKED",3];
co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.NODES_BEATED = ["NODES_BEATED",4];
co_doubleduck_dynamons2_data_DataKey.NODES_BEATED.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.NODES_BEATED.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS = ["MAP_PLAYER_POS",5];
co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.MONS_DATA = ["MONS_DATA",6];
co_doubleduck_dynamons2_data_DataKey.MONS_DATA.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.MONS_DATA.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA = ["ITEMS_DATA",7];
co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.ARENA_ROLL = ["ARENA_ROLL",8];
co_doubleduck_dynamons2_data_DataKey.ARENA_ROLL.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.ARENA_ROLL.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.ARENA_LAST_ROLL = ["ARENA_LAST_ROLL",9];
co_doubleduck_dynamons2_data_DataKey.ARENA_LAST_ROLL.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.ARENA_LAST_ROLL.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.ARENA_BEATED = ["ARENA_BEATED",10];
co_doubleduck_dynamons2_data_DataKey.ARENA_BEATED.toString = $estr;
co_doubleduck_dynamons2_data_DataKey.ARENA_BEATED.__enum__ = co_doubleduck_dynamons2_data_DataKey;
co_doubleduck_dynamons2_data_DataKey.__empty_constructs__ = [co_doubleduck_dynamons2_data_DataKey.SEEN_DIALOGS,co_doubleduck_dynamons2_data_DataKey.MUTE_STATE,co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS,co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED,co_doubleduck_dynamons2_data_DataKey.NODES_BEATED,co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS,co_doubleduck_dynamons2_data_DataKey.MONS_DATA,co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA,co_doubleduck_dynamons2_data_DataKey.ARENA_ROLL,co_doubleduck_dynamons2_data_DataKey.ARENA_LAST_ROLL,co_doubleduck_dynamons2_data_DataKey.ARENA_BEATED];
var co_doubleduck_dynamons2_meta_CaptainHud = function(enemyId,monCount) {
	openfl_display_Sprite.call(this);
	this._box = new co_doubleduck_utils_DrawBuffer();
	var icon = co_doubleduck_utils_DDAssets.getImage("images/general/enemies/" + enemyId + "_icon.png");
	this._box.add(icon);
	var titleStr = enemyId.toUpperCase();
	var title = co_doubleduck_utils_Fonter.getString(titleStr.toUpperCase(),"images/fonts/white_stroked_big/");
	title.set_x(icon.get_width() + 5 * co_doubleduck_utils_DDAssets.scale + title.get_width() / 2);
	title.set_y(co_doubleduck_utils_DDAssets.scale + title.get_height() / 2);
	this._box.add(title);
	this._activeDisks = [];
	var pos = icon.get_width() + 5 * co_doubleduck_utils_DDAssets.scale;
	var _g = 0;
	while(_g < monCount) {
		var i = _g++;
		var disk = co_doubleduck_utils_DDAssets.getImage("images/session/ui/disk_icon.png");
		disk.set_x(pos);
		disk.set_y(icon.get_height() - disk.get_height() - 2 * co_doubleduck_utils_DDAssets.scale);
		pos += disk.get_width() + co_doubleduck_utils_DDAssets.scale;
		this._activeDisks.push(disk);
		this._box.add(disk);
	}
	this._box.render();
	this.addChild(this._box);
};
$hxClasses["co.doubleduck.dynamons2.meta.CaptainHud"] = co_doubleduck_dynamons2_meta_CaptainHud;
co_doubleduck_dynamons2_meta_CaptainHud.__name__ = ["co","doubleduck","dynamons2","meta","CaptainHud"];
co_doubleduck_dynamons2_meta_CaptainHud.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_CaptainHud.prototype = $extend(openfl_display_Sprite.prototype,{
	feintMon: function() {
		if(this._activeDisks.length > 0) {
			this._activeDisks.pop().set_alpha(0.3);
			this._box.render();
		}
	}
	,__class__: co_doubleduck_dynamons2_meta_CaptainHud
});
var co_doubleduck_dynamons2_meta_DialogBox = function(id,sendEvents) {
	if(sendEvents == null) sendEvents = false;
	openfl_display_Sprite.call(this);
	if(!co_doubleduck_dynamons2_meta_DialogBox._createDialog) throw new js__$Boot_HaxeError("DDError: Don't create dialog manually. Use static showDialog() function.");
	this._sendEvents = sendEvents;
	co_doubleduck_dynamons2_meta_DialogBox._createDialog = false;
	this._overlay = new openfl_display_Sprite();
	this._overlay.get_graphics().beginFill(0,0.6);
	this._overlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
	this._overlay.get_graphics().endFill();
	this._dialogData = co_doubleduck_dynamons2_data_GameplayDB.getDialog(id);
	this._currMsgInd = 0;
	var msgs = this._dialogData.content;
	this._speakers = [];
	var _g = 0;
	while(_g < msgs.length) {
		var msg = msgs[_g];
		++_g;
		var who = msg.who;
		var speaker = who.split(":")[1].split("-")[0];
		this._speakers.push(speaker);
	}
	if(this._sendEvents) {
		var edata = { };
		edata.dialogId = this._dialogData.id;
		co_doubleduck_dynamons2_Game.reportEvent("dialog_start",edata);
	}
	co_doubleduck_utils_TweenChain.removeTweens(this._overlay);
	this._overlay.set_alpha(0.01);
	var addOverlay = true;
	if(this._dialogData.overlay != null && this._dialogData.overlay == false) addOverlay = false;
	this.addChild(this._overlay);
	co_doubleduck_utils_TweenChain.get(this._overlay).wait(100).tto({ alpha : addOverlay?1:0.01},250).call($bind(this,this.showNextMsg));
};
$hxClasses["co.doubleduck.dynamons2.meta.DialogBox"] = co_doubleduck_dynamons2_meta_DialogBox;
co_doubleduck_dynamons2_meta_DialogBox.__name__ = ["co","doubleduck","dynamons2","meta","DialogBox"];
co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog = function(id) {
	if(co_doubleduck_dynamons2_meta_DialogBox._dialogsSeen == null) {
		var dat = co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.SEEN_DIALOGS);
		if(dat == null || dat == "") co_doubleduck_dynamons2_meta_DialogBox._dialogsSeen = []; else co_doubleduck_dynamons2_meta_DialogBox._dialogsSeen = dat.split(",");
	}
	return HxOverrides.indexOf(co_doubleduck_dynamons2_meta_DialogBox._dialogsSeen,id,0) != -1;
};
co_doubleduck_dynamons2_meta_DialogBox.showDialog = function(id,sendEvents) {
	if(sendEvents == null) sendEvents = false;
	co_doubleduck_dynamons2_meta_DialogBox._createDialog = true;
	if(!co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog(id)) {
		co_doubleduck_dynamons2_meta_DialogBox._dialogsSeen.push(id);
		co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.SEEN_DIALOGS,co_doubleduck_dynamons2_meta_DialogBox._dialogsSeen.join(","));
	}
	return new co_doubleduck_dynamons2_meta_DialogBox(id,sendEvents);
};
co_doubleduck_dynamons2_meta_DialogBox.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_DialogBox.prototype = $extend(openfl_display_Sprite.prototype,{
	showNextMsg: function() {
		var msgs = this._dialogData.content;
		if(msgs.length <= this._currMsgInd) this.finishDialog(); else {
			var sameSpeaker = this._speakers[this._currMsgInd - 1] == this._speakers[this._currMsgInd];
			this._currMsg = new co_doubleduck_dynamons2_meta_DialogMsg(msgs[this._currMsgInd],sameSpeaker);
			this._currMsg.mouseEnabled = this._currMsg.mouseChildren = false;
			this._currMsg.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height);
			this.addChild(this._currMsg);
			var intoTween = co_doubleduck_utils_TweenChain.get(this._currMsg);
			if(sameSpeaker) {
				this._currMsg.toggleBubble(true);
				intoTween = intoTween.wait(200);
			} else {
				var _g = this._currMsg;
				_g.set_y(_g.get_y() + co_doubleduck_dynamons2_meta_DialogBox.HEIGHT * co_doubleduck_utils_DDAssets.scale);
				intoTween = intoTween.tto({ y : co_doubleduck_dynamons2_Game.getScreenSize().height},400,motion_easing_Sine.get_easeOut());
			}
			intoTween.call(($_=this._overlay,$bind($_,$_.addEventListener)),[openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleMsgTap)]);
		}
	}
	,handleMsgTap: function(e) {
		var _g = this;
		this._overlay.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleMsgTap));
		co_doubleduck_utils_TweenChain.removeTweens(this._currMsg);
		var sameSpeaker = false;
		if(this._currMsgInd + 1 < this._speakers.length) sameSpeaker = this._speakers[this._currMsgInd] == this._speakers[this._currMsgInd + 1];
		var outTween = co_doubleduck_utils_TweenChain.get(this._currMsg);
		if(sameSpeaker) {
			this._currMsg.toggleBubble(false);
			outTween = outTween.wait(200);
		} else outTween = outTween.tto({ y : co_doubleduck_dynamons2_Game.getScreenSize().height + co_doubleduck_dynamons2_meta_DialogBox.HEIGHT * co_doubleduck_utils_DDAssets.scale},250,motion_easing_Sine.get_easeIn());
		outTween.call(function() {
			_g._currMsgInd++;
			_g.removeChild(_g._currMsg);
			_g._currMsg = null;
			_g.showNextMsg();
		});
	}
	,finishDialog: function() {
		if(this._sendEvents) {
			var edata = { };
			edata.dialogId = this._dialogData.id;
			co_doubleduck_dynamons2_Game.reportEvent("dialog_end",edata);
		}
		co_doubleduck_utils_TweenChain.removeTweens(this._overlay);
		co_doubleduck_utils_TweenChain.get(this._overlay).wait(300).tto({ alpha : 0},200).call($bind(this,this.dispatchEvent),[new openfl_events_Event(openfl_events_Event.COMPLETE)]);
	}
	,__class__: co_doubleduck_dynamons2_meta_DialogBox
});
var co_doubleduck_utils_DrawBuffer = function(renderOnFrame,smoothing) {
	if(smoothing == null) smoothing = true;
	if(renderOnFrame == null) renderOnFrame = false;
	openfl_display_Sprite.call(this);
	this._buffer = new openfl_display_Bitmap(new openfl_display_BitmapData(1,1,true));
	this._buffer.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
	this._smoothing = smoothing;
	this._childrenRoot = new openfl_display_Sprite();
	this._isBufferActive = true;
	this.addChild(this._buffer);
	if(renderOnFrame) this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleFrame));
	if(co_doubleduck_utils_DrawBuffer.disableAllBuffers) this.toggleBufferActive(false);
};
$hxClasses["co.doubleduck.utils.DrawBuffer"] = co_doubleduck_utils_DrawBuffer;
co_doubleduck_utils_DrawBuffer.__name__ = ["co","doubleduck","utils","DrawBuffer"];
co_doubleduck_utils_DrawBuffer.__super__ = openfl_display_Sprite;
co_doubleduck_utils_DrawBuffer.prototype = $extend(openfl_display_Sprite.prototype,{
	toggleBufferActive: function(flag) {
		if(flag == this._isBufferActive) return;
		this._isBufferActive = flag;
		if(this._isBufferActive) {
			this.removeChild(this._childrenRoot);
			this.addChild(this._buffer);
		} else {
			this.removeChild(this._buffer);
			this.addChild(this._childrenRoot);
		}
	}
	,add: function(child) {
		return this._childrenRoot.addChild(child);
	}
	,addAt: function(child,index) {
		return this._childrenRoot.addChildAt(child,index);
	}
	,remove: function(child) {
		return this._childrenRoot.removeChild(child);
	}
	,removeAt: function(index) {
		return this._childrenRoot.removeChildAt(index);
	}
	,childCount: function() {
		return this._childrenRoot.get_numChildren();
	}
	,render: function() {
		if(!this._isBufferActive) return;
		if(this._buffer.bitmapData != null) this._buffer.bitmapData.dispose();
		var bdata;
		if(this._childrenRoot.get_numChildren() == 0) bdata = new openfl_display_BitmapData(10,10,true,0); else {
			var rect = this._childrenRoot.getRect(this._childrenRoot);
			var mat = new openfl_geom_Matrix();
			mat.translate(-rect.x,-rect.y);
			this._buffer.set_x(rect.x);
			this._buffer.set_y(rect.y);
			bdata = new openfl_display_BitmapData(Math.ceil(rect.width),Math.ceil(rect.height),true,0);
			bdata.draw(this._childrenRoot,mat);
		}
		this._buffer.bitmapData = bdata;
		this._buffer.smoothing = this._smoothing;
	}
	,handleFrame: function(e) {
		this.render();
	}
	,destroy: function() {
		if(this._buffer != null && this._buffer.bitmapData != null) this._buffer.bitmapData.dispose();
	}
	,__class__: co_doubleduck_utils_DrawBuffer
});
var co_doubleduck_dynamons2_meta_DialogMsg = function(data,textHidden) {
	if(textHidden == null) textHidden = false;
	co_doubleduck_utils_DrawBuffer.call(this);
	var whoParts = data.who.split(":");
	var isLeft = whoParts[0] == "left";
	var whoImg = co_doubleduck_utils_DDAssets.getImage("images/general/dialog/" + whoParts[1] + ".png");
	if(isLeft) whoImg.set_x(0); else whoImg.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 + 232 * co_doubleduck_utils_DDAssets.scale - whoImg.get_width());
	whoImg.set_y(-whoImg.get_height());
	this.addChild(whoImg);
	var bubble = co_doubleduck_utils_DDAssets.getImage("images/general/dialog/speech_bubble.png");
	if(isLeft) bubble.set_x(45 * co_doubleduck_utils_DDAssets.scale); else {
		bubble.set_scaleX(-1);
		bubble.set_x(whoImg.get_x() - 3 * co_doubleduck_utils_DDAssets.scale);
	}
	this._posY = bubble.set_y(-co_doubleduck_dynamons2_meta_DialogBox.HEIGHT * co_doubleduck_utils_DDAssets.scale);
	this.add(bubble);
	var text = co_doubleduck_utils_Fonter.getMultilineString(data.text,"images/fonts/black_small/","|",1);
	if(isLeft) text.set_x(bubble.get_x() + bubble.get_width() / 2); else text.set_x(bubble.get_x() - Math.abs(bubble.get_width()) + 24 * co_doubleduck_utils_DDAssets.scale);
	text.set_y(bubble.get_y() + bubble.get_height() * .4);
	this.add(text);
	var titleStr = whoParts[1].split("-")[0].toUpperCase();
	var title = co_doubleduck_utils_Fonter.getString(titleStr,"images/fonts/white_stroked_small");
	this.add(title);
	title.set_x(bubble.get_x() + bubble.get_width() / 2);
	title.set_y(bubble.get_y() + title.get_height() / 2 - 5 * co_doubleduck_utils_DDAssets.scale);
	this.render();
	if(textHidden) this._buffer.set_y(this._posY + co_doubleduck_dynamons2_meta_DialogBox.HEIGHT * co_doubleduck_utils_DDAssets.scale);
	this._buffer.smoothing = true;
};
$hxClasses["co.doubleduck.dynamons2.meta.DialogMsg"] = co_doubleduck_dynamons2_meta_DialogMsg;
co_doubleduck_dynamons2_meta_DialogMsg.__name__ = ["co","doubleduck","dynamons2","meta","DialogMsg"];
co_doubleduck_dynamons2_meta_DialogMsg.__super__ = co_doubleduck_utils_DrawBuffer;
co_doubleduck_dynamons2_meta_DialogMsg.prototype = $extend(co_doubleduck_utils_DrawBuffer.prototype,{
	toggleBubble: function(into) {
		co_doubleduck_utils_TweenChain.removeTweens(this._buffer);
		if(into) co_doubleduck_utils_TweenChain.get(this._buffer).tto({ y : this._posY},200); else co_doubleduck_utils_TweenChain.get(this._buffer).tto({ y : this._posY + co_doubleduck_dynamons2_meta_DialogBox.HEIGHT * co_doubleduck_utils_DDAssets.scale},200);
	}
	,__class__: co_doubleduck_dynamons2_meta_DialogMsg
});
var co_doubleduck_dynamons2_meta_EnemyModal = function(node) {
	openfl_display_Sprite.call(this);
	this._node = node;
	var nodeType = node.getType();
	var nodeEnemy = node.getEnemy();
	var enemMons = node.getEnemMons();
	var overlay = new openfl_display_Sprite();
	overlay.get_graphics().beginFill(0);
	overlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
	overlay.get_graphics().endFill();
	overlay.set_alpha(0.5);
	this.addChild(overlay);
	var back = co_doubleduck_utils_DDAssets.getImage("images/map/modals/enemy/bg_" + nodeType + ".png");
	back.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - back.get_width() / 2);
	back.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - back.get_height() / 2);
	this.addChild(back);
	if(nodeType == "captain" || nodeType == "boss") {
		var capHud = new co_doubleduck_dynamons2_meta_CaptainHud(nodeEnemy,enemMons.length);
		capHud.set_x(back.get_x() + 75 * co_doubleduck_utils_DDAssets.scale);
		capHud.set_y(back.get_y() + 46 * co_doubleduck_utils_DDAssets.scale);
		this.addChild(capHud);
	}
	var message = co_doubleduck_utils_Fonter.getString(node.getEnemyTaunt(),"images/fonts/black_small");
	message.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
	message.set_y(back.get_y() + 130 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(message);
	this._fightBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/map/modals/enemy/btn_fight.png"));
	this._fightBtn.set_x(back.get_x() + back.get_width() / 2);
	this._fightBtn.set_y(back.get_y() + back.get_height() - 2 * co_doubleduck_utils_DDAssets.scale);
	this._fightBtn.enabled = false;
	this._fightBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleFight));
	this.addChild(this._fightBtn);
	this._closeBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_close.png"));
	this._closeBtn.set_x(back.get_x() + back.get_width() - 6);
	this._closeBtn.set_y(back.get_y() + 6);
	this._closeBtn.enabled = false;
	this._closeBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
	this.addChild(this._closeBtn);
	if(nodeType == "boss" || nodeType == "arena") {
		var allRewardsContainer = new openfl_display_Sprite();
		var rewards = node.getRewards();
		var _g1 = 0;
		var _g = rewards.length;
		while(_g1 < _g) {
			var rewardNum = _g1++;
			var rewardImg = co_doubleduck_utils_DDAssets.getImage("images/items/icons/" + Std.string(rewards[rewardNum].name) + ".png");
			var amountStr = "" + Std["int"](rewards[rewardNum].amount);
			if(rewards[rewardNum].name == "coins") amountStr = "$" + amountStr;
			var rewardAmount = co_doubleduck_utils_Fonter.getString(amountStr,"images/fonts/white_stroked_small");
			var rewardSpr = new openfl_display_Sprite();
			var slot = co_doubleduck_utils_DDAssets.getImage("images/general/reward_slot.png");
			rewardSpr.addChild(slot);
			rewardImg.set_x(slot.get_width() / 2 - rewardImg.get_width() / 2);
			rewardImg.set_y(slot.get_height() / 2 - rewardImg.get_height() / 2 - 3 * co_doubleduck_utils_DDAssets.scale);
			rewardSpr.addChild(rewardImg);
			rewardAmount.set_x(slot.get_width() / 2);
			rewardAmount.set_y(slot.get_height() * .95);
			rewardSpr.addChild(rewardAmount);
			rewardSpr.set_x(rewardNum * 57 * co_doubleduck_utils_DDAssets.scale);
			allRewardsContainer.addChild(rewardSpr);
		}
		this.addChild(allRewardsContainer);
		allRewardsContainer.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - allRewardsContainer.get_width() / 2);
		allRewardsContainer.set_y(back.get_y() + back.get_height() - 93 * co_doubleduck_utils_DDAssets.scale);
	}
	if(nodeType == "arena") {
		this._panesToDestroy = [];
		var icon = co_doubleduck_utils_DDAssets.getImage("images/general/enemies/" + nodeEnemy + "_icon.png");
		this.addChild(icon);
		icon.set_x(back.get_x() + 61 * co_doubleduck_utils_DDAssets.scale);
		icon.set_y(back.get_y() + 45 * co_doubleduck_utils_DDAssets.scale);
		var titleStr = nodeEnemy.toUpperCase();
		var title = co_doubleduck_utils_Fonter.getString(titleStr.toUpperCase(),"images/fonts/white_stroked_big/");
		title.set_x(back.get_x() + 178 * co_doubleduck_utils_DDAssets.scale);
		title.set_y(back.get_y() + 83 * co_doubleduck_utils_DDAssets.scale);
		this.addChild(title);
		var monContainer = new openfl_display_Sprite();
		this.addChild(monContainer);
		var monPanes = [];
		var _g11 = 0;
		var _g2 = enemMons.length;
		while(_g11 < _g2) {
			var monNum = _g11++;
			var currMon = enemMons[monNum];
			var pane = currMon.getPane("mini");
			monContainer.addChild(pane);
			pane.set_x(72 * co_doubleduck_utils_DDAssets.scale * monNum);
			this._panesToDestroy.push(pane);
		}
		monContainer.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - monContainer.get_width() / 2);
		monContainer.set_y(back.get_y() + 160 * co_doubleduck_utils_DDAssets.scale);
	}
	co_doubleduck_utils_SoundMgr.playSound("screen_open");
	this.set_alpha(0.01);
	co_doubleduck_utils_TweenChain.get(this).wait(200).tto({ alpha : 1},300).wait(100).call($bind(this,this.enableMe));
};
$hxClasses["co.doubleduck.dynamons2.meta.EnemyModal"] = co_doubleduck_dynamons2_meta_EnemyModal;
co_doubleduck_dynamons2_meta_EnemyModal.__name__ = ["co","doubleduck","dynamons2","meta","EnemyModal"];
co_doubleduck_dynamons2_meta_EnemyModal.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_EnemyModal.prototype = $extend(openfl_display_Sprite.prototype,{
	getNode: function() {
		return this._node;
	}
	,enableMe: function() {
		this._closeBtn.enabled = true;
		this._fightBtn.enabled = true;
	}
	,handleFight: function(e) {
		this._fightBtn.enabled = false;
		this._closeBtn.enabled = false;
		co_doubleduck_utils_TweenChain.get(this).wait(50).call($bind(this,this.dispatchEvent),[new openfl_events_Event("FightEvent")]);
	}
	,handleClose: function(e) {
		co_doubleduck_utils_SoundMgr.playSound("screen_open");
		this._fightBtn.enabled = false;
		this._closeBtn.enabled = false;
		co_doubleduck_utils_TweenChain.get(this).tto({ alpha : 0.01},150).wait(50).call($bind(this,this.dispatchEvent),[new openfl_events_Event(openfl_events_Event.CLOSE)]);
	}
	,destroy: function() {
		this._fightBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleFight));
		this._closeBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
		if(this._panesToDestroy != null) while(this._panesToDestroy.length > 0) this._panesToDestroy.shift().destroy();
	}
	,__class__: co_doubleduck_dynamons2_meta_EnemyModal
});
var co_doubleduck_dynamons2_meta_FlowEvents = function() { };
$hxClasses["co.doubleduck.dynamons2.meta.FlowEvents"] = co_doubleduck_dynamons2_meta_FlowEvents;
co_doubleduck_dynamons2_meta_FlowEvents.__name__ = ["co","doubleduck","dynamons2","meta","FlowEvents"];
var co_doubleduck_dynamons2_meta_GameState = function() { };
$hxClasses["co.doubleduck.dynamons2.meta.GameState"] = co_doubleduck_dynamons2_meta_GameState;
co_doubleduck_dynamons2_meta_GameState.__name__ = ["co","doubleduck","dynamons2","meta","GameState"];
co_doubleduck_dynamons2_meta_GameState._dispatcher = null;
co_doubleduck_dynamons2_meta_GameState._playerCoins = null;
co_doubleduck_dynamons2_meta_GameState._mons = null;
co_doubleduck_dynamons2_meta_GameState._party = null;
co_doubleduck_dynamons2_meta_GameState._playerPos = null;
co_doubleduck_dynamons2_meta_GameState._openPacks = null;
co_doubleduck_dynamons2_meta_GameState._playerItems = null;
co_doubleduck_dynamons2_meta_GameState._nodesBeated = null;
co_doubleduck_dynamons2_meta_GameState._advanceScore = null;
co_doubleduck_dynamons2_meta_GameState._arenaRoll = null;
co_doubleduck_dynamons2_meta_GameState._arenaLastRoll = null;
co_doubleduck_dynamons2_meta_GameState._arenaBeated = null;
co_doubleduck_dynamons2_meta_GameState.init = function() {
	co_doubleduck_dynamons2_meta_GameState._dispatcher = new openfl_events_EventDispatcher();
	co_doubleduck_dynamons2_meta_GameState._playerPos = co_doubleduck_dynamons2_data_Persistence.getInt(co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS);
	co_doubleduck_dynamons2_meta_GameState._playerCoins = co_doubleduck_dynamons2_data_Persistence.getInt(co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS);
	if(co_doubleduck_dynamons2_meta_GameState._playerCoins == -1) {
		co_doubleduck_dynamons2_meta_GameState._playerCoins = Std["int"](co_doubleduck_dynamons2_data_GameplayDB.getTutorialData().startingCoins);
		co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS,co_doubleduck_dynamons2_meta_GameState._playerCoins);
	}
	co_doubleduck_dynamons2_meta_GameState._mons = [];
	co_doubleduck_dynamons2_meta_GameState._party = [];
	var monsData = co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.MONS_DATA).split(";");
	var _g = 0;
	while(_g < monsData.length) {
		var monData = monsData[_g];
		++_g;
		if(monData == "") continue;
		var parts = monData.split(",");
		var mon = new co_doubleduck_dynamons2_core_Mon(parts[0],Std.parseInt(parts[1]));
		mon.setCurrHP(Std.parseInt(parts[2]));
		if(Std.parseInt(parts[3]) != -1) mon.setAutoHealTimes(Std.parseInt(parts[3]),Std.parseInt(parts[4]));
		mon.setCurrXP(Std.parseInt(parts[5]));
		var indInParty = Std.parseInt(parts[6]);
		if(indInParty >= 0) {
			while(co_doubleduck_dynamons2_meta_GameState._party.length <= indInParty) co_doubleduck_dynamons2_meta_GameState._party.push(null);
			co_doubleduck_dynamons2_meta_GameState._party[indInParty] = mon;
		}
		co_doubleduck_dynamons2_meta_GameState._mons.push(mon);
	}
	co_doubleduck_dynamons2_meta_GameState._nodesBeated = co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.NODES_BEATED).split(",");
	co_doubleduck_dynamons2_meta_GameState._openPacks = co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED).split(",");
	co_doubleduck_dynamons2_meta_GameState.setupAdvanceScore();
	co_doubleduck_dynamons2_meta_GameState._playerItems = new haxe_ds_StringMap();
	var itemsStr = co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA);
	var itemsData;
	if(itemsStr == "init") itemsData = co_doubleduck_dynamons2_data_GameplayDB.getTutorialData().startingItems; else itemsData = itemsStr.split(";");
	var _g1 = 0;
	while(_g1 < itemsData.length) {
		var itemData = itemsData[_g1];
		++_g1;
		if(itemData == "") continue;
		var parts1 = itemData.split(",");
		var value = Std.parseInt(parts1[1]);
		co_doubleduck_dynamons2_meta_GameState._playerItems.set(parts1[0],value);
	}
	co_doubleduck_dynamons2_meta_GameState._arenaRoll = null;
	co_doubleduck_dynamons2_meta_GameState._arenaLastRoll = co_doubleduck_dynamons2_data_Persistence.getInt(co_doubleduck_dynamons2_data_DataKey.ARENA_LAST_ROLL);
	co_doubleduck_dynamons2_meta_GameState._arenaBeated = co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.ARENA_BEATED) == "true";
};
co_doubleduck_dynamons2_meta_GameState.addListener = function(type,listener) {
	co_doubleduck_dynamons2_meta_GameState._dispatcher.addEventListener(type,listener);
};
co_doubleduck_dynamons2_meta_GameState.removeListener = function(type,listener) {
	co_doubleduck_dynamons2_meta_GameState._dispatcher.removeEventListener(type,listener);
};
co_doubleduck_dynamons2_meta_GameState.setupAdvanceScore = function() {
	co_doubleduck_dynamons2_meta_GameState._advanceScore = 0;
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_data_GameplayDB.getMapPacks();
	while(_g < _g1.length) {
		var packData = _g1[_g];
		++_g;
		if((function($this) {
			var $r;
			var x = packData.id;
			$r = HxOverrides.indexOf(co_doubleduck_dynamons2_meta_GameState._openPacks,x,0);
			return $r;
		}(this)) != -1) {
			if(Std["int"](packData.advance) > co_doubleduck_dynamons2_meta_GameState._advanceScore) co_doubleduck_dynamons2_meta_GameState._advanceScore = Std["int"](packData.advance);
		}
	}
};
co_doubleduck_dynamons2_meta_GameState.setPlayerPos = function(pos) {
	if(co_doubleduck_dynamons2_meta_GameState._playerPos == pos) return;
	co_doubleduck_dynamons2_meta_GameState._playerPos = pos;
	co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.MAP_PLAYER_POS,co_doubleduck_dynamons2_meta_GameState._playerPos);
};
co_doubleduck_dynamons2_meta_GameState.getPlayerPos = function() {
	return co_doubleduck_dynamons2_meta_GameState._playerPos;
};
co_doubleduck_dynamons2_meta_GameState.getParty = function() {
	return co_doubleduck_dynamons2_meta_GameState._party;
};
co_doubleduck_dynamons2_meta_GameState.getPartyMain = function() {
	return co_doubleduck_dynamons2_meta_GameState._party[0];
};
co_doubleduck_dynamons2_meta_GameState.getPartyHP = function() {
	var hp = 0;
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_meta_GameState._party;
	while(_g < _g1.length) {
		var mon = _g1[_g];
		++_g;
		hp += mon.getCurrHP();
	}
	return hp;
};
co_doubleduck_dynamons2_meta_GameState.getPartyMaxHP = function() {
	var maxhp = 0;
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_meta_GameState._party;
	while(_g < _g1.length) {
		var mon = _g1[_g];
		++_g;
		maxhp += mon.getTotalHP();
	}
	return maxhp;
};
co_doubleduck_dynamons2_meta_GameState.saveMonsData = function() {
	var data = [];
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_meta_GameState._mons;
	while(_g < _g1.length) {
		var mon = _g1[_g];
		++_g;
		var dat = mon.getId() + "," + mon.getLevel();
		dat += "," + mon.getCurrHP();
		dat += "," + mon.getAutoHealStartTime() + "," + mon.getAutoHealTargetTime();
		dat += "," + mon.getCurrXP();
		dat += "," + HxOverrides.indexOf(co_doubleduck_dynamons2_meta_GameState._party,mon,0);
		data.push(dat);
	}
	co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.MONS_DATA,data.join(";"));
};
co_doubleduck_dynamons2_meta_GameState.setPartyMain = function(mon) {
	if(HxOverrides.remove(co_doubleduck_dynamons2_meta_GameState._party,mon)) co_doubleduck_dynamons2_meta_GameState._party.unshift(mon);
	co_doubleduck_dynamons2_meta_GameState.saveMonsData();
};
co_doubleduck_dynamons2_meta_GameState.addPlayerMon = function(mon) {
	co_doubleduck_dynamons2_meta_GameState._mons.push(mon);
	if(co_doubleduck_dynamons2_meta_GameState._party.length < 3) co_doubleduck_dynamons2_meta_GameState._party.push(mon);
	co_doubleduck_dynamons2_meta_GameState.saveMonsData();
};
co_doubleduck_dynamons2_meta_GameState.getPlayerMons = function(inclParty) {
	if(inclParty == null) inclParty = true;
	if(inclParty) return co_doubleduck_dynamons2_meta_GameState._mons;
	var noParty = co_doubleduck_dynamons2_meta_GameState._mons.slice();
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_meta_GameState._party;
	while(_g < _g1.length) {
		var mon = _g1[_g];
		++_g;
		HxOverrides.remove(noParty,mon);
	}
	return noParty;
};
co_doubleduck_dynamons2_meta_GameState.removePlayerMon = function(mon) {
	if(HxOverrides.indexOf(co_doubleduck_dynamons2_meta_GameState._party,mon,0) != -1) HxOverrides.remove(co_doubleduck_dynamons2_meta_GameState._party,mon);
	if(HxOverrides.indexOf(co_doubleduck_dynamons2_meta_GameState._mons,mon,0) != -1) HxOverrides.remove(co_doubleduck_dynamons2_meta_GameState._mons,mon);
	co_doubleduck_dynamons2_meta_GameState.saveMonsData();
};
co_doubleduck_dynamons2_meta_GameState.getOrdTeamIds = function() {
	var ids = [];
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_meta_GameState._party;
	while(_g < _g1.length) {
		var mon = _g1[_g];
		++_g;
		ids.push(mon.getId());
	}
	ids.sort(co_doubleduck_dynamons2_meta_GameState.AZSort);
	return ids.join(",");
};
co_doubleduck_dynamons2_meta_GameState.getPlayerCoins = function() {
	return co_doubleduck_dynamons2_meta_GameState._playerCoins;
};
co_doubleduck_dynamons2_meta_GameState.setPlayerCoins = function(val) {
	co_doubleduck_dynamons2_meta_GameState._playerCoins = val;
	co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.PLAYER_COINS,co_doubleduck_dynamons2_meta_GameState._playerCoins);
	co_doubleduck_dynamons2_meta_GameState._dispatcher.dispatchEvent(new openfl_events_Event("PlayerCoinsChangeEvent"));
};
co_doubleduck_dynamons2_meta_GameState.getItemAmount = function(itemId) {
	if(co_doubleduck_dynamons2_meta_GameState._playerItems.exists(itemId)) return co_doubleduck_dynamons2_meta_GameState._playerItems.get(itemId);
	return 0;
};
co_doubleduck_dynamons2_meta_GameState.getItemIds = function() {
	var ids = [];
	var $it0 = co_doubleduck_dynamons2_meta_GameState._playerItems.keys();
	while( $it0.hasNext() ) {
		var key = $it0.next();
		ids.push(key);
	}
	return ids;
};
co_doubleduck_dynamons2_meta_GameState.saveItems = function() {
	var itemsDat = [];
	var $it0 = co_doubleduck_dynamons2_meta_GameState._playerItems.keys();
	while( $it0.hasNext() ) {
		var id = $it0.next();
		itemsDat.push(id + "," + co_doubleduck_dynamons2_meta_GameState._playerItems.get(id));
	}
	co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.ITEMS_DATA,itemsDat.join(";"));
};
co_doubleduck_dynamons2_meta_GameState.setItemAmount = function(itemId,amount) {
	if(amount == 0) {
		if(co_doubleduck_dynamons2_meta_GameState._playerItems.exists(itemId)) co_doubleduck_dynamons2_meta_GameState._playerItems.remove(itemId);
	} else co_doubleduck_dynamons2_meta_GameState._playerItems.set(itemId,amount);
	co_doubleduck_dynamons2_meta_GameState.saveItems();
};
co_doubleduck_dynamons2_meta_GameState.isPackLocked = function(packId) {
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_meta_GameState._openPacks;
	while(_g < _g1.length) {
		var pack = _g1[_g];
		++_g;
		if(pack == packId) return false;
	}
	return true;
};
co_doubleduck_dynamons2_meta_GameState.setPackUnlocked = function(packId,flag) {
	var dirty = false;
	if(flag) {
		if(HxOverrides.indexOf(co_doubleduck_dynamons2_meta_GameState._openPacks,packId,0) == -1) {
			co_doubleduck_dynamons2_meta_GameState._openPacks.push(packId);
			var packDat = co_doubleduck_dynamons2_data_GameplayDB.getMapPack(packId);
			if(Std["int"](packDat.advance) > co_doubleduck_dynamons2_meta_GameState._advanceScore) co_doubleduck_dynamons2_meta_GameState._advanceScore = Std["int"](packDat.advance);
			dirty = true;
		}
	} else if(HxOverrides.indexOf(co_doubleduck_dynamons2_meta_GameState._openPacks,packId,0) != -1) {
		HxOverrides.remove(co_doubleduck_dynamons2_meta_GameState._openPacks,packId);
		dirty = true;
	}
	if(dirty) {
		co_doubleduck_dynamons2_meta_GameState.setupAdvanceScore();
		co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.MAP_PACKS_UNLOCKED,co_doubleduck_dynamons2_meta_GameState._openPacks.join(","));
	}
};
co_doubleduck_dynamons2_meta_GameState.getAdvanceScore = function() {
	return co_doubleduck_dynamons2_meta_GameState._advanceScore;
};
co_doubleduck_dynamons2_meta_GameState.isNodeBeated = function(nodeId) {
	return HxOverrides.indexOf(co_doubleduck_dynamons2_meta_GameState._nodesBeated,"" + nodeId,0) != -1;
};
co_doubleduck_dynamons2_meta_GameState.setNodeBeated = function(nodeId,flag) {
	if(flag == co_doubleduck_dynamons2_meta_GameState.isNodeBeated(nodeId)) return;
	var id = "" + nodeId;
	if(flag) co_doubleduck_dynamons2_meta_GameState._nodesBeated.push(id); else HxOverrides.remove(co_doubleduck_dynamons2_meta_GameState._nodesBeated,id);
	co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.NODES_BEATED,co_doubleduck_dynamons2_meta_GameState._nodesBeated.join(","));
};
co_doubleduck_dynamons2_meta_GameState.getArenaRoll = function() {
	if(co_doubleduck_dynamons2_meta_GameState._arenaRoll == null) {
		var rollData = co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.ARENA_ROLL).split(";");
		co_doubleduck_dynamons2_meta_GameState._arenaRoll = { };
		var monParts = rollData[0].split(",");
		var monsArr = [];
		var _g = 0;
		while(_g < monParts.length) {
			var dat = monParts[_g];
			++_g;
			var datParts = dat.split(":");
			monsArr.push({ id : datParts[0], level : Std.parseInt(datParts[1])});
		}
		co_doubleduck_dynamons2_meta_GameState._arenaRoll.mons = monsArr;
		var rewardParts = rollData[1].split(",");
		var rewArr = [];
		var _g1 = 0;
		while(_g1 < rewardParts.length) {
			var dat1 = rewardParts[_g1];
			++_g1;
			var datParts1 = dat1.split(":");
			rewArr.push({ name : datParts1[0], amount : Std.parseInt(datParts1[1])});
		}
		co_doubleduck_dynamons2_meta_GameState._arenaRoll.rewards = rewArr;
	}
	return co_doubleduck_dynamons2_meta_GameState._arenaRoll;
};
co_doubleduck_dynamons2_meta_GameState.saveArenaRoll = function(mons,rewards) {
	var monsStr = [];
	var _g = 0;
	while(_g < mons.length) {
		var mon = mons[_g];
		++_g;
		monsStr.push(Std.string(mon.id) + ":" + Std.string(mon.level));
	}
	var rewStr = [];
	var _g1 = 0;
	while(_g1 < rewards.length) {
		var rew = rewards[_g1];
		++_g1;
		rewStr.push(Std.string(rew.name) + ":" + Std.string(rew.amount));
	}
	var result = monsStr.join(",") + ";" + rewStr.join(",");
	co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.ARENA_ROLL,result);
};
co_doubleduck_dynamons2_meta_GameState.getArenaLastRoll = function() {
	return co_doubleduck_dynamons2_meta_GameState._arenaLastRoll;
};
co_doubleduck_dynamons2_meta_GameState.setArenaLastRoll = function(val) {
	co_doubleduck_dynamons2_meta_GameState._arenaLastRoll = val;
	co_doubleduck_dynamons2_data_Persistence.setInt(co_doubleduck_dynamons2_data_DataKey.ARENA_LAST_ROLL,val);
};
co_doubleduck_dynamons2_meta_GameState.isArenaBeated = function() {
	return co_doubleduck_dynamons2_meta_GameState._arenaBeated;
};
co_doubleduck_dynamons2_meta_GameState.setArenaBeated = function(val) {
	co_doubleduck_dynamons2_meta_GameState._arenaBeated = val;
	co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.ARENA_BEATED,"" + (val == null?"null":"" + val));
};
co_doubleduck_dynamons2_meta_GameState.MonLevelSort = function(a,b) {
	return b.getLevel() - a.getLevel();
};
co_doubleduck_dynamons2_meta_GameState.AZSort = function(a,b) {
	var strA = a.toLowerCase();
	var strB = b.toLowerCase();
	var i = 0;
	while(i < 50) {
		if(strA.length < i + 1) {
			if(strB.length < i + 1) return 0; else return -1;
		} else if(strB.length < i + 1) return 1;
		if(HxOverrides.cca(strA,i) != HxOverrides.cca(strB,i)) return HxOverrides.cca(strA,i) - HxOverrides.cca(strB,i);
		i++;
	}
	return 0;
};
var co_doubleduck_dynamons2_meta_InventoryScr = function(chooseItem,inBattle,allowCatch) {
	if(allowCatch == null) allowCatch = false;
	var _g = this;
	openfl_display_Sprite.call(this);
	this._isChooseMode = chooseItem;
	this._overlay = new openfl_display_Sprite();
	this._overlay.get_graphics().beginFill(0,0.6);
	this._overlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
	this._overlay.get_graphics().endFill();
	this._overlay.set_alpha(0.01);
	this.addChild(this._overlay);
	this._scrBox = new openfl_display_Sprite();
	this._scrBox.set_y(-co_doubleduck_dynamons2_Game.getScreenSize().height);
	this.addChild(this._scrBox);
	this._bg = co_doubleduck_utils_DDAssets.getImage("images/items/bg_items.png");
	this._bg.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._bg.get_width() / 2);
	this._bg.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - this._bg.get_height() / 2);
	this._scrBox.addChild(this._bg);
	this._closeBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_close.png"));
	this._closeBtn.enabled = false;
	this._closeBtn.set_x(this._bg.get_x() + this._bg.get_width() - 10 * co_doubleduck_utils_DDAssets.scale);
	this._closeBtn.set_y(this._bg.get_y() + 15 * co_doubleduck_utils_DDAssets.scale);
	this._closeBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
	this._scrBox.addChild(this._closeBtn);
	this._itemPanes = new openfl_display_Sprite();
	this._itemPanes.mouseEnabled = this._itemPanes.mouseChildren = false;
	this._itemPanes.set_y(this._bg.get_y() + this._bg.get_height() / 2);
	var itemsDat = co_doubleduck_dynamons2_data_GameplayDB.getAllItems();
	var playerItems = co_doubleduck_dynamons2_meta_GameState.getItemIds();
	this._panesCount = Math.ceil(playerItems.length / 8);
	if(this._panesCount < 1) this._panesCount = 1; else this._panesCount = this._panesCount;
	var indInAllItems = -1;
	var _g1 = 0;
	var _g2 = this._panesCount * 8;
	while(_g1 < _g2) {
		var i = _g1++;
		var item;
		if(i < playerItems.length) {
			var _g3 = indInAllItems + 1;
			var _g21 = itemsDat.length;
			while(_g3 < _g21) {
				var j = _g3++;
				if((function($this) {
					var $r;
					var x = itemsDat[j].id;
					$r = HxOverrides.indexOf(playerItems,x,0);
					return $r;
				}(this)) != -1) {
					indInAllItems = j;
					break;
				}
			}
			var itemDat = itemsDat[indInAllItems];
			var currItem = new co_doubleduck_dynamons2_meta_ItemBtn(itemDat.id);
			if(chooseItem) {
				if(inBattle != currItem.isForBattle() || itemDat.id == "discatch" && !allowCatch) {
					currItem.enabled = false;
					currItem.set_alpha(0.3);
				}
			}
			if(currItem.enabled) {
				currItem.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleItemBtn));
				if(this._selectedItem == null) this._selectedItem = currItem;
			}
			item = currItem;
		} else item = co_doubleduck_utils_DDAssets.getCenteredImage("images/items/item_slot.png");
		var ind = this._itemPanes.get_numChildren();
		var delta = 65;
		item.set_x((Math.floor(ind / 8) + 0.5) * co_doubleduck_dynamons2_Game.getScreenSize().width);
		ind %= 8;
		var _g22 = item;
		_g22.set_x(_g22.get_x() - delta * 1.5 * co_doubleduck_utils_DDAssets.scale);
		var _g23 = item;
		_g23.set_x(_g23.get_x() + ind % 4 * delta * co_doubleduck_utils_DDAssets.scale);
		item.set_y(-45 * co_doubleduck_utils_DDAssets.scale);
		var _g24 = item;
		_g24.set_y(_g24.get_y() + Math.floor(ind / 4) * (delta + 7) * co_doubleduck_utils_DDAssets.scale);
		this._itemPanes.addChild(item);
		if(js_Boot.__instanceof(item,co_doubleduck_dynamons2_meta_ItemBtn)) {
			if((js_Boot.__cast(item , co_doubleduck_dynamons2_meta_ItemBtn)).getId() == "can_hellfire") co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_CHOOSE,item);
		}
	}
	this._scrBox.addChild(this._itemPanes);
	this._nextBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_arrow_right.png"));
	this._nextBtn.set_x(this._bg.get_x() + this._bg.get_width());
	this._nextBtn.set_y(this._bg.get_y() + this._bg.get_height() / 2);
	this._nextBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleArrowBtn));
	this._scrBox.addChild(this._nextBtn);
	this._prevBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_arrow_right.png"));
	this._prevBtn.set_scaleX(-1);
	this._prevBtn.set_x(this._bg.get_x());
	this._prevBtn.set_y(this._nextBtn.get_y());
	this._prevBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleArrowBtn));
	this._scrBox.addChild(this._prevBtn);
	if(this._selectedItem != null) {
		if(chooseItem) {
			this._useBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/items/btn_use.png"));
			this._useBtn.enabled = false;
			this._useBtn.set_x(this._bg.get_x() + this._bg.get_width() / 2);
			this._useBtn.set_y(this._bg.get_y() + this._bg.get_height());
			this._useBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleUse));
			this._scrBox.addChild(this._useBtn);
		}
		var item1 = this._selectedItem;
		this._selectedItem = null;
		this.selectItem(item1);
	}
	this._currPane = 0;
	this.setupArrowVis();
	co_doubleduck_utils_TweenChain.get(this._overlay).tto({ alpha : 1},300);
	co_doubleduck_utils_TweenChain.get(this._scrBox).tto({ y : 0},500,co_doubleduck_utils_DDEase.get_overshootOut()).call(function() {
		_g._closeBtn.enabled = true;
		_g._itemPanes.mouseEnabled = _g._itemPanes.mouseChildren = true;
		if(_g._useBtn != null) _g._useBtn.enabled = true;
	});
};
$hxClasses["co.doubleduck.dynamons2.meta.InventoryScr"] = co_doubleduck_dynamons2_meta_InventoryScr;
co_doubleduck_dynamons2_meta_InventoryScr.__name__ = ["co","doubleduck","dynamons2","meta","InventoryScr"];
co_doubleduck_dynamons2_meta_InventoryScr.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_InventoryScr.prototype = $extend(openfl_display_Sprite.prototype,{
	handleArrowBtn: function(e) {
		var _g = this;
		var prevPack = this._currPane;
		if(e.currentTarget == this._nextBtn && this._currPane + 1 < this._panesCount) this._currPane++;
		if(e.currentTarget == this._prevBtn && this._currPane > 0) this._currPane--;
		if(prevPack != this._currPane) {
			this._itemPanes.mouseChildren = this._itemPanes.mouseEnabled = false;
			co_doubleduck_utils_TweenChain.get(this._itemPanes).tto({ alpha : 0.2},100).tto({ alpha : 1},100);
			co_doubleduck_utils_TweenChain.get(this._itemPanes).tto({ x : -co_doubleduck_dynamons2_Game.getScreenSize().width * this._currPane},200,motion_easing_Sine.get_easeInOut()).wait(50).call(function() {
				_g._itemPanes.mouseChildren = _g._itemPanes.mouseEnabled = true;
			});
		}
		this.setupArrowVis();
	}
	,setupArrowVis: function() {
		this._nextBtn.set_visible(this._currPane + 1 < this._panesCount);
		this._prevBtn.set_visible(this._currPane > 0);
	}
	,handleItemBtn: function(e) {
		this.selectItem(e.target);
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_CHOOSE)) co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE,this._useBtn);
	}
	,selectItem: function(item) {
		if(item == this._selectedItem) return;
		if(this._selectedItem != null) this._selectedItem.toggleSelect(false);
		this._selectedItem = item;
		this._selectedItem.toggleSelect(true);
		if(this._itemTitle != null) {
			this._scrBox.removeChild(this._itemTitle);
			this._itemTitle = null;
		}
		this._itemTitle = co_doubleduck_utils_Fonter.getString(this._selectedItem.getTitle(),"images/fonts/white_stroked_small/");
		this._itemTitle.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		this._itemTitle.set_y(this._bg.get_y() + 214 * co_doubleduck_utils_DDAssets.scale);
		this._scrBox.addChild(this._itemTitle);
		if(this._itemDesc != null) {
			this._scrBox.removeChild(this._itemDesc);
			this._itemDesc = null;
		}
		this._itemDesc = co_doubleduck_utils_Fonter.getString(this._selectedItem.getDesc(),"images/fonts/white_small/");
		this._itemDesc.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		this._itemDesc.set_y(this._bg.get_y() + 235 * co_doubleduck_utils_DDAssets.scale);
		this._scrBox.addChild(this._itemDesc);
		if(this._useBtn != null) {
			if(this._choseItem != null) {
				this._useBtn.removeChild(this._choseItem);
				this._choseItem = null;
			}
			this._choseItem = co_doubleduck_utils_DDAssets.getImage("images/items/icons/" + this._selectedItem.getId() + ".png");
			this._choseItem.set_x(-21 * co_doubleduck_utils_DDAssets.scale - this._choseItem.get_width() / 2);
			this._choseItem.set_y(-this._choseItem.get_height() / 2 - 8 * co_doubleduck_utils_DDAssets.scale);
			this._useBtn.addChild(this._choseItem);
		}
	}
	,handleUse: function(e) {
		this._closeBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
		this._closeBtn.enabled = false;
		this._itemPanes.mouseEnabled = this._itemPanes.mouseChildren = false;
		if(this._useBtn != null) this._useBtn.enabled = false;
		co_doubleduck_dynamons2_meta_GameState.setItemAmount(this._selectedItem.getId(),co_doubleduck_dynamons2_meta_GameState.getItemAmount(this._selectedItem.getId()) - 1);
		var evDat = { };
		evDat.choseItem = this._selectedItem.getId();
		evDat.ability = co_doubleduck_dynamons2_core_Ability.abilityForItem(this._selectedItem.getId());
		co_doubleduck_utils_TweenChain.get(this._overlay).tto({ alpha : 0},300);
		co_doubleduck_utils_TweenChain.get(this._scrBox).tto({ y : -co_doubleduck_dynamons2_Game.getScreenSize().height},250,motion_easing_Sine.get_easeIn()).call($bind(this,this.dispatchEvent),[new co_doubleduck_utils_DynamicEvent("ClosedScreenEvent",evDat)]);
	}
	,handleClose: function(e) {
		this._closeBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
		this._closeBtn.enabled = false;
		this._itemPanes.mouseEnabled = this._itemPanes.mouseChildren = false;
		if(this._useBtn != null) this._useBtn.enabled = false;
		co_doubleduck_utils_TweenChain.get(this._overlay).tto({ alpha : 0},300);
		co_doubleduck_utils_TweenChain.get(this._scrBox).tto({ y : -co_doubleduck_dynamons2_Game.getScreenSize().height},250,motion_easing_Sine.get_easeIn()).call($bind(this,this.dispatchEvent),[new co_doubleduck_utils_DynamicEvent("ClosedScreenEvent",{ })]);
	}
	,destroy: function() {
	}
	,__class__: co_doubleduck_dynamons2_meta_InventoryScr
});
var co_doubleduck_utils_Button = function(asset,centered,data,smoothing) {
	if(smoothing == null) smoothing = false;
	if(centered == null) centered = true;
	this.enabled = true;
	this.clickSound = null;
	openfl_display_Sprite.call(this);
	if(co_doubleduck_utils_Button.DOWN_EVENT == null) {
		co_doubleduck_utils_Button.DOWN_EVENT = openfl_events_MouseEvent.MOUSE_DOWN;
		co_doubleduck_utils_Button.OUT_EVENT = openfl_events_MouseEvent.MOUSE_OUT;
		co_doubleduck_utils_Button.UP_EVENT = openfl_events_MouseEvent.MOUSE_UP;
	}
	this.data = data;
	if(co_doubleduck_utils_Button.NORM_TRANS == null) co_doubleduck_utils_Button.NORM_TRANS = new openfl_geom_ColorTransform();
	if(co_doubleduck_utils_Button.DARK_TRANS == null) {
		co_doubleduck_utils_Button.DARK_TRANS = new openfl_geom_ColorTransform();
		co_doubleduck_utils_Button.DARK_TRANS.redOffset = -50;
		co_doubleduck_utils_Button.DARK_TRANS.greenOffset = -50;
		co_doubleduck_utils_Button.DARK_TRANS.blueOffset = -50;
	}
	if(co_doubleduck_utils_DDAssets.globalSmoothing) smoothing = true;
	this._image = new openfl_display_Bitmap(asset,openfl_display_PixelSnapping.AUTO,smoothing);
	this.addChild(this._image);
	if(centered) {
		this._imagePos = new openfl_geom_Point(-this._image.get_width() / 2,-this._image.get_height() / 2);
		this._image.set_x(this._imagePos.x);
		this._image.set_y(this._imagePos.y);
	} else this._imagePos = new openfl_geom_Point(0,0);
	this.addEventListener(co_doubleduck_utils_Button.DOWN_EVENT,$bind(this,this.handleMouse));
	this.pushMode = co_doubleduck_utils_ButtonPushMode.TINT_SCALE;
	this.actOnPress = false;
	this._effectApplied = false;
};
$hxClasses["co.doubleduck.utils.Button"] = co_doubleduck_utils_Button;
co_doubleduck_utils_Button.__name__ = ["co","doubleduck","utils","Button"];
co_doubleduck_utils_Button.NORM_TRANS = null;
co_doubleduck_utils_Button.DARK_TRANS = null;
co_doubleduck_utils_Button.__super__ = openfl_display_Sprite;
co_doubleduck_utils_Button.prototype = $extend(openfl_display_Sprite.prototype,{
	dePress: function() {
		this.removeEventListener(co_doubleduck_utils_Button.OUT_EVENT,$bind(this,this.handleMouse));
		this.removeEventListener(co_doubleduck_utils_Button.UP_EVENT,$bind(this,this.handleMouse));
		this.endEffect();
	}
	,handleMouse: function(e) {
		if(!this.enabled) return;
		if(e.type == co_doubleduck_utils_Button.DOWN_EVENT) {
			this.applyEffect();
			var effectTween = co_doubleduck_utils_TweenChain.get(this._image);
			if(this.actOnPress) effectTween.wait(10).call($bind(this,this.endEffect)).call($bind(this,this.dispatchEvent),[new openfl_events_Event("BUTTON_ACT_EVENT")]); else {
				effectTween.wait(100).call($bind(this,this.endEffect));
				this.addEventListener(co_doubleduck_utils_Button.OUT_EVENT,$bind(this,this.handleMouse));
				this.addEventListener(co_doubleduck_utils_Button.UP_EVENT,$bind(this,this.handleMouse));
			}
		}
		if(e.type == co_doubleduck_utils_Button.OUT_EVENT) {
			this.removeEventListener(co_doubleduck_utils_Button.OUT_EVENT,$bind(this,this.handleMouse));
			this.removeEventListener(co_doubleduck_utils_Button.UP_EVENT,$bind(this,this.handleMouse));
			this.endEffect();
		}
		if(e.type == co_doubleduck_utils_Button.UP_EVENT) {
			this.removeEventListener(co_doubleduck_utils_Button.OUT_EVENT,$bind(this,this.handleMouse));
			this.removeEventListener(co_doubleduck_utils_Button.UP_EVENT,$bind(this,this.handleMouse));
			this.endEffect();
			this.act();
		}
	}
	,applyEffect: function() {
		this._effectApplied = true;
		if(this.clickSound != null) co_doubleduck_utils_SoundMgr.playSound(this.clickSound); else if(co_doubleduck_utils_Button.defaultClickSound != null) co_doubleduck_utils_SoundMgr.playSound(co_doubleduck_utils_Button.defaultClickSound);
		if(this.pushMode == co_doubleduck_utils_ButtonPushMode.TINT_ONLY || this.pushMode == co_doubleduck_utils_ButtonPushMode.TINT_SCALE) this._image.get_transform().set_colorTransform(co_doubleduck_utils_Button.DARK_TRANS);
		if(this.pushMode == co_doubleduck_utils_ButtonPushMode.SCALE_ONLY || this.pushMode == co_doubleduck_utils_ButtonPushMode.TINT_SCALE) {
			this._image.set_scaleX(this._image.set_scaleY(0.93));
			this._image.set_x(this._imagePos.x * 0.93);
			this._image.set_y(this._imagePos.y * 0.93);
		}
		if(this.pushMode == co_doubleduck_utils_ButtonPushMode.JUICY_JIGGLE) {
			co_doubleduck_utils_TweenChain.removeTweens(this._image);
			this._image.set_scaleX(1.3);
			this._image.set_x(this._imagePos.x * this._image.get_scaleX());
			co_doubleduck_utils_TweenChain.get(this._image).tto({ scaleX : 1, x : this._imagePos.x},600,motion_easing_Elastic.get_easeOut());
			this._image.set_scaleY(0.7);
			this._image.set_y(this._imagePos.y * this._image.get_scaleY());
			co_doubleduck_utils_TweenChain.get(this._image).tto({ scaleY : 1, y : this._imagePos.y},600,motion_easing_Elastic.get_easeOut());
		}
	}
	,endEffect: function() {
		if(!this._effectApplied) return;
		if(this.pushMode == co_doubleduck_utils_ButtonPushMode.TINT_ONLY || this.pushMode == co_doubleduck_utils_ButtonPushMode.TINT_SCALE) this._image.get_transform().set_colorTransform(co_doubleduck_utils_Button.NORM_TRANS);
		if(this.pushMode == co_doubleduck_utils_ButtonPushMode.SCALE_ONLY || this.pushMode == co_doubleduck_utils_ButtonPushMode.TINT_SCALE) {
			this._image.set_scaleX(this._image.set_scaleY(1));
			this._image.set_x(this._imagePos.x);
			this._image.set_y(this._imagePos.y);
		}
		if(this.pushMode == co_doubleduck_utils_ButtonPushMode.JUICY_JIGGLE) {
		}
	}
	,act: function() {
		this.dispatchEvent(new openfl_events_Event("BUTTON_ACT_EVENT"));
	}
	,__class__: co_doubleduck_utils_Button
});
var co_doubleduck_dynamons2_meta_ItemBtn = function(itemId) {
	co_doubleduck_utils_Button.call(this,co_doubleduck_utils_DDAssets.getRawImage("images/items/icons/" + itemId + ".png"));
	this._data = co_doubleduck_dynamons2_data_GameplayDB.getItem(itemId);
	var _g = this._image;
	_g.set_y(_g.get_y() - 4 * co_doubleduck_utils_DDAssets.scale);
	this._imagePos.y = this._image.get_y();
	this._slot = co_doubleduck_utils_DDAssets.getImage("images/items/item_slot.png");
	var _g1 = this._slot;
	_g1.set_x(_g1.get_x() - this._slot.get_width() / 2);
	var _g2 = this._slot;
	_g2.set_y(_g2.get_y() - this._slot.get_height() / 2);
	this.addChildAt(this._slot,0);
	this._selected = co_doubleduck_utils_DDAssets.getImage("images/items/item_selected.png");
	var _g3 = this._selected;
	_g3.set_x(_g3.get_x() - this._selected.get_width() / 2);
	var _g4 = this._selected;
	_g4.set_y(_g4.get_y() - this._selected.get_height() / 2);
	this._selected.set_visible(false);
	this.addChildAt(this._selected,1);
	this._amount = co_doubleduck_utils_Fonter.getString("" + co_doubleduck_dynamons2_meta_GameState.getItemAmount(itemId),"images/fonts/white_stroked_small/");
	this._amount.set_y(this._slot.get_y() + this._slot.get_height() - 4 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(this._amount);
};
$hxClasses["co.doubleduck.dynamons2.meta.ItemBtn"] = co_doubleduck_dynamons2_meta_ItemBtn;
co_doubleduck_dynamons2_meta_ItemBtn.__name__ = ["co","doubleduck","dynamons2","meta","ItemBtn"];
co_doubleduck_dynamons2_meta_ItemBtn.__super__ = co_doubleduck_utils_Button;
co_doubleduck_dynamons2_meta_ItemBtn.prototype = $extend(co_doubleduck_utils_Button.prototype,{
	toggleSelect: function(flag) {
		this._selected.set_visible(flag);
	}
	,getId: function() {
		return this._data.id;
	}
	,getTitle: function() {
		return this._data.title;
	}
	,getDesc: function() {
		return this._data.desc;
	}
	,isForBattle: function() {
		return this._data.inBattle == "true";
	}
	,__class__: co_doubleduck_dynamons2_meta_ItemBtn
});
var co_doubleduck_dynamons2_meta_LootShop = function(shopMsg) {
	var _g = this;
	openfl_display_Sprite.call(this);
	this._overlay = new openfl_display_Sprite();
	this._overlay.get_graphics().beginFill(0,0.6);
	this._overlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
	this._overlay.get_graphics().endFill();
	this._overlay.set_alpha(0.01);
	this.addChild(this._overlay);
	this._box = new openfl_display_Sprite();
	this._box.set_y(-co_doubleduck_dynamons2_Game.getScreenSize().height);
	this.addChild(this._box);
	var bg = co_doubleduck_utils_DDAssets.getImage("images/shop/bg_shop.png");
	bg.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - bg.get_width() / 2);
	bg.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - bg.get_height() / 2 - 10 * co_doubleduck_utils_DDAssets.scale);
	this._box.addChild(bg);
	this._closeBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_close.png"));
	this._closeBtn.set_x(bg.get_x() + bg.get_width() - 4 * co_doubleduck_utils_DDAssets.scale);
	this._closeBtn.set_y(bg.get_y() + 4 * co_doubleduck_utils_DDAssets.scale);
	this._closeBtn.enabled = false;
	this._closeBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
	this._box.addChild(this._closeBtn);
	var msgDat = co_doubleduck_dynamons2_data_GameplayDB.getShopData().messages;
	var msgStr = "Hello!";
	var _g1 = 0;
	while(_g1 < msgDat.length) {
		var dat = msgDat[_g1];
		++_g1;
		if(dat.id == shopMsg) {
			msgStr = dat.msg;
			break;
		}
	}
	var message = co_doubleduck_utils_Fonter.getString(msgStr,"images/fonts/black_small/");
	message.set_x(bg.get_x() + 112 * co_doubleduck_utils_DDAssets.scale + message.get_width() / 2);
	message.set_y(bg.get_y() + 71 * co_doubleduck_utils_DDAssets.scale);
	this._box.addChild(message);
	this._types = ["bag","chest"];
	this._products = [];
	this._rewards = [];
	this._buttons = [];
	var _g2 = 0;
	var _g11 = this._types;
	while(_g2 < _g11.length) {
		var prodId = _g11[_g2];
		++_g2;
		var prod = new co_doubleduck_dynamons2_meta_ShopProduct(prodId);
		prod.set_x(bg.get_x() + bg.get_width() / 2 - 65 * co_doubleduck_utils_DDAssets.scale);
		var _g21 = prod;
		_g21.set_x(_g21.get_x() + 130 * co_doubleduck_utils_DDAssets.scale * this._products.length);
		prod.set_y(bg.get_y() + bg.get_height() / 2 - 20 * co_doubleduck_utils_DDAssets.scale);
		prod.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleProd));
		this._box.addChild(prod);
		this._products.push(prod);
		var rewards = prod.getRewards();
		rewards.set_x(bg.get_x() + bg.get_width() / 2 - rewards.get_width() / 2);
		rewards.set_y(bg.get_y() + bg.get_height() - 67 * co_doubleduck_utils_DDAssets.scale);
		this._box.addChild(rewards);
		this._rewards.push(rewards);
		var btn = prod.getBuyButton();
		btn.set_x(bg.get_x() + bg.get_width() / 2);
		btn.set_y(bg.get_y() + bg.get_height() - 5 * co_doubleduck_utils_DDAssets.scale);
		this._box.addChild(btn);
		this._buttons.push(btn);
		btn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBuy));
		if(this._selectedProd == null) {
			prod.toggleSelect(true);
			this._selectedProd = prod;
		} else {
			btn.set_visible(false);
			rewards.set_visible(false);
		}
	}
	co_doubleduck_utils_TweenChain.get(this._overlay).tto({ alpha : 1},250);
	co_doubleduck_utils_TweenChain.get(this._box).tto({ y : 0},500,motion_easing_Sine.get_easeOut()).call(function() {
		_g._closeBtn.enabled = true;
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY,_g._buttons[0]);
	});
	co_doubleduck_dynamons2_meta_GameState.addListener("PlayerCoinsChangeEvent",$bind(this,this.handleCoinsChange));
	this._topHud = new co_doubleduck_dynamons2_meta_TopHud();
	this.addChild(this._topHud);
	this._topHud.set_alpha(0);
	co_doubleduck_utils_TweenChain.get(this._topHud).wait(400).tto({ alpha : 1},200);
};
$hxClasses["co.doubleduck.dynamons2.meta.LootShop"] = co_doubleduck_dynamons2_meta_LootShop;
co_doubleduck_dynamons2_meta_LootShop.__name__ = ["co","doubleduck","dynamons2","meta","LootShop"];
co_doubleduck_dynamons2_meta_LootShop.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_LootShop.prototype = $extend(openfl_display_Sprite.prototype,{
	handleCoinsChange: function(e) {
		var _g1 = 0;
		var _g = this._products.length;
		while(_g1 < _g) {
			var i = _g1++;
			var avail = this._products[i].getPrice() <= co_doubleduck_dynamons2_meta_GameState.getPlayerCoins();
			if(avail != this._buttons[i].enabled) {
				var newBtn = this._products[i].getBuyButton();
				newBtn.set_x(this._buttons[i].get_x());
				newBtn.set_y(this._buttons[i].get_y());
				this._buttons[i].removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBuy));
				this._box.removeChild(this._buttons[i]);
				newBtn.set_visible(this._buttons[i].get_visible());
				this._box.addChild(newBtn);
				newBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBuy));
				this._buttons[i] = newBtn;
			}
		}
	}
	,handleProd: function(e) {
		this.selectProd(e.target);
	}
	,selectProd: function(prod) {
		if(this._selectedProd == prod) return;
		var ind;
		if(this._selectedProd != null) {
			this._selectedProd.toggleSelect(false);
			ind = HxOverrides.indexOf(this._products,this._selectedProd,0);
			this._rewards[ind].set_visible(this._buttons[ind].set_visible(false));
			if(prod.getId() == "chest") co_doubleduck_dynamons2_Game.reportEvent("incentivized_video_ad_set",{ 'place' : "shop"});
		}
		this._selectedProd = prod;
		ind = HxOverrides.indexOf(this._products,this._selectedProd,0);
		this._selectedProd.toggleSelect(true);
		this._rewards[ind].set_visible(this._buttons[ind].set_visible(true));
	}
	,handleBuy: function(e) {
		var _g = this;
		var ind;
		var x = e.target;
		ind = HxOverrides.indexOf(this._buttons,x,0);
		if(ind == -1) return;
		var prod = this._products[ind];
		var rewards = prod.rollRewards();
		if(prod.getPrice() > 0) {
			if(co_doubleduck_dynamons2_meta_GameState.getPlayerCoins() >= prod.getPrice()) {
				co_doubleduck_dynamons2_Game.reportEvent("shop_buy",{ 'id' : prod.getId(), 'price' : prod.getPrice()});
				co_doubleduck_dynamons2_meta_GameState.setPlayerCoins(co_doubleduck_dynamons2_meta_GameState.getPlayerCoins() - prod.getPrice());
				this.grantRewards(this._types[ind],rewards);
			}
		} else if(co_doubleduck_utils_AdManager.isIncentivizedReady()) {
			this._buttons[ind].enabled = false;
			co_doubleduck_utils_AdManager.showIncentivized(function(success) {
				if(success) {
					co_doubleduck_dynamons2_Game.reportEvent("incentivized_video_ad_watched",{ 'place' : "shop"});
					co_doubleduck_utils_Utils.delayedCall(1,function() {
						_g.grantRewards(_g._types[ind],rewards);
						_g._buttons[ind].enabled = true;
					});
				} else _g._buttons[ind].enabled = true;
			});
		} else this.grantRewards(this._types[ind],rewards);
	}
	,grantRewards: function(type,rewards) {
		var _g = this;
		this._buyRewards = rewards;
		var _g1 = 0;
		var _g11 = this._buyRewards;
		while(_g1 < _g11.length) {
			var reward = _g11[_g1];
			++_g1;
			if(reward.name == "coins") co_doubleduck_dynamons2_meta_GameState.setPlayerCoins(co_doubleduck_dynamons2_meta_GameState.getPlayerCoins() + reward.amount); else co_doubleduck_dynamons2_meta_GameState.setItemAmount(reward.name,co_doubleduck_dynamons2_meta_GameState.getItemAmount(reward.name) + 1);
		}
		this._buyOverlay = new openfl_display_Sprite();
		this._buyOverlay.get_graphics().beginFill(0);
		this._buyOverlay.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		this._buyOverlay.get_graphics().endFill();
		this._buyOverlay.set_alpha(0.01);
		this.addChild(this._buyOverlay);
		co_doubleduck_utils_TweenChain.get(this._buyOverlay).tto({ alpha : 0.95},250);
		var loot = new openfl_display_Sprite();
		var lootBmp = co_doubleduck_utils_DDAssets.getImage("images/shop/products/product_" + type + ".png");
		var lootWhite = new openfl_display_Bitmap(co_doubleduck_utils_BmpMagic.silhouette(lootBmp.bitmapData,16777215));
		lootBmp.set_x(lootWhite.set_x(-lootBmp.get_width() / 2));
		lootBmp.set_y(lootWhite.set_y(-lootBmp.get_height()));
		loot.addChild(lootBmp);
		lootWhite.set_alpha(0);
		loot.addChild(lootWhite);
		loot.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		loot.set_y(-10 * co_doubleduck_utils_DDAssets.scale);
		var destY = co_doubleduck_dynamons2_Game.getScreenSize().height / 2 + lootBmp.get_height() / 2;
		this.addChild(loot);
		co_doubleduck_utils_TweenChain.get(loot).wait(250).tto({ y : destY},250,motion_easing_Sine.get_easeIn()).tto({ scaleY : 0.6, scaleX : 1.4},100,motion_easing_Sine.get_easeOut()).tto({ scaleY : 1, scaleX : 1},50,motion_easing_Sine.get_easeIn()).wait(900).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(10) - 5) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x() + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale, y : destY + (Std.random(20) - 10) * co_doubleduck_utils_DDAssets.scale},30).tto({ x : loot.get_x(), y : destY},50).call($bind(this,this.explodeRewards)).call(function() {
			_g.removeChild(loot);
			loot.removeChild(lootBmp);
			loot.removeChild(lootWhite);
			co_doubleduck_utils_TweenChain.removeTweens(lootWhite);
			lootWhite.bitmapData.dispose();
			lootWhite = null;
		});
		co_doubleduck_utils_TweenChain.get(lootWhite).wait(1200).tto({ alpha : 1},800);
	}
	,explodeRewards: function() {
		var explosion = new co_doubleduck_utils_SimpleAnimSprite("images/shop/loot_explosion.png",1,3,[0,1,2]);
		explosion.setAnimFPS(15);
		explosion.update(0);
		explosion.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - explosion.get_width() / 2);
		explosion.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - explosion.get_height() / 2);
		explosion.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.doneExplode));
		this.addChild(explosion);
	}
	,doneExplode: function(e) {
		var explosion = e.target;
		explosion.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.doneExplode));
		this.removeChild(explosion);
		this._buyLightsA = co_doubleduck_utils_DDAssets.getImage("images/shop/loot_lights.png");
		this._buyLightsA.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - this._buyLightsA.get_height() / 2);
		this.addChild(this._buyLightsA);
		this._buyLightsB = co_doubleduck_utils_DDAssets.getImage("images/shop/loot_lights.png");
		this._buyLightsB.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width);
		this._buyLightsB.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 + this._buyLightsB.get_height() / 2);
		this._buyLightsB.set_rotation(180);
		this._buyLightsB.set_alpha(0);
		this.addChild(this._buyLightsB);
		this.animateBuyLights();
		var flash = new openfl_display_Sprite();
		flash.get_graphics().beginFill(16777215);
		flash.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		flash.get_graphics().endFill();
		this.addChild(flash);
		co_doubleduck_utils_TweenChain.get(flash).wait(80).tto({ alpha : 0},400);
		var sliceRot = 360 / this._buyRewards.length;
		this._buyIcons = [];
		this._titles = [];
		var lastTween = null;
		var _g1 = 0;
		var _g = this._buyRewards.length;
		while(_g1 < _g) {
			var i = _g1++;
			var icon = [co_doubleduck_utils_DDAssets.getCenteredImage("images/items/icons/" + Std.string(this._buyRewards[i].name) + ".png")];
			var titleStr;
			if(this._buyRewards[i].name == "coins") titleStr = "$" + Std.string(this._buyRewards[i].amount); else {
				titleStr = co_doubleduck_dynamons2_data_GameplayDB.getItem(this._buyRewards[i].name).title;
				if(titleStr.indexOf("CANNED") == 0) titleStr = HxOverrides.substr(titleStr,7,null);
			}
			var titleSpr = co_doubleduck_utils_Fonter.getString(titleStr,"images/fonts/white_stroked_small/");
			titleSpr.set_x(titleSpr.get_width() / 2);
			titleSpr.set_y(titleSpr.get_height() / 2);
			var title = [new co_doubleduck_utils_DrawBuffer()];
			title[0].add(titleSpr);
			title[0].render();
			this._titles.push(title[0]);
			title[0].set_x(-title[0].get_width() / 2);
			title[0].set_y(icon[0].get_height() / 2 + 5 * co_doubleduck_utils_DDAssets.scale);
			title[0].set_alpha(0);
			icon[0].addChild(title[0]);
			var currAngle = -270 + sliceRot / 2;
			currAngle += i * sliceRot;
			currAngle *= Math.PI / 180;
			var pos = openfl_geom_Point.polar(40 * co_doubleduck_utils_DDAssets.scale,currAngle);
			pos.offset(co_doubleduck_dynamons2_Game.getScreenSize().width / 2,co_doubleduck_dynamons2_Game.getScreenSize().height / 2);
			icon[0].set_x(pos.x);
			icon[0].set_y(pos.y);
			var destPos = [openfl_geom_Point.polar(100 * co_doubleduck_utils_DDAssets.scale,currAngle)];
			destPos[0].offset(co_doubleduck_dynamons2_Game.getScreenSize().width / 2,co_doubleduck_dynamons2_Game.getScreenSize().height / 2);
			var destPos2 = [openfl_geom_Point.polar(105 * co_doubleduck_utils_DDAssets.scale,currAngle)];
			destPos2[0].offset(co_doubleduck_dynamons2_Game.getScreenSize().width / 2,co_doubleduck_dynamons2_Game.getScreenSize().height / 2);
			icon[0].set_alpha(0);
			icon[0].set_scaleX(icon[0].set_scaleY(0.7));
			this.addChild(icon[0]);
			this._buyIcons.push(icon[0]);
			lastTween = co_doubleduck_utils_TweenChain.get(icon[0]).wait(450 + i % 3 * 100).call((function(destPos2,destPos,title,icon) {
				return function() {
					co_doubleduck_utils_TweenChain.get(icon[0]).tto({ alpha : 1},250);
					co_doubleduck_utils_TweenChain.get(icon[0]).tto({ x : destPos[0].x, y : destPos[0].y, scaleX : 1, scaleY : 1},400,motion_easing_Sine.get_easeOut()).tto({ x : destPos2[0].x, y : destPos2[0].y},2000,motion_easing_Sine.get_easeInOut());
					co_doubleduck_utils_TweenChain.get(title[0]).wait(800).tto({ alpha : 1},250);
				};
			})(destPos2,destPos,title,icon));
		}
		if(lastTween == null) this.showCool(); else lastTween.wait(1400).call($bind(this,this.showCool));
	}
	,animateBuyLights: function() {
		co_doubleduck_utils_TweenChain.removeTweens(this._buyLightsA);
		co_doubleduck_utils_TweenChain.removeTweens(this._buyLightsB);
		var dTime = 1000;
		co_doubleduck_utils_TweenChain.get(this._buyLightsA).tto({ alpha : 0},dTime,motion_easing_Sine.get_easeInOut()).tto({ alpha : 1},dTime,motion_easing_Sine.get_easeInOut());
		co_doubleduck_utils_TweenChain.get(this._buyLightsB).tto({ alpha : 1},dTime,motion_easing_Sine.get_easeInOut()).tto({ alpha : 0},dTime,motion_easing_Sine.get_easeInOut()).wait(10).call($bind(this,this.animateBuyLights));
	}
	,showCool: function() {
		var btnCool = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_cool.png"));
		btnCool.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		btnCool.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height - 60 * co_doubleduck_utils_DDAssets.scale);
		btnCool.set_alpha(0);
		btnCool.enabled = false;
		btnCool.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleRewardsCool));
		this.addChild(btnCool);
		co_doubleduck_utils_TweenChain.get(btnCool).tto({ alpha : 1},150).call(function() {
			btnCool.enabled = true;
		});
	}
	,handleRewardsCool: function(e) {
		var btnCool = e.target;
		btnCool.enabled = false;
		btnCool.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleRewardsCool));
		co_doubleduck_utils_TweenChain.get(btnCool).tto({ alpha : 0},100).call($bind(this,this.removeChild),[btnCool]).wait(15).call($bind(this,this.destroyTitles),[this._titles]);
		var _g = 0;
		var _g1 = this._buyIcons;
		while(_g < _g1.length) {
			var icon = _g1[_g];
			++_g;
			co_doubleduck_utils_TweenChain.removeTweens(icon);
			co_doubleduck_utils_TweenChain.get(icon).tto({ alpha : 0},100).call($bind(this,this.removeChild),[icon]);
		}
		this._buyIcons = null;
		co_doubleduck_utils_TweenChain.removeTweens(this._buyLightsA);
		co_doubleduck_utils_TweenChain.get(this._buyLightsA).tto({ alpha : 0},100).call($bind(this,this.removeChild),[this._buyLightsA]);
		co_doubleduck_utils_TweenChain.removeTweens(this._buyLightsB);
		co_doubleduck_utils_TweenChain.get(this._buyLightsB).tto({ alpha : 0},100).call($bind(this,this.removeChild),[this._buyLightsB]);
		co_doubleduck_utils_TweenChain.get(this._buyOverlay).tto({ alpha : 0},100).call($bind(this,this.removeChild),[this._buyOverlay]);
	}
	,destroyTitles: function(titles) {
		while(titles.length > 0) titles.pop().destroy();
	}
	,handleClose: function(e) {
		this._closeBtn.enabled = false;
		this._closeBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
		co_doubleduck_utils_TweenChain.get(this._overlay).tto({ alpha : 0.01},150);
		co_doubleduck_utils_TweenChain.get(this._box).tto({ y : -co_doubleduck_dynamons2_Game.getScreenSize().height},300,motion_easing_Sine.get_easeIn()).call($bind(this,this.dispatchEvent),[new openfl_events_Event(openfl_events_Event.CLOSE)]);
		this.removeChild(this._topHud);
	}
	,destroy: function() {
		co_doubleduck_dynamons2_meta_GameState.removeListener("PlayerCoinsChangeEvent",$bind(this,this.handleCoinsChange));
		var _g = 0;
		var _g1 = this._buttons;
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			btn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBuy));
		}
		var _g2 = 0;
		var _g11 = this._products;
		while(_g2 < _g11.length) {
			var prod = _g11[_g2];
			++_g2;
			prod.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleProd));
		}
		this._topHud.destroy();
	}
	,__class__: co_doubleduck_dynamons2_meta_LootShop
});
var co_doubleduck_dynamons2_meta_ShopProduct = function(prodId) {
	co_doubleduck_utils_Button.call(this,co_doubleduck_utils_DDAssets.getRawImage("images/shop/products/product_" + prodId + ".png"));
	this._data = co_doubleduck_dynamons2_data_GameplayDB.getShopProduct(prodId);
	this._slot = co_doubleduck_utils_DDAssets.getImage("images/shop/product_slot.png");
	var _g = this._slot;
	_g.set_x(_g.get_x() - this._slot.get_width() / 2);
	var _g1 = this._slot;
	_g1.set_y(_g1.get_y() - (this._slot.get_height() / 2 - 30 * co_doubleduck_utils_DDAssets.scale));
	this.addChildAt(this._slot,0);
	this._selected = co_doubleduck_utils_DDAssets.getImage("images/shop/product_select.png");
	var _g2 = this._selected;
	_g2.set_x(_g2.get_x() - this._selected.get_width() / 2);
	var _g3 = this._selected;
	_g3.set_y(_g3.get_y() - (this._selected.get_height() / 2 - 30 * co_doubleduck_utils_DDAssets.scale));
	this._selected.set_visible(false);
	this.addChildAt(this._selected,1);
	var title = co_doubleduck_utils_Fonter.getString(this._data.title,"images/fonts/white_stroked_small/");
	title.set_y(40 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(title);
	var priceSpr;
	if(Std["int"](this._data.price) == 0) {
		if(co_doubleduck_utils_AdManager.isIncentivizedReady() && co_doubleduck_dynamons2_meta_Tutorial.inst().hasPassedStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE)) priceSpr = co_doubleduck_utils_DDAssets.getCenteredImage("images/shop/label_free.png"); else priceSpr = co_doubleduck_utils_DDAssets.getCenteredImage("images/shop/label_outofstock.png");
	} else priceSpr = co_doubleduck_utils_Fonter.getString("$" + Std.string(this._data.price),"images/fonts/white_stroked_small/");
	priceSpr.set_y(60 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(priceSpr);
};
$hxClasses["co.doubleduck.dynamons2.meta.ShopProduct"] = co_doubleduck_dynamons2_meta_ShopProduct;
co_doubleduck_dynamons2_meta_ShopProduct.__name__ = ["co","doubleduck","dynamons2","meta","ShopProduct"];
co_doubleduck_dynamons2_meta_ShopProduct.__super__ = co_doubleduck_utils_Button;
co_doubleduck_dynamons2_meta_ShopProduct.prototype = $extend(co_doubleduck_utils_Button.prototype,{
	getPrice: function() {
		return Std["int"](this._data.price);
	}
	,getRewards: function() {
		var rewSpr = new openfl_display_Sprite();
		var dispRew = this._data.displayRewards;
		var pos = 0;
		var _g = 0;
		while(_g < dispRew.length) {
			var itemDat = dispRew[_g];
			++_g;
			var item = co_doubleduck_utils_DDAssets.getCenteredImage("images/general/reward_slot.png");
			item.set_x(item.get_width() / 2);
			var icon = co_doubleduck_utils_DDAssets.getImage("images/items/icons/" + Std.string(itemDat.icon) + ".png");
			var _g1 = icon;
			_g1.set_x(_g1.get_x() - icon.get_width() / 2);
			var _g11 = icon;
			_g11.set_y(_g11.get_y() - icon.get_height() / 2);
			item.addChild(icon);
			if(itemDat.note != null && itemDat.note != "") {
				var note = co_doubleduck_utils_Fonter.getString(itemDat.note,"images/fonts/white_stroked_small/");
				note.set_y(25 * co_doubleduck_utils_DDAssets.scale);
				item.addChild(note);
			}
			var _g12 = item;
			_g12.set_x(_g12.get_x() + pos);
			pos += 57 * co_doubleduck_utils_DDAssets.scale;
			rewSpr.addChild(item);
		}
		var divider = co_doubleduck_utils_DDAssets.getImage("images/shop/divider_" + Std.string(this._data.lootTitle) + ".png");
		divider.set_x(rewSpr.get_width() / 2 - divider.get_width() / 2);
		var _g2 = divider;
		_g2.set_y(_g2.get_y() - 42 * co_doubleduck_utils_DDAssets.scale);
		rewSpr.addChild(divider);
		return rewSpr;
	}
	,rollRewards: function() {
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY) return co_doubleduck_dynamons2_data_GameplayDB.getTutorialData().firstShopRewards;
		var rew = [];
		var lootData = this._data.loot;
		var _g = 0;
		while(_g < lootData.length) {
			var currLoot = lootData[_g];
			++_g;
			var amounts = Std["int"](currLoot.amount);
			while(amounts > 0) {
				amounts--;
				var rolled = co_doubleduck_dynamons2_data_DynaUtils.rollWithOdds(currLoot.pool);
				var reward = { };
				reward.name = Std.string(rolled.id) + "";
				if(reward.name == "coins") {
					var coinsRange = co_doubleduck_utils_Utils.intRange(rolled.amount);
					coinsRange[1] -= coinsRange[0];
					var coinsCount = coinsRange[0] + Std.random(coinsRange[1]);
					coinsCount = Math.round(coinsCount / 10) * 10;
					reward.amount = coinsCount;
				}
				rew.push(reward);
			}
		}
		return rew;
	}
	,getBuyButton: function() {
		var btn;
		if(Std["int"](this._data.price) > 0) {
			if(Std["int"](this._data.price) > co_doubleduck_dynamons2_meta_GameState.getPlayerCoins()) {
				btn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/shop/btn_buy_off.png"));
				btn.enabled = false;
			} else btn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/shop/btn_buy.png"));
			var buyPrice = co_doubleduck_utils_Fonter.getString("$" + Std.string(this._data.price),"images/fonts/white_stroked_small/");
			buyPrice.set_y(4 * co_doubleduck_utils_DDAssets.scale);
			btn.addChild(buyPrice);
		} else if(co_doubleduck_utils_AdManager.isIncentivizedReady() && co_doubleduck_dynamons2_meta_Tutorial.inst().hasPassedStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE)) btn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/shop/btn_watch.png")); else {
			btn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/shop/btn_watch_off.png"));
			btn.enabled = false;
		}
		return btn;
	}
	,toggleSelect: function(flag) {
		this._selected.set_visible(flag);
	}
	,getId: function() {
		return this._data.id;
	}
	,__class__: co_doubleduck_dynamons2_meta_ShopProduct
});
var co_doubleduck_dynamons2_meta_ScrolledItem = function() {
	openfl_display_Sprite.call(this);
};
$hxClasses["co.doubleduck.dynamons2.meta.ScrolledItem"] = co_doubleduck_dynamons2_meta_ScrolledItem;
co_doubleduck_dynamons2_meta_ScrolledItem.__name__ = ["co","doubleduck","dynamons2","meta","ScrolledItem"];
co_doubleduck_dynamons2_meta_ScrolledItem.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_ScrolledItem.prototype = $extend(openfl_display_Sprite.prototype,{
	depressItem: function() {
	}
	,destroy: function() {
	}
	,__class__: co_doubleduck_dynamons2_meta_ScrolledItem
});
var co_doubleduck_dynamons2_meta_MapNode = function(data,disabled) {
	co_doubleduck_dynamons2_meta_ScrolledItem.call(this);
	this._data = data;
	this._disabled = disabled;
	this._actionable = false;
	this._lockedAction = false;
	this._enemy = "";
	this._enemMons = [];
	this._rewards = [];
	this._type = "";
	if(data.specialBattle != null && data.specialBattle != "") {
		if(data.specialBattle == "vanity") {
			var vanityData = co_doubleduck_dynamons2_data_GameplayDB.getTutorialData().vanityData;
			this._enemMons.push(vanityData.enemy);
			this._type = "wild";
		}
		return;
	}
	this._btn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/map/node.png"));
	this._btn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBtn));
	this.addChild(this._btn);
	if(this._data.arenaBattle == "true") {
		this._btn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBtn));
		this.removeChild(this._btn);
		this._btn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/map/node_arena.png"));
		this._btn.set_y(co_doubleduck_utils_DDAssets.scale);
		this._btn.pushMode = co_doubleduck_utils_ButtonPushMode.NONE;
		this._btn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBtn));
		this._btn.set_alpha(0.01);
		this.addChild(this._btn);
	}
	if(this._disabled) {
		this._btn.set_alpha(0.3);
		this._btn.enabled = false;
		if(this._data.bossBattle != null && !co_doubleduck_dynamons2_meta_GameState.isNodeBeated(Std["int"](this._data.id))) {
			if(this._data.bossBattle.hideBeforeStep != null && co_doubleduck_dynamons2_meta_Tutorial.inst().isBeforeStep(Type.createEnum(co_doubleduck_dynamons2_meta_TutorStep,this._data.bossBattle.hideBeforeStep))) {
			} else if(this._data.bossBattle.hideBeforePack != null && co_doubleduck_dynamons2_meta_GameState.isPackLocked(this._data.bossBattle.hideBeforePack)) {
			} else {
				this._enemy = this._data.bossBattle.enemy;
				this.setupCaptainAvatar(0 * co_doubleduck_utils_DDAssets.scale,5 * co_doubleduck_utils_DDAssets.scale);
			}
		}
		if(this._data.arenaBattle == "true") this._btn.set_alpha(0.01);
	} else {
		if(this._data.bossBattle != null && !co_doubleduck_dynamons2_meta_GameState.isNodeBeated(Std["int"](this._data.id))) {
			if(this._data.bossBattle.hideBeforeStep != null && co_doubleduck_dynamons2_meta_Tutorial.inst().isBeforeStep(Type.createEnum(co_doubleduck_dynamons2_meta_TutorStep,this._data.bossBattle.hideBeforeStep))) this.setType("none"); else this.setType("boss");
		}
		if(this._data.arenaBattle == "true") this.setType("arena");
	}
};
$hxClasses["co.doubleduck.dynamons2.meta.MapNode"] = co_doubleduck_dynamons2_meta_MapNode;
co_doubleduck_dynamons2_meta_MapNode.__name__ = ["co","doubleduck","dynamons2","meta","MapNode"];
co_doubleduck_dynamons2_meta_MapNode.__super__ = co_doubleduck_dynamons2_meta_ScrolledItem;
co_doubleduck_dynamons2_meta_MapNode.prototype = $extend(co_doubleduck_dynamons2_meta_ScrolledItem.prototype,{
	setupCaptainAvatar: function(posx,posy) {
		var bossAvatar = co_doubleduck_utils_DDAssets.getImage("images/general/enemies/" + this.getEnemy() + "_avatar.png");
		bossAvatar.set_x(posx - bossAvatar.get_width() / 2);
		bossAvatar.set_y(posy - bossAvatar.get_height());
		this.addChild(bossAvatar);
	}
	,availForBattles: function() {
		return this._type == "";
	}
	,getPack: function() {
		return this._data.pack;
	}
	,getType: function() {
		return this._type;
	}
	,setType: function(type) {
		var prevType = this._type;
		this._type = type;
		if(this._type == "none") {
			this.setActionable(false);
			this._enemMons = [];
			this._rewards = [];
			this._enemy = "";
		} else {
			this.setActionable(true);
			if(this._type == "wild" || this._type == "captain") {
				var packData = co_doubleduck_dynamons2_data_GameplayDB.getMapPack(this._data.pack);
				var availMonsDat;
				if(this._data.availMons != null) availMonsDat = this._data.availMons; else {
					availMonsDat = packData.availMons;
					if(this._data.alsoAvailMons != null) availMonsDat = availMonsDat.concat(this._data.alsoAvailMons);
				}
				var datToRemove = [];
				var _g = 0;
				while(_g < availMonsDat.length) {
					var dat = availMonsDat[_g];
					++_g;
					if(dat.onlyFor != null && dat.onlyFor != this._type) datToRemove.push(dat);
				}
				var _g1 = 0;
				while(_g1 < datToRemove.length) {
					var dat1 = datToRemove[_g1];
					++_g1;
					var x = dat1;
					HxOverrides.remove(availMonsDat,x);
				}
				if(this._type == "wild") {
					this._enemMons.push(this.rollWildMon(availMonsDat));
					var wildLootData = co_doubleduck_dynamons2_data_GameplayDB.getLootData().wildAmounts;
					var lootData = co_doubleduck_dynamons2_data_DynaUtils.getByAdvanceDist(wildLootData,Std["int"](packData.advance));
					var oddsParts = lootData.getOdds.split(":");
					var getOdds_0 = Std.parseInt(oddsParts[0]);
					var getOdds_1 = Std.parseInt(oddsParts[1]);
					if(getOdds_0 > 0 && getOdds_1 >= getOdds_0) {
						if(Std.random(getOdds_1) < getOdds_0) {
							var coins = { };
							coins.name = "coins";
							var coinsRange = co_doubleduck_utils_Utils.intRange(lootData.coins);
							coinsRange[1] -= coinsRange[0];
							coins.amount = coinsRange[0] + Std.random(coinsRange[1]);
							this._rewards.push(coins);
						}
					}
				} else if(this._type == "captain") {
					var captainData = packData.captains;
					var amountData = co_doubleduck_dynamons2_data_DynaUtils.rollWithOdds(captainData.monsCount);
					var amount = Std["int"](amountData.amount);
					if(amount < 1) amount = 1; else amount = amount;
					if(amount > 3) amount = 3; else amount = amount;
					var lvlParts = captainData.levelsFactor.split("-");
					var lvlNums = [];
					lvlNums.push(parseFloat(lvlParts[0]));
					lvlNums.push(parseFloat(lvlParts[1]) - lvlNums[0]);
					while(amount > 0) {
						amount--;
						var lvlFactor = lvlNums[0] + Math.random() * lvlNums[1];
						this._enemMons.push(this.rollWildMon(availMonsDat,lvlFactor));
					}
					var enemies = captainData.avail;
					this._enemy = enemies[Std.random(enemies.length)];
					this.setupCaptainAvatar(-10 * co_doubleduck_utils_DDAssets.scale,5 * co_doubleduck_utils_DDAssets.scale);
					var availTaunts = co_doubleduck_dynamons2_data_GameplayDB.getMapData().captainTaunts;
					var _g2 = 0;
					while(_g2 < availTaunts.length) {
						var tauntDat = availTaunts[_g2];
						++_g2;
						if(tauntDat.name == this._enemy) {
							var tPool = tauntDat.pool;
							this._enemyTaunt = tPool[Std.random(tPool.length)];
							break;
						}
					}
					var availLoot = co_doubleduck_dynamons2_data_GameplayDB.getLootData().availLoot;
					var lootPool = co_doubleduck_dynamons2_data_DynaUtils.getByAdvance(availLoot).loot;
					var captainLootData = co_doubleduck_dynamons2_data_GameplayDB.getLootData().captainAmounts;
					var lootData1 = co_doubleduck_dynamons2_data_DynaUtils.getByAdvanceDist(captainLootData,Std["int"](packData.advance));
					var amountData1 = co_doubleduck_dynamons2_data_DynaUtils.rollWithOdds(lootData1.amounts);
					var itemCount = Std["int"](amountData1.amount);
					var coinsAmount = co_doubleduck_utils_Utils.intRange(lootData1.coins);
					coinsAmount[1] -= coinsAmount[0];
					while(itemCount > 0) {
						itemCount--;
						var itemDat = { };
						var itemRoll = co_doubleduck_dynamons2_data_DynaUtils.rollWithOdds(lootPool);
						itemDat.name = itemRoll.id;
						if(itemDat.name == "coins") itemDat.amount = coinsAmount[0] + Std.random(coinsAmount[1] + 1); else itemDat.amount = 1;
						var found = false;
						var _g11 = 0;
						var _g3 = this._rewards.length;
						while(_g11 < _g3) {
							var i = _g11++;
							if(this._rewards[i].name == itemDat.name) {
								found = true;
								this._rewards[i].amount += itemDat.amount;
								break;
							}
						}
						if(!found) this._rewards.push(itemDat);
					}
				}
			} else if(this._type == "boss") {
				this._enemy = this._data.bossBattle.enemy;
				this.setupCaptainAvatar(-10 * co_doubleduck_utils_DDAssets.scale,5 * co_doubleduck_utils_DDAssets.scale);
				this._enemMons = this._data.bossBattle.mons;
				this._rewards = this._data.bossBattle.reward;
				this._enemyTaunt = this._data.bossBattle.taunt;
			} else if(this._type == "arena") {
				this._enemy = "stephan";
				var arenaData = co_doubleduck_dynamons2_data_GameplayDB.getArenaData();
				var nowDay = new Date().getDate();
				if(co_doubleduck_dynamons2_meta_GameState.getArenaLastRoll() == nowDay) {
					if(co_doubleduck_dynamons2_meta_GameState.isArenaBeated()) {
						this._type = "none";
						this.setActionable(false);
						this._enemMons = [];
						this._rewards = [];
						this._enemy = "";
						return;
					}
					var rollDat = co_doubleduck_dynamons2_meta_GameState.getArenaRoll();
					this._enemMons = [];
					var monsDat = rollDat.mons;
					var _g4 = 0;
					while(_g4 < monsDat.length) {
						var dat2 = monsDat[_g4];
						++_g4;
						var mon = new co_doubleduck_dynamons2_core_Mon(dat2.id,dat2.level);
						this._enemMons.push(mon);
					}
					this._rewards = rollDat.rewards;
				} else {
					var monLevels = [];
					var playerMons = co_doubleduck_dynamons2_meta_GameState.getPlayerMons();
					var _g5 = 0;
					while(_g5 < playerMons.length) {
						var mon1 = playerMons[_g5];
						++_g5;
						monLevels.push(mon1.getLevel());
					}
					var sorter = function(a,b) {
						return b - a;
					};
					monLevels.sort(sorter);
					while(monLevels.length > 3) monLevels.pop();
					while(monLevels.length < 3) monLevels.push(monLevels[monLevels.length - 1]);
					var extraRange = co_doubleduck_utils_Utils.intRange(arenaData.monLevelDeltas);
					extraRange[1] -= extraRange[0];
					var _g12 = 0;
					var _g6 = monLevels.length;
					while(_g12 < _g6) {
						var i1 = _g12++;
						monLevels[i1] += extraRange[0] + Std.random(extraRange[1]);
					}
					var teamsPools = arenaData.monTeams;
					var teamsPool = co_doubleduck_dynamons2_data_DynaUtils.getByAdvance(teamsPools);
					var pool = teamsPool.teams;
					var monIds = pool[Std.random(pool.length)];
					this._enemMons = [];
					var monsSaveDat = [];
					var _g13 = 0;
					var _g7 = monIds.length;
					while(_g13 < _g7) {
						var i2 = _g13++;
						var lvlTable = co_doubleduck_dynamons2_data_GameplayDB.getMon(monIds[i2]).lvlTable;
						var maxLevel = Std["int"](lvlTable[lvlTable.length - 1].lvl);
						if(monLevels[i2] > maxLevel) monLevels[i2] = maxLevel;
						var mon2 = new co_doubleduck_dynamons2_core_Mon(monIds[i2],monLevels[i2]);
						this._enemMons.push(mon2);
						monsSaveDat.push({ id : mon2.getId(), level : mon2.getLevel()});
					}
					var rewDats = arenaData.rewards;
					var rewDat = co_doubleduck_dynamons2_data_DynaUtils.getByAdvance(rewDats);
					var rewPool = rewDat.rewardsPool;
					var rewParts = rewPool[Std.random(rewPool.length - 1)].split(",");
					var _g8 = 0;
					while(_g8 < rewParts.length) {
						var part = rewParts[_g8];
						++_g8;
						var partParts = part.split(":");
						var reward = { };
						reward.name = partParts[0];
						reward.amount = Std.parseInt(partParts[1]);
						this._rewards.push(reward);
					}
					co_doubleduck_dynamons2_meta_GameState.saveArenaRoll(monsSaveDat,this._rewards);
					co_doubleduck_dynamons2_meta_GameState.setArenaBeated(false);
					co_doubleduck_dynamons2_meta_GameState.setArenaLastRoll(nowDay);
				}
				var tauntPool = arenaData.taunts;
				this._enemyTaunt = tauntPool[Std.random(tauntPool.length)];
			}
		}
	}
	,rollWildMon: function(wildMons,levelFactor) {
		if(levelFactor == null) levelFactor = 1;
		var rolledMonDat = co_doubleduck_dynamons2_data_DynaUtils.rollWithOdds(wildMons);
		var lvlRange = rolledMonDat.levels.split("-");
		var range_0 = Std.parseInt(lvlRange[0]);
		var range_1 = Std.parseInt(lvlRange[1]);
		var lvl = range_0 + Std.random(range_1 - range_0);
		var monData = { };
		monData.id = rolledMonDat.id;
		monData.level = Math.floor(lvl * levelFactor);
		if(monData.level < 1) monData.level = 1;
		var maxLevel = co_doubleduck_dynamons2_data_GameplayDB.getMonMaxLevel(monData.id);
		if(monData.level > maxLevel) monData.level = maxLevel;
		return monData;
	}
	,getId: function() {
		return Std["int"](this._data.id);
	}
	,getEnemyTaunt: function() {
		return this._enemyTaunt;
	}
	,getEnemy: function() {
		if(this._enemy == null) return ""; else return this._enemy;
	}
	,getEnemMons: function() {
		return this._enemMons;
	}
	,getRewards: function() {
		return this._rewards;
	}
	,getAvatarPos: function() {
		var pos = new openfl_geom_Point(this.get_x(),this.get_y());
		if(this._actionable) {
			pos.x += 10;
			pos.y += 7;
		}
		return pos;
	}
	,setActionable: function(flag) {
		if(this._actionable == flag) return;
		this._actionable = flag;
		if(this._actionable) {
			this._popAction = new openfl_display_Sprite();
			var markerName = this._type;
			if(markerName == "wild" || markerName == "boss" || markerName == "captain") markerName = "battle";
			var action = co_doubleduck_utils_DDAssets.getImage("images/map/marker_" + markerName + ".png");
			var _g = action;
			_g.set_x(_g.get_x() - action.get_width() / 2);
			var _g1 = action;
			_g1.set_y(_g1.get_y() - action.get_height());
			this._popAction.addChild(action);
			this._popAction.mouseChildren = this._popAction.mouseEnabled = false;
			this.addChild(this._popAction);
			co_doubleduck_utils_TweenChain.get(this._popAction).wait(10 + Std.random(10) * 30).call(co_doubleduck_utils_TweenAnimator.hover,[this._popAction]);
		} else {
			co_doubleduck_utils_TweenChain.removeTweens(this._popAction);
			this.removeChild(this._popAction);
			this._popAction = null;
		}
	}
	,lock: function() {
		if(this._actionable && !this._lockedAction) {
			this._lockedAction = true;
			var off = co_doubleduck_utils_DDAssets.getImage("images/map/marker_off.png");
			var _g = off;
			_g.set_x(_g.get_x() - off.get_width() / 2);
			var _g1 = off;
			_g1.set_y(_g1.get_y() - off.get_height());
			this._popAction.addChild(off);
			co_doubleduck_utils_TweenChain.removeTweens(this._popAction);
		}
	}
	,unlock: function() {
		if(this._lockedAction) {
			this._lockedAction = false;
			this._popAction.removeChildAt(1);
			co_doubleduck_utils_TweenChain.removeTweens(this._popAction);
			co_doubleduck_utils_TweenAnimator.hover(this._popAction);
		}
	}
	,isActionable: function() {
		return this._actionable && !this._lockedAction;
	}
	,depressItem: function() {
		this._btn.dePress();
	}
	,handleBtn: function(e) {
		co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_START);
		this.dispatchEvent(new openfl_events_Event("GotoNodeEvent"));
		if(this._type == "arena") {
			co_doubleduck_utils_TweenChain.removeTweens(this._btn);
			co_doubleduck_utils_TweenChain.get(this._btn).tto({ alpha : 0.6},10).tto({ alpha : 0.01},100);
		}
	}
	,destroy: function() {
		if(this._popAction != null) co_doubleduck_utils_TweenChain.removeTweens(this._popAction);
		if(this._type == "arena") {
			var _g = 0;
			var _g1 = this._enemMons;
			while(_g < _g1.length) {
				var mon = _g1[_g];
				++_g;
			}
		}
	}
	,__class__: co_doubleduck_dynamons2_meta_MapNode
});
var co_doubleduck_dynamons2_meta_NodesMap = function(data) {
	openfl_display_Sprite.call(this);
	this._data = data;
	co_doubleduck_dynamons2_meta_NodesMap._instance = this;
	this._debugPos = false;
	this._reenableAllNodes = false;
	this._specialBattle = "";
	this._worldMap = new co_doubleduck_dynamons2_meta_ScrolledContainer(co_doubleduck_dynamons2_Game.getScreenSize(),false);
	this._worldMap.itemPadding = 15 * co_doubleduck_utils_DDAssets.scale;
	this.addChild(this._worldMap);
	var mapOptionsData = co_doubleduck_dynamons2_data_GameplayDB.getMapData().mapVisibility;
	var mapAvailData = co_doubleduck_dynamons2_data_DynaUtils.getByAdvance(mapOptionsData);
	this._scrollableMap = mapAvailData.scrollable == "true";
	this._worldMap.enableScroll = this._scrollableMap;
	this._unlockedNodes = new haxe_ds_IntMap();
	this._nodeMesh = new co_doubleduck_utils_Mesh();
	var nodesData = co_doubleduck_dynamons2_data_GameplayDB.getMapNodes();
	var back = new co_doubleduck_utils_DrawBuffer();
	this._bgY = 0;
	var bgPos = -75 * co_doubleduck_utils_DDAssets.scale;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var bgName = "bg" + (i + 1);
		var bg = co_doubleduck_utils_DDAssets.getImage("images/map/bgs/" + bgName + ".jpg");
		bg.set_x(bgPos);
		this._bgY = bg.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - bg.get_height() / 2);
		bgPos = bg.get_x() + bg.get_width() - 1;
		back.add(bg);
	}
	var visiblePacks = mapAvailData.visible.split(",");
	var _g1 = 0;
	var _g2 = nodesData.length;
	while(_g1 < _g2) {
		var nodeInd = _g1++;
		var curr = nodesData[nodeInd];
		var currId = Std["int"](curr.id);
		var value = !co_doubleduck_dynamons2_meta_GameState.isPackLocked(curr.pack);
		this._unlockedNodes.h[currId] = value;
		if(currId == 1 || (function($this) {
			var $r;
			var x = curr.pack;
			$r = HxOverrides.indexOf(visiblePacks,x,0);
			return $r;
		}(this)) == -1) continue;
		var prev = nodesData[Std["int"](curr.connect) - 1];
		var prevId = Std["int"](prev.id);
		var fromPos = new openfl_geom_Point(curr.pos[0],curr.pos[1]);
		var toPos = new openfl_geom_Point(prev.pos[0],prev.pos[1]);
		var delta = toPos.subtract(fromPos);
		var angle = Math.abs(Math.atan2(delta.x,-delta.y) * (180 / Math.PI));
		if(angle > 90) angle = 180 - angle;
		var space = co_doubleduck_utils_Utils.map(angle,0,90,11,16);
		var dots = Math.floor(delta.get_length() / space);
		space = delta.get_length() / dots;
		dots -= 3;
		var _g21 = 0;
		while(_g21 < dots) {
			var i1 = _g21++;
			delta.normalize((i1 + 2) * space);
			var pathlet = this.getPathlet(fromPos.add(delta));
			pathlet.set_alpha(this._unlockedNodes.h[currId]?1:0.3);
			var _g3 = pathlet;
			_g3.set_y(_g3.get_y() + this._bgY);
			back.add(pathlet);
		}
	}
	back.render();
	this._worldMap.addDecor(back);
	var rollBattleNodes = [];
	this._nodes = new haxe_ds_IntMap();
	var _g11 = 0;
	var _g4 = nodesData.length;
	while(_g11 < _g4) {
		var i2 = _g11++;
		var nodeData = nodesData[i2];
		if((function($this) {
			var $r;
			var x1 = nodeData.pack;
			$r = HxOverrides.indexOf(visiblePacks,x1,0);
			return $r;
		}(this)) == -1) continue;
		var nodeId = Std["int"](nodeData.id);
		if(this._unlockedNodes.h[nodeId]) {
			this._nodeMesh.addNode(nodeId,Std["int"](nodeData.connect));
			var node = new co_doubleduck_dynamons2_meta_MapNode(nodeData,false);
			node.addEventListener("GotoNodeEvent",$bind(this,this.handleGotoNode));
			node.set_x(nodeData.pos[0] * co_doubleduck_utils_DDAssets.scale);
			node.set_y(nodeData.pos[1] * co_doubleduck_utils_DDAssets.scale + this._bgY);
			this._worldMap.addItem(node);
			this._nodes.h[nodeId] = node;
			if(node.availForBattles()) rollBattleNodes.push(node);
		} else {
			var node1 = new co_doubleduck_dynamons2_meta_MapNode(nodeData,true);
			node1.set_x(nodeData.pos[0] * co_doubleduck_utils_DDAssets.scale);
			node1.set_y(nodeData.pos[1] * co_doubleduck_utils_DDAssets.scale + this._bgY);
			this._worldMap.addItem(node1);
		}
	}
	this._worldMap.setMaxScroll(Std["int"](mapAvailData.scrollMax) * co_doubleduck_utils_DDAssets.scale);
	this._avatar = new openfl_display_Sprite();
	var avatar = co_doubleduck_utils_DDAssets.getImage("images/map/avatar.png");
	var _g5 = avatar;
	_g5.set_x(_g5.get_x() - avatar.get_width() / 2);
	var _g6 = avatar;
	_g6.set_y(_g6.get_y() - avatar.get_height() / 2);
	this._avatar.addChild(avatar);
	var _g7 = this._avatar;
	_g7.set_y(_g7.get_y() - avatar.get_height() * 0.3);
	this._avatarBox = new openfl_display_Sprite();
	this._avatarBox.addChild(this._avatar);
	this._worldMap.addDecor(this._avatarBox);
	this._teamBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/map/btn_team.png"));
	this._teamBtn.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 5 * co_doubleduck_utils_DDAssets.scale - this._teamBtn.get_width() / 2);
	this._teamBtn.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height - 5 * co_doubleduck_utils_DDAssets.scale - this._teamBtn.get_height() / 2);
	this._teamBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleTeamClick));
	this.addChild(this._teamBtn);
	if(co_doubleduck_dynamons2_meta_Tutorial.inst().isBeforeStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT)) this._teamBtn.set_visible(false);
	this._itemsBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/map/btn_items.png"));
	this._itemsBtn.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 10 * co_doubleduck_utils_DDAssets.scale - this._itemsBtn.get_width() * 1.5);
	this._itemsBtn.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height - 5 * co_doubleduck_utils_DDAssets.scale - this._itemsBtn.get_height() / 2);
	this._itemsBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleItemsClick));
	this.addChild(this._itemsBtn);
	if(!co_doubleduck_dynamons2_meta_Tutorial.inst().hasPassedStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY)) this._itemsBtn.set_visible(false);
	this._shopBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/map/btn_shop.png"));
	this._shopBtn.set_x(10 * co_doubleduck_utils_DDAssets.scale + this._shopBtn.get_width() / 2);
	this._shopBtn.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height - 5 * co_doubleduck_utils_DDAssets.scale - this._shopBtn.get_height() / 2);
	this._shopBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleShopClick));
	this.addChild(this._shopBtn);
	if(co_doubleduck_dynamons2_meta_Tutorial.inst().isBeforeStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_TALK)) this._shopBtn.set_visible(false);
	this._modalLayer = new openfl_display_Sprite();
	this._avatarPos = co_doubleduck_dynamons2_meta_GameState.getPlayerPos();
	var posNode = this._nodes.h[this._avatarPos];
	this._worldMap.focusOnItem(posNode,true);
	this._avatarBox.set_x(posNode.getAvatarPos().x);
	this._avatarBox.set_y(posNode.getAvatarPos().y);
	if(HxOverrides.indexOf(rollBattleNodes,posNode,0) != -1) HxOverrides.remove(rollBattleNodes,posNode);
	if(co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.JOVANI_TALK_KOLIN) rollBattleNodes = [];
	var allOddsData = co_doubleduck_dynamons2_data_GameplayDB.getMapData().battleNodeRatios;
	var oddsData = co_doubleduck_dynamons2_data_DynaUtils.getByAdvance(allOddsData).odds;
	var totalOdds = 0;
	var wildOdds = 0;
	var captainOdds = 0;
	var _g8 = 0;
	while(_g8 < oddsData.length) {
		var currOdds = oddsData[_g8];
		++_g8;
		totalOdds += Std["int"](currOdds.odds);
		if(currOdds.type == "wild") wildOdds = Std["int"](currOdds.odds);
		if(currOdds.type == "captain") captainOdds = Std["int"](currOdds.odds);
	}
	var wildsNum = Math.round(wildOdds / totalOdds * rollBattleNodes.length);
	var captainsNum = Math.round(captainOdds / totalOdds * rollBattleNodes.length);
	while(wildsNum > 0) {
		wildsNum--;
		if(rollBattleNodes.length > 0) {
			var node2 = rollBattleNodes[Std.random(rollBattleNodes.length)];
			node2.setType("wild");
			HxOverrides.remove(rollBattleNodes,node2);
		}
	}
	while(captainsNum > 0) {
		captainsNum--;
		if(rollBattleNodes.length > 0) {
			var node3 = rollBattleNodes[Std.random(rollBattleNodes.length)];
			node3.setType("captain");
			HxOverrides.remove(rollBattleNodes,node3);
		}
	}
	while(rollBattleNodes.length > 0) {
		var node4 = rollBattleNodes[rollBattleNodes.length - 1];
		node4.setType("none");
		HxOverrides.remove(rollBattleNodes,node4);
	}
	this.checkTeamHP();
	this._topHud = new co_doubleduck_dynamons2_meta_TopHud();
	this.addChild(this._topHud);
	this.addChild(this._modalLayer);
	this.addEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleStage));
	co_doubleduck_utils_AdManager.fetchIncentivized();
};
$hxClasses["co.doubleduck.dynamons2.meta.NodesMap"] = co_doubleduck_dynamons2_meta_NodesMap;
co_doubleduck_dynamons2_meta_NodesMap.__name__ = ["co","doubleduck","dynamons2","meta","NodesMap"];
co_doubleduck_dynamons2_meta_NodesMap._instance = null;
co_doubleduck_dynamons2_meta_NodesMap.setScrollable = function(flag) {
	co_doubleduck_dynamons2_meta_NodesMap._instance._worldMap.enableScroll = flag;
};
co_doubleduck_dynamons2_meta_NodesMap.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_NodesMap.prototype = $extend(openfl_display_Sprite.prototype,{
	handleStage: function(e) {
		this.removeEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleStage));
		if(co_doubleduck_dynamons2_meta_NodesMap._isFirstRun) co_doubleduck_dynamons2_meta_NodesMap._isFirstRun = false;
		this.handleDialogs();
	}
	,handleDialogs: function() {
		var showDialogId = null;
		if(this._data != null && this._data.nodeId != null && this._data.won != null && (this._data.nodeType == "boss" || this._data.nodeType == "arena")) {
			var won = this._data.won;
			var nodeData = co_doubleduck_dynamons2_data_GameplayDB.getMapNode(Std["int"](this._data.nodeId));
			if(won && nodeData.bossBattle != null && nodeData.bossBattle.dialog_win != null && !co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog(nodeData.bossBattle.dialog_win)) showDialogId = nodeData.bossBattle.dialog_win; else if(!won && nodeData.bossBattle != null && nodeData.bossBattle.dialog_lose != null && !co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog(nodeData.bossBattle.dialog_lose)) showDialogId = nodeData.bossBattle.dialog_lose; else if(won && nodeData.arenaDialogs != null && nodeData.arenaDialogs.dialog_win != null && !co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog(nodeData.arenaDialogs.dialog_win)) showDialogId = nodeData.arenaDialogs.dialog_win; else if(!won && nodeData.arenaDialogs != null && nodeData.arenaDialogs.dialog_lose != null && !co_doubleduck_dynamons2_meta_DialogBox.hasSeenDialog(nodeData.arenaDialogs.dialog_lose)) showDialogId = nodeData.arenaDialogs.dialog_lose;
		}
		var over = new openfl_display_Sprite();
		over.get_graphics().beginFill(0);
		over.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		over.get_graphics().endFill();
		over.set_alpha(1);
		this.addChild(over);
		var fadeTween = co_doubleduck_utils_TweenChain.get(over).tto({ alpha : 0},330).call($bind(this,this.removeChild),[over]);
		if(showDialogId != null) {
			this.toggleUserControls(false);
			fadeTween.wait(500).call($bind(this,this.showPostBattleDialog),[showDialogId]);
		} else this.handleTutorials();
	}
	,handleTutorials: function() {
		var _g = this;
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO) {
			co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO);
			var introScreen = new co_doubleduck_dynamons2_meta_IntroScreen();
			this.addChild(introScreen);
			introScreen.onYes = function() {
				co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO);
				co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.VANITY_BATTLE);
				_g._specialBattle = "vanity";
				var nodeData = { };
				nodeData.id = -1;
				nodeData.specialBattle = _g._specialBattle;
				_g.startFightAt(new co_doubleduck_dynamons2_meta_MapNode(nodeData,false));
			};
		} else if(co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB) {
			var chooseScreen = new co_doubleduck_dynamons2_meta_ChooseScreen();
			chooseScreen.onEnd = $bind(this,this.handleDynamonChosen);
			this.addChild(chooseScreen);
		}
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_TALK,function() {
			co_doubleduck_utils_Utils.delayedCall(0.1,($_=co_doubleduck_dynamons2_meta_Tutorial.inst(),$bind($_,$_.tryShowStep)),[co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_OPEN,_g._shopBtn]);
		});
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.JOVANI_TALK_KOLIN);
		this.tryFirstBattleTutor();
		var isPostBattle = this._data != null && this._data.nodeId != null;
		if(isPostBattle && co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.HEAL_TALK) {
			var showHealTutor = false;
			var team = co_doubleduck_dynamons2_meta_GameState.getParty();
			var _g1 = 0;
			while(_g1 < team.length) {
				var mon = team[_g1];
				++_g1;
				if(mon.getLevel() >= 4) {
					var ratio = mon.getCurrHP() / mon.getTotalHP();
					if(ratio <= 0.5) {
						showHealTutor = true;
						break;
					}
				}
			}
			if(showHealTutor) co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.HEAL_TALK,function() {
				co_doubleduck_utils_Utils.delayedCall(0.1,($_=co_doubleduck_dynamons2_meta_Tutorial.inst(),$bind($_,$_.tryShowStep)),[co_doubleduck_dynamons2_meta_TutorStep.HEAL_OPEN_TEAM,_g._teamBtn]);
			});
		}
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.KLYDE_INTRODUCE);
	}
	,handleMusic: function(e) {
	}
	,handleDebugPos: function(e) {
		if(e.type == openfl_events_MouseEvent.MOUSE_DOWN) {
			if(this._debugPos) null;
		} else if(e.type == openfl_events_KeyboardEvent.KEY_DOWN) {
			if((js_Boot.__cast(e , openfl_events_KeyboardEvent)).keyCode == 90) this._debugPos = true;
		} else if(e.type == openfl_events_KeyboardEvent.KEY_UP) {
			if((js_Boot.__cast(e , openfl_events_KeyboardEvent)).keyCode == 90) this._debugPos = false;
		}
	}
	,checkTeamHP: function() {
		return;
		var teamHP = co_doubleduck_dynamons2_meta_GameState.getPartyHP();
		if(teamHP == 0) {
			if(this._healTeamMsg == null) {
				this._healTeamMsg = co_doubleduck_utils_DDAssets.getImage("images/map/msg_heal.png");
				this._healTeamMsg.set_x(4 * co_doubleduck_utils_DDAssets.scale);
				this._healTeamMsg.set_y(-100);
				this._modalLayer.addChildAt(this._healTeamMsg,0);
				co_doubleduck_utils_TweenChain.get(this._healTeamMsg).tto({ y : 5 * co_doubleduck_utils_DDAssets.scale},250,motion_easing_Sine.get_easeOut());
				var nodesData = co_doubleduck_dynamons2_data_GameplayDB.getMapNodes();
				var $it0 = this._nodes.iterator();
				while( $it0.hasNext() ) {
					var node = $it0.next();
					node.lock();
				}
			}
		} else if(this._healTeamMsg != null) {
			co_doubleduck_utils_TweenChain.removeTweens(this._healTeamMsg);
			co_doubleduck_utils_TweenChain.get(this._healTeamMsg).tto({ y : -100},250,motion_easing_Sine.get_easeIn()).call(($_=this._modalLayer,$bind($_,$_.removeChild)),[this._healTeamMsg]);
			this._healTeamMsg = null;
			var nodesData1 = co_doubleduck_dynamons2_data_GameplayDB.getMapNodes();
			var $it1 = this._nodes.iterator();
			while( $it1.hasNext() ) {
				var node1 = $it1.next();
				node1.unlock();
			}
		}
	}
	,getPathlet: function(atPos) {
		var pathlet = co_doubleduck_utils_DDAssets.getImage("images/map/path_dot.png");
		pathlet.set_x(atPos.x * co_doubleduck_utils_DDAssets.scale - pathlet.get_width() / 2);
		pathlet.set_y(atPos.y * co_doubleduck_utils_DDAssets.scale - pathlet.get_height() / 2);
		return pathlet;
	}
	,handleGotoNode: function(e) {
		var node = e.target;
		if(this._teamBtn != null) this._teamBtn.enabled = false;
		if(this._shopBtn != null) this._shopBtn.enabled = false;
		if(this._itemsBtn != null) this._itemsBtn.enabled = false;
		this.toggleAvatarWalkAnim(true);
		if(this._avatarPos != node.getId()) {
			var path = this._nodeMesh.calcPath(this._avatarPos,node.getId());
			this.avatarWalkPath(path);
		}
	}
	,avatarWalkPath: function(path) {
		if(path == null) return;
		co_doubleduck_utils_TweenChain.removeTweens(this._avatarBox);
		this._avatarPos = path[0];
		if(path.length > 1) {
			path.shift();
			var nextNode = this._nodes.h[path[0]];
			var gotoPos = nextNode.getAvatarPos();
			var dist = new openfl_geom_Point(gotoPos.x - this._avatarBox.get_x(),gotoPos.y - this._avatarBox.get_y());
			co_doubleduck_utils_TweenChain.get(this._avatarBox).tto({ x : gotoPos.x, y : gotoPos.y},Math.floor(dist.get_length() * 7 / co_doubleduck_utils_DDAssets.scale)).call($bind(this,this.avatarWalkPath),[path]);
		} else {
			this.toggleAvatarWalkAnim(false);
			var atNode = this._nodes.h[this._avatarPos];
			co_doubleduck_dynamons2_meta_GameState.setPlayerPos(this._avatarPos);
			if(atNode.getType() == "wild") this.startFightAt(atNode);
			if(atNode.getType() == "captain" || atNode.getType() == "boss" || atNode.getType() == "arena") {
				var enemy = new co_doubleduck_dynamons2_meta_EnemyModal(atNode);
				enemy.addEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseModal));
				enemy.addEventListener("FightEvent",$bind(this,this.handleEnemyFight));
				this._modalLayer.addChild(enemy);
				this._worldMap.enableScroll = false;
			}
			if(this._teamBtn != null) this._teamBtn.enabled = true;
			if(this._shopBtn != null) this._shopBtn.enabled = true;
			if(this._itemsBtn != null) this._itemsBtn.enabled = true;
		}
	}
	,toggleAvatarWalkAnim: function(flag) {
		co_doubleduck_utils_TweenChain.removeTweens(this._avatar);
		this._avatar.set_x(0);
		this._avatar.set_y(-this._avatar.get_height() * 0.3);
		this._avatar.set_rotation(0);
		var hstep = 70;
		if(flag) {
			co_doubleduck_utils_TweenChain.get(this._avatar).tto({ y : this._avatar.get_y() - 3},hstep,motion_easing_Sine.get_easeOut()).tto({ y : this._avatar.get_y()},hstep,motion_easing_Sine.get_easeIn()).tto({ y : this._avatar.get_y() - 3},hstep,motion_easing_Sine.get_easeOut()).tto({ y : this._avatar.get_y()},hstep,motion_easing_Sine.get_easeIn());
			co_doubleduck_utils_TweenChain.get(this._avatar).tto({ rotation : 9},hstep).tto({ rotation : -9},hstep * 2).tto({ rotation : 0},hstep).call($bind(this,this.toggleAvatarWalkAnim),[true]);
		}
	}
	,handleEnemyFight: function(e) {
		var enemyModal = e.target;
		enemyModal.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseModal));
		enemyModal.removeEventListener("FightEvent",$bind(this,this.handleCloseModal));
		enemyModal.destroy();
		this.startFightAt(enemyModal.getNode());
	}
	,handleTeamClick: function(e) {
		this._teamBtn.enabled = false;
		var team = new co_doubleduck_dynamons2_meta_TeamScreen();
		team.addEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseModal));
		this._modalLayer.addChild(team);
		this._worldMap.stopScroll();
		this._worldMap.enableScroll = false;
	}
	,handleItemsClick: function(e) {
		this._itemsBtn.enabled = false;
		var items = new co_doubleduck_dynamons2_meta_InventoryScr(false,false);
		items.addEventListener("ClosedScreenEvent",$bind(this,this.handleCloseModal));
		this._modalLayer.addChild(items);
		this._worldMap.stopScroll();
		this._worldMap.enableScroll = false;
	}
	,handleShopClick: function(e) {
		co_doubleduck_dynamons2_Game.reportEvent("shop_open",{ });
		this._shopBtn.enabled = false;
		var shop = new co_doubleduck_dynamons2_meta_LootShop("from_menu");
		shop.addEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseModal));
		this._modalLayer.addChild(shop);
		this._worldMap.stopScroll();
		this._worldMap.enableScroll = false;
	}
	,handleCloseModal: function(e) {
		if(this._reenableAllNodes) {
			var nodesData = co_doubleduck_dynamons2_data_GameplayDB.getMapNodes();
			var $it0 = this._nodes.iterator();
			while( $it0.hasNext() ) {
				var node = $it0.next();
				node.mouseEnabled = node.mouseChildren = true;
			}
		}
		if(js_Boot.__instanceof(e.target,co_doubleduck_dynamons2_meta_EnemyModal)) {
			var captain = e.target;
			captain.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseModal));
			captain.removeEventListener("FightEvent",$bind(this,this.handleCloseModal));
			this._modalLayer.removeChild(captain);
			captain.destroy();
			this._worldMap.enableScroll = this._scrollableMap;
		} else if(js_Boot.__instanceof(e.target,co_doubleduck_dynamons2_meta_TeamScreen)) {
			var team = e.target;
			team.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseModal));
			this._modalLayer.removeChild(team);
			team.destroy();
			this._worldMap.enableScroll = this._scrollableMap;
			if(this._teamBtn != null) this._teamBtn.enabled = true;
			this.checkTeamHP();
		} else if(js_Boot.__instanceof(e.target,co_doubleduck_dynamons2_meta_InventoryScr)) {
			var inventory = e.target;
			inventory.removeEventListener("ClosedScreenEvent",$bind(this,this.handleCloseModal));
			this._modalLayer.removeChild(inventory);
			inventory.destroy();
			this._worldMap.enableScroll = this._scrollableMap;
			if(this._itemsBtn != null) this._itemsBtn.enabled = true;
		} else if(js_Boot.__instanceof(e.target,co_doubleduck_dynamons2_meta_LootShop)) {
			co_doubleduck_dynamons2_Game.reportEvent("shop_close",{ });
			var shop = e.target;
			shop.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseModal));
			this._modalLayer.removeChild(shop);
			shop.destroy();
			this._worldMap.enableScroll = this._scrollableMap;
			if(this._shopBtn != null) this._shopBtn.enabled = true;
		}
	}
	,startFightAt: function(battleNode,instant) {
		if(instant == null) instant = false;
		var fightEvent = new co_doubleduck_utils_DynamicEvent(co_doubleduck_dynamons2_meta_FlowEvents.START_BATTLE,{ node : battleNode, specialBattle : this._specialBattle});
		var over = new openfl_display_Sprite();
		over.get_graphics().beginFill(0);
		over.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		over.get_graphics().endFill();
		over.set_alpha(0.01);
		this.addChild(over);
		if(instant) {
			over.set_alpha(1);
			co_doubleduck_utils_TweenChain.get(over).wait(10).call($bind(this,this.dispatchEvent),[fightEvent]);
		} else co_doubleduck_utils_TweenChain.get(over).wait(300).tto({ alpha : 1},350).wait(150).call($bind(this,this.dispatchEvent),[fightEvent]);
	}
	,showPostBattleDialog: function(id) {
		var dialog = co_doubleduck_dynamons2_meta_DialogBox.showDialog(id);
		this.addChild(dialog);
		dialog.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDialogComplete));
	}
	,handleDialogComplete: function(e) {
		var dialog = e.target;
		this.removeChild(dialog);
		this.toggleUserControls(true);
		this.handleTutorials();
	}
	,handleDynamonChosen: function(screen) {
		this.removeChild(screen);
		this.tryFirstBattleTutor();
	}
	,tryFirstBattleTutor: function() {
		var firstNode = null;
		var _g = 0;
		var _g1 = [2,3,4];
		while(_g < _g1.length) {
			var nodeNum = _g1[_g];
			++_g;
			if(this._nodes.h[nodeNum].isActionable()) {
				firstNode = this._nodes.h[nodeNum];
				break;
			}
		}
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_TALK,function() {
			co_doubleduck_utils_Utils.delayedCall(0.1,($_=co_doubleduck_dynamons2_meta_Tutorial.inst(),$bind($_,$_.tryShowStep)),[co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_START,firstNode]);
		});
	}
	,toggleUserControls: function(flag) {
		this._worldMap.enableScroll = flag;
		this._worldMap.mouseEnabled = this._worldMap.mouseChildren = flag;
		this._shopBtn.enabled = this._teamBtn.enabled = this._itemsBtn.enabled = flag;
	}
	,destroy: function() {
		if(this._worldMap != null) this._worldMap.destroy();
		this._topHud.destroy();
	}
	,__class__: co_doubleduck_dynamons2_meta_NodesMap
});
var co_doubleduck_dynamons2_meta_IntroScreen = function() {
	openfl_display_Sprite.call(this);
	var bg = co_doubleduck_utils_DDAssets.getImage("images/map/bgs/bg1.jpg");
	this.addChild(bg);
	bg.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - bg.get_height() / 2);
	bg.set_x(-75 * co_doubleduck_utils_DDAssets.scale);
	co_doubleduck_utils_Utils.delayedCall(0.5,$bind(this,this.showDialog));
};
$hxClasses["co.doubleduck.dynamons2.meta.IntroScreen"] = co_doubleduck_dynamons2_meta_IntroScreen;
co_doubleduck_dynamons2_meta_IntroScreen.__name__ = ["co","doubleduck","dynamons2","meta","IntroScreen"];
co_doubleduck_dynamons2_meta_IntroScreen.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_IntroScreen.prototype = $extend(openfl_display_Sprite.prototype,{
	showDialog: function() {
		this._welcomeDialog = co_doubleduck_dynamons2_meta_DialogBox.showDialog("hello_world");
		this.addChild(this._welcomeDialog);
		this._welcomeDialog.mouseEnabled = this._welcomeDialog.mouseChildren = false;
		this._btnYes = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/onboarding/btn_yes.png"));
		this.addChild(this._btnYes);
		this._btnYes.set_alpha(0);
		this._btnYes.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 70 * co_doubleduck_utils_DDAssets.scale);
		this._btnYes.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height - 100 * co_doubleduck_utils_DDAssets.scale);
		co_doubleduck_utils_TweenChain.get(this._btnYes).wait(1500).tto({ alpha : 1},300);
		this._btnYes.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleYes));
	}
	,handleYes: function(e) {
		this._btnYes.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleYes));
		co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO);
		if(this.onYes != null) this.onYes();
	}
	,__class__: co_doubleduck_dynamons2_meta_IntroScreen
});
var co_doubleduck_dynamons2_meta_ChooseScreen = function() {
	openfl_display_Sprite.call(this);
	this._bg = co_doubleduck_utils_DDAssets.getImage("images/map/bgs/bg1.jpg");
	this.addChild(this._bg);
	this._bg.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - this._bg.get_height() / 2);
	this._bg.set_x(-75 * co_doubleduck_utils_DDAssets.scale);
	this._blackFade = new openfl_display_Sprite();
	this._blackFade.get_graphics().beginFill(0);
	this._blackFade.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
	this._blackFade.get_graphics().endFill();
	this._blackFade.set_alpha(0.7);
	this.addChild(this._blackFade);
	this._chooseModal = new openfl_display_Sprite();
	this._chooseModal.set_alpha(0);
	this._startingMons = co_doubleduck_dynamons2_data_GameplayDB.getData().tutorial.chooseMons;
	this._chooseBtns = [];
	var _g1 = 0;
	var _g = this._startingMons.length;
	while(_g1 < _g) {
		var monIndex = _g1++;
		var currMon = this._startingMons[monIndex];
		var monType = currMon.type;
		var monTypeBg = co_doubleduck_utils_DDAssets.getImage("images/onboarding/choose_panel_" + monType + ".png");
		this._chooseModal.addChild(monTypeBg);
		monTypeBg.set_x(monIndex * (monTypeBg.get_width() + 4 * co_doubleduck_utils_DDAssets.scale));
		monTypeBg.set_y(30 * co_doubleduck_utils_DDAssets.scale);
		var monId = currMon.id;
		var mon = co_doubleduck_utils_DDAssets.getImage("images/general/mons/" + monId + "/front.png");
		mon.set_scaleX(mon.set_scaleY(0.8));
		this._chooseModal.addChild(mon);
		mon.set_x(monTypeBg.get_x() + monTypeBg.get_width() / 2 - mon.get_width() / 2);
		mon.set_y(monTypeBg.get_y() + monTypeBg.get_height() * .57 - mon.get_height() / 2);
		var monTitle = co_doubleduck_utils_Fonter.getString(co_doubleduck_dynamons2_data_GameplayDB.getMon(currMon.id).title,"images/fonts/white_stroked_big");
		this._chooseModal.addChild(monTitle);
		monTitle.set_x(monTypeBg.get_x() + monTypeBg.get_width() / 2);
		monTitle.set_y(monTypeBg.get_y() + 35 * co_doubleduck_utils_DDAssets.scale + monTitle.get_height() / 2);
		var chooseBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/onboarding/btn_choose.png"));
		chooseBtn.set_x(monTypeBg.get_x() + monTypeBg.get_width() / 2);
		chooseBtn.set_y(monTypeBg.get_y() + monTypeBg.get_height() * .97);
		chooseBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleChooseClicked));
		this._chooseModal.addChild(chooseBtn);
		this._chooseBtns.push(chooseBtn);
	}
	this._chooseModal.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._chooseModal.get_width() / 2);
	this._chooseModal.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - this._chooseModal.get_height() / 2 - 30 * co_doubleduck_utils_DDAssets.scale);
	var chooseTitle = co_doubleduck_utils_DDAssets.getImage("images/onboarding/choose_title.png");
	this._chooseModal.addChild(chooseTitle);
	chooseTitle.set_x(this._chooseModal.get_width() / 2 - chooseTitle.get_width() / 2);
	chooseTitle.set_y(0);
	co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB,$bind(this,this.showChoose));
};
$hxClasses["co.doubleduck.dynamons2.meta.ChooseScreen"] = co_doubleduck_dynamons2_meta_ChooseScreen;
co_doubleduck_dynamons2_meta_ChooseScreen.__name__ = ["co","doubleduck","dynamons2","meta","ChooseScreen"];
co_doubleduck_dynamons2_meta_ChooseScreen.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_ChooseScreen.prototype = $extend(openfl_display_Sprite.prototype,{
	showChoose: function() {
		this.addChild(this._chooseModal);
		co_doubleduck_utils_TweenChain.get(this._chooseModal).tto({ alpha : 1},300).call(($_=co_doubleduck_dynamons2_meta_Tutorial.inst(),$bind($_,$_.tryShowStep)),[co_doubleduck_dynamons2_meta_TutorStep.CHOOSE_MON]);
	}
	,handleChooseClicked: function(e) {
		co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.CHOOSE_MON);
		var newMon = this._startingMons[(function($this) {
			var $r;
			var x = e.target;
			$r = HxOverrides.indexOf($this._chooseBtns,x,0);
			return $r;
		}(this))];
		co_doubleduck_dynamons2_meta_GameState.addPlayerMon(new co_doubleduck_dynamons2_core_Mon(newMon.id,Std["int"](newMon.level)));
		var _g = 0;
		var _g1 = this._chooseBtns;
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			btn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleChooseClicked));
		}
		co_doubleduck_utils_TweenChain.get(this._chooseModal).wait(500).tto({ alpha : 0},200).wait(500).call($bind(this,this.showDialog));
	}
	,showDialog: function() {
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOOD_CHOICE);
		this._dialog = co_doubleduck_dynamons2_meta_DialogBox.showDialog("tutor_choose");
		this._dialog.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDialogComplete));
		this.addChild(this._dialog);
		co_doubleduck_utils_TweenChain.get(this._dialog).wait(5000).call($bind(this,this.handleDialogComplete));
	}
	,handleDialogComplete: function(e) {
		co_doubleduck_dynamons2_meta_Tutorial.inst().actedOnStep(co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOOD_CHOICE);
		this._dialog.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDialogComplete));
		co_doubleduck_utils_TweenChain.removeTweens(this._dialog);
		this.removeChild(this._dialog);
		co_doubleduck_utils_TweenChain.get(this).tto({ alpha : 0},300).call(this.onEnd,[this]);
	}
	,__class__: co_doubleduck_dynamons2_meta_ChooseScreen
});
var co_doubleduck_dynamons2_meta_RewardsScr = function(lootData) {
	openfl_display_Sprite.call(this);
	this._lootData = lootData;
	this._scrBox = new openfl_display_Sprite();
	this._scrBox.set_y(-co_doubleduck_dynamons2_Game.getScreenSize().height);
	var bg = co_doubleduck_utils_DDAssets.getImage("images/session/endscreen/rewards_modal.png");
	bg.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - bg.get_width() / 2);
	bg.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - bg.get_height() / 2);
	this._scrBox.addChild(bg);
	var _g = 0;
	var _g1 = this._lootData;
	while(_g < _g1.length) {
		var loot = _g1[_g];
		++_g;
		if(loot.name == "coins") co_doubleduck_dynamons2_meta_GameState.setPlayerCoins(co_doubleduck_dynamons2_meta_GameState.getPlayerCoins() + Std["int"](loot.amount)); else co_doubleduck_dynamons2_meta_GameState.setItemAmount(loot.name,co_doubleduck_dynamons2_meta_GameState.getItemAmount(loot.name) + loot.amount);
	}
	var posx = 0;
	var _g2 = 0;
	var _g11 = this._lootData;
	while(_g2 < _g11.length) {
		var loot1 = _g11[_g2];
		++_g2;
		var item = co_doubleduck_utils_DDAssets.getCenteredImage("images/general/reward_slot.png");
		var itemImg = co_doubleduck_utils_DDAssets.getImage("images/items/icons/" + Std.string(loot1.name) + ".png");
		itemImg.set_x(-itemImg.get_width() / 2);
		itemImg.set_y(-itemImg.get_height() / 2 - 3 * co_doubleduck_utils_DDAssets.scale);
		item.addChild(itemImg);
		var delta = 57 * co_doubleduck_utils_DDAssets.scale;
		item.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - (this._lootData.length - 1) * 0.5 * delta);
		var _g21 = item;
		_g21.set_x(_g21.get_x() + posx);
		item.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2);
		posx += delta;
		var amountStr = "" + Std.string(loot1.amount);
		if(loot1.name == "coins") amountStr = "$" + amountStr;
		var num = co_doubleduck_utils_Fonter.getString(amountStr,"images/fonts/white_stroked_small/");
		num.set_y(23 * co_doubleduck_utils_DDAssets.scale);
		item.addChild(num);
		this._scrBox.addChild(item);
	}
	this.addChild(this._scrBox);
	var coolBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_cool.png"));
	coolBtn.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
	coolBtn.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 + 80 * co_doubleduck_utils_DDAssets.scale);
	coolBtn.set_alpha(0);
	this.addChild(coolBtn);
	co_doubleduck_utils_TweenChain.get(this._scrBox).tto({ y : 0},500,motion_easing_Sine.get_easeOut());
	co_doubleduck_utils_TweenChain.get(coolBtn).wait(550).tto({ alpha : 1},150).call($bind(coolBtn,coolBtn.addEventListener),["BUTTON_ACT_EVENT",$bind(this,this.handleCool)]);
};
$hxClasses["co.doubleduck.dynamons2.meta.RewardsScr"] = co_doubleduck_dynamons2_meta_RewardsScr;
co_doubleduck_dynamons2_meta_RewardsScr.__name__ = ["co","doubleduck","dynamons2","meta","RewardsScr"];
co_doubleduck_dynamons2_meta_RewardsScr.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_RewardsScr.prototype = $extend(openfl_display_Sprite.prototype,{
	handleCool: function(e) {
		var coolBtn = e.target;
		coolBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleCool));
		coolBtn.enabled = false;
		co_doubleduck_utils_TweenChain.get(coolBtn).tto({ alpha : 0},100);
		co_doubleduck_utils_TweenChain.get(this._scrBox).tto({ y : -co_doubleduck_dynamons2_Game.getScreenSize().height},300,motion_easing_Sine.get_easeIn()).call($bind(this,this.dispatchEvent),[new openfl_events_Event("DoneScreenEvent")]);
	}
	,__class__: co_doubleduck_dynamons2_meta_RewardsScr
});
var co_doubleduck_dynamons2_meta_ScrolledContainer = function(size,dirVertical) {
	this.enableScroll = true;
	this.itemSnap = false;
	this.itemPadding = 0;
	openfl_display_Sprite.call(this);
	this._touch = size.clone();
	this._dirVertical = dirVertical;
	this._items = [];
	this._itemBox = new openfl_display_Sprite();
	this.addChild(this._itemBox);
	this._maxPos = new openfl_geom_Point(0,0);
	this.addEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleStage));
};
$hxClasses["co.doubleduck.dynamons2.meta.ScrolledContainer"] = co_doubleduck_dynamons2_meta_ScrolledContainer;
co_doubleduck_dynamons2_meta_ScrolledContainer.__name__ = ["co","doubleduck","dynamons2","meta","ScrolledContainer"];
co_doubleduck_dynamons2_meta_ScrolledContainer.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_ScrolledContainer.prototype = $extend(openfl_display_Sprite.prototype,{
	handleStage: function(e) {
		this.removeEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.handleStage));
		this.stage.addEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleOverlay));
	}
	,addDecor: function(obj) {
		this._itemBox.addChild(obj);
	}
	,addItem: function(item) {
		if(this._dirVertical) this._maxPos.y = Math.max(this._maxPos.y,item.get_y() + item.get_height() / 2 + this.itemPadding); else this._maxPos.x = Math.max(this._maxPos.x,item.get_x() + item.get_width() / 2 + this.itemPadding);
		this._items.push(item);
		if(this._items.length > 1) this._itemBox.addChildAt(item,this._itemBox.getChildIndex(this._items[this._items.length - 2])); else this._itemBox.addChild(item);
	}
	,stopScroll: function() {
		if(this._touchPos != null) this.handleOverlay(new openfl_events_MouseEvent(openfl_events_MouseEvent.MOUSE_UP));
	}
	,setMaxScroll: function(val) {
		if(this._dirVertical) this._maxPos.y = val; else this._maxPos.x = val;
	}
	,getLength: function() {
		return this._items.length;
	}
	,getItem: function(index) {
		return this._items[index];
	}
	,focusOnIndex: function(index,force) {
		if(force == null) force = false;
		this.focusOnItem(this._items[index],force);
	}
	,getCurrFocusPos: function() {
		if(this._dirVertical) return this._itemBox.get_y();
		return this._itemBox.get_x();
	}
	,focusOnItem: function(item,force) {
		if(force == null) force = false;
		co_doubleduck_utils_TweenChain.removeTweens(this._itemBox);
		if(this._dirVertical) {
			var snapPos = this._touch.y + this._touch.height / 2;
			var target = snapPos - item.get_y();
			target = Math.min(target,0);
			target = Math.max(target,this._touch.height - Math.max(this._maxPos.y,this._touch.height));
			if(force) this._itemBox.set_y(target); else co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ y : target},200,motion_easing_Sine.get_easeOut());
		} else {
			var snapPos1 = this._touch.x + this._touch.width / 2;
			var target1 = snapPos1 - (item.get_x() + item.get_width() / 2);
			target1 = Math.min(target1,0);
			target1 = Math.max(target1,this._touch.width - Math.max(this._maxPos.x,this._touch.width));
			if(force) this._itemBox.set_x(target1); else co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ x : target1},200,motion_easing_Sine.get_easeOut());
		}
	}
	,handleOverlay: function(e) {
		if(!this.enableScroll) return;
		var pos = this.globalToLocal(new openfl_geom_Point(e.stageX,e.stageY));
		if(e.type == openfl_events_MouseEvent.MOUSE_DOWN) {
			if(this._touch.contains(pos.x,pos.y) && this.get_visible() && this.get_alpha() > 0) {
				this._touchPos = pos;
				this._srcPos = new openfl_geom_Point(this._itemBox.get_x(),this._itemBox.get_y());
				this._depressed = false;
				this.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleOverlay));
				this.stage.addEventListener(openfl_events_MouseEvent.MOUSE_MOVE,$bind(this,this.handleOverlay));
				this.stage.addEventListener(openfl_events_MouseEvent.MOUSE_UP,$bind(this,this.handleOverlay));
			}
		} else if(e.type == openfl_events_MouseEvent.MOUSE_MOVE) {
			if(this._touchPos != null) {
				var delta;
				if(this._dirVertical) delta = pos.y - this._touchPos.y; else delta = pos.x - this._touchPos.x;
				if(!this._depressed && Math.abs(delta) > 8) {
					this._depressed = true;
					co_doubleduck_utils_TweenChain.removeTweens(this._itemBox);
					var _g1 = 0;
					var _g = this._items.length;
					while(_g1 < _g) {
						var i = _g1++;
						var item = this._items[i];
						item.depressItem();
					}
				}
				var target;
				target = (this._dirVertical?this._srcPos.y:this._srcPos.x) + delta;
				var maxVal;
				if(this._dirVertical) maxVal = this._maxPos.y; else maxVal = this._maxPos.x;
				var touchVal;
				if(this._dirVertical) touchVal = this._touch.height; else touchVal = this._touch.width;
				touchVal = Math.min(touchVal,maxVal);
				if(target > 0) target *= 0.07; else if(target < touchVal - maxVal) target = (target - (touchVal - maxVal)) * 0.07 + (touchVal - maxVal);
				if(this._dirVertical) this._itemBox.set_y(target); else this._itemBox.set_x(target);
			}
		} else if(e.type == openfl_events_MouseEvent.MOUSE_UP) {
			if(this._touchPos != null) {
				this._touchPos = null;
				this._srcPos = null;
				if(this._depressed) {
					co_doubleduck_utils_TweenChain.removeTweens(this._itemBox);
					if(this._dirVertical) {
						if(this._itemBox.get_y() > 0) co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ y : 0},190,motion_easing_Sine.get_easeIn()); else if(this._itemBox.get_y() < this._touch.height - this._maxPos.y) co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ y : this._touch.height - Math.max(this._maxPos.y,this._touch.height)},190,motion_easing_Sine.get_easeIn()); else if(this.itemSnap && this._items.length > 0) {
							if(this._itemBox.get_y() < -4 && this._itemBox.get_y() > this._touch.height - this._maxPos.y + 4) {
								var snapPos = this._touch.y + this._touch.height / 2;
								var closest = this._items[0];
								var closestDist = Math.abs(closest.get_y() + closest.get_height() / 2 + this._itemBox.get_y() - snapPos);
								var _g11 = 1;
								var _g2 = this._items.length;
								while(_g11 < _g2) {
									var i1 = _g11++;
									var item1 = this._items[i1];
									var currDist = Math.abs(item1.get_y() + item1.get_height() / 2 + this._itemBox.get_y() - snapPos);
									if(currDist < closestDist) {
										closest = item1;
										closestDist = currDist;
									}
								}
								co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ y : snapPos - (closest.get_y() + closest.get_height() / 2)},100,motion_easing_Sine.get_easeOut());
							}
						}
					} else if(this._itemBox.get_x() > 0) co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ x : 0},190,motion_easing_Sine.get_easeIn()); else if(this._itemBox.get_x() < this._touch.width - this._maxPos.x) co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ x : this._touch.width - Math.max(this._maxPos.x,this._touch.width)},190,motion_easing_Sine.get_easeIn()); else if(this.itemSnap && this._items.length > 0) {
						if(this._itemBox.get_x() < -4 && this._itemBox.get_x() > this._touch.width - this._maxPos.x + 4) {
							var snapPos1 = this._touch.x + this._touch.width / 2;
							var closest1 = this._items[0];
							var closestDist1 = Math.abs(closest1.get_x() + closest1.get_width() / 2 + this._itemBox.get_x() - snapPos1);
							var _g12 = 1;
							var _g3 = this._items.length;
							while(_g12 < _g3) {
								var i2 = _g12++;
								var item2 = this._items[i2];
								var currDist1 = Math.abs(item2.get_x() + item2.get_width() / 2 + this._itemBox.get_x() - snapPos1);
								if(currDist1 < closestDist1) {
									closest1 = item2;
									closestDist1 = currDist1;
								}
							}
							co_doubleduck_utils_TweenChain.get(this._itemBox).tto({ x : snapPos1 - (closest1.get_x() + closest1.get_width() / 2)},100,motion_easing_Sine.get_easeOut());
						}
					}
				}
				this.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_MOVE,$bind(this,this.handleOverlay));
				this.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_UP,$bind(this,this.handleOverlay));
				this.stage.addEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleOverlay));
			}
		}
	}
	,destroy: function() {
		openfl_Lib.current.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handleOverlay));
		openfl_Lib.current.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_MOVE,$bind(this,this.handleOverlay));
		openfl_Lib.current.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_UP,$bind(this,this.handleOverlay));
		co_doubleduck_utils_TweenChain.removeTweens(this._itemBox);
		while(this._items.length > 0) {
			var curr = this._items.pop();
			this._itemBox.removeChild(curr);
			curr.destroy();
		}
	}
	,__class__: co_doubleduck_dynamons2_meta_ScrolledContainer
});
var co_doubleduck_dynamons2_meta_StatsPane = function() {
	openfl_display_Sprite.call(this);
	this._bars = new haxe_ds_StringMap();
	var posY = 0;
	var _g = 0;
	var _g1 = co_doubleduck_dynamons2_core_Mon.STAT_NAMES;
	while(_g < _g1.length) {
		var stat = _g1[_g];
		++_g;
		var bar = new co_doubleduck_dynamons2_meta_StatsBar(stat);
		bar.set_y(posY);
		posY += 33 * co_doubleduck_utils_DDAssets.scale;
		this.addChild(bar);
		this._bars.set(stat,bar);
	}
};
$hxClasses["co.doubleduck.dynamons2.meta.StatsPane"] = co_doubleduck_dynamons2_meta_StatsPane;
co_doubleduck_dynamons2_meta_StatsPane.__name__ = ["co","doubleduck","dynamons2","meta","StatsPane"];
co_doubleduck_dynamons2_meta_StatsPane.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_StatsPane.prototype = $extend(openfl_display_Sprite.prototype,{
	setStat: function(stat,val,dur) {
		if(dur == null) dur = 0;
		this._bars.get(stat).setFill(val,dur);
	}
	,__class__: co_doubleduck_dynamons2_meta_StatsPane
});
var co_doubleduck_dynamons2_meta_StatsBar = function(stat) {
	openfl_display_Sprite.call(this);
	this._stat = stat;
	var title = co_doubleduck_utils_DDAssets.getImage("images/general/icon_" + stat + ".png");
	this.addChild(title);
	this._bar = new co_doubleduck_utils_ProgBar(co_doubleduck_utils_DDAssets.getImage("images/general/statsbar_bg.png"),co_doubleduck_utils_DDAssets.getImage("images/general/statsbar_fill.png"));
	this._bar.set_x(22 * co_doubleduck_utils_DDAssets.scale);
	this._bar.set_y(16 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(this._bar);
};
$hxClasses["co.doubleduck.dynamons2.meta.StatsBar"] = co_doubleduck_dynamons2_meta_StatsBar;
co_doubleduck_dynamons2_meta_StatsBar.__name__ = ["co","doubleduck","dynamons2","meta","StatsBar"];
co_doubleduck_dynamons2_meta_StatsBar.ratioForStat = function(stat,val) {
	if(stat == "aim") return (Math.pow(0.31 * val,2) * 0.1 + 2) / 120; else return val / 120;
};
co_doubleduck_dynamons2_meta_StatsBar.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_StatsBar.prototype = $extend(openfl_display_Sprite.prototype,{
	calcRatio: function(val) {
		return co_doubleduck_dynamons2_meta_StatsBar.ratioForStat(this._stat,val);
	}
	,setFill: function(val,dur) {
		if(dur == null) dur = 0;
		var curr = this._bar.getFillPerc();
		if(dur == 0 || val == curr) this._bar.setFillPerc(val,0); else if(val < curr) {
			var waitDur = Math.floor(dur / 3);
			dur -= waitDur;
			var redBar = new co_doubleduck_utils_ProgBar(new openfl_display_Bitmap(),co_doubleduck_utils_DDAssets.getImage("images/general/statsbar_fill_red.png"));
			redBar.set_maskFrom(val);
			redBar.set_maskTo(curr);
			redBar.setFillPerc(1);
			redBar.set_x(this._bar.get_x());
			redBar.set_y(this._bar.get_y());
			this.addChild(redBar);
			this._bar.setFillPerc(val);
			co_doubleduck_utils_TweenChain.get(redBar).wait(waitDur).call($bind(redBar,redBar.setFillPerc),[0,dur]).wait(dur).call($bind(this,this.removeChild),[redBar]);
		} else {
			var fadeDur = Math.floor(dur / 4);
			dur -= fadeDur;
			var whiteBar = new co_doubleduck_utils_ProgBar(new openfl_display_Bitmap(),co_doubleduck_utils_DDAssets.getImage("images/general/statsbar_fill_white.png"));
			whiteBar.setFillPerc(0);
			whiteBar.set_x(this._bar.get_x());
			whiteBar.set_y(this._bar.get_y());
			this.addChild(whiteBar);
			co_doubleduck_utils_TweenChain.get(whiteBar).call($bind(whiteBar,whiteBar.setFillPerc),[val,dur]).wait(dur).call(($_=this._bar,$bind($_,$_.setFillPerc)),[val,0]).tto({ alpha : 0},fadeDur,motion_easing_Sine.get_easeIn()).call($bind(this,this.removeChild),[whiteBar]);
		}
	}
	,__class__: co_doubleduck_dynamons2_meta_StatsBar
});
var co_doubleduck_dynamons2_meta_TeamScreen = function() {
	var _g = this;
	openfl_display_Sprite.call(this);
	this._currPack = 0;
	var packToShow = 0;
	this._back = co_doubleduck_utils_DDAssets.getImage("images/team/bg_team.jpg");
	this._back.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._back.get_width() / 2);
	this._back.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - this._back.get_height() / 2);
	this.addChild(this._back);
	this._teamBox = new openfl_display_Sprite();
	this._teamPosArr = [];
	var team = co_doubleduck_dynamons2_meta_GameState.getParty();
	var posX = co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - (team.length - 1) * 51 * co_doubleduck_utils_DDAssets.scale;
	this._teamPanes = [];
	var _g1 = 0;
	var _g2 = team.length;
	while(_g1 < _g2) {
		var i = _g1++;
		var monImg = this.getMonAndTip(team[i],true);
		monImg.set_x(posX + i * 102 * co_doubleduck_utils_DDAssets.scale);
		monImg.set_y(this._back.get_y() + 262 * co_doubleduck_utils_DDAssets.scale);
		monImg.addEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane));
		this._teamPanes.push(monImg);
		this._teamBox.addChild(monImg);
		this._teamPosArr.push(new openfl_geom_Point(monImg.get_x(),monImg.get_y()));
	}
	this._panesBg = co_doubleduck_utils_DDAssets.getImage("images/team/bg_team_slots.png");
	this._panesBg.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._panesBg.get_width() / 2);
	this._panesBg.set_y(this._back.get_y() + this._back.get_height() / 2 + 6 * co_doubleduck_utils_DDAssets.scale + (44 * co_doubleduck_utils_DDAssets.scale + this._back.get_y()) * 0.5);
	this._teamStartY = this._panesBg.get_y() - 10 * co_doubleduck_utils_DDAssets.scale;
	this.setupStoredMons();
	this._closeBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/team/btn_back_map.png"));
	this._closeBtn.set_x(6 * co_doubleduck_utils_DDAssets.scale + this._closeBtn.get_width() / 2);
	this._closeBtn.set_y(20 * co_doubleduck_utils_DDAssets.scale);
	this._closeBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
	this.addChild(this._closeBtn);
	this._backBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/team/btn_back_all.png"));
	this._backBtn.set_x(this._closeBtn.get_x());
	this._backBtn.set_y(this._closeBtn.get_y());
	this._backBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBack));
	this._rosterBox = new openfl_display_Sprite();
	this.addChild(this._rosterBox);
	this._rosterBox.addChild(this._panesBg);
	this._rosterBox.addChild(this._teamBox);
	this._healsBox = new openfl_display_Sprite();
	this._rosterBox.addChild(this._healsBox);
	this._nextBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_arrow_right.png"));
	this._nextBtn.set_x(this._panesBg.get_x() + this._panesBg.get_width());
	this._nextBtn.set_y(this._panesBg.get_y() + this._panesBg.get_height() / 2);
	this._nextBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handlePanePack));
	this._rosterBox.addChild(this._nextBtn);
	this._prevBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_arrow_right.png"));
	this._prevBtn.set_scaleX(-1);
	this._prevBtn.set_x(this._panesBg.get_x());
	this._prevBtn.set_y(this._nextBtn.get_y());
	this._prevBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handlePanePack));
	this._rosterBox.addChild(this._prevBtn);
	this._rosterBox.addChild(this._panesBox);
	this.setupArrowVis();
	this.setupHealBtns();
	this._topHud = new co_doubleduck_dynamons2_meta_TopHud();
	this._topHud.setupMons();
	this.addChild(this._topHud);
	co_doubleduck_utils_Utils.delayedCall(0.1,function() {
		var minRatio = 1;
		var minIndex = 0;
		var _g11 = 0;
		var _g3 = co_doubleduck_dynamons2_meta_GameState.getParty().length;
		while(_g11 < _g3) {
			var monIndex = _g11++;
			var mon = co_doubleduck_dynamons2_meta_GameState.getParty()[monIndex];
			var ratio = mon.getCurrHP() / mon.getTotalHP();
			if(ratio < minRatio) {
				minRatio = ratio;
				minIndex = monIndex;
			}
		}
		co_doubleduck_dynamons2_meta_Tutorial.inst().tryShowStep(co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT,_g._healBtns[minIndex]);
	});
};
$hxClasses["co.doubleduck.dynamons2.meta.TeamScreen"] = co_doubleduck_dynamons2_meta_TeamScreen;
co_doubleduck_dynamons2_meta_TeamScreen.__name__ = ["co","doubleduck","dynamons2","meta","TeamScreen"];
co_doubleduck_dynamons2_meta_TeamScreen.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_TeamScreen.prototype = $extend(openfl_display_Sprite.prototype,{
	setupStoredMons: function() {
		if(this._panesBox != null) while(this._panesBox.get_numChildren() > 0) {
			var pane = this._panesBox.removeChildAt(0);
			if(!js_Boot.__instanceof(pane,co_doubleduck_dynamons2_core_MonPane)) continue;
			pane.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane));
		}
		var mons = co_doubleduck_dynamons2_meta_GameState.getPlayerMons(false);
		var restOfMons = [];
		var _g = 0;
		while(_g < mons.length) {
			var curr = mons[_g];
			++_g;
			restOfMons.unshift(curr);
		}
		restOfMons.sort(co_doubleduck_dynamons2_meta_GameState.MonLevelSort);
		this._packsCount = Math.ceil(restOfMons.length / 6);
		if(this._packsCount < 1) this._packsCount = 1; else this._packsCount = this._packsCount;
		this._panesBox = new openfl_display_Sprite();
		var padding = 10 * co_doubleduck_utils_DDAssets.scale;
		var _g1 = 0;
		var _g2 = this._packsCount * 6;
		while(_g1 < _g2) {
			var i = _g1++;
			var packInd = Math.floor(i / 6);
			var indInPack = i - packInd * 6;
			var lePane;
			if(i < restOfMons.length) {
				var mon = restOfMons[i];
				var pane1 = mon.getPane("thumb");
				pane1.addEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane));
				lePane = pane1;
				lePane = pane1;
			} else {
				lePane = new openfl_display_Sprite();
				lePane.addChild(co_doubleduck_utils_DDAssets.getImage("images/team/team_slot.png"));
			}
			lePane.set_x((packInd + 0.5) * co_doubleduck_dynamons2_Game.getScreenSize().width);
			var _g21 = lePane;
			_g21.set_x(_g21.get_x() + (-125 * co_doubleduck_utils_DDAssets.scale + indInPack % 2 * (padding + 120 * co_doubleduck_utils_DDAssets.scale)));
			lePane.set_y(this._panesBg.get_y() + 15 * co_doubleduck_utils_DDAssets.scale);
			var _g22 = lePane;
			_g22.set_y(_g22.get_y() + Math.floor(indInPack / 2) * (padding + 61 * co_doubleduck_utils_DDAssets.scale));
			this._panesBox.addChild(lePane);
		}
		if(this._rosterBox != null) this._rosterBox.addChild(this._panesBox);
	}
	,setupHealBtns: function() {
		this._healBtns = [];
		var party = co_doubleduck_dynamons2_meta_GameState.getParty();
		var _g1 = 0;
		var _g = party.length;
		while(_g1 < _g) {
			var i = _g1++;
			this._healBtns.push(null);
			if(party[i].getCurrHP() < party[i].getTotalHP()) {
				var btnImg = "btn_heal_small_nokit.png";
				if(co_doubleduck_dynamons2_meta_GameState.getItemAmount("healing_kit") > 0) btnImg = "btn_heal_small_kit.png";
				this._healBtns[i] = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/team/" + btnImg));
				this._healBtns[i].addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleHealBtn));
				this._healBtns[i].set_x(this._teamPosArr[i].x);
				this._healBtns[i].set_y(this._teamPosArr[i].y);
				this._healsBox.addChild(this._healBtns[i]);
				party[i].addEventListener("HPChangeEvent",$bind(this,this.handleMonHP));
			}
		}
	}
	,handleMonHP: function(e) {
		var mon = e.target;
		if(mon.getCurrHP() >= mon.getTotalHP()) {
			mon.removeEventListener("HPChangeEvent",$bind(this,this.handleMonHP));
			this.killHealBtns();
			this.setupHealBtns();
		}
	}
	,killHealBtns: function() {
		if(this._healBtns != null) {
			var party = co_doubleduck_dynamons2_meta_GameState.getParty();
			var _g1 = 0;
			var _g = this._healBtns.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(this._healBtns[i] == null) continue;
				party[i].removeEventListener("HPChangeEvent",$bind(this,this.handleMonHP));
				this._healBtns[i].removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleHealBtn));
				this._healsBox.removeChild(this._healBtns[i]);
				this._healBtns[i] = null;
			}
			this._healBtns = null;
		}
	}
	,handleHealBtn: function(e) {
		var ind;
		var x = e.target;
		ind = HxOverrides.indexOf(this._healBtns,x,0);
		var kits = co_doubleduck_dynamons2_meta_GameState.getItemAmount("healing_kit");
		if(kits > 0) {
			co_doubleduck_dynamons2_meta_GameState.setItemAmount("healing_kit",kits - 1);
			var mon = co_doubleduck_dynamons2_meta_GameState.getParty()[ind];
			var ratio = mon.getCurrHP() / mon.getTotalHP();
			var dtSecs = Math.floor(mon.getAutoHealTargetTime() - co_doubleduck_utils_Utils.epochTime());
			co_doubleduck_dynamons2_Game.reportEvent("heal",{ 'id' : mon.getId(), 'level' : mon.getLevel(), 'hpRatio' : ratio, secsRemain : dtSecs});
			mon.takeHeal(mon.getTotalHP(),100);
		} else {
			var shop = new co_doubleduck_dynamons2_meta_LootShop("no_healing_kit");
			shop.addEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleShopClose));
			this.addChild(shop);
		}
	}
	,handleShopClose: function(e) {
		var shop = e.target;
		shop.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleShopClose));
		this.removeChild(shop);
		this.killHealBtns();
		this.setupHealBtns();
	}
	,handlePanePack: function(e) {
		var _g = this;
		var prevPack = this._currPack;
		if(e.currentTarget == this._nextBtn && this._currPack + 1 < this._packsCount) this._currPack++;
		if(e.currentTarget == this._prevBtn && this._currPack > 0) this._currPack--;
		if(prevPack != this._currPack) {
			this._panesBox.mouseChildren = this._panesBox.mouseEnabled = false;
			co_doubleduck_utils_TweenChain.get(this._panesBox).tto({ x : -co_doubleduck_dynamons2_Game.getScreenSize().width * this._currPack},200,motion_easing_Sine.get_easeInOut()).wait(50).call(function() {
				_g._panesBox.mouseChildren = _g._panesBox.mouseEnabled = true;
			});
		}
		this.setupArrowVis();
	}
	,getMonAndTip: function(mon,visTip) {
		var box = new openfl_display_Sprite();
		var monImg = mon.getVisBody("front");
		monImg.set_scaleX(monImg.set_scaleY(0.8));
		box.addChild(monImg);
		var tip = mon.getPane("tooltip");
		tip.updateHealTimeLabel();
		tip.set_x(-tip.get_width() / 2);
		tip.set_y(-(monImg.get_height() + tip.get_height() - 6 * co_doubleduck_utils_DDAssets.scale));
		tip.set_alpha(visTip?1:0);
		box.addChild(tip);
		return box;
	}
	,setupArrowVis: function() {
		this._nextBtn.set_visible(this._currPack + 1 < this._packsCount);
		this._prevBtn.set_visible(this._currPack > 0);
	}
	,handlePane: function(e) {
		if(co_doubleduck_dynamons2_meta_Tutorial.inst().getCurrStep() == co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT) return;
		if(e.type == openfl_events_MouseEvent.MOUSE_DOWN) {
			var dragMon = e.currentTarget;
			this._dragIsTap = true;
			this._dragSrcPos = new openfl_geom_Point(this.stage.get_mouseX(),this.stage.get_mouseY());
			this._dragTeamInd = HxOverrides.indexOf(this._teamPanes,dragMon,0);
			if(this._dragTeamInd != -1) {
				this._dragIsThumb = false;
				this._teamBox.removeChild(dragMon);
				this._toDrag = dragMon;
			} else {
				this._dragIsThumb = true;
				this._toDrag = new openfl_display_Sprite();
				this._panesBox.removeChild(dragMon);
				var mon = (js_Boot.__cast(dragMon , co_doubleduck_dynamons2_core_MonPane)).getMon();
				var monImg = this.getMonAndTip(mon,false);
				var tip = monImg.getChildAt(1);
				monImg.set_alpha(0);
				this._toDrag.addChild(monImg);
				this._toDrag.set_x(dragMon.get_x() + dragMon.get_width() / 2 + this._panesBox.get_x());
				this._toDrag.set_y(dragMon.get_y() + dragMon.get_height() + this._panesBox.get_y());
				dragMon.set_x(-dragMon.get_width() / 2);
				dragMon.set_y(-dragMon.get_height());
				this._toDrag.addChild(dragMon);
				this._toDrag.get_graphics().beginFill(8421504,0.01);
				this._toDrag.get_graphics().drawRect(dragMon.get_x(),tip.get_y(),dragMon.get_width(),-tip.get_y());
				this._toDrag.get_graphics().endFill();
			}
			this._rosterBox.addChild(this._toDrag);
			this._paneSrcPos = new openfl_geom_Point(this._toDrag.get_x(),this._toDrag.get_y());
			this._paneDestInd = -1;
			dragMon.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane));
			this._toDrag.addEventListener(openfl_events_MouseEvent.MOUSE_UP,$bind(this,this.handlePane));
			this._toDrag.addEventListener(openfl_events_MouseEvent.MOUSE_MOVE,$bind(this,this.handlePane));
			this._toDrag.startDrag(false);
			this._topHud.mouseChildren = this._topHud.mouseEnabled = false;
		}
		if(e.type == openfl_events_MouseEvent.MOUSE_MOVE) {
			if(this._dragIsTap) {
				if(Math.abs(this.stage.get_mouseX() - this._dragSrcPos.x) > 5 * co_doubleduck_utils_DDAssets.scale || Math.abs(this.stage.get_mouseY() - this._dragSrcPos.y) > 5 * co_doubleduck_utils_DDAssets.scale) {
					this._dragIsTap = false;
					co_doubleduck_utils_TweenChain.removeTweens(this._healsBox);
					co_doubleduck_utils_TweenChain.get(this._healsBox).tto({ alpha : 0},100);
				}
			}
			if(this._dragTeamInd == -1) {
				if(this._dragIsThumb && this.get_mouseY() <= this._teamStartY) {
					this._dragIsThumb = false;
					co_doubleduck_utils_TweenChain.removeTweens(this._toDrag.getChildAt(0));
					co_doubleduck_utils_TweenChain.get(this._toDrag.getChildAt(0)).tto({ alpha : 1},200);
					co_doubleduck_utils_TweenChain.removeTweens(this._toDrag.getChildAt(1));
					co_doubleduck_utils_TweenChain.get(this._toDrag.getChildAt(1)).tto({ alpha : 0},200);
				} else if(!this._dragIsThumb && this.get_mouseY() > this._teamStartY + 15 * co_doubleduck_utils_DDAssets.scale) {
					this._dragIsThumb = true;
					co_doubleduck_utils_TweenChain.removeTweens(this._toDrag.getChildAt(0));
					co_doubleduck_utils_TweenChain.get(this._toDrag.getChildAt(0)).tto({ alpha : 0},200);
					co_doubleduck_utils_TweenChain.removeTweens(this._toDrag.getChildAt(1));
					co_doubleduck_utils_TweenChain.get(this._toDrag.getChildAt(1)).tto({ alpha : 1},200);
				}
			}
			var closePaneInd = this.getCloseTeamMember();
			if(closePaneInd != -1) {
				if(closePaneInd != this._paneDestInd) {
					if(this._paneDestInd != -1) {
						co_doubleduck_utils_TweenChain.removeTweens(this._teamPanes[this._paneDestInd]);
						if(this._dragTeamInd != -1) co_doubleduck_utils_TweenChain.get(this._teamPanes[this._paneDestInd]).tto({ x : this._teamPosArr[this._paneDestInd].x, y : this._teamPosArr[this._paneDestInd].y},150,motion_easing_Sine.get_easeOut()); else co_doubleduck_utils_TweenChain.get(this._teamPanes[this._paneDestInd]).tto({ alpha : 1},150);
						this._paneDestInd = -1;
					}
					this._paneDestInd = closePaneInd;
					co_doubleduck_utils_TweenChain.removeTweens(this._teamPanes[this._paneDestInd]);
					if(this._dragTeamInd != -1) co_doubleduck_utils_TweenChain.get(this._teamPanes[this._paneDestInd]).tto({ x : this._paneSrcPos.x, y : this._paneSrcPos.y},250,motion_easing_Sine.get_easeOut()); else co_doubleduck_utils_TweenChain.get(this._teamPanes[this._paneDestInd]).tto({ alpha : 0.2},250);
				}
			} else if(this._paneDestInd != -1) {
				co_doubleduck_utils_TweenChain.removeTweens(this._teamPanes[this._paneDestInd]);
				if(this._dragTeamInd != -1) co_doubleduck_utils_TweenChain.get(this._teamPanes[this._paneDestInd]).tto({ x : this._teamPosArr[this._paneDestInd].x, y : this._teamPosArr[this._paneDestInd].y},150,motion_easing_Sine.get_easeOut()); else co_doubleduck_utils_TweenChain.get(this._teamPanes[this._paneDestInd]).tto({ alpha : 1},150);
				this._paneDestInd = -1;
			}
		}
		if(e.type == openfl_events_MouseEvent.MOUSE_UP) {
			this._toDrag.removeEventListener(openfl_events_MouseEvent.MOUSE_UP,$bind(this,this.handlePane));
			this._toDrag.removeEventListener(openfl_events_MouseEvent.MOUSE_MOVE,$bind(this,this.handlePane));
			this._toDrag.stopDrag();
			this._topHud.mouseChildren = this._topHud.mouseEnabled = true;
			var tapMon = null;
			if(this._dragIsTap) {
				if(this._dragTeamInd != -1) tapMon = co_doubleduck_dynamons2_meta_GameState.getParty()[this._dragTeamInd]; else tapMon = (js_Boot.__cast(this._toDrag.getChildAt(1) , co_doubleduck_dynamons2_core_MonPane)).getMon();
			}
			co_doubleduck_utils_TweenChain.removeTweens(this._toDrag);
			this._rosterBox.removeChild(this._toDrag);
			if(this._paneDestInd == -1) {
				if(this._dragTeamInd != -1) {
					this._teamBox.addChild(this._toDrag);
					co_doubleduck_utils_TweenChain.get(this._toDrag).tto({ x : this._paneSrcPos.x, y : this._paneSrcPos.y},150,motion_easing_Sine.get_easeOut()).wait(50).call(($_=this._toDrag,$bind($_,$_.addEventListener)),[openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane)]);
					this._toDrag = null;
				} else {
					var img = this._toDrag.removeChildAt(0);
					co_doubleduck_utils_TweenChain.removeTweens(img);
					if(img.get_alpha() > 0) {
						img.set_x(this._toDrag.get_x());
						img.set_y(this._toDrag.get_y());
						this._rosterBox.addChild(img);
						co_doubleduck_utils_TweenChain.removeTweens(img);
						co_doubleduck_utils_TweenChain.get(img).tto({ x : this._paneSrcPos.x, y : this._paneSrcPos.y, alpha : 0},150,motion_easing_Sine.get_easeOut()).wait(50).call(($_=this._rosterBox,$bind($_,$_.removeChild)),[img]);
					}
					var pane = this._toDrag.removeChildAt(0);
					var _g = pane;
					_g.set_x(_g.get_x() + (this._toDrag.get_x() - this._panesBox.get_x()));
					var _g1 = pane;
					_g1.set_y(_g1.get_y() + (this._toDrag.get_y() - this._panesBox.get_y()));
					this._panesBox.addChild(pane);
					co_doubleduck_utils_TweenChain.removeTweens(pane);
					co_doubleduck_utils_TweenChain.get(pane).tto({ x : this._paneSrcPos.x - pane.get_width() / 2 - this._panesBox.get_x(), y : this._paneSrcPos.y - pane.get_height() - this._panesBox.get_y(), alpha : 1},150,motion_easing_Sine.get_easeOut()).wait(50).call($bind(pane,pane.addEventListener),[openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane)]);
				}
			} else {
				var pTeam = co_doubleduck_dynamons2_meta_GameState.getParty();
				if(this._dragTeamInd != -1) {
					var mon1 = pTeam[this._dragTeamInd];
					this._teamBox.addChild(this._toDrag);
					co_doubleduck_utils_TweenChain.get(this._toDrag).tto({ x : this._teamPosArr[this._paneDestInd].x, y : this._teamPosArr[this._paneDestInd].y},150,motion_easing_Sine.get_easeOut()).wait(50).call(($_=this._toDrag,$bind($_,$_.addEventListener)),[openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane)]);
					pTeam[this._dragTeamInd] = pTeam[this._paneDestInd];
					pTeam[this._paneDestInd] = mon1;
					this._teamPanes[this._dragTeamInd] = this._teamPanes[this._paneDestInd];
					this._teamPanes[this._paneDestInd] = this._toDrag;
					this._toDrag = null;
				} else {
					var img1 = this._toDrag.removeChildAt(0);
					img1.set_x(this._toDrag.get_x());
					img1.set_y(this._toDrag.get_y());
					this._teamBox.addChild(img1);
					co_doubleduck_utils_TweenChain.removeTweens(img1);
					co_doubleduck_utils_TweenChain.get(img1).tto({ x : this._teamPosArr[this._paneDestInd].x, y : this._teamPosArr[this._paneDestInd].y, alpha : 1},150,motion_easing_Sine.get_easeOut()).call(function() {
						var tip1 = img1.getChildAt(1);
						co_doubleduck_utils_TweenChain.get(tip1).tto({ alpha : 1, y : tip1.get_y() - 6 * co_doubleduck_utils_DDAssets.scale},100,motion_easing_Sine.get_easeOut()).tto({ y : tip1.get_y()},160,motion_easing_Sine.get_easeInOut());
					}).wait(50).call($bind(img1,img1.addEventListener),[openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane)]);
					var pane1 = this._toDrag.removeChildAt(0);
					var mon2 = pane1.getMon();
					var _g2 = pane1;
					_g2.set_x(_g2.get_x() + this._toDrag.get_x());
					var _g3 = pane1;
					_g3.set_y(_g3.get_y() + this._toDrag.get_y());
					this._rosterBox.addChild(pane1);
					co_doubleduck_utils_TweenChain.removeTweens(pane1);
					co_doubleduck_utils_TweenChain.get(pane1).tto({ x : this._teamPosArr[this._paneDestInd].x - pane1.get_width() / 2, y : this._teamPosArr[this._paneDestInd].y - pane1.get_height(), alpha : 0},150,motion_easing_Sine.get_easeOut()).wait(50).call(($_=this._rosterBox,$bind($_,$_.removeChild)),[pane1]);
					var prevMon = pTeam[this._paneDestInd];
					pTeam[this._paneDestInd] = mon2;
					var prevMonImg = this._teamPanes[this._paneDestInd];
					this._teamPanes[this._paneDestInd] = img1;
					pane1 = prevMon.getPane("thumb");
					pane1.set_x(prevMonImg.get_x() - pane1.get_width() / 2 - this._panesBox.get_x());
					pane1.set_y(prevMonImg.get_y() - pane1.get_height() - this._panesBox.get_y());
					pane1.set_alpha(0);
					this._panesBox.addChild(pane1);
					co_doubleduck_utils_TweenChain.get(pane1).tto({ x : this._paneSrcPos.x - pane1.get_width() / 2 - this._panesBox.get_x(), y : this._paneSrcPos.y - pane1.get_height() - this._panesBox.get_y(), alpha : 1},150,motion_easing_Sine.get_easeOut()).wait(50).call($bind(pane1,pane1.addEventListener),[openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane)]);
					this._teamBox.removeChild(prevMonImg);
					this._rosterBox.addChild(prevMonImg);
					prevMonImg.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane));
					co_doubleduck_utils_TweenChain.removeTweens(prevMonImg);
					co_doubleduck_utils_TweenChain.get(prevMonImg).tto({ x : this._paneSrcPos.x, y : this._paneSrcPos.y, alpha : 0},150,motion_easing_Sine.get_easeOut()).wait(50).call(($_=this._rosterBox,$bind($_,$_.removeChild)),[prevMonImg]);
				}
				co_doubleduck_dynamons2_meta_GameState.saveMonsData();
			}
			co_doubleduck_utils_TweenChain.removeTweens(this._healsBox);
			this.killHealBtns();
			this.setupHealBtns();
			co_doubleduck_utils_TweenChain.get(this._healsBox).tto({ alpha : 1},100);
			if(this._dragIsTap) this.openMonInfo(tapMon);
		}
	}
	,openMonInfo: function(mon) {
		this._rosterBox.mouseChildren = this._rosterBox.mouseEnabled = false;
		co_doubleduck_utils_TweenChain.get(this._rosterBox).tto({ x : -co_doubleduck_dynamons2_Game.getScreenSize().width, alpha : 0},200,motion_easing_Sine.get_easeIn()).call($bind(this,this.addMonInfo),[mon]);
		this._closeBtn.enabled = false;
		co_doubleduck_utils_TweenChain.get(this._closeBtn).tto({ alpha : 0},200).call($bind(this,this.removeChild),[this._closeBtn]);
	}
	,addMonInfo: function(mon) {
		var _g = this;
		this._monInfo = new co_doubleduck_dynamons2_meta_MonInfoPane(mon,this._back.get_y());
		this._monInfo.mouseChildren = this._monInfo.mouseEnabled = false;
		this._monInfo.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width);
		this._monInfo.addEventListener("monReleaseEvent",$bind(this,this.handleMonRelease));
		co_doubleduck_utils_TweenChain.get(this._monInfo).tto({ x : 0},200,motion_easing_Sine.get_easeOut());
		this._backBtn.set_alpha(0);
		this._backBtn.enabled = false;
		this.addChild(this._backBtn);
		this.addChild(this._monInfo);
		co_doubleduck_utils_TweenChain.get(this._backBtn).tto({ alpha : 1},200).wait(50).call(function() {
			_g._backBtn.enabled = true;
			_g._monInfo.mouseChildren = _g._monInfo.mouseEnabled = true;
		});
	}
	,handleMonRelease: function(e) {
		this.setupStoredMons();
		co_doubleduck_utils_TweenChain.get(this._monInfo).tto({ alpha : 0},400).call($bind(this,this.handleBack),[null]);
	}
	,handleBack: function(e) {
		this._monInfo.mouseChildren = this._monInfo.mouseEnabled = false;
		co_doubleduck_utils_TweenChain.get(this._monInfo).tto({ x : co_doubleduck_dynamons2_Game.getScreenSize().width},200,motion_easing_Sine.get_easeIn()).call($bind(this,this.removeMonInfo));
		this._backBtn.enabled = false;
		co_doubleduck_utils_TweenChain.get(this._backBtn).tto({ alpha : 0},200).call($bind(this,this.removeChild),[this._backBtn]);
	}
	,removeMonInfo: function() {
		var _g = this;
		this.removeChild(this._monInfo);
		this._monInfo.destroy();
		this._monInfo = null;
		this.addChild(this._rosterBox);
		co_doubleduck_utils_TweenChain.get(this._rosterBox).tto({ x : 0, alpha : 1},200,motion_easing_Sine.get_easeOut());
		this._closeBtn.set_alpha(0);
		this._closeBtn.enabled = false;
		this.addChild(this._closeBtn);
		co_doubleduck_utils_TweenChain.get(this._closeBtn).tto({ alpha : 1},200).wait(50).call(function() {
			_g._closeBtn.enabled = true;
			_g._rosterBox.mouseChildren = _g._rosterBox.mouseEnabled = true;
		});
	}
	,isInTeam: function(monId) {
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_meta_GameState.getParty();
		while(_g < _g1.length) {
			var mon = _g1[_g];
			++_g;
			if(mon.getId() == monId) return true;
		}
		return false;
	}
	,getCloseTeamMember: function() {
		if(this._toDrag.get_y() < this._teamStartY) {
			var part = co_doubleduck_dynamons2_Game.getScreenSize().width / this._teamPanes.length;
			var ind = Math.floor(this._toDrag.get_x() / part);
			if(ind < 0) ind = 0; else ind = ind;
			if(ind > this._teamPanes.length - 1) ind = this._teamPanes.length - 1; else ind = ind;
			if(ind != this._dragTeamInd) return ind;
		}
		return -1;
	}
	,handleClose: function(e) {
		this._closeBtn.enabled = false;
		this.dispatchEvent(new openfl_events_Event(openfl_events_Event.CLOSE));
	}
	,destroy: function() {
		this._closeBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleClose));
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_meta_GameState.getPlayerMons(true);
		while(_g < _g1.length) {
			var mon = _g1[_g];
			++_g;
			mon.destroyPane("thumb");
			mon.destroyPane("tooltip");
		}
		while(this._teamBox.get_numChildren() > 0) {
			var pane = this._teamBox.removeChildAt(0);
			pane.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane));
		}
		while(this._panesBox.get_numChildren() > 0) {
			var pane1 = this._panesBox.removeChildAt(0);
			if(!js_Boot.__instanceof(pane1,co_doubleduck_dynamons2_core_MonPane)) continue;
			pane1.removeEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.handlePane));
		}
		this._topHud.destroy();
	}
	,__class__: co_doubleduck_dynamons2_meta_TeamScreen
});
var co_doubleduck_dynamons2_meta_MonInfoPane = function(mon,posY) {
	openfl_display_Sprite.call(this);
	this._mon = mon;
	this.set_y(posY);
	var monImg = this._mon.getVisBody("front");
	monImg.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 91 * co_doubleduck_utils_DDAssets.scale);
	monImg.set_y(265 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(monImg);
	var tooltip = this._mon.getPane("tooltip");
	co_doubleduck_utils_TweenChain.removeTweens(tooltip);
	tooltip.set_alpha(1);
	this._prevTipParent = tooltip.parent;
	if(this._prevTipParent != null) {
		this._prevTipParent.removeChild(tooltip);
		this._prevTipPos = new openfl_geom_Point(tooltip.get_x(),tooltip.get_y());
	}
	tooltip.disableLevelupMark();
	tooltip.set_x(80 * co_doubleduck_utils_DDAssets.scale - tooltip.get_width() / 2);
	tooltip.set_y(87 * co_doubleduck_utils_DDAssets.scale);
	this.addChild(tooltip);
	var monDat = this._mon.getData();
	var desc = co_doubleduck_utils_Fonter.getMultilineString(monDat.desc,"images/fonts/black_small/","|",1);
	desc.set_x(80 * co_doubleduck_utils_DDAssets.scale);
	desc.set_y(tooltip.get_y() + tooltip.get_height() + 5 * co_doubleduck_utils_DDAssets.scale + desc.get_height() / 2);
	this.addChild(desc);
	this.setupXpBar();
	this.setupButtons();
	this.setupStats();
	var abilDescBack = co_doubleduck_utils_DDAssets.getImage("images/team/info/skill_description.png");
	abilDescBack.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - abilDescBack.get_width() / 2);
	abilDescBack.set_y(-this.get_y() + co_doubleduck_dynamons2_Game.getScreenSize().height - 5 * co_doubleduck_utils_DDAssets.scale - abilDescBack.get_height());
	this.addChild(abilDescBack);
	this.setupAbils();
	this.selectAbil(this._abilBtns[0]);
	var _g = 0;
	var _g1 = this._mon.getAbilities();
	while(_g < _g1.length) {
		var abil = _g1[_g];
		++_g;
		null;
	}
	this._mon.addEventListener("ShowLevelupEvent",$bind(this,this.handleMon));
	this._mon.addEventListener("HPChangeEvent",$bind(this,this.handleMon));
};
$hxClasses["co.doubleduck.dynamons2.meta.MonInfoPane"] = co_doubleduck_dynamons2_meta_MonInfoPane;
co_doubleduck_dynamons2_meta_MonInfoPane.__name__ = ["co","doubleduck","dynamons2","meta","MonInfoPane"];
co_doubleduck_dynamons2_meta_MonInfoPane.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_MonInfoPane.prototype = $extend(openfl_display_Sprite.prototype,{
	handleMon: function(e) {
		if(e.type == "ShowLevelupEvent") {
			this.setupXpBar();
			this.setupButtons();
			this.setupStats();
			this.setupAbils();
			this.selectAbil(this._abilBtns[0]);
		}
		if(e.type == "HPChangeEvent") {
			if(this._mon.getCurrHP() >= this._mon.getTotalHP()) this.setupButtons();
		}
	}
	,setupXpBar: function() {
		if(this._xpBar == null) {
			this._xpBar = new co_doubleduck_utils_ProgBar(co_doubleduck_utils_DDAssets.getImage("images/general/xpbar_bg.png"),co_doubleduck_utils_DDAssets.getImage("images/general/xpbar_fill.png"));
			this._xpBar.set_x(80 * co_doubleduck_utils_DDAssets.scale - this._xpBar.get_width() / 2);
			this._xpBar.set_y(255 * co_doubleduck_utils_DDAssets.scale - this._xpBar.get_height());
			this.addChild(this._xpBar);
		}
		var xpRatio = this._mon.getXPRatio();
		this._xpBar.setFillPerc(xpRatio);
		if(xpRatio == 1 && this._levelupMark == null) {
			this._levelupMark = co_doubleduck_utils_DDAssets.getImage("images/general/badge_levelup.png");
			this._levelupMark.set_x(this._xpBar.get_x() + this._xpBar.get_width() - this._levelupMark.get_width() / 2);
			this._levelupMark.set_y(this._xpBar.get_y() + 17 * co_doubleduck_utils_DDAssets.scale - this._levelupMark.get_height() / 2);
			this.addChild(this._levelupMark);
		}
		if(xpRatio != 1 && this._levelupMark != null) {
			this.removeChild(this._levelupMark);
			this._levelupMark = null;
		}
	}
	,setupButtons: function() {
		if(this._levelupBtn != null) {
			this._levelupBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLevelupBtn));
			this.removeChild(this._levelupBtn);
			this._levelupBtn = null;
		}
		if(this._healBtn != null) {
			this._healBtn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleHealBtn));
			this.removeChild(this._healBtn);
			this._healBtn = null;
		}
		var btnPos = co_doubleduck_dynamons2_Game.getScreenSize().width - 5 * co_doubleduck_utils_DDAssets.scale;
		if(this._mon.getXPRatio() == 1) {
			this._levelupBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_levelup.png"));
			this._levelupBtn.set_x(btnPos - this._levelupBtn.get_width() / 2);
			btnPos -= this._levelupBtn.get_width() + 5 * co_doubleduck_utils_DDAssets.scale;
			this._levelupBtn.set_y(295 * co_doubleduck_utils_DDAssets.scale);
			this._levelupBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleLevelupBtn));
			var stone = "levelup_" + this._mon.getKind();
			var hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
			if(hasStones == 0) {
				stone = "levelup_joker";
				hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
				if(hasStones == 0) stone = "";
			}
			var lvlupText = co_doubleduck_utils_DDAssets.getImage("images/general/btn_levelup_text.png");
			var _g = lvlupText;
			_g.set_x(_g.get_x() - lvlupText.get_width() / 2);
			lvlupText.set_y(-lvlupText.get_height() / 2 - 2 * co_doubleduck_utils_DDAssets.scale);
			if(stone != "") {
				var _g1 = lvlupText;
				_g1.set_x(_g1.get_x() + 10 * co_doubleduck_utils_DDAssets.scale);
				this._levelupStone = co_doubleduck_utils_DDAssets.getImage("images/items/icons/" + stone + ".png");
				this._levelupStone.set_x(-38 * co_doubleduck_utils_DDAssets.scale - this._levelupStone.get_width() / 2);
				this._levelupStone.set_y(-4 * co_doubleduck_utils_DDAssets.scale - this._levelupStone.get_height() / 2);
				this._levelupBtn.addChild(this._levelupStone);
			}
			this._levelupBtn.addChild(lvlupText);
			this.addChild(this._levelupBtn);
		}
		if(this._mon.getCurrHP() < this._mon.getTotalHP()) {
			var btnImg = "btn_heal_nokit.png";
			if(co_doubleduck_dynamons2_meta_GameState.getItemAmount("healing_kit") > 0) btnImg = "btn_heal_kit.png";
			this._healBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/team/info/" + btnImg));
			this._healBtn.set_x(btnPos - this._healBtn.get_width() / 2);
			this._healBtn.set_y(295 * co_doubleduck_utils_DDAssets.scale);
			this._healBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleHealBtn));
			this.addChild(this._healBtn);
		}
		if(this._releaseBtn == null) {
			if((function($this) {
				var $r;
				var _this = co_doubleduck_dynamons2_meta_GameState.getParty();
				$r = HxOverrides.indexOf(_this,$this._mon,0);
				return $r;
			}(this)) == -1) {
				this._releaseBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/team/info/btn_release.png"));
				this._releaseBtn.set_x(5 * co_doubleduck_utils_DDAssets.scale + this._releaseBtn.get_width() / 2);
				this._releaseBtn.set_y(295 * co_doubleduck_utils_DDAssets.scale);
				this._releaseBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleRelease));
				this.addChild(this._releaseBtn);
			}
		}
	}
	,setupStats: function() {
		var posZ = -1;
		if(this._stats != null) {
			posZ = this.getChildIndex(this._stats);
			this.removeChild(this._stats);
			this._stats = null;
		}
		this._stats = new co_doubleduck_dynamons2_meta_StatsPane();
		this._stats.set_x(5 * co_doubleduck_utils_DDAssets.scale);
		this._stats.set_y(-this.get_y() + co_doubleduck_dynamons2_Game.getScreenSize().height - 180 * co_doubleduck_utils_DDAssets.scale);
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_core_Mon.STAT_NAMES;
		while(_g < _g1.length) {
			var stat = _g1[_g];
			++_g;
			this._stats.setStat(stat,co_doubleduck_dynamons2_meta_StatsBar.ratioForStat(stat,this._mon.getStat(stat)));
		}
		if(posZ != -1) this.addChildAt(this._stats,posZ); else this.addChild(this._stats);
	}
	,setupAbils: function() {
		if(this._abilsBox == null) {
			this._abilsBox = new openfl_display_Sprite();
			this._abilsBox.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 158 * co_doubleduck_utils_DDAssets.scale);
			this._abilsBox.set_y(-this.get_y() + co_doubleduck_dynamons2_Game.getScreenSize().height - 155 * co_doubleduck_utils_DDAssets.scale);
			this.addChild(this._abilsBox);
		}
		if(this._abilBtns != null) {
			var _g = 0;
			var _g1 = this._abilBtns;
			while(_g < _g1.length) {
				var btn = _g1[_g];
				++_g;
				btn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleAbilBtn));
				this._abilsBox.removeChild(btn);
			}
		}
		if(this._abilsData == null) this._abilsData = co_doubleduck_dynamons2_data_GameplayDB.getMon(this._mon.getId()).abilities;
		this._abilBtns = [];
		var _g11 = 0;
		var _g2 = this._abilsData.length;
		while(_g11 < _g2) {
			var i = _g11++;
			var abilDat = this._abilsData[i];
			var abilBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/session/abilities/icons/" + Std.string(abilDat.id) + ".png"));
			abilBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleAbilBtn));
			var getLvl = Std["int"](abilDat.getsAt);
			if(getLvl > this._mon.getLevel()) {
				abilBtn.enabled = false;
				var lock = co_doubleduck_utils_DDAssets.getImage("images/team/info/skill_lock_overlay.png");
				var _g21 = lock;
				_g21.set_x(_g21.get_x() - lock.get_width() / 2);
				var _g22 = lock;
				_g22.set_y(_g22.get_y() - lock.get_height() / 2);
				abilBtn.addChild(lock);
				var lockLvl = co_doubleduck_utils_Fonter.getString("#" + getLvl,"images/fonts/black_medium/");
				lockLvl.set_y(15 * co_doubleduck_utils_DDAssets.scale);
				abilBtn.addChild(lockLvl);
			}
			abilBtn.set_x(i % 3 * 61 * co_doubleduck_utils_DDAssets.scale);
			abilBtn.set_y(Math.floor(i / 3) * 61 * co_doubleduck_utils_DDAssets.scale);
			this._abilBtns.push(abilBtn);
			this._abilsBox.addChild(abilBtn);
		}
	}
	,handleAbilBtn: function(e) {
		this.selectAbil(e.target);
	}
	,selectAbil: function(abil) {
		var ind = HxOverrides.indexOf(this._abilBtns,abil,0);
		if(this._abilSelect == null) this._abilSelect = co_doubleduck_utils_DDAssets.getCenteredImage("images/team/info/skill_select.png"); else this._abilsBox.removeChild(this._abilSelect);
		this._abilSelect.set_x(abil.get_x());
		this._abilSelect.set_y(abil.get_y());
		this._abilsBox.addChild(this._abilSelect);
		var posY = -this.get_y() + co_doubleduck_dynamons2_Game.getScreenSize().height;
		var abilDat = co_doubleduck_dynamons2_data_GameplayDB.getAbility(this._abilsData[ind].id);
		if(this._abilTitle != null) this.removeChild(this._abilTitle);
		this._abilTitle = co_doubleduck_utils_Fonter.getString(abilDat.title,"images/fonts/white_stroked_small/");
		this._abilTitle.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		this._abilTitle.set_y(posY - 50 * co_doubleduck_utils_DDAssets.scale);
		this.addChildAt(this._abilTitle,this.getChildIndex(this._abilsBox));
		if(this._abilDesc != null) this.removeChild(this._abilDesc);
		this._abilDesc = co_doubleduck_utils_Fonter.getString(abilDat.desc,"images/fonts/white_small/");
		this._abilDesc.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2);
		this._abilDesc.set_y(posY - 31 * co_doubleduck_utils_DDAssets.scale);
		this.addChildAt(this._abilDesc,this.getChildIndex(this._abilsBox));
	}
	,openShop: function(withStr) {
		var shop = new co_doubleduck_dynamons2_meta_LootShop(withStr);
		shop.set_y(-this.get_y());
		shop.addEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseShop));
		this.addChild(shop);
	}
	,handleCloseShop: function(e) {
		var shop = e.target;
		shop.removeEventListener(openfl_events_Event.CLOSE,$bind(this,this.handleCloseShop));
		this.removeChild(shop);
		this.setupButtons();
	}
	,handleLevelupBtn: function(e) {
		var stone = "levelup_" + this._mon.getKind();
		var hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
		if(hasStones > 0) {
			co_doubleduck_dynamons2_meta_GameState.setItemAmount(stone,hasStones - 1);
			null;
		} else {
			stone = "levelup_joker";
			hasStones = co_doubleduck_dynamons2_meta_GameState.getItemAmount(stone);
			if(hasStones > 0) {
				co_doubleduck_dynamons2_meta_GameState.setItemAmount(stone,hasStones - 1);
				null;
			} else {
				this.openShop("no_levelup_stone");
				return;
			}
		}
		var levelupScr = new co_doubleduck_dynamons2_core_LevelUpScr([this._mon],[0]);
		var _g = levelupScr;
		_g.set_y(_g.get_y() - this.get_y());
		this.addChild(levelupScr);
		levelupScr.addEventListener("DoneScreenEvent",$bind(this,this.handleDoneLevelup));
		levelupScr.startLevelup();
	}
	,handleDoneLevelup: function(e) {
		var levelupScr = e.target;
		levelupScr.removeEventListener("DoneScreenEvent",$bind(this,this.handleDoneLevelup));
		this.removeChild(levelupScr);
	}
	,handleHealBtn: function(e) {
		var kits = co_doubleduck_dynamons2_meta_GameState.getItemAmount("healing_kit");
		if(kits > 0) {
			co_doubleduck_dynamons2_meta_GameState.setItemAmount("healing_kit",kits - 1);
			var ratio = this._mon.getCurrHP() / this._mon.getTotalHP();
			var dtSecs = Math.floor(this._mon.getAutoHealTargetTime() - co_doubleduck_utils_Utils.epochTime());
			co_doubleduck_dynamons2_Game.reportEvent("heal",{ 'id' : this._mon.getId(), 'level' : this._mon.getLevel(), 'hpRatio' : ratio, secsRemain : dtSecs});
			this._mon.takeHeal(this._mon.getTotalHP(),100);
		} else this.openShop("no_healing_kit");
	}
	,handleRelease: function(e) {
		if(this._blackFade == null) {
			this._blackFade = new openfl_display_Sprite();
			this._blackFade.get_graphics().beginFill(0);
			this._blackFade.get_graphics().drawRect(0,0,co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
			this._blackFade.get_graphics().endFill();
			var _g = this._blackFade;
			_g.set_y(_g.get_y() - this.get_y());
		}
		this.addChild(this._blackFade);
		this._blackFade.set_alpha(0);
		co_doubleduck_utils_TweenChain.get(this._blackFade).tto({ alpha : 0.7},200);
		this._releaseModal = new co_doubleduck_dynamons2_meta_ReleaseModal(this._mon);
		this.addChild(this._releaseModal);
		this._releaseModal.onExit = $bind(this,this.handleReleasePaneClose);
		this._releaseModal.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width / 2 - this._releaseModal.getWidth() / 2);
		this._releaseModal.set_y(co_doubleduck_dynamons2_Game.getScreenSize().height / 2 - this._releaseModal.get_height() / 2 - this.get_y());
		this._releaseModal.set_alpha(0);
		co_doubleduck_utils_TweenChain.get(this._releaseModal).tto({ alpha : 1},200);
	}
	,handleReleasePaneClose: function(didRelease) {
		var _g = this;
		co_doubleduck_utils_TweenChain.get(this._blackFade).tto({ alpha : 0},200).call($bind(this,this.removeChild),[this._blackFade]);
		co_doubleduck_utils_TweenChain.get(this._releaseModal).tto({ alpha : 0},200).call(function() {
			_g.removeChild(_g._releaseModal);
			_g._releaseModal.destroy();
			_g._releaseModal = null;
			if(didRelease) {
				co_doubleduck_dynamons2_meta_GameState.removePlayerMon(_g._mon);
				_g._mon.destroy();
				_g.dispatchEvent(new openfl_events_Event("monReleaseEvent"));
			}
		});
	}
	,destroy: function() {
		var tooltip = this._mon.getPane("tooltip");
		this.removeChild(tooltip);
		tooltip.enableLevelupMark();
		if(this._prevTipParent != null) {
			tooltip.set_x(this._prevTipPos.x);
			tooltip.set_y(this._prevTipPos.y);
			this._prevTipParent.addChild(tooltip);
		}
		var _g = 0;
		var _g1 = this._abilBtns;
		while(_g < _g1.length) {
			var btn = _g1[_g];
			++_g;
			btn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleAbilBtn));
		}
		this._mon.removeEventListener("ShowLevelupEvent",$bind(this,this.handleMon));
		this._mon.removeEventListener("HPChangeEvent",$bind(this,this.handleMon));
	}
	,__class__: co_doubleduck_dynamons2_meta_MonInfoPane
});
var co_doubleduck_dynamons2_meta_ReleaseModal = function(mon) {
	openfl_display_Sprite.call(this);
	this._bg = co_doubleduck_utils_DDAssets.getImage("images/team/info/modal_release.png");
	this.addChild(this._bg);
	var infoBmd = co_doubleduck_utils_BmpMagic.flatten(mon.getPane("thumb"));
	this._monInfo = new openfl_display_Bitmap(infoBmd);
	this._monInfo.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
	this.addChild(this._monInfo);
	this._monInfo.set_x(10 * co_doubleduck_utils_DDAssets.scale);
	this._monInfo.set_y(49 * co_doubleduck_utils_DDAssets.scale);
	this._btnCancel = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_cancel.png"));
	this.addChild(this._btnCancel);
	this._btnCancel.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleCancel));
	this._btnCancel.set_x(this._bg.get_x() + 90 * co_doubleduck_utils_DDAssets.scale);
	this._btnCancel.set_y(this._bg.get_y() + this._bg.get_height() - 5 * co_doubleduck_utils_DDAssets.scale);
	this._btnRelease = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/team/btn_confirm_release.png"));
	this.addChild(this._btnRelease);
	this._btnRelease.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleRelease));
	this._btnRelease.set_y(this._btnCancel.get_y());
	this._btnRelease.set_x(this._btnCancel.get_x() + 120 * co_doubleduck_utils_DDAssets.scale);
	this._btnExit = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_close.png"));
	this.addChild(this._btnExit);
	this._btnExit.set_x(this._bg.get_x() + this._bg.get_width() - 15 * co_doubleduck_utils_DDAssets.scale);
	this._btnExit.set_y(this._bg.get_y() + 15 * co_doubleduck_utils_DDAssets.scale);
	this._btnExit.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleExit));
};
$hxClasses["co.doubleduck.dynamons2.meta.ReleaseModal"] = co_doubleduck_dynamons2_meta_ReleaseModal;
co_doubleduck_dynamons2_meta_ReleaseModal.__name__ = ["co","doubleduck","dynamons2","meta","ReleaseModal"];
co_doubleduck_dynamons2_meta_ReleaseModal.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_ReleaseModal.prototype = $extend(openfl_display_Sprite.prototype,{
	handleExit: function(e) {
		this.disable();
		this.onExit(false);
	}
	,handleRelease: function(e) {
		this.disable();
		this.onExit(true);
	}
	,handleCancel: function(e) {
		this.disable();
		this.onExit(false);
	}
	,disable: function() {
		this._btnCancel.enabled = false;
		this._btnRelease.enabled = false;
		this._btnExit.enabled = false;
	}
	,getWidth: function() {
		return this._bg.get_width();
	}
	,destroy: function() {
		this._monInfo.bitmapData.dispose();
		this._monInfo.bitmapData = null;
		this._monInfo = null;
		this._btnCancel.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleCancel));
		this._btnRelease.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleRelease));
		this._btnExit.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleExit));
	}
	,__class__: co_doubleduck_dynamons2_meta_ReleaseModal
});
var co_doubleduck_dynamons2_meta_TopHud = function() {
	openfl_display_Sprite.call(this);
	if(co_doubleduck_utils_SoundMgr.available) {
		this._muteOnBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_sound_on.png"));
		this._muteOnBtn.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 5 * co_doubleduck_utils_DDAssets.scale - this._muteOnBtn.get_width() / 2);
		this._muteOnBtn.set_y(20 * co_doubleduck_utils_DDAssets.scale);
		this._muteOnBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleMute));
		this._muteOffBtn = new co_doubleduck_utils_Button(co_doubleduck_utils_DDAssets.getRawImage("images/general/btn_sound_off.png"));
		this._muteOffBtn.set_x(this._muteOnBtn.get_x());
		this._muteOffBtn.set_y(this._muteOnBtn.get_y());
		this._muteOffBtn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleMute));
		if(co_doubleduck_dynamons2_data_Persistence.getString(co_doubleduck_dynamons2_data_DataKey.MUTE_STATE) == "false") this.addChild(this._muteOnBtn); else this.addChild(this._muteOffBtn);
	}
	this.setupCoins();
	co_doubleduck_dynamons2_meta_GameState.addListener("PlayerCoinsChangeEvent",$bind(this,this.handleCoins));
};
$hxClasses["co.doubleduck.dynamons2.meta.TopHud"] = co_doubleduck_dynamons2_meta_TopHud;
co_doubleduck_dynamons2_meta_TopHud.__name__ = ["co","doubleduck","dynamons2","meta","TopHud"];
co_doubleduck_dynamons2_meta_TopHud.__super__ = openfl_display_Sprite;
co_doubleduck_dynamons2_meta_TopHud.prototype = $extend(openfl_display_Sprite.prototype,{
	handleMute: function(e) {
		if(e.target == this._muteOffBtn) {
			co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.MUTE_STATE,"false");
			this.removeChild(this._muteOffBtn);
			this.addChild(this._muteOnBtn);
		} else {
			co_doubleduck_dynamons2_data_Persistence.setString(co_doubleduck_dynamons2_data_DataKey.MUTE_STATE,"true");
			this.removeChild(this._muteOnBtn);
			this.addChild(this._muteOffBtn);
		}
	}
	,setupMons: function() {
		if(this._monsBox == null) {
			this._monsBox = co_doubleduck_utils_DDAssets.getImage("images/team/hud_mons.png");
			this._monsBox.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 194 * co_doubleduck_utils_DDAssets.scale);
			this._monsBox.set_y(20 * co_doubleduck_utils_DDAssets.scale - this._monsBox.get_height() / 2);
			this.addChild(this._monsBox);
		}
		if(this._mons != null) {
			this.removeChild(this._mons);
			this._mons = null;
		}
		var totalMons = co_doubleduck_dynamons2_data_GameplayDB.getAllMons().length;
		var hasMons = [];
		var _g = 0;
		var _g1 = co_doubleduck_dynamons2_meta_GameState.getPlayerMons(true);
		while(_g < _g1.length) {
			var curr = _g1[_g];
			++_g;
			if((function($this) {
				var $r;
				var x = curr.getId();
				$r = HxOverrides.indexOf(hasMons,x,0);
				return $r;
			}(this)) == -1) hasMons.push(curr.getId());
		}
		this._mons = co_doubleduck_utils_Fonter.getString(hasMons.length + "/" + totalMons,"images/fonts/white_stroked_small/");
		this._mons.set_x(this._monsBox.get_x() + this._monsBox.get_width() / 2 + 15 * co_doubleduck_utils_DDAssets.scale);
		this._mons.set_y(this._monsBox.get_y() + this._monsBox.get_height() / 2);
		this.addChild(this._mons);
	}
	,setupCoins: function() {
		if(this._coinsBox == null) {
			this._coinsBox = co_doubleduck_utils_DDAssets.getImage("images/general/hud_coins.png");
			this._coinsBox.set_x(co_doubleduck_dynamons2_Game.getScreenSize().width - 106 * co_doubleduck_utils_DDAssets.scale);
			if(!co_doubleduck_utils_SoundMgr.available) {
				var _g = this._coinsBox;
				_g.set_x(_g.get_x() + 30 * co_doubleduck_utils_DDAssets.scale);
			}
			this._coinsBox.set_y(20 * co_doubleduck_utils_DDAssets.scale - this._coinsBox.get_height() / 2);
			this.addChild(this._coinsBox);
		}
		if(this._coins != null) {
			this.removeChild(this._coins);
			this._coins = null;
		}
		this._coins = co_doubleduck_utils_Fonter.getString("" + co_doubleduck_dynamons2_meta_GameState.getPlayerCoins(),"images/fonts/white_stroked_small/");
		this._coins.set_x(this._coinsBox.get_x() + this._coinsBox.get_width() / 2 + 6 * co_doubleduck_utils_DDAssets.scale);
		this._coins.set_y(this._coinsBox.get_y() + this._coinsBox.get_height() / 2);
		this.addChild(this._coins);
	}
	,handleCoins: function(e) {
		this.setupCoins();
	}
	,destroy: function() {
		co_doubleduck_dynamons2_meta_GameState.removeListener("PlayerCoinsChangeEvent",$bind(this,this.handleCoins));
	}
	,__class__: co_doubleduck_dynamons2_meta_TopHud
});
var co_doubleduck_dynamons2_meta_TutorStep = $hxClasses["co.doubleduck.dynamons2.meta.TutorStep"] = { __ename__ : ["co","doubleduck","dynamons2","meta","TutorStep"], __constructs__ : ["JOVANI_HELLO","VANITY_BATTLE","JOVANI_GOODJOB","CHOOSE_MON","JOVANI_GOOD_CHOICE","FIRST_BATTLE_TALK","FIRST_BATTLE_START","FIRST_BATTLE_CATCH_TALK","FIRST_BATTLE_CATCH_SHOW","FIRST_BATTLE_CATCH_ACT","FIRST_BATTLE_LEVELUP_TALK","FIRST_BATTLE_LEVELUP_ACT","MON_SWAP_TALK","MON_SWAP_SHOW","MON_SWAP_ACT","JOVANI_TALK_KOLIN","FIRST_BOSS_BATTLE","FIRST_SHOP_TALK","FIRST_SHOP_OPEN","FIRST_SHOP_BUY","FIRST_ITEM_TALK","FIRST_ITEM_MORE","FIRST_ITEM_INVENTORY","FIRST_ITEM_CHOOSE","FIRST_ITEM_USE","KLYDE_INTRODUCE","HEAL_TALK","HEAL_OPEN_TEAM","HEAL_ACT","FINISHED_TUTOR"] };
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO = ["JOVANI_HELLO",0];
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.VANITY_BATTLE = ["VANITY_BATTLE",1];
co_doubleduck_dynamons2_meta_TutorStep.VANITY_BATTLE.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.VANITY_BATTLE.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB = ["JOVANI_GOODJOB",2];
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.CHOOSE_MON = ["CHOOSE_MON",3];
co_doubleduck_dynamons2_meta_TutorStep.CHOOSE_MON.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.CHOOSE_MON.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOOD_CHOICE = ["JOVANI_GOOD_CHOICE",4];
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOOD_CHOICE.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOOD_CHOICE.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_TALK = ["FIRST_BATTLE_TALK",5];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_TALK.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_TALK.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_START = ["FIRST_BATTLE_START",6];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_START.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_START.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_TALK = ["FIRST_BATTLE_CATCH_TALK",7];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_TALK.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_TALK.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_SHOW = ["FIRST_BATTLE_CATCH_SHOW",8];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_SHOW.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_SHOW.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT = ["FIRST_BATTLE_CATCH_ACT",9];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_TALK = ["FIRST_BATTLE_LEVELUP_TALK",10];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_TALK.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_TALK.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_ACT = ["FIRST_BATTLE_LEVELUP_ACT",11];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_ACT.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_ACT.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_TALK = ["MON_SWAP_TALK",12];
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_TALK.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_TALK.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_SHOW = ["MON_SWAP_SHOW",13];
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_SHOW.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_SHOW.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_ACT = ["MON_SWAP_ACT",14];
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_ACT.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_ACT.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_TALK_KOLIN = ["JOVANI_TALK_KOLIN",15];
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_TALK_KOLIN.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.JOVANI_TALK_KOLIN.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BOSS_BATTLE = ["FIRST_BOSS_BATTLE",16];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BOSS_BATTLE.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_BOSS_BATTLE.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_TALK = ["FIRST_SHOP_TALK",17];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_TALK.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_TALK.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_OPEN = ["FIRST_SHOP_OPEN",18];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_OPEN.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_OPEN.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY = ["FIRST_SHOP_BUY",19];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_TALK = ["FIRST_ITEM_TALK",20];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_TALK.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_TALK.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_MORE = ["FIRST_ITEM_MORE",21];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_MORE.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_MORE.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_INVENTORY = ["FIRST_ITEM_INVENTORY",22];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_INVENTORY.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_INVENTORY.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_CHOOSE = ["FIRST_ITEM_CHOOSE",23];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_CHOOSE.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_CHOOSE.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE = ["FIRST_ITEM_USE",24];
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.KLYDE_INTRODUCE = ["KLYDE_INTRODUCE",25];
co_doubleduck_dynamons2_meta_TutorStep.KLYDE_INTRODUCE.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.KLYDE_INTRODUCE.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.HEAL_TALK = ["HEAL_TALK",26];
co_doubleduck_dynamons2_meta_TutorStep.HEAL_TALK.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.HEAL_TALK.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.HEAL_OPEN_TEAM = ["HEAL_OPEN_TEAM",27];
co_doubleduck_dynamons2_meta_TutorStep.HEAL_OPEN_TEAM.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.HEAL_OPEN_TEAM.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT = ["HEAL_ACT",28];
co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.FINISHED_TUTOR = ["FINISHED_TUTOR",29];
co_doubleduck_dynamons2_meta_TutorStep.FINISHED_TUTOR.toString = $estr;
co_doubleduck_dynamons2_meta_TutorStep.FINISHED_TUTOR.__enum__ = co_doubleduck_dynamons2_meta_TutorStep;
co_doubleduck_dynamons2_meta_TutorStep.__empty_constructs__ = [co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO,co_doubleduck_dynamons2_meta_TutorStep.VANITY_BATTLE,co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB,co_doubleduck_dynamons2_meta_TutorStep.CHOOSE_MON,co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOOD_CHOICE,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_TALK,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_START,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_TALK,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_SHOW,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_TALK,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_ACT,co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_TALK,co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_SHOW,co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_ACT,co_doubleduck_dynamons2_meta_TutorStep.JOVANI_TALK_KOLIN,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BOSS_BATTLE,co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_TALK,co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_OPEN,co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY,co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_TALK,co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_MORE,co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_INVENTORY,co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_CHOOSE,co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE,co_doubleduck_dynamons2_meta_TutorStep.KLYDE_INTRODUCE,co_doubleduck_dynamons2_meta_TutorStep.HEAL_TALK,co_doubleduck_dynamons2_meta_TutorStep.HEAL_OPEN_TEAM,co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT,co_doubleduck_dynamons2_meta_TutorStep.FINISHED_TUTOR];
var co_doubleduck_utils_TutorMgr = function(stepEnum) {
	openfl_display_Sprite.call(this);
	this._stepEnum = stepEnum;
};
$hxClasses["co.doubleduck.utils.TutorMgr"] = co_doubleduck_utils_TutorMgr;
co_doubleduck_utils_TutorMgr.__name__ = ["co","doubleduck","utils","TutorMgr"];
co_doubleduck_utils_TutorMgr._tutor = null;
co_doubleduck_utils_TutorMgr.inst = function(stepEnum) {
	if(co_doubleduck_utils_TutorMgr._tutor == null) co_doubleduck_utils_TutorMgr._tutor = new co_doubleduck_utils_TutorMgr(stepEnum);
	return co_doubleduck_utils_TutorMgr._tutor;
};
co_doubleduck_utils_TutorMgr.__super__ = openfl_display_Sprite;
co_doubleduck_utils_TutorMgr.prototype = $extend(openfl_display_Sprite.prototype,{
	init: function(persistence,kiziFlag,screenSize) {
		this._perstistence = persistence;
		this._kiziFlag = kiziFlag;
		this._screen = screenSize;
		var stepSaved = this._perstistence.getValue("TUTOR_STEP");
		if(stepSaved == null || stepSaved == "") stepSaved = Type.getEnumConstructs(this._stepEnum)[0]; else if((function($this) {
			var $r;
			var _this = Type.getEnumConstructs($this._stepEnum);
			$r = HxOverrides.indexOf(_this,stepSaved,0);
			return $r;
		}(this)) == -1) stepSaved = Type.getEnumConstructs(this._stepEnum)[0];
		this._currStep = Type.createEnum(this._stepEnum,stepSaved);
		this._isStepShowing = false;
	}
	,tryShowStep: function(step,arg) {
		if(step != this._currStep || this._isStepShowing) return false;
		this._isStepShowing = false;
		if(this._isStepShowing) {
			if(this._kiziFlag) {
				var data = { };
				data.tutorStep = this._currStep[0];
				com_funtomic_GameOps.reportEvent("tutorStepStart",data);
			}
		}
		return this._isStepShowing;
	}
	,hasPassedStep: function(step) {
		return this._currStep == null || this._currStep[1] > step[1];
	}
	,actedOnStep: function(step) {
		if(!(step == this._currStep && this._isStepShowing)) return false;
		if(this._kiziFlag) {
			var data = { };
			data.tutorStep = this._currStep[0];
			com_funtomic_GameOps.reportEvent("tutorStepFinish",data);
		}
		this._isStepShowing = false;
		this._currStep = Type.createEnumIndex(this._stepEnum,this._currStep[1] + 1);
		this._perstistence.setValue("TUTOR_STEP",this._currStep[0]);
		return true;
	}
	,tapHand: function(pos,handImage) {
		if(handImage == null) handImage = "images/tutorial/hand.png";
		if(this._hand == null) {
			this._hand = new openfl_display_Sprite();
			var hand = co_doubleduck_utils_DDAssets.getImage(handImage);
			var _g = hand;
			_g.set_x(_g.get_x() - hand.get_width() * 0.35);
			var _g1 = hand;
			_g1.set_y(_g1.get_y() - hand.get_height() * 0.1);
			this._hand.set_visible(false);
			this._hand.addChild(hand);
			this.addChild(this._hand);
			this._hand.mouseEnabled = this._hand.mouseChildren = false;
		}
		if(!this._hand.get_visible()) {
			this._hand.set_alpha(0.01);
			this._hand.set_visible(true);
			co_doubleduck_utils_TweenChain.get(this._hand).tto({ alpha : 1},250);
		}
		this._hand.set_x(pos.x);
		this._hand.set_y(pos.y);
		this._hand.set_scaleX(this._hand.set_scaleY(1));
		co_doubleduck_utils_TweenChain.get(this._hand).tto({ scaleX : 0.8, scaleY : 0.8},200,motion_easing_Sine.get_easeIn()).tto({ scaleX : 1, scaleY : 1},300,motion_easing_Sine.get_easeOut()).call($bind(this,this.tapHand),[pos]);
	}
	,hideHand: function() {
		if(this._hand != null) {
			co_doubleduck_utils_TweenChain.removeTweens(this._hand);
			this._hand.set_visible(false);
		}
	}
	,getOverlay: function(pos,width,height) {
		if(height == null) height = -1;
		if(width == null) width = 40;
		if(height == -1) height = width;
		var over = new openfl_display_Sprite();
		var box;
		box = new openfl_display_Sprite();
		box.get_graphics().beginFill(8947848);
		box.get_graphics().drawRect(0,0,this._screen.width,pos.y - height);
		box.get_graphics().endFill();
		over.addChild(box);
		box = new openfl_display_Sprite();
		box.get_graphics().beginFill(8947848);
		box.get_graphics().drawRect(0,pos.y - height,pos.x - width,2 * height);
		box.get_graphics().endFill();
		over.addChild(box);
		box = new openfl_display_Sprite();
		box.get_graphics().beginFill(8947848);
		box.get_graphics().drawRect(pos.x + width,pos.y - height,this._screen.width - pos.x - width,2 * height);
		box.get_graphics().endFill();
		over.addChild(box);
		box = new openfl_display_Sprite();
		box.get_graphics().beginFill(8947848);
		box.get_graphics().drawRect(0,pos.y + height,this._screen.width,this._screen.height - pos.y - height);
		box.get_graphics().endFill();
		over.addChild(box);
		over.mouseEnabled = over.mouseChildren = true;
		return over;
	}
	,__class__: co_doubleduck_utils_TutorMgr
});
var co_doubleduck_dynamons2_meta_Tutorial = function() {
	this.enabled = true;
	this._phases = [co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB,co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOOD_CHOICE,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_ACT,co_doubleduck_dynamons2_meta_TutorStep.FIRST_BOSS_BATTLE,co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY,co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE,co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT];
	co_doubleduck_utils_TutorMgr.call(this,co_doubleduck_dynamons2_meta_TutorStep);
	this._tutorOrder = Type.allEnums(co_doubleduck_dynamons2_meta_TutorStep);
};
$hxClasses["co.doubleduck.dynamons2.meta.Tutorial"] = co_doubleduck_dynamons2_meta_Tutorial;
co_doubleduck_dynamons2_meta_Tutorial.__name__ = ["co","doubleduck","dynamons2","meta","Tutorial"];
co_doubleduck_dynamons2_meta_Tutorial.inst = function() {
	if(co_doubleduck_utils_TutorMgr._tutor == null) co_doubleduck_utils_TutorMgr._tutor = new co_doubleduck_dynamons2_meta_Tutorial();
	return co_doubleduck_utils_TutorMgr._tutor;
};
co_doubleduck_dynamons2_meta_Tutorial.__super__ = co_doubleduck_utils_TutorMgr;
co_doubleduck_dynamons2_meta_Tutorial.prototype = $extend(co_doubleduck_utils_TutorMgr.prototype,{
	getCurrStep: function() {
		if(!this.enabled) return this._tutorOrder[this._tutorOrder.length - 1];
		return this._currStep;
	}
	,isBeforeStep: function(step) {
		return this._currStep == null || HxOverrides.indexOf(this._tutorOrder,this._currStep,0) < HxOverrides.indexOf(this._tutorOrder,step,0) || !this.enabled;
	}
	,hasPassedStep: function(step) {
		return this._currStep == null || HxOverrides.indexOf(this._tutorOrder,this._currStep,0) > HxOverrides.indexOf(this._tutorOrder,step,0) || !this.enabled;
	}
	,init: function(persistence,kiziFlag,screenSize) {
		co_doubleduck_utils_TutorMgr.prototype.init.call(this,persistence,kiziFlag,screenSize);
		var stepSaved = this._perstistence.getValue("TUTOR_STEP");
		if(stepSaved == null || stepSaved == "") this._currStep = this._tutorOrder[0];
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.VANITY_BATTLE) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.JOVANI_HELLO;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.CHOOSE_MON) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.JOVANI_GOODJOB;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_START) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_TALK;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_SHOW || this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_ACT) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_CATCH_TALK;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_ACT) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.FIRST_BATTLE_LEVELUP_TALK;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_SHOW || this._currStep == co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_ACT) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.MON_SWAP_TALK;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_OPEN || this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_BUY) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.FIRST_SHOP_TALK;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_MORE || this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_INVENTORY || this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_CHOOSE || this._currStep == co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_USE) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.FIRST_ITEM_TALK;
		if(this._currStep == co_doubleduck_dynamons2_meta_TutorStep.HEAL_OPEN_TEAM || this._currStep == co_doubleduck_dynamons2_meta_TutorStep.HEAL_ACT) this._currStep = co_doubleduck_dynamons2_meta_TutorStep.HEAL_TALK;
		this.enabled = co_doubleduck_dynamons2_data_GameplayDB.getData().genData.enableTutorial == "true";
		null;
	}
	,tryShowStep: function(step,arg) {
		if(step != this._currStep || this._isStepShowing || !this.enabled) return false;
		this._isStepShowing = false;
		var scr = co_doubleduck_dynamons2_Game.getScreenSize();
		switch(step[1]) {
		case 0:
			this._isStepShowing = true;
			break;
		case 1:
			this._isStepShowing = true;
			break;
		case 2:
			co_doubleduck_dynamons2_meta_NodesMap.setScrollable(false);
			this.show();
			this.showDialog("tutor_good_job",arg);
			this._isStepShowing = true;
			break;
		case 3:
			this._isStepShowing = true;
			break;
		case 4:
			this._isStepShowing = true;
			break;
		case 5:
			co_doubleduck_dynamons2_meta_NodesMap.setScrollable(false);
			this.show();
			this.showDialog("tutor_first_battle",arg);
			this._isStepShowing = true;
			break;
		case 6:
			this.show();
			var btn = arg;
			this.addOverlay(new openfl_geom_Point(btn.get_x(),btn.get_y()),30);
			this.tapHand(new openfl_geom_Point(btn.get_x() + 10 * co_doubleduck_utils_DDAssets.scale,btn.get_y()));
			this._isStepShowing = true;
			break;
		case 7:
			this.show();
			this.showDialog("tutor_catch_talk",arg);
			this._isStepShowing = true;
			break;
		case 8:
			this.addOverlay(new openfl_geom_Point(35 * co_doubleduck_utils_DDAssets.scale,scr.height - 35 * co_doubleduck_utils_DDAssets.scale),30);
			this.tapHand(new openfl_geom_Point(55 * co_doubleduck_utils_DDAssets.scale,scr.height - 40 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 9:
			this.addOverlay(new openfl_geom_Point(scr.width - 31 * co_doubleduck_utils_DDAssets.scale,scr.height - 35 * co_doubleduck_utils_DDAssets.scale),30);
			this.tapHand(new openfl_geom_Point(scr.width - 20 * co_doubleduck_utils_DDAssets.scale,scr.height - 40 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 10:
			this.show();
			this.showDialog("tutor_level_up",arg);
			this._isStepShowing = true;
			break;
		case 11:
			co_doubleduck_dynamons2_meta_NodesMap.setScrollable(false);
			this.show();
			var btn1 = arg;
			this.addOverlay(new openfl_geom_Point(btn1.get_x(),btn1.get_y()),60,20);
			this.listenToClick(btn1);
			this.tapHand(new openfl_geom_Point(btn1.get_x() + 40 * co_doubleduck_utils_DDAssets.scale,btn1.get_y() + 10 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 12:
			this.show();
			this.showDialog("tutor_swap_talk",arg);
			this._isStepShowing = true;
			break;
		case 13:
			this.addOverlay(new openfl_geom_Point(35 * co_doubleduck_utils_DDAssets.scale,scr.height - 35 * co_doubleduck_utils_DDAssets.scale),30);
			this.tapHand(new openfl_geom_Point(55 * co_doubleduck_utils_DDAssets.scale,scr.height - 40 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 14:
			this.addOverlay(new openfl_geom_Point(66 * co_doubleduck_utils_DDAssets.scale,scr.height - 110 * co_doubleduck_utils_DDAssets.scale),58,32);
			this.tapHand(new openfl_geom_Point(110 * co_doubleduck_utils_DDAssets.scale,scr.height - 95 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 15:
			this.show();
			this.showDialog("tutor_introduce_kolin");
			this._isStepShowing = true;
			break;
		case 16:
			this._isStepShowing = true;
			break;
		case 17:
			co_doubleduck_dynamons2_meta_NodesMap.setScrollable(false);
			this.show();
			this.showDialog("tutor_open_shop",arg);
			this._isStepShowing = true;
			break;
		case 18:
			this.show();
			var btn2 = arg;
			this.addOverlay(new openfl_geom_Point(btn2.get_x(),btn2.get_y()),30);
			this.listenToClick(btn2);
			this.tapHand(new openfl_geom_Point(btn2.get_x() + 10 * co_doubleduck_utils_DDAssets.scale,btn2.get_y()));
			this._isStepShowing = true;
			break;
		case 19:
			this.show();
			var btn3 = arg;
			this.addOverlay(new openfl_geom_Point(btn3.get_x(),btn3.get_y()),50,25);
			this.listenToClick(btn3);
			this.tapHand(new openfl_geom_Point(btn3.get_x() + 30 * co_doubleduck_utils_DDAssets.scale,btn3.get_y() + 10 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 25:
			this.show();
			this.showDialog("tutor_introduce_klyde");
			this._isStepShowing = true;
			break;
		case 26:
			co_doubleduck_dynamons2_meta_NodesMap.setScrollable(false);
			this.show();
			this.showDialog("tutor_heal",arg);
			this._isStepShowing = true;
			if(co_doubleduck_dynamons2_meta_GameState.getItemAmount("healing_kit") == 0) co_doubleduck_dynamons2_meta_GameState.setItemAmount("healing_kit",1);
			co_doubleduck_dynamons2_core_Mon.getAutoHealTimer().stop();
			var _g = 0;
			var _g1 = co_doubleduck_dynamons2_meta_GameState.getParty();
			while(_g < _g1.length) {
				var mon = _g1[_g];
				++_g;
				mon.getPane("tooltip").updateHealTimeLabel();
				mon.getPane("tooltip").pauseHealTimeLabel(true);
			}
			break;
		case 20:
			this.show();
			this.showDialog("tutor_item_talk",arg);
			this._isStepShowing = true;
			break;
		case 21:
			this.addOverlay(new openfl_geom_Point(35 * co_doubleduck_utils_DDAssets.scale,scr.height - 35 * co_doubleduck_utils_DDAssets.scale),30);
			this.tapHand(new openfl_geom_Point(55 * co_doubleduck_utils_DDAssets.scale,scr.height - 40 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 22:
			this.addOverlay(new openfl_geom_Point(scr.width - 90 * co_doubleduck_utils_DDAssets.scale,scr.height - 35 * co_doubleduck_utils_DDAssets.scale),28);
			this.tapHand(new openfl_geom_Point(scr.width - 70 * co_doubleduck_utils_DDAssets.scale,scr.height - 40 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 23:
			var btn4 = arg;
			var btnPos = new openfl_geom_Point(btn4.get_x(),scr.height / 2 + btn4.get_y());
			this.addOverlay(new openfl_geom_Point(btnPos.x,btnPos.y),30,30);
			this.tapHand(new openfl_geom_Point(btnPos.x + 20 * co_doubleduck_utils_DDAssets.scale,btnPos.y + 10 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 24:
			var btn5 = arg;
			this.addOverlay(new openfl_geom_Point(btn5.get_x(),btn5.get_y()),50,26);
			this.listenToClick(btn5);
			this.tapHand(new openfl_geom_Point(btn5.get_x() + 20 * co_doubleduck_utils_DDAssets.scale,btn5.get_y() + 10 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 27:
			this.show();
			var btn6 = arg;
			this.addOverlay(new openfl_geom_Point(btn6.get_x(),btn6.get_y()),30,30);
			this.listenToClick(btn6);
			this.tapHand(new openfl_geom_Point(btn6.get_x() + 20 * co_doubleduck_utils_DDAssets.scale,btn6.get_y() + 10 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		case 28:
			this.show();
			var btn7 = arg;
			this.addOverlay(new openfl_geom_Point(btn7.get_x(),btn7.get_y()),50,20);
			this.listenToClick(btn7);
			this.tapHand(new openfl_geom_Point(btn7.get_x() + 20 * co_doubleduck_utils_DDAssets.scale,btn7.get_y() + 10 * co_doubleduck_utils_DDAssets.scale));
			this._isStepShowing = true;
			break;
		default:
		}
		if(this._isStepShowing) {
			var data = { };
			data.tutorStep = this._currStep[0];
			co_doubleduck_dynamons2_Game.reportEvent("tutorStepStart",data);
		}
		return this._isStepShowing;
	}
	,listenToClick: function(btn) {
		btn.addEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBtnClick));
	}
	,handleBtnClick: function(event) {
		var btn = event.target;
		btn.removeEventListener("BUTTON_ACT_EVENT",$bind(this,this.handleBtnClick));
		this.actedOnStep(this._currStep);
	}
	,showDialog: function(id,onComplete,finishStepOnDismiss) {
		if(finishStepOnDismiss == null) finishStepOnDismiss = true;
		this._activeDialog = co_doubleduck_dynamons2_meta_DialogBox.showDialog(id);
		if(finishStepOnDismiss) this._activeDialog.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDialogComplete));
		this._dialogOnComplete = onComplete;
		co_doubleduck_dynamons2_Game.instance.addChild(this._activeDialog);
	}
	,handleDialogComplete: function(e) {
		this._activeDialog.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDialogComplete));
		if(this._dialogOnComplete != null) {
			this._dialogOnComplete();
			this._dialogOnComplete = null;
		}
		co_doubleduck_dynamons2_Game.instance.removeChild(this._activeDialog);
		this.actedOnStep(this._currStep);
	}
	,addOverlay: function(pos,width,height,alpha) {
		if(alpha == null) alpha = 0.01;
		if(height == null) height = -1;
		this._overlay = this.getOverlay(pos,width * co_doubleduck_utils_DDAssets.scale,height == -1?-1:height * co_doubleduck_utils_DDAssets.scale);
		this.addChild(this._overlay);
		this._overlay.set_alpha(alpha);
	}
	,removeOverlay: function() {
		if(this._overlay != null) {
			this.removeChild(this._overlay);
			this._overlay = null;
		}
	}
	,show: function() {
		co_doubleduck_dynamons2_Game.instance.addChild(this);
	}
	,hide: function() {
		co_doubleduck_dynamons2_Game.instance.removeChild(this);
	}
	,actedOnStep: function(step) {
		if(!(step == this._currStep && this._isStepShowing) || !this.enabled) return false;
		var data = { };
		data.tutorStep = this._currStep[0];
		co_doubleduck_dynamons2_Game.reportEvent("tutorStepFinish",data);
		switch(step[1]) {
		case 2:
			this.hide();
			break;
		case 5:
			this.hide();
			break;
		case 6:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			break;
		case 8:
			this.removeOverlay();
			this.hideHand();
			break;
		case 9:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			break;
		case 10:
			this.hide();
			break;
		case 11:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			break;
		case 13:
			this.removeOverlay();
			this.hideHand();
			break;
		case 14:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			break;
		case 15:
			this.hide();
			break;
		case 17:
			this.hide();
			break;
		case 18:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			break;
		case 19:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			break;
		case 21:
			this.removeOverlay();
			this.hideHand();
			break;
		case 22:
			this.removeOverlay();
			this.hideHand();
			break;
		case 23:
			this.removeOverlay();
			this.hideHand();
			break;
		case 24:
			this.removeOverlay();
			this.hideHand();
			this.hide();
			break;
		case 25:
			this.hide();
			break;
		case 26:
			this.hide();
			break;
		case 27:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			break;
		case 28:
			this.hide();
			this.removeOverlay();
			this.hideHand();
			var _g = 0;
			var _g1 = co_doubleduck_dynamons2_meta_GameState.getPlayerMons(true);
			while(_g < _g1.length) {
				var mon = _g1[_g];
				++_g;
				mon.setupAutoHealTimes();
			}
			co_doubleduck_dynamons2_core_Mon.getAutoHealTimer().start();
			var _g2 = 0;
			var _g11 = co_doubleduck_dynamons2_meta_GameState.getParty();
			while(_g2 < _g11.length) {
				var mon1 = _g11[_g2];
				++_g2;
				mon1.getPane("tooltip").pauseHealTimeLabel(false);
			}
			break;
		default:
		}
		if(HxOverrides.indexOf(this._phases,step,0) != -1) {
			var evDat = { };
			evDat.phase = HxOverrides.indexOf(this._phases,step,0) + 1;
			co_doubleduck_dynamons2_Game.reportEvent("tutorial_phase_complete",evDat);
		}
		this._isStepShowing = false;
		this._currStep = this._tutorOrder[HxOverrides.indexOf(this._tutorOrder,this._currStep,0) + 1];
		this._perstistence.setValue("TUTOR_STEP",this._currStep[0]);
		return true;
	}
	,toggleVis: function(obj,vis,delay) {
		if(delay == null) delay = 0;
		if(vis) {
			obj.set_alpha(0);
			var twn = co_doubleduck_utils_TweenChain.get(obj);
			if(delay > 0) twn = twn.wait(delay); else twn = twn;
			return twn.tto({ alpha : 1},500);
		} else {
			var twn1 = co_doubleduck_utils_TweenChain.get(obj);
			if(delay > 0) twn1 = twn1.wait(delay); else twn1 = twn1;
			return twn1.tto({ alpha : 0},200).call($bind(this,this.removeChild),[obj]).tto({ alpha : 1},1);
		}
	}
	,getCircleOverlay: function(circPos,rad) {
		var over = new openfl_display_Sprite();
		var ctrl = rad * 0.95;
		over.get_graphics().beginFill(0);
		over.get_graphics().moveTo(0,0);
		if(circPos != null) {
			over.get_graphics().lineTo(circPos.x,0);
			over.get_graphics().lineTo(circPos.x,circPos.y - rad);
			over.get_graphics().curveTo(circPos.x - ctrl,circPos.y - ctrl,circPos.x - rad,circPos.y);
			over.get_graphics().curveTo(circPos.x - ctrl,circPos.y + ctrl,circPos.x,circPos.y + rad);
			over.get_graphics().curveTo(circPos.x + ctrl,circPos.y + ctrl,circPos.x + rad,circPos.y);
			over.get_graphics().curveTo(circPos.x + ctrl,circPos.y - ctrl,circPos.x,circPos.y - rad);
			over.get_graphics().lineTo(circPos.x,0);
		}
		over.get_graphics().lineTo(co_doubleduck_dynamons2_Game.getScreenSize().width,0);
		over.get_graphics().lineTo(co_doubleduck_dynamons2_Game.getScreenSize().width,co_doubleduck_dynamons2_Game.getScreenSize().height);
		over.get_graphics().lineTo(0,co_doubleduck_dynamons2_Game.getScreenSize().height);
		over.get_graphics().lineTo(0,0);
		over.get_graphics().endFill();
		over.set_alpha(0.75);
		return over;
	}
	,tapHand: function(pos,handImage) {
		if(handImage == null) handImage = "images/onboarding/hand.png";
		co_doubleduck_utils_TutorMgr.prototype.tapHand.call(this,pos,handImage);
	}
	,getTutorOrder: function() {
		return this._tutorOrder;
	}
	,__class__: co_doubleduck_dynamons2_meta_Tutorial
});
var co_doubleduck_gameops_GOPDevice = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["co.doubleduck.gameops.GOPDevice"] = co_doubleduck_gameops_GOPDevice;
co_doubleduck_gameops_GOPDevice.__name__ = ["co","doubleduck","gameops","GOPDevice"];
co_doubleduck_gameops_GOPDevice._instance = null;
co_doubleduck_gameops_GOPDevice.getInstance = function() {
	if(co_doubleduck_gameops_GOPDevice._instance == null) {
		co_doubleduck_gameops_GOPDevice._instance = new co_doubleduck_gameops_GOPDevice();
		co_doubleduck_gameops_GOPDevice._instance.init();
	}
	return co_doubleduck_gameops_GOPDevice._instance;
};
co_doubleduck_gameops_GOPDevice.__super__ = openfl_events_EventDispatcher;
co_doubleduck_gameops_GOPDevice.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	onEvent: function(event,data) {
		if(event == "advertise_id" && this.advertiseIdCallback != null) {
			this.advertiseIdCallback(data);
			this.advertiseIdCallback = null;
		}
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent(event,data));
	}
	,init: function() {
	}
	,getAdvertisingIdAsync: function(callback) {
	}
	,setListener: function() {
	}
	,__class__: co_doubleduck_gameops_GOPDevice
});
var co_doubleduck_gameops_GOPFuntomicAds = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["co.doubleduck.gameops.GOPFuntomicAds"] = co_doubleduck_gameops_GOPFuntomicAds;
co_doubleduck_gameops_GOPFuntomicAds.__name__ = ["co","doubleduck","gameops","GOPFuntomicAds"];
co_doubleduck_gameops_GOPFuntomicAds._instance = null;
co_doubleduck_gameops_GOPFuntomicAds.getInstance = function() {
	if(co_doubleduck_gameops_GOPFuntomicAds._instance == null) {
		co_doubleduck_gameops_GOPFuntomicAds._instance = new co_doubleduck_gameops_GOPFuntomicAds();
		co_doubleduck_gameops_GOPFuntomicAds._instance.init();
	}
	return co_doubleduck_gameops_GOPFuntomicAds._instance;
};
co_doubleduck_gameops_GOPFuntomicAds.__super__ = openfl_events_EventDispatcher;
co_doubleduck_gameops_GOPFuntomicAds.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	onEvent: function(event,data) {
		if(event == "advertise_id" && this.advertiseIdCallback != null) {
			this.advertiseIdCallback(data);
			this.advertiseIdCallback = null;
		}
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent(event,data));
	}
	,requestAd: function() {
	}
	,displayAd: function() {
	}
	,init: function() {
	}
	,getAdvertisingIdAsync: function(callback) {
	}
	,setListener: function() {
	}
	,__class__: co_doubleduck_gameops_GOPFuntomicAds
});
var co_doubleduck_utils_AdManager = function() { };
$hxClasses["co.doubleduck.utils.AdManager"] = co_doubleduck_utils_AdManager;
co_doubleduck_utils_AdManager.__name__ = ["co","doubleduck","utils","AdManager"];
co_doubleduck_utils_AdManager.adLogic = null;
co_doubleduck_utils_AdManager.analyticsCallback = null;
co_doubleduck_utils_AdManager.onComplete = null;
co_doubleduck_utils_AdManager._storage = null;
co_doubleduck_utils_AdManager._incentivizedUsage = null;
co_doubleduck_utils_AdManager.init = function(storage) {
	co_doubleduck_utils_AdManager._storage = storage;
	co_doubleduck_utils_AdManager.lastAdShowTime = haxe_Timer.stamp();
	co_doubleduck_utils_AdManager.fetchAd();
	co_doubleduck_utils_AdManager.fetchIncentivized();
	if(co_doubleduck_utils_AdManager.adLogic == null) co_doubleduck_utils_AdManager.adLogic = co_doubleduck_utils_AdManager.defaultAdData;
	if(co_doubleduck_utils_AdManager.adLogic.showCrossPromoOnStart) co_doubleduck_utils_AdManager.showCrossPromo();
	co_doubleduck_utils_AdManager._incentivizedUsage = co_doubleduck_utils_AdManager._storage.getValue(co_doubleduck_utils_AdManager.INCENTIVIZED_STORAGE_KEY);
	co_doubleduck_utils_AdManager.resetIncentivizedUsageData();
};
co_doubleduck_utils_AdManager.resetIncentivizedUsageData = function() {
	var today = new Date().getDate();
	if(co_doubleduck_utils_AdManager._incentivizedUsage == null || co_doubleduck_utils_AdManager._incentivizedUsage.monthDay != today) {
		co_doubleduck_utils_AdManager._incentivizedUsage = { monthDay : today, adCount : 0};
		co_doubleduck_utils_AdManager._storage.setValue(co_doubleduck_utils_AdManager.INCENTIVIZED_STORAGE_KEY,co_doubleduck_utils_AdManager._incentivizedUsage);
	}
};
co_doubleduck_utils_AdManager.setAdsLogic = function(logicForAds) {
	if(logicForAds == null && co_doubleduck_utils_AdManager.adLogic == null) co_doubleduck_utils_AdManager.adLogic = co_doubleduck_utils_AdManager.defaultAdData; else co_doubleduck_utils_AdManager.adLogic = logicForAds;
};
co_doubleduck_utils_AdManager.isAdReady = function(tag) {
	if(tag == null) tag = "default";
	if(co_doubleduck_utils_AdManager.disableAds) return false;
	return com_funtomic_GameOps.KiziAPI_isMidrollPending();
	return false;
};
co_doubleduck_utils_AdManager.resetAdShowTime = function() {
	co_doubleduck_utils_AdManager.lastAdShowTime = haxe_Timer.stamp();
};
co_doubleduck_utils_AdManager.fetchAd = function(tag) {
	if(tag == null) tag = "default";
};
co_doubleduck_utils_AdManager.showAd = function(callback,tag) {
	if(tag == null) tag = "default";
	co_doubleduck_utils_AdManager.onComplete = callback;
	com_funtomic_GameOps.KiziAPI_onAdComplete(co_doubleduck_utils_AdManager.handleAdComplete);
	com_funtomic_GameOps.KiziAPI_displayMidroll();
};
co_doubleduck_utils_AdManager.showCrossPromo = function() {
};
co_doubleduck_utils_AdManager.crossPromoReady = function(e) {
	if(e.type == co_doubleduck_gameops_GOPFuntomicAds.AD_READY_EVENT) com_funtomic_GameOps.displayCrossPromotionAd();
	co_doubleduck_gameops_GOPFuntomicAds.getInstance().removeEventListener(co_doubleduck_gameops_GOPFuntomicAds.AD_READY_EVENT,co_doubleduck_utils_AdManager.crossPromoReady);
	co_doubleduck_gameops_GOPFuntomicAds.getInstance().removeEventListener(co_doubleduck_gameops_GOPFuntomicAds.AD_ERROR_EVENT,co_doubleduck_utils_AdManager.crossPromoReady);
};
co_doubleduck_utils_AdManager.addReportEvent = function(event) {
};
co_doubleduck_utils_AdManager.reportEvent = function(event) {
	if(co_doubleduck_utils_AdManager.analyticsCallback == null) return;
};
co_doubleduck_utils_AdManager.handleAdComplete = function() {
	co_doubleduck_utils_AdManager.end(null);
};
co_doubleduck_utils_AdManager.isIncentivizedReady = function(tag) {
	if(tag == null) tag = "default";
	co_doubleduck_utils_AdManager.resetIncentivizedUsageData();
	if(co_doubleduck_utils_AdManager.isIncentivizedDepleted()) return false;
	return com_funtomic_GameOps.KiziAPI_isIncentivizedVideoAvailable();
	return false;
};
co_doubleduck_utils_AdManager.isIncentivizedDepleted = function() {
	return co_doubleduck_utils_AdManager._incentivizedUsage.adCount >= co_doubleduck_utils_AdManager.adLogic.maxDailyIncentivized;
};
co_doubleduck_utils_AdManager.fetchIncentivized = function(tag) {
	if(tag == null) tag = "default";
};
co_doubleduck_utils_AdManager.showIncentivized = function(callback,tag) {
	if(tag == null) tag = "default";
	co_doubleduck_utils_AdManager.onComplete = callback;
	co_doubleduck_utils_AdManager._incentivizedUsage.adCount++;
	co_doubleduck_utils_AdManager._storage.setValue(co_doubleduck_utils_AdManager.INCENTIVIZED_STORAGE_KEY,co_doubleduck_utils_AdManager._incentivizedUsage);
	com_funtomic_GameOps.KiziAPI_showIncentivizedVideo(co_doubleduck_utils_AdManager.end);
};
co_doubleduck_utils_AdManager.handleIncentivizedComplete = function(args) {
	co_doubleduck_utils_AdManager._incentivizedUsage.adCount++;
	co_doubleduck_utils_AdManager._storage.setValue(co_doubleduck_utils_AdManager.INCENTIVIZED_STORAGE_KEY,co_doubleduck_utils_AdManager._incentivizedUsage);
	co_doubleduck_utils_AdManager.end(true);
};
co_doubleduck_utils_AdManager.handleIncentivizedIncomplete = function(args) {
	co_doubleduck_utils_AdManager.end(false);
};
co_doubleduck_utils_AdManager.addClosingEvent = function(event) {
};
co_doubleduck_utils_AdManager.end = function(args) {
	com_funtomic_GameOps.KiziAPI_onAdComplete(null);
	if(co_doubleduck_utils_AdManager.onComplete != null && args != null) co_doubleduck_utils_AdManager.onComplete(args); else if(co_doubleduck_utils_AdManager.onComplete != null) co_doubleduck_utils_AdManager.onComplete();
	co_doubleduck_utils_AdManager.onComplete = null;
};
var co_doubleduck_utils_SimpleAnimSprite = function(sheet,rows,cols,frames,shouldLoop) {
	if(shouldLoop == null) shouldLoop = false;
	var behDatas = [];
	behDatas.push(new spritesheet_data_BehaviorData("simple",frames,shouldLoop,24));
	var sprSheet = co_doubleduck_utils_DDAssets.getSpritesheet(sheet,cols,rows,-1,-1,behDatas);
	co_doubleduck_utils_AnimSprite.call(this,sprSheet);
	this.showBehavior("simple");
	this._lastTime = openfl_Lib.getTimer();
	this.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
	this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
};
$hxClasses["co.doubleduck.utils.SimpleAnimSprite"] = co_doubleduck_utils_SimpleAnimSprite;
co_doubleduck_utils_SimpleAnimSprite.__name__ = ["co","doubleduck","utils","SimpleAnimSprite"];
co_doubleduck_utils_SimpleAnimSprite.__super__ = co_doubleduck_utils_AnimSprite;
co_doubleduck_utils_SimpleAnimSprite.prototype = $extend(co_doubleduck_utils_AnimSprite.prototype,{
	setAnimFPS: function(fps) {
		this.resolveBehavior("simple").frameRate = fps;
		this.replayAnim();
	}
	,stopAnim: function() {
		this.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,replayAnim: function() {
		this.showBehavior("simple",true);
		if(!this.hasEventListener(openfl_events_Event.ENTER_FRAME)) {
			this._lastTime = openfl_Lib.getTimer();
			this.addEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
		}
		this.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
	}
	,handleTick: function(e) {
		var time = openfl_Lib.getTimer();
		var delta = time - this._lastTime;
		this.update(delta);
		this._lastTime = time;
	}
	,handleDone: function(e) {
		this.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.handleDone));
		this.removeEventListener(openfl_events_Event.ENTER_FRAME,$bind(this,this.handleTick));
	}
	,__class__: co_doubleduck_utils_SimpleAnimSprite
});
var co_doubleduck_utils_BmpMagic = function() { };
$hxClasses["co.doubleduck.utils.BmpMagic"] = co_doubleduck_utils_BmpMagic;
co_doubleduck_utils_BmpMagic.__name__ = ["co","doubleduck","utils","BmpMagic"];
co_doubleduck_utils_BmpMagic.flatten = function(obj,bounds) {
	if(bounds == null) bounds = obj.getBounds(obj);
	var res = new openfl_display_BitmapData(Math.floor(bounds.width),Math.floor(bounds.height),true,0);
	var mat = new openfl_geom_Matrix();
	mat.translate(-bounds.x,-bounds.y);
	res.draw(obj,mat);
	return res;
};
co_doubleduck_utils_BmpMagic.saturation = function(source,amount) {
	if(amount == null) amount = -1;
	var res = new openfl_display_BitmapData(source.width,source.height,source.transparent,0);
	var srcColor;
	var srcRGB = { };
	var resColor;
	var avg;
	var _g1 = 0;
	var _g = source.height;
	while(_g1 < _g) {
		var row = _g1++;
		var _g3 = 0;
		var _g2 = source.width;
		while(_g3 < _g2) {
			var col = _g3++;
			srcColor = source.getPixel32(col,row);
			srcRGB.a = srcColor >>> 24;
			if(co_doubleduck_utils_BmpMagic.disableAlphas() && srcRGB.a != 255) continue;
			srcRGB.r = (srcColor & 16711680) >>> 16;
			srcRGB.g = (srcColor & 65280) >>> 8;
			srcRGB.b = srcColor & 255;
			avg = Math.floor((srcRGB.r + srcRGB.g + srcRGB.b) / 3);
			resColor = srcRGB.a;
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(srcRGB.r + Math.floor(amount * (srcRGB.r - avg)));
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(srcRGB.g + Math.floor(amount * (srcRGB.g - avg)));
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(srcRGB.b + Math.floor(amount * (srcRGB.b - avg)));
			res.setPixel32(col,row,resColor);
		}
	}
	return res;
};
co_doubleduck_utils_BmpMagic.grayscale = function(source) {
	var res = new openfl_display_BitmapData(source.width,source.height,source.transparent,0);
	var srcColor;
	var srcRGB = { };
	var resColor;
	var avg;
	var _g1 = 0;
	var _g = source.height;
	while(_g1 < _g) {
		var row = _g1++;
		var _g3 = 0;
		var _g2 = source.width;
		while(_g3 < _g2) {
			var col = _g3++;
			srcColor = source.getPixel32(col,row);
			srcRGB.a = srcColor >>> 24;
			if(co_doubleduck_utils_BmpMagic.disableAlphas() && srcRGB.a != 255) continue;
			srcRGB.r = (srcColor & 16711680) >>> 16;
			srcRGB.g = (srcColor & 65280) >>> 8;
			srcRGB.b = srcColor & 255;
			avg = Math.floor(0.21 * srcRGB.r + 0.72 * srcRGB.g + 0.07 * srcRGB.b);
			resColor = srcRGB.a;
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(avg);
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(avg);
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(avg);
			res.setPixel32(col,row,resColor);
		}
	}
	return res;
};
co_doubleduck_utils_BmpMagic.invert = function(source) {
	var res = new openfl_display_BitmapData(source.width,source.height,source.transparent,0);
	var srcColor;
	var resColor;
	var _g1 = 0;
	var _g = source.height;
	while(_g1 < _g) {
		var row = _g1++;
		var _g3 = 0;
		var _g2 = source.width;
		while(_g3 < _g2) {
			var col = _g3++;
			srcColor = source.getPixel32(col,row);
			resColor = srcColor & -16777216;
			if(co_doubleduck_utils_BmpMagic.disableAlphas() && resColor != -16777216) continue;
			resColor += 16777215 - (srcColor & 16777215);
			res.setPixel32(col,row,resColor);
		}
	}
	return res;
};
co_doubleduck_utils_BmpMagic.silhouette = function(source,color) {
	if(color == null) color = 0;
	var res = new openfl_display_BitmapData(source.width,source.height,source.transparent,0);
	var resColor;
	var _g1 = 0;
	var _g = source.height;
	while(_g1 < _g) {
		var row = _g1++;
		var _g3 = 0;
		var _g2 = source.width;
		while(_g3 < _g2) {
			var col = _g3++;
			resColor = source.getPixel32(col,row) & -16777216;
			if(co_doubleduck_utils_BmpMagic.disableAlphas() && resColor != -16777216) continue;
			resColor += color;
			res.setPixel32(col,row,resColor);
		}
	}
	return res;
};
co_doubleduck_utils_BmpMagic.tuneChannels = function(source,rgb) {
	if(rgb == null || rgb.length != 3) return source;
	var res = new openfl_display_BitmapData(source.width,source.height,source.transparent,0);
	var srcColor;
	var srcRGB = { };
	var resColor;
	var _g1 = 0;
	var _g = source.height;
	while(_g1 < _g) {
		var row = _g1++;
		var _g3 = 0;
		var _g2 = source.width;
		while(_g3 < _g2) {
			var col = _g3++;
			srcColor = source.getPixel32(col,row);
			srcRGB.r = (srcColor & 16711680) >>> 16;
			srcRGB.g = (srcColor & 65280) >>> 8;
			srcRGB.b = srcColor & 255;
			resColor = srcColor >>> 24;
			if(co_doubleduck_utils_BmpMagic.disableAlphas() && resColor != 255) continue;
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(rgb[0] <= 0?srcRGB.r * (rgb[0] + 1):srcRGB.r * (1 - rgb[0]) + 255 * rgb[0]);
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(rgb[1] <= 0?srcRGB.g * (rgb[1] + 1):srcRGB.g * (1 - rgb[1]) + 255 * rgb[1]);
			resColor = resColor << 8;
			resColor += co_doubleduck_utils_BmpMagic.lim256(rgb[2] <= 0?srcRGB.b * (rgb[2] + 1):srcRGB.b * (1 - rgb[2]) + 255 * rgb[2]);
			res.setPixel32(col,row,resColor);
		}
	}
	return res;
};
co_doubleduck_utils_BmpMagic.getAvgColor = function(source) {
	var srcColor;
	var alpha;
	var total = 0;
	var avgRed = 0;
	var avgGreen = 0;
	var avgBlue = 0;
	var _g1 = 0;
	var _g = source.height;
	while(_g1 < _g) {
		var row = _g1++;
		var _g3 = 0;
		var _g2 = source.width;
		while(_g3 < _g2) {
			var col = _g3++;
			srcColor = source.getPixel32(col,row);
			alpha = srcColor >>> 24;
			alpha = alpha / 255;
			avgRed += ((srcColor & 16711680) >>> 16) * alpha;
			avgGreen += ((srcColor & 65280) >>> 8) * alpha;
			avgBlue += (srcColor & 255) * alpha;
			total += alpha;
		}
	}
	avgRed /= total;
	avgGreen /= total;
	avgBlue /= total;
	return 0;
};
co_doubleduck_utils_BmpMagic.lim256 = function(val) {
	val = val | 0;
	return (val < 0?0:val > 255?255:val) | 0;
};
co_doubleduck_utils_BmpMagic.disableAlphas = function() {
	if(co_doubleduck_utils_BmpMagic.alphasDisabled == null || co_doubleduck_utils_BmpMagic.alphasDisabled == "") {
		var isChrome = /Chrome/.test(navigator.userAgent);
		var isAndroid = /Android/.test(navigator.userAgent);
		if(isAndroid && !isChrome) co_doubleduck_utils_BmpMagic.alphasDisabled = "true";
		if(co_doubleduck_utils_BmpMagic.alphasDisabled != "true") co_doubleduck_utils_BmpMagic.alphasDisabled = "false";
	}
	return co_doubleduck_utils_BmpMagic.alphasDisabled == "true";
};
var co_doubleduck_utils_ButtonPushMode = $hxClasses["co.doubleduck.utils.ButtonPushMode"] = { __ename__ : ["co","doubleduck","utils","ButtonPushMode"], __constructs__ : ["TINT_ONLY","SCALE_ONLY","TINT_SCALE","JUICY_JIGGLE","NONE"] };
co_doubleduck_utils_ButtonPushMode.TINT_ONLY = ["TINT_ONLY",0];
co_doubleduck_utils_ButtonPushMode.TINT_ONLY.toString = $estr;
co_doubleduck_utils_ButtonPushMode.TINT_ONLY.__enum__ = co_doubleduck_utils_ButtonPushMode;
co_doubleduck_utils_ButtonPushMode.SCALE_ONLY = ["SCALE_ONLY",1];
co_doubleduck_utils_ButtonPushMode.SCALE_ONLY.toString = $estr;
co_doubleduck_utils_ButtonPushMode.SCALE_ONLY.__enum__ = co_doubleduck_utils_ButtonPushMode;
co_doubleduck_utils_ButtonPushMode.TINT_SCALE = ["TINT_SCALE",2];
co_doubleduck_utils_ButtonPushMode.TINT_SCALE.toString = $estr;
co_doubleduck_utils_ButtonPushMode.TINT_SCALE.__enum__ = co_doubleduck_utils_ButtonPushMode;
co_doubleduck_utils_ButtonPushMode.JUICY_JIGGLE = ["JUICY_JIGGLE",3];
co_doubleduck_utils_ButtonPushMode.JUICY_JIGGLE.toString = $estr;
co_doubleduck_utils_ButtonPushMode.JUICY_JIGGLE.__enum__ = co_doubleduck_utils_ButtonPushMode;
co_doubleduck_utils_ButtonPushMode.NONE = ["NONE",4];
co_doubleduck_utils_ButtonPushMode.NONE.toString = $estr;
co_doubleduck_utils_ButtonPushMode.NONE.__enum__ = co_doubleduck_utils_ButtonPushMode;
co_doubleduck_utils_ButtonPushMode.__empty_constructs__ = [co_doubleduck_utils_ButtonPushMode.TINT_ONLY,co_doubleduck_utils_ButtonPushMode.SCALE_ONLY,co_doubleduck_utils_ButtonPushMode.TINT_SCALE,co_doubleduck_utils_ButtonPushMode.JUICY_JIGGLE,co_doubleduck_utils_ButtonPushMode.NONE];
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) this.setReserved(key,value); else this.h[key] = value;
	}
	,get: function(key) {
		if(__map_reserved[key] != null) return this.getReserved(key);
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) return this.existsReserved(key);
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) this.rh = { };
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) return null; else return this.rh["$" + key];
	}
	,existsReserved: function(key) {
		if(this.rh == null) return false;
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) return false;
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) return false;
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		var _this = this.arrayKeys();
		return HxOverrides.iter(_this);
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) out.push(key);
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) out.push(key.substr(1));
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,toString: function() {
		var s = new StringBuf();
		s.b += "{";
		var keys = this.arrayKeys();
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var k = keys[i];
			if(k == null) s.b += "null"; else s.b += "" + k;
			s.b += " => ";
			s.add(Std.string(__map_reserved[k] != null?this.getReserved(k):this.h[k]));
			if(i < keys.length) s.b += ", ";
		}
		s.b += "}";
		return s.b;
	}
	,__class__: haxe_ds_StringMap
};
var co_doubleduck_utils_DDAssets = function() { };
$hxClasses["co.doubleduck.utils.DDAssets"] = co_doubleduck_utils_DDAssets;
co_doubleduck_utils_DDAssets.__name__ = ["co","doubleduck","utils","DDAssets"];
co_doubleduck_utils_DDAssets.activeLocale = null;
co_doubleduck_utils_DDAssets.availLocales = null;
co_doubleduck_utils_DDAssets.getRawImage = function(path,cache) {
	if(cache == null) cache = true;
	path = co_doubleduck_utils_DDAssets.prefix + co_doubleduck_utils_DDAssets.getLocalisedPath(path);
	var result = co_doubleduck_utils_DDAssets._cache.get(path);
	if(result == null) {
		result = openfl_Assets.getBitmapData(path,false);
		if(cache) co_doubleduck_utils_DDAssets._cache.set(path,result);
	}
	return result;
};
co_doubleduck_utils_DDAssets.getCenteredImage = function(path,cache) {
	if(cache == null) cache = true;
	var bmp = co_doubleduck_utils_DDAssets.getImage(path,cache);
	var _g = bmp;
	_g.set_x(_g.get_x() - bmp.get_width() / 2);
	var _g1 = bmp;
	_g1.set_y(_g1.get_y() - bmp.get_height() / 2);
	var spr = new openfl_display_Sprite();
	spr.addChild(bmp);
	return spr;
};
co_doubleduck_utils_DDAssets.getImage = function(path,cache) {
	if(cache == null) cache = true;
	var bmp = new openfl_display_Bitmap(co_doubleduck_utils_DDAssets.getRawImage(path,cache));
	bmp.smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
	return bmp;
};
co_doubleduck_utils_DDAssets.getSpritesheet = function(path,columns,rows,tileWidth,tileHeight,behaviours,cache) {
	if(cache == null) cache = true;
	if(tileHeight == null) tileHeight = 0;
	if(tileWidth == null) tileWidth = 0;
	if(rows == null) rows = 0;
	if(columns == null) columns = 0;
	path = co_doubleduck_utils_DDAssets.prefix + co_doubleduck_utils_DDAssets.getLocalisedPath(path);
	var result = co_doubleduck_utils_DDAssets._spritesheetCache.get(path);
	if(result == null) {
		var bmpData = openfl_Assets.getBitmapData(path,false);
		if(tileWidth == -1) tileWidth = Math.floor(bmpData.width / columns);
		if(tileHeight == -1) tileHeight = Math.floor(bmpData.height / rows);
		result = spritesheet_importers_BitmapImporter.create(bmpData,columns,rows,tileWidth,tileHeight);
		var _g = 0;
		while(_g < behaviours.length) {
			var behaviour = behaviours[_g];
			++_g;
			result.addBehavior(behaviour);
		}
		if(cache) co_doubleduck_utils_DDAssets._spritesheetCache.set(path,result);
	}
	return result;
};
co_doubleduck_utils_DDAssets.getLocalisedPath = function(path) {
	if(!co_doubleduck_utils_DDAssets.localisedPaths.exists(path)) {
		var fileParts = path.split(".");
		var fileName = fileParts[0];
		var fileExt = fileParts[1];
		var localisedVersion = fileName + "-" + co_doubleduck_utils_DDAssets.activeLocale + "." + fileExt;
		if(openfl_Assets.exists(localisedVersion,"IMAGE")) co_doubleduck_utils_DDAssets.localisedPaths.set(path,localisedVersion); else co_doubleduck_utils_DDAssets.localisedPaths.set(path,path);
	}
	return co_doubleduck_utils_DDAssets.localisedPaths.get(path);
};
co_doubleduck_utils_DDAssets.setRawImage = function(path,data) {
	co_doubleduck_utils_DDAssets._cache.set(path,data);
};
co_doubleduck_utils_DDAssets.loadBitmapData = function(path) {
	path = co_doubleduck_utils_DDAssets.prefix + co_doubleduck_utils_DDAssets.getLocalisedPath(path);
	return openfl_Assets.loadBitmapData(path,false);
};
var co_doubleduck_utils_DDEase = function() { };
$hxClasses["co.doubleduck.utils.DDEase"] = co_doubleduck_utils_DDEase;
co_doubleduck_utils_DDEase.__name__ = ["co","doubleduck","utils","DDEase"];
co_doubleduck_utils_DDEase.__properties__ = {get_overshootOut:"get_overshootOut",get_overshootIn:"get_overshootIn"}
co_doubleduck_utils_DDEase.get_overshootIn = function() {
	return new co_doubleduck_utils_OvershootEaseIn();
};
co_doubleduck_utils_DDEase.get_overshootInOut = function() {
	return new co_doubleduck_utils_OvershootEaseInOut();
};
co_doubleduck_utils_DDEase.get_overshootOut = function() {
	return new co_doubleduck_utils_OvershootEaseOut();
};
var motion_easing_IEasing = function() { };
$hxClasses["motion.easing.IEasing"] = motion_easing_IEasing;
motion_easing_IEasing.__name__ = ["motion","easing","IEasing"];
motion_easing_IEasing.prototype = {
	__class__: motion_easing_IEasing
};
var co_doubleduck_utils_OvershootEaseIn = function() {
};
$hxClasses["co.doubleduck.utils.OvershootEaseIn"] = co_doubleduck_utils_OvershootEaseIn;
co_doubleduck_utils_OvershootEaseIn.__name__ = ["co","doubleduck","utils","OvershootEaseIn"];
co_doubleduck_utils_OvershootEaseIn.__interfaces__ = [motion_easing_IEasing];
co_doubleduck_utils_OvershootEaseIn.prototype = {
	calculate: function(k) {
		var t = k;
		if(t <= 0) return 0; else if(t >= 1) return 1;
		return 1.4 * t * t - 0.4 * t;
	}
	,ease: function(t,b,c,d) {
		if(t <= 0) return 0; else if(t >= 1) return 1;
		return 1.4 * t * t - 0.4 * t;
	}
	,__class__: co_doubleduck_utils_OvershootEaseIn
};
var co_doubleduck_utils_OvershootEaseInOut = function() {
};
$hxClasses["co.doubleduck.utils.OvershootEaseInOut"] = co_doubleduck_utils_OvershootEaseInOut;
co_doubleduck_utils_OvershootEaseInOut.__name__ = ["co","doubleduck","utils","OvershootEaseInOut"];
co_doubleduck_utils_OvershootEaseInOut.__interfaces__ = [motion_easing_IEasing];
co_doubleduck_utils_OvershootEaseInOut.prototype = {
	calculate: function(k) {
		return -(Math.cos(Math.PI * k) - 1) / 2;
	}
	,ease: function(t,b,c,d) {
		return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
	}
	,__class__: co_doubleduck_utils_OvershootEaseInOut
};
var co_doubleduck_utils_OvershootEaseOut = function() {
};
$hxClasses["co.doubleduck.utils.OvershootEaseOut"] = co_doubleduck_utils_OvershootEaseOut;
co_doubleduck_utils_OvershootEaseOut.__name__ = ["co","doubleduck","utils","OvershootEaseOut"];
co_doubleduck_utils_OvershootEaseOut.__interfaces__ = [motion_easing_IEasing];
co_doubleduck_utils_OvershootEaseOut.prototype = {
	calculate: function(k) {
		var t = k;
		if(t <= 0) return 0; else if(t >= 1) return 1;
		return -(1.4 * t * t - 2.4 * t);
	}
	,ease: function(t,b,c,d) {
		if(t <= 0) return 0; else if(t >= 1) return 1;
		return -(1.4 * t * t - 2.4 * t);
	}
	,__class__: co_doubleduck_utils_OvershootEaseOut
};
var co_doubleduck_utils_Delayer = function(dur) {
	this._leftDur = this._totalDur = dur;
	this._isRunning = false;
};
$hxClasses["co.doubleduck.utils.Delayer"] = co_doubleduck_utils_Delayer;
co_doubleduck_utils_Delayer.__name__ = ["co","doubleduck","utils","Delayer"];
co_doubleduck_utils_Delayer.prototype = {
	start: function() {
		this._isRunning = true;
		co_doubleduck_utils_TweenChain.get(this).tto({ _leftDur : 0},this._leftDur).call($bind(this,this.act)).call($bind(this,this.restart));
	}
	,pause: function() {
		this._isRunning = false;
		co_doubleduck_utils_TweenChain.removeTweens(this);
	}
	,stop: function() {
		this._isRunning = false;
		co_doubleduck_utils_TweenChain.removeTweens(this);
		this._leftDur = this._totalDur;
	}
	,restart: function() {
		this.stop();
		this.start();
	}
	,isRunning: function() {
		return this._isRunning;
	}
	,setDuration: function(dur) {
		if(this._isRunning) co_doubleduck_utils_TweenChain.removeTweens(this);
		var ratio = this._leftDur / this._totalDur;
		this._totalDur = dur;
		this._leftDur = Math.floor(dur * ratio);
		if(this._isRunning) this.start();
	}
	,act: function() {
		if(this.handler != null) this.handler();
	}
	,__class__: co_doubleduck_utils_Delayer
};
var openfl_events_Event = function(type,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.type = type;
	this.bubbles = bubbles;
	this.cancelable = cancelable;
	this.eventPhase = openfl_events_EventPhase.AT_TARGET;
};
$hxClasses["openfl.events.Event"] = openfl_events_Event;
openfl_events_Event.__name__ = ["openfl","events","Event"];
openfl_events_Event.prototype = {
	clone: function() {
		var event = new openfl_events_Event(this.type,this.bubbles,this.cancelable);
		event.eventPhase = this.eventPhase;
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		return event;
	}
	,formatToString: function(className,p1,p2,p3,p4,p5) {
		var parameters = [];
		if(p1 != null) parameters.push(p1);
		if(p2 != null) parameters.push(p2);
		if(p3 != null) parameters.push(p3);
		if(p4 != null) parameters.push(p4);
		if(p5 != null) parameters.push(p5);
		return $bind(this,this.__formatToString).apply(this,[className,parameters]);
	}
	,isDefaultPrevented: function() {
		return this.__preventDefault;
	}
	,preventDefault: function() {
		if(this.cancelable) this.__preventDefault = true;
	}
	,stopImmediatePropagation: function() {
		this.__isCanceled = true;
		this.__isCanceledNow = true;
	}
	,stopPropagation: function() {
		this.__isCanceled = true;
	}
	,toString: function() {
		return this.__formatToString("Event",["type","bubbles","cancelable"]);
	}
	,__formatToString: function(className,parameters) {
		var output = "[" + className;
		var arg = null;
		var _g = 0;
		while(_g < parameters.length) {
			var param = parameters[_g];
			++_g;
			arg = Reflect.field(this,param);
			if(typeof(arg) == "string") output += " " + param + "=\"" + Std.string(arg) + "\""; else output += " " + param + "=" + Std.string(arg);
		}
		output += "]";
		return output;
	}
	,__class__: openfl_events_Event
};
var co_doubleduck_utils_DynamicEvent = function(name,data) {
	openfl_events_Event.call(this,name);
	this.data = data;
};
$hxClasses["co.doubleduck.utils.DynamicEvent"] = co_doubleduck_utils_DynamicEvent;
co_doubleduck_utils_DynamicEvent.__name__ = ["co","doubleduck","utils","DynamicEvent"];
co_doubleduck_utils_DynamicEvent.__super__ = openfl_events_Event;
co_doubleduck_utils_DynamicEvent.prototype = $extend(openfl_events_Event.prototype,{
	__class__: co_doubleduck_utils_DynamicEvent
});
var co_doubleduck_utils_Fonter = function() {
	throw new js__$Boot_HaxeError("DDError: The static class 'Fonter' should not be instantiated.");
};
$hxClasses["co.doubleduck.utils.Fonter"] = co_doubleduck_utils_Fonter;
co_doubleduck_utils_Fonter.__name__ = ["co","doubleduck","utils","Fonter"];
co_doubleduck_utils_Fonter._kernCache = null;
co_doubleduck_utils_Fonter.zeroPad = function(num,length) {
	var str = num + "";
	while(str.length < length) str = "0" + str;
	return str;
};
co_doubleduck_utils_Fonter.commafyNum = function(num) {
	var numStr = "" + num;
	var numSuffix = "";
	if(num - Math.floor(num) != 0) {
		var splitted = numStr.split(".");
		numSuffix = "." + splitted[1];
		numStr = splitted[0];
	}
	var numRes = "";
	while(numStr.length > 0) if(numStr.length > 3) {
		numRes = "," + HxOverrides.substr(numStr,numStr.length - 3,3) + numRes;
		numStr = numStr.substring(0,numStr.length - 3);
	} else {
		numRes = numStr + numRes;
		numStr = "";
	}
	return numRes + numSuffix;
};
co_doubleduck_utils_Fonter.getStyledString = function(str,fonts) {
	var marker = "|";
	if(str.indexOf(marker) == -1) return co_doubleduck_utils_Fonter.getString(str,fonts[0]);
	str = HxOverrides.substr(str,1,null);
	var parts = str.split("|");
	var totalSpr = new openfl_display_Sprite();
	var posx = 0;
	var _g = 0;
	while(_g < parts.length) {
		var part = parts[_g];
		++_g;
		var fontInd = Std.parseInt(HxOverrides.substr(part,0,1));
		var partSpr = co_doubleduck_utils_Fonter.getString(HxOverrides.substr(part,1,null),fonts[fontInd]);
		var hWidth1 = partSpr.get_width() / 2;
		while(partSpr.get_numChildren() > 0) {
			var charBmp = partSpr.getChildAt(0);
			partSpr.removeChildAt(0);
			var _g1 = charBmp;
			_g1.set_x(_g1.get_x() + (posx + hWidth1));
			totalSpr.addChild(charBmp);
		}
		posx += hWidth1 * 2;
	}
	var lastChar = totalSpr.getChildAt(totalSpr.get_numChildren() - 1);
	var hWidth = (lastChar.get_x() + lastChar.get_width()) / 2;
	var _g11 = 0;
	var _g2 = totalSpr.get_numChildren();
	while(_g11 < _g2) {
		var i = _g11++;
		var _g21 = totalSpr.getChildAt(i);
		_g21.set_x(_g21.get_x() - hWidth);
	}
	return totalSpr;
};
co_doubleduck_utils_Fonter.getMultilineString = function(str,bmpFont,delim,lineHeight,alignLeft) {
	if(alignLeft == null) alignLeft = false;
	if(lineHeight == null) lineHeight = 1.2;
	if(delim == null) delim = "|";
	var lines = str.split(delim);
	var mlText = new openfl_display_Sprite();
	var hLineHeight = 0;
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		var lineImg = co_doubleduck_utils_Fonter.getString(line,bmpFont);
		if(mlText.get_numChildren() > 0) {
			var prevLine = mlText.getChildAt(mlText.get_numChildren() - 1);
			lineImg.set_y(prevLine.get_y() + prevLine.get_height() * lineHeight);
		} else hLineHeight = lineImg.get_height() / 2;
		mlText.addChild(lineImg);
	}
	var hHeight = mlText.get_height() / 2;
	var finalText = new openfl_display_Sprite();
	var _g1 = 0;
	var _g2 = mlText.get_numChildren();
	while(_g1 < _g2) {
		var i = _g1++;
		var lineImg1 = mlText.getChildAt(i);
		var _g21 = lineImg1;
		_g21.set_y(_g21.get_y() - (hHeight - hLineHeight));
		var lineHWidth = lineImg1.get_width() / 2;
		while(lineImg1.get_numChildren() > 0) {
			var letter = lineImg1.getChildAt(0);
			lineImg1.removeChild(letter);
			if(alignLeft) {
				var _g22 = letter;
				_g22.set_x(_g22.get_x() + lineHWidth);
			}
			var _g23 = letter;
			_g23.set_x(_g23.get_x() + lineImg1.get_x());
			var _g24 = letter;
			_g24.set_y(_g24.get_y() + lineImg1.get_y());
			finalText.addChild(letter);
		}
	}
	return finalText;
};
co_doubleduck_utils_Fonter.getString = function(str,bmpFont) {
	if(bmpFont == null) {
		if(co_doubleduck_utils_Fonter._defaultFont == null) throw new js__$Boot_HaxeError("DDError: Fonter.getString() called with no default font and no specific font.");
		bmpFont = co_doubleduck_utils_Fonter._defaultFont;
	}
	if(bmpFont.charAt(bmpFont.length - 1) != "/") bmpFont += "/";
	var kernDat = co_doubleduck_utils_Fonter.getFontKernData(bmpFont);
	var strBox = new openfl_display_Sprite();
	var _g1 = 0;
	var _g = str.length;
	while(_g1 < _g) {
		var i = _g1++;
		var chr = str.charAt(i);
		var chrBmp = co_doubleduck_utils_Fonter.getChar(chr,bmpFont);
		chrBmp.set_x(0);
		if(strBox.get_numChildren() > 0) {
			var prevChar = strBox.getChildAt(strBox.get_numChildren() - 1);
			chrBmp.set_x(prevChar.get_x() + prevChar.get_width() + co_doubleduck_utils_Fonter.kernFor(str.charAt(i - 1),chr,kernDat) * co_doubleduck_utils_DDAssets.scale);
		}
		strBox.addChild(chrBmp);
	}
	var lastChar = strBox.getChildAt(strBox.get_numChildren() - 1);
	var hWidth = (lastChar.get_x() + lastChar.get_width()) / 2;
	var _g11 = 0;
	var _g2 = strBox.get_numChildren();
	while(_g11 < _g2) {
		var i1 = _g11++;
		var _g21 = strBox.getChildAt(i1);
		_g21.set_x(_g21.get_x() - hWidth);
	}
	return strBox;
};
co_doubleduck_utils_Fonter.getChar = function(chr,bmpFont) {
	var code = co_doubleduck_utils_Fonter.UTF8Code(chr);
	if(bmpFont == null) {
		if(co_doubleduck_utils_Fonter._defaultFont == null) throw new js__$Boot_HaxeError("DDError: Fonter.getChar() - requested sprite with no default font and no specific font.");
		bmpFont = co_doubleduck_utils_Fonter._defaultFont;
	}
	if(bmpFont.charAt(bmpFont.length - 1) != "/") bmpFont += "/";
	var fontMap = co_doubleduck_utils_Fonter.getFontMap(bmpFont);
	if(!fontMap.h.hasOwnProperty(code)) {
		var bmpData = co_doubleduck_utils_DDAssets.getRawImage(bmpFont + "c" + code + ".png",false);
		if(bmpData == null) {
			if(co_doubleduck_utils_Fonter._noCharBmp == null) {
				var nochar = new openfl_display_Sprite();
				nochar.get_graphics().beginFill(13684944);
				nochar.get_graphics().lineStyle(2,2105376);
				nochar.get_graphics().drawRect(0,0,7,12);
				nochar.get_graphics().endFill();
				nochar.get_graphics().lineStyle(1,2105376);
				nochar.get_graphics().moveTo(0,0);
				nochar.get_graphics().lineTo(7,12);
				nochar.get_graphics().moveTo(7,0);
				nochar.get_graphics().lineTo(0,12);
				co_doubleduck_utils_Fonter._noCharBmp = co_doubleduck_utils_BmpMagic.flatten(nochar,new openfl_geom_Rectangle(0,0,7,12));
			}
			bmpData = co_doubleduck_utils_Fonter._noCharBmp;
		}
		{
			fontMap.h[code] = bmpData;
			bmpData;
		}
	}
	var smoothing = co_doubleduck_utils_DDAssets.globalSmoothing;
	var chrBmp = new openfl_display_Bitmap(fontMap.h[code],openfl_display_PixelSnapping.AUTO,smoothing);
	var _g = chrBmp;
	_g.set_x(_g.get_x() - chrBmp.get_width() / 2);
	var _g1 = chrBmp;
	_g1.set_y(_g1.get_y() - chrBmp.get_height() / 2);
	return chrBmp;
};
co_doubleduck_utils_Fonter.getFontMap = function(fontUri) {
	if(co_doubleduck_utils_Fonter._fontCache == null) co_doubleduck_utils_Fonter._fontCache = new haxe_ds_StringMap();
	if(!co_doubleduck_utils_Fonter._fontCache.exists(fontUri)) {
		var v = new haxe_ds_IntMap();
		co_doubleduck_utils_Fonter._fontCache.set(fontUri,v);
		v;
	}
	return co_doubleduck_utils_Fonter._fontCache.get(fontUri);
};
co_doubleduck_utils_Fonter.kernFor = function(prev,curr,data) {
	var anyTo;
	anyTo = __map_reserved.any != null?data.getReserved("any"):data.h["any"];
	if(__map_reserved[prev] != null?data.existsReserved(prev):data.h.hasOwnProperty(prev)) {
		var prevTo;
		prevTo = __map_reserved[prev] != null?data.getReserved(prev):data.h[prev];
		if(__map_reserved[curr] != null?prevTo.existsReserved(curr):prevTo.h.hasOwnProperty(curr)) return __map_reserved[curr] != null?prevTo.getReserved(curr):prevTo.h[curr];
		if(__map_reserved[curr] != null?anyTo.existsReserved(curr):anyTo.h.hasOwnProperty(curr)) {
			var avg;
			avg = (__map_reserved.any != null?prevTo.getReserved("any"):prevTo.h["any"]) + (__map_reserved[curr] != null?anyTo.getReserved(curr):anyTo.h[curr]);
			avg = avg / 2;
			return avg;
		}
		return __map_reserved.any != null?prevTo.getReserved("any"):prevTo.h["any"];
	}
	if(__map_reserved[curr] != null?anyTo.existsReserved(curr):anyTo.h.hasOwnProperty(curr)) return __map_reserved[curr] != null?anyTo.getReserved(curr):anyTo.h[curr];
	return __map_reserved.any != null?anyTo.getReserved("any"):anyTo.h["any"];
};
co_doubleduck_utils_Fonter.getFontKernData = function(fontUri) {
	if(co_doubleduck_utils_Fonter._kernCache == null) co_doubleduck_utils_Fonter._kernCache = new haxe_ds_StringMap();
	var data;
	if(co_doubleduck_utils_Fonter._kernCache.exists(fontUri)) data = co_doubleduck_utils_Fonter._kernCache.get(fontUri); else {
		data = new haxe_ds_StringMap();
		var rawData = null;
		try {
			var strData = openfl_Assets.getText(co_doubleduck_utils_DDAssets.prefix + fontUri + "kern.txt");
			if(strData != null) rawData = JSON.parse(strData);
		} catch( err ) {
			haxe_CallStack.lastException = err;
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			rawData = null;
		}
		if(rawData != null) {
			var froms = Reflect.fields(rawData);
			var _g = 0;
			while(_g < froms.length) {
				var fromMe = froms[_g];
				++_g;
				if(!(__map_reserved[fromMe] != null?data.existsReserved(fromMe):data.h.hasOwnProperty(fromMe))) {
					var value = new haxe_ds_StringMap();
					if(__map_reserved[fromMe] != null) data.setReserved(fromMe,value); else data.h[fromMe] = value;
				}
				var fromDat = Reflect.field(rawData,fromMe);
				var tos = Reflect.fields(fromDat);
				var _g1 = 0;
				while(_g1 < tos.length) {
					var toMe = tos[_g1];
					++_g1;
					var kern = Reflect.field(fromDat,toMe);
					var this1;
					this1 = __map_reserved[fromMe] != null?data.getReserved(fromMe):data.h[fromMe];
					this1.set(toMe,kern);
				}
			}
		} else {
			var value1 = new haxe_ds_StringMap();
			if(__map_reserved.any != null) data.setReserved("any",value1); else data.h["any"] = value1;
			var this2;
			this2 = __map_reserved.any != null?data.getReserved("any"):data.h["any"];
			this2.set("any",0);
		}
		{
			co_doubleduck_utils_Fonter._kernCache.set(fontUri,data);
			data;
		}
	}
	return data;
};
co_doubleduck_utils_Fonter.UTF8Code = function(chr) {
	if(chr.length != 1) throw new js__$Boot_HaxeError("DDError: Fonter.UTF8Code() - Got param '" + chr + "' and it's not a single character.");
	var pos = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~".indexOf(chr);
	if(pos == -1) throw new js__$Boot_HaxeError("DDError: Fonter.UTF8Code() - Got param '" + chr + "' and it's in the charset.");
	return pos + 32;
};
co_doubleduck_utils_Fonter.prototype = {
	__class__: co_doubleduck_utils_Fonter
};
var co_doubleduck_utils_KiziExtension = function(target) {
	openfl_events_EventDispatcher.call(this,target);
};
$hxClasses["co.doubleduck.utils.KiziExtension"] = co_doubleduck_utils_KiziExtension;
co_doubleduck_utils_KiziExtension.__name__ = ["co","doubleduck","utils","KiziExtension"];
co_doubleduck_utils_KiziExtension.dispatcher = null;
co_doubleduck_utils_KiziExtension.addListenerFunc = null;
co_doubleduck_utils_KiziExtension.showSplashFunc = null;
co_doubleduck_utils_KiziExtension.hideSplashFunc = null;
co_doubleduck_utils_KiziExtension.showBackFunc = null;
co_doubleduck_utils_KiziExtension.showRateFunc = null;
co_doubleduck_utils_KiziExtension.hideSplash = function(onEnd) {
	if(onEnd != null) onEnd();
};
co_doubleduck_utils_KiziExtension.showSplash = function(timeout) {
	if(timeout == null) timeout = 10000;
};
co_doubleduck_utils_KiziExtension.setupListener = function() {
	if(co_doubleduck_utils_KiziExtension.dispatcher != null) return;
	co_doubleduck_utils_KiziExtension.dispatcher = new co_doubleduck_utils_KiziExtListener();
};
co_doubleduck_utils_KiziExtension.getListener = function() {
	if(co_doubleduck_utils_KiziExtension.dispatcher == null) co_doubleduck_utils_KiziExtension.setupListener();
	return co_doubleduck_utils_KiziExtension.dispatcher;
};
co_doubleduck_utils_KiziExtension.initBackDialog = function() {
};
co_doubleduck_utils_KiziExtension.handleBackClicked = function() {
	if(co_doubleduck_utils_KiziExtension.backEnabled) {
	}
};
co_doubleduck_utils_KiziExtension.showRateDialog = function() {
};
co_doubleduck_utils_KiziExtension.__super__ = openfl_events_EventDispatcher;
co_doubleduck_utils_KiziExtension.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: co_doubleduck_utils_KiziExtension
});
var co_doubleduck_utils_KiziExtListener = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["co.doubleduck.utils.KiziExtListener"] = co_doubleduck_utils_KiziExtListener;
co_doubleduck_utils_KiziExtListener.__name__ = ["co","doubleduck","utils","KiziExtListener"];
co_doubleduck_utils_KiziExtListener.__super__ = openfl_events_EventDispatcher;
co_doubleduck_utils_KiziExtListener.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	onEvent: function(event,data) {
		this.dispatchEvent(new co_doubleduck_utils_DynamicEvent(event,data));
	}
	,__class__: co_doubleduck_utils_KiziExtListener
});
var openfl_display_BitmapData = function(width,height,transparent,fillColor) {
	if(fillColor == null) fillColor = -1;
	if(transparent == null) transparent = true;
	this.__usingPingPongTexture = false;
	this.transparent = transparent;
	if(width == null) width = 0; else width = width;
	if(height == null) height = 0; else height = height;
	if(width < 0) width = 0; else width = width;
	if(height < 0) height = 0; else height = height;
	this.width = width;
	this.height = height;
	this.rect = new openfl_geom_Rectangle(0,0,width,height);
	if(width > 0 && height > 0) {
		if(transparent) {
			if((fillColor & -16777216) == 0) fillColor = 0;
		} else fillColor = -16777216 | fillColor & 16777215;
		fillColor = fillColor << 8 | fillColor >> 24 & 255;
		this.image = new lime_graphics_Image(null,0,0,width,height,fillColor);
		this.image.set_transparent(transparent);
		this.__isValid = true;
	}
	this.__createUVs();
	this.__worldTransform = new openfl_geom_Matrix();
	this.__worldColorTransform = new openfl_geom_ColorTransform();
};
$hxClasses["openfl.display.BitmapData"] = openfl_display_BitmapData;
openfl_display_BitmapData.__name__ = ["openfl","display","BitmapData"];
openfl_display_BitmapData.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_BitmapData.fromBase64 = function(base64,type,onload) {
	var bitmapData = new openfl_display_BitmapData(0,0,true);
	bitmapData.__fromBase64(base64,type,onload);
	return bitmapData;
};
openfl_display_BitmapData.fromBytes = function(bytes,rawAlpha,onload) {
	var bitmapData = new openfl_display_BitmapData(0,0,true);
	bitmapData.__fromBytes(bytes,rawAlpha,onload);
	return bitmapData;
};
openfl_display_BitmapData.fromCanvas = function(canvas,transparent) {
	if(transparent == null) transparent = true;
	if(canvas == null) return null;
	var bitmapData = new openfl_display_BitmapData(0,0,transparent);
	bitmapData.__fromImage(lime_graphics_Image.fromCanvas(canvas));
	bitmapData.image.set_transparent(transparent);
	return bitmapData;
};
openfl_display_BitmapData.fromFile = function(path,onload,onerror) {
	var bitmapData = new openfl_display_BitmapData(0,0,true);
	bitmapData.__fromFile(path,onload,onerror);
	return bitmapData;
};
openfl_display_BitmapData.fromImage = function(image,transparent) {
	if(transparent == null) transparent = true;
	if(image == null || image.buffer == null) return null;
	var bitmapData = new openfl_display_BitmapData(0,0,transparent);
	bitmapData.__fromImage(image);
	bitmapData.image.set_transparent(transparent);
	return bitmapData;
};
openfl_display_BitmapData.__asRenderTexture = function(width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	var b = new openfl_display_BitmapData(0,0);
	b.__resize(width,height);
	return b;
};
openfl_display_BitmapData.__ucompare = function(n1,n2) {
	var tmp1;
	var tmp2;
	tmp1 = n1 >> 24 & 255;
	tmp2 = n2 >> 24 & 255;
	if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
		tmp1 = n1 >> 16 & 255;
		tmp2 = n2 >> 16 & 255;
		if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
			tmp1 = n1 >> 8 & 255;
			tmp2 = n2 >> 8 & 255;
			if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
				tmp1 = n1 & 255;
				tmp2 = n2 & 255;
				if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else return 0;
			}
		}
	}
};
openfl_display_BitmapData.prototype = {
	applyFilter: function(sourceBitmapData,sourceRect,destPoint,filter) {
		if(!this.__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid) return;
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this.image);
		lime_graphics_utils_ImageCanvasUtil.createImageData(this.image);
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(sourceBitmapData.image);
		lime_graphics_utils_ImageCanvasUtil.createImageData(sourceBitmapData.image);
		filter.__applyFilter(this.image.buffer.__srcImageData,sourceBitmapData.image.buffer.__srcImageData,sourceRect,destPoint);
		this.image.dirty = true;
	}
	,clone: function() {
		if(!this.__isValid) return new openfl_display_BitmapData(this.width,this.height,this.transparent); else return openfl_display_BitmapData.fromImage(this.image.clone(),this.transparent);
	}
	,colorTransform: function(rect,colorTransform) {
		if(!this.__isValid) return;
		this.image.colorTransform(rect.__toLimeRectangle(),colorTransform.__toLimeColorMatrix());
		this.__usingPingPongTexture = false;
	}
	,compare: function(otherBitmapData) {
		if(otherBitmapData == this) return 0; else if(otherBitmapData == null) return -1; else if(this.__isValid == false || otherBitmapData.__isValid == false) return -2; else if(this.width != otherBitmapData.width) return -3; else if(this.height != otherBitmapData.height) return -4;
		if(this.image != null && otherBitmapData.image != null && this.image.get_format() == otherBitmapData.image.get_format()) {
			var bytes = this.image.get_data();
			var otherBytes = otherBitmapData.image.get_data();
			var equal = true;
			var _g1 = 0;
			var _g = bytes.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(bytes[i] != otherBytes[i]) {
					equal = false;
					break;
				}
			}
			if(equal) return 0;
		}
		var bitmapData = null;
		var foundDifference;
		var pixel;
		var otherPixel;
		var comparePixel;
		var r;
		var g;
		var b;
		var a;
		var _g11 = 0;
		var _g2 = this.height;
		while(_g11 < _g2) {
			var y = _g11++;
			var _g3 = 0;
			var _g21 = this.width;
			while(_g3 < _g21) {
				var x = _g3++;
				foundDifference = false;
				pixel = this.getPixel32(x,y);
				otherPixel = otherBitmapData.getPixel32(x,y);
				comparePixel = 0;
				if(pixel != otherPixel) {
					r = (pixel >> 16 & 255) - (otherPixel >> 16 & 255);
					g = (pixel >> 8 & 255) - (otherPixel >> 8 & 255);
					b = (pixel & 255) - (otherPixel & 255);
					if(r < 0) r *= -1;
					if(g < 0) g *= -1;
					if(b < 0) b *= -1;
					if(r == 0 && g == 0 && b == 0) {
						a = (pixel >> 24 & 255) - (otherPixel >> 24 & 255);
						if(a != 0) {
							comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | 16711680 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
							255;
							comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | 65280 | comparePixel & 255 & 255;
							255;
							comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | 255;
							255;
							comparePixel = (a & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
							a;
							foundDifference = true;
						}
					} else {
						comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (r & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
						r;
						comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (g & 255) << 8 | comparePixel & 255 & 255;
						g;
						comparePixel = (comparePixel >> 24 & 255 & 255) << 24 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | b & 255;
						b;
						comparePixel = -16777216 | (comparePixel >> 16 & 255 & 255) << 16 | (comparePixel >> 8 & 255 & 255) << 8 | comparePixel & 255 & 255;
						255;
						foundDifference = true;
					}
				}
				if(foundDifference) {
					if(bitmapData == null) bitmapData = new openfl_display_BitmapData(this.width,this.height,this.transparent || otherBitmapData.transparent,0);
					bitmapData.setPixel32(x,y,comparePixel);
				}
			}
		}
		if(bitmapData == null) return 0;
		return bitmapData;
	}
	,copyChannel: function(sourceBitmapData,sourceRect,destPoint,sourceChannel,destChannel) {
		if(!this.__isValid) return;
		var sourceChannel1;
		switch(sourceChannel) {
		case 1:
			sourceChannel1 = lime_graphics_ImageChannel.RED;
			break;
		case 2:
			sourceChannel1 = lime_graphics_ImageChannel.GREEN;
			break;
		case 4:
			sourceChannel1 = lime_graphics_ImageChannel.BLUE;
			break;
		case 8:
			sourceChannel1 = lime_graphics_ImageChannel.ALPHA;
			break;
		default:
			return;
		}
		var destChannel1;
		switch(destChannel) {
		case 1:
			destChannel1 = lime_graphics_ImageChannel.RED;
			break;
		case 2:
			destChannel1 = lime_graphics_ImageChannel.GREEN;
			break;
		case 4:
			destChannel1 = lime_graphics_ImageChannel.BLUE;
			break;
		case 8:
			destChannel1 = lime_graphics_ImageChannel.ALPHA;
			break;
		default:
			return;
		}
		this.image.copyChannel(sourceBitmapData.image,sourceRect.__toLimeRectangle(),destPoint.__toLimeVector2(),sourceChannel1,destChannel1);
		this.__usingPingPongTexture = false;
	}
	,copyPixels: function(sourceBitmapData,sourceRect,destPoint,alphaBitmapData,alphaPoint,mergeAlpha) {
		if(mergeAlpha == null) mergeAlpha = false;
		if(!this.__isValid || sourceBitmapData == null) return;
		this.image.copyPixels(sourceBitmapData.image,sourceRect.__toLimeRectangle(),destPoint.__toLimeVector2(),alphaBitmapData != null?alphaBitmapData.image:null,alphaPoint != null?alphaPoint.__toLimeVector2():null,mergeAlpha);
		this.__usingPingPongTexture = false;
	}
	,dispose: function() {
		this.image = null;
		this.width = 0;
		this.height = 0;
		this.rect = null;
		this.__isValid = false;
		if(this.__texture != null) {
			var renderer = openfl_Lib.current.stage.__renderer;
			if(renderer != null) {
				var renderSession = renderer.renderSession;
				var gl = renderSession.gl;
				if(gl != null) {
					gl.deleteTexture(this.__texture);
					this.__texture = null;
				}
			}
		}
		if(this.__pingPongTexture != null) {
			this.__pingPongTexture.destroy();
			this.__pingPongTexture = null;
		}
	}
	,draw: function(source,matrix,colorTransform,blendMode,clipRect,smoothing) {
		if(smoothing == null) smoothing = false;
		if(!this.__isValid) return;
		if(colorTransform != null) {
			var copy = new openfl_display_BitmapData(Reflect.getProperty(source,"width"),Reflect.getProperty(source,"height"),true,0);
			copy.draw(source);
			copy.colorTransform(copy.rect,colorTransform);
			source = copy;
		}
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this.image);
		lime_graphics_utils_ImageCanvasUtil.sync(this.image,true);
		var buffer = this.image.buffer;
		var renderSession = new openfl__$internal_renderer_RenderSession();
		renderSession.context = buffer.__srcContext;
		renderSession.roundPixels = true;
		renderSession.maskManager = new openfl__$internal_renderer_canvas_CanvasMaskManager(renderSession);
		if(!smoothing) {
			buffer.__srcContext.mozImageSmoothingEnabled = false;
			buffer.__srcContext.msImageSmoothingEnabled = false;
			buffer.__srcContext.imageSmoothingEnabled = false;
		}
		if(clipRect != null) renderSession.maskManager.pushRect(clipRect,new openfl_geom_Matrix());
		var matrixCache = source.__worldTransform;
		source.__updateTransforms(matrix != null?matrix:new openfl_geom_Matrix());
		source.__updateChildren(false);
		source.__renderCanvas(renderSession);
		source.__updateTransforms(matrixCache);
		source.__updateChildren(true);
		if(!smoothing) {
			buffer.__srcContext.mozImageSmoothingEnabled = true;
			buffer.__srcContext.msImageSmoothingEnabled = true;
			buffer.__srcContext.imageSmoothingEnabled = true;
		}
		if(clipRect != null) renderSession.maskManager.popMask();
		buffer.__srcContext.setTransform(1,0,0,1,0,0);
		buffer.__srcImageData = null;
		buffer.data = null;
	}
	,encode: function(rect,compressor,byteArray) {
		if(!this.__isValid || rect == null) return byteArray = null;
		if(js_Boot.__instanceof(compressor,openfl_display_PNGEncoderOptions)) return byteArray = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(this.image.encode("png")); else if(js_Boot.__instanceof(compressor,openfl_display_JPEGEncoderOptions)) return byteArray = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(this.image.encode("jpg",(js_Boot.__cast(compressor , openfl_display_JPEGEncoderOptions)).quality));
		return byteArray = null;
	}
	,fillRect: function(rect,color) {
		if(!this.__isValid || rect == null) return;
		if(this.transparent && (color & -16777216) == 0) color = 0;
		this.image.fillRect(rect.__toLimeRectangle(),color,1);
		this.__usingPingPongTexture = false;
	}
	,floodFill: function(x,y,color) {
		if(!this.__isValid) return;
		this.image.floodFill(x,y,color,1);
		this.__usingPingPongTexture = false;
	}
	,generateFilterRect: function(sourceRect,filter) {
		return sourceRect.clone();
	}
	,getBuffer: function(gl) {
		if(this.__buffer == null) {
			var data = [this.width,this.height,0,1,1,0,this.height,0,0,1,this.width,0,0,1,0,0,0,0,0,0];
			this.__buffer = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER,this.__buffer);
			gl.bufferData(gl.ARRAY_BUFFER,(function($this) {
				var $r;
				var this1;
				if(data != null) this1 = new Float32Array(data); else this1 = null;
				$r = this1;
				return $r;
			}(this)),gl.STATIC_DRAW);
			gl.bindBuffer(gl.ARRAY_BUFFER,null);
		}
		return this.__buffer;
	}
	,getColorBoundsRect: function(mask,color,findColor) {
		if(findColor == null) findColor = true;
		if(!this.__isValid) return new openfl_geom_Rectangle(0,0,this.width,this.height);
		if(!this.transparent || (mask >> 24 & 255) > 0) {
			var color1 = color;
			if((color1 >> 24 & 255) == 0) color1 = 0;
		}
		var rect = this.image.getColorBoundsRect(mask,color,findColor,1);
		return new openfl_geom_Rectangle(rect.x,rect.y,rect.width,rect.height);
	}
	,getPixel: function(x,y) {
		if(!this.__isValid) return 0;
		return this.image.getPixel(x,y,1);
	}
	,getPixel32: function(x,y) {
		if(!this.__isValid) return 0;
		return this.image.getPixel32(x,y,1);
	}
	,getPixels: function(rect) {
		if(!this.__isValid) return null;
		if(rect == null) rect = this.rect;
		return openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(this.image.getPixels(rect.__toLimeRectangle(),1));
	}
	,getSurface: function() {
		if(!this.__isValid) return null;
		if(this.__surface == null) this.__surface = lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.fromImage(this.image);
		return this.__surface;
	}
	,getTexture: function(gl) {
		if(!this.__isValid) return null;
		if(this.__usingPingPongTexture && this.__pingPongTexture != null) return this.__pingPongTexture.get_texture();
		if(this.__texture == null) {
			this.__texture = gl.createTexture();
			gl.bindTexture(gl.TEXTURE_2D,this.__texture);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);
			this.image.dirty = true;
		}
		if(this.image != null && this.image.dirty) {
			var internalFormat;
			var format;
			if(this.__surface != null) lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.flush(this.__surface);
			if(this.image.buffer.bitsPerPixel == 1) {
				internalFormat = gl.ALPHA;
				format = gl.ALPHA;
			} else {
				internalFormat = gl.RGBA;
				format = gl.RGBA;
			}
			gl.bindTexture(gl.TEXTURE_2D,this.__texture);
			var textureImage = this.image;
			if(!textureImage.get_premultiplied() && textureImage.get_transparent() || textureImage.get_format() != 0) {
				textureImage = textureImage.clone();
				textureImage.set_format(0);
				textureImage.set_premultiplied(true);
			}
			gl.texImage2D(gl.TEXTURE_2D,0,internalFormat,this.width,this.height,0,format,gl.UNSIGNED_BYTE,textureImage.get_data());
			gl.bindTexture(gl.TEXTURE_2D,null);
			this.image.dirty = false;
		}
		return this.__texture;
	}
	,getVector: function(rect) {
		var pixels = this.getPixels(rect);
		var length = Std["int"](openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(pixels) / 4);
		var result;
		var this1;
		this1 = new openfl_VectorData();
		var this2;
		this2 = new Array(length);
		this1.data = this2;
		this1.length = length;
		this1.fixed = true;
		result = this1;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var value = pixels.readUnsignedInt();
			if(!result.fixed) {
				if(i >= result.length) result.length = i + 1;
				if(result.data.length < result.length) {
					var data;
					var this3;
					this3 = new Array(result.data.length + 10);
					data = this3;
					haxe_ds__$Vector_Vector_$Impl_$.blit(result.data,0,data,0,result.data.length);
					result.data = data;
				}
			}
			result.data[i] = value;
		}
		return result;
	}
	,histogram: function(hRect) {
		var rect;
		if(hRect != null) rect = hRect; else rect = new openfl_geom_Rectangle(0,0,this.width,this.height);
		var pixels = this.getPixels(rect);
		var result;
		var _g = [];
		var _g1 = 0;
		while(_g1 < 4) {
			var i = _g1++;
			_g.push((function($this) {
				var $r;
				var _g2 = [];
				{
					var _g3 = 0;
					while(_g3 < 256) {
						var j = _g3++;
						_g2.push(0);
					}
				}
				$r = _g2;
				return $r;
			}(this)));
		}
		result = _g;
		var _g21 = 0;
		var _g11 = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(pixels);
		while(_g21 < _g11) {
			var i1 = _g21++;
			++result[i1 % 4][pixels.readUnsignedByte()];
		}
		return result;
	}
	,hitTest: function(firstPoint,firstAlphaThreshold,secondObject,secondBitmapDataPoint,secondAlphaThreshold) {
		if(secondAlphaThreshold == null) secondAlphaThreshold = 1;
		if(!this.__isValid) return false;
		if(js_Boot.__instanceof(secondObject,openfl_display_Bitmap)) secondObject = (js_Boot.__cast(secondObject , openfl_display_Bitmap)).bitmapData;
		if(js_Boot.__instanceof(secondObject,openfl_geom_Point)) {
			var secondPoint = secondObject;
			var x = secondPoint.x - firstPoint.x | 0;
			var y = secondPoint.y - firstPoint.y | 0;
			if(this.rect.contains(x,y)) {
				var pixel = this.getPixel32(x,y);
				if((pixel >> 24 & 255) >= firstAlphaThreshold) return true;
			}
		} else if(js_Boot.__instanceof(secondObject,openfl_display_BitmapData)) {
			var secondBitmapData = secondObject;
			var x1;
			var y1;
			if(secondBitmapDataPoint == null) {
				x1 = 0;
				y1 = 0;
			} else {
				x1 = secondBitmapDataPoint.x - firstPoint.x | 0;
				y1 = secondBitmapDataPoint.y - firstPoint.y | 0;
			}
			if(this.rect.contains(x1,y1)) {
				var hitRect = openfl_geom_Rectangle.__temp;
				hitRect.setTo(x1,y1,Math.min(secondBitmapData.width,this.width - x1),Math.min(secondBitmapData.height,this.height - y1));
				var pixels = this.getPixels(hitRect);
				hitRect.offset(-x1,-y1);
				var testPixels = secondBitmapData.getPixels(hitRect);
				var length = hitRect.width * hitRect.height | 0;
				var pixel1;
				var testPixel;
				var _g = 0;
				while(_g < length) {
					var i = _g++;
					pixel1 = pixels.readUnsignedInt();
					testPixel = testPixels.readUnsignedInt();
					if((pixel1 >> 24 & 255) >= firstAlphaThreshold && (testPixel >> 24 & 255) >= secondAlphaThreshold) return true;
				}
				return false;
			}
		} else if(js_Boot.__instanceof(secondObject,openfl_geom_Rectangle)) {
			var secondRectangle = openfl_geom_Rectangle.__temp;
			secondRectangle.copyFrom(secondObject);
			secondRectangle.offset(-firstPoint.x,-firstPoint.y);
			secondRectangle.__contract(0,0,this.width,this.height);
			if(secondRectangle.width > 0 && secondRectangle.height > 0) {
				var pixels1 = this.getPixels(secondRectangle);
				var length1 = Std["int"](openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(pixels1) / 4);
				var pixel2;
				var _g1 = 0;
				while(_g1 < length1) {
					var i1 = _g1++;
					pixel2 = pixels1.readUnsignedInt();
					if((pixel2 >> 24 & 255) >= firstAlphaThreshold) return true;
				}
			}
		}
		return false;
	}
	,lock: function() {
	}
	,merge: function(sourceBitmapData,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
		if(!this.__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid || sourceRect == null || destPoint == null) return;
		this.image.merge(sourceBitmapData.image,sourceRect.__toLimeRectangle(),destPoint.__toLimeVector2(),redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
		this.__usingPingPongTexture = false;
	}
	,noise: function(randomSeed,low,high,channelOptions,grayScale) {
		if(grayScale == null) grayScale = false;
		if(channelOptions == null) channelOptions = 7;
		if(high == null) high = 255;
		if(low == null) low = 0;
		if(!this.__isValid) return;
		openfl_Lib.notImplemented("BitmapData.noise");
	}
	,paletteMap: function(sourceBitmapData,sourceRect,destPoint,redArray,greenArray,blueArray,alphaArray) {
		var sw = sourceRect.width | 0;
		var sh = sourceRect.height | 0;
		var pixels = this.getPixels(sourceRect);
		pixels.position = 0;
		var pixelValue;
		var r;
		var g;
		var b;
		var a;
		var color;
		var c1;
		var c2;
		var c3;
		var c4;
		var _g1 = 0;
		var _g = sh * sw;
		while(_g1 < _g) {
			var i = _g1++;
			pixelValue = pixels.readUnsignedInt();
			if(alphaArray == null) c1 = pixelValue & -16777216; else c1 = alphaArray[pixelValue >> 24 & 255];
			if(redArray == null) c2 = pixelValue & 16711680; else c2 = redArray[pixelValue >> 16 & 255];
			if(greenArray == null) c3 = pixelValue & 65280; else c3 = greenArray[pixelValue >> 8 & 255];
			if(blueArray == null) c4 = pixelValue & 255; else c4 = blueArray[pixelValue & 255];
			a = (c1 >> 24 & 255) + (c2 >> 24 & 255) + (c3 >> 24 & 255) + (c4 >> 24 & 255);
			if(a > 255) a == 255;
			r = (c1 >> 16 & 255) + (c2 >> 16 & 255) + (c3 >> 16 & 255) + (c4 >> 16 & 255);
			if(r > 255) r == 255;
			g = (c1 >> 8 & 255) + (c2 >> 8 & 255) + (c3 >> 8 & 255) + (c4 >> 8 & 255);
			if(g > 255) g == 255;
			b = (c1 & 255) + (c2 & 255) + (c3 & 255) + (c4 & 255);
			if(b > 255) b == 255;
			color = a << 24 | r << 16 | g << 8 | b;
			pixels.position = i * 4;
			pixels.writeUnsignedInt(color);
		}
		pixels.position = 0;
		var destRect = new openfl_geom_Rectangle(destPoint.x,destPoint.y,sw,sh);
		this.setPixels(destRect,pixels);
	}
	,perlinNoise: function(baseX,baseY,numOctaves,randomSeed,stitch,fractalNoise,channelOptions,grayScale,offsets) {
		if(grayScale == null) grayScale = false;
		if(channelOptions == null) channelOptions = 7;
		openfl_Lib.notImplemented("BitmapData.perlinNoise");
	}
	,scroll: function(x,y) {
		if(!this.__isValid) return;
		this.image.scroll(x,y);
		this.__usingPingPongTexture = false;
	}
	,setPixel: function(x,y,color) {
		if(!this.__isValid) return;
		this.image.setPixel(x,y,color,1);
		this.__usingPingPongTexture = false;
	}
	,setPixel32: function(x,y,color) {
		if(!this.__isValid) return;
		this.image.setPixel32(x,y,color,1);
		this.__usingPingPongTexture = false;
	}
	,setPixels: function(rect,byteArray) {
		if(!this.__isValid || rect == null) return;
		this.image.setPixels(rect.__toLimeRectangle(),openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes(byteArray),1);
		this.__usingPingPongTexture = false;
	}
	,setVector: function(rect,inputVector) {
		var byteArray = new openfl_utils_ByteArrayData(0);
		openfl_utils__$ByteArray_ByteArray_$Impl_$.set_length(byteArray,inputVector.length * 4);
		var _g = 0;
		while(_g < inputVector.length) {
			var color = inputVector.data[_g];
			++_g;
			byteArray.writeUnsignedInt(color);
		}
		byteArray.position = 0;
		this.setPixels(rect,byteArray);
	}
	,threshold: function(sourceBitmapData,sourceRect,destPoint,operation,threshold,color,mask,copySource) {
		if(copySource == null) copySource = false;
		if(mask == null) mask = -1;
		if(color == null) color = 0;
		if(sourceBitmapData == null || sourceRect == null || destPoint == null || sourceRect.x > sourceBitmapData.width || sourceRect.y > sourceBitmapData.height || destPoint.x > this.width || destPoint.y > this.height) return 0;
		if(sourceBitmapData == this && sourceRect.equals(this.rect) && destPoint.x == 0 && destPoint.y == 0) {
			var hits = 0;
			var memory = new openfl_utils_ByteArrayData(this.width * this.height * 4);
			memory = this.getPixels(this.rect);
			memory.position = 0;
			openfl_Memory.select(memory);
			var thresholdMask = threshold & mask;
			var width_yy;
			var position;
			var pixelMask;
			var pixelValue;
			var i;
			var test;
			var _g1 = 0;
			var _g = this.height;
			while(_g1 < _g) {
				var yy = _g1++;
				width_yy = this.width * yy;
				var _g3 = 0;
				var _g2 = this.width;
				while(_g3 < _g2) {
					var xx = _g3++;
					position = (width_yy + xx) * 4;
					pixelValue = openfl_Memory._setPositionTemporarily(position,function() {
						return openfl_Memory.gcRef.readInt();
					});
					pixelMask = pixelValue & mask;
					i = openfl_display_BitmapData.__ucompare(pixelMask,thresholdMask);
					test = false;
					if(operation == "==") test = i == 0; else if(operation == "<") test = i == -1; else if(operation == ">") test = i == 1; else if(operation == "!=") test = i != 0; else if(operation == "<=") test = i == 0 || i == -1; else if(operation == ">=") test = i == 0 || i == 1;
					if(test) {
						openfl_Memory.setI32(position,color);
						hits++;
					}
				}
			}
			memory.position = 0;
			this.setPixels(this.rect,memory);
			openfl_Memory.select(null);
			return hits;
		} else {
			sourceRect = sourceRect.clone();
			if(sourceRect.get_right() > sourceBitmapData.width) sourceRect.width = sourceBitmapData.width - sourceRect.x;
			if(sourceRect.get_bottom() > sourceBitmapData.height) sourceRect.height = sourceBitmapData.height - sourceRect.y;
			var targetRect = sourceRect.clone();
			targetRect.offsetPoint(destPoint);
			if(targetRect.get_right() > this.width) targetRect.width = this.width - targetRect.x;
			if(targetRect.get_bottom() > this.height) targetRect.height = this.height - targetRect.y;
			sourceRect.width = Math.min(sourceRect.width,targetRect.width);
			sourceRect.height = Math.min(sourceRect.height,targetRect.height);
			var sx = sourceRect.x | 0;
			var sy = sourceRect.y | 0;
			var sw = sourceRect.width | 0;
			var sh = sourceRect.height | 0;
			var dx = destPoint.x | 0;
			var dy = destPoint.y | 0;
			var bw = this.width - sw - dx;
			var bh = this.height - sh - dy;
			var dw;
			if(bw < 0) dw = sw + (this.width - sw - dx); else dw = sw;
			var dh;
			if(bw < 0) dh = sh + (this.height - sh - dy); else dh = sh;
			var hits1 = 0;
			var canvasMemory = sw * sh * 4;
			var sourceMemory = sw * sh * 4;
			var totalMemory = canvasMemory + sourceMemory;
			var memory1 = new openfl_utils_ByteArrayData(totalMemory);
			memory1.position = 0;
			var pixels = sourceBitmapData.getPixels(sourceRect);
			if(copySource) memory1.writeBytes(pixels); else memory1.writeBytes(this.getPixels(targetRect));
			memory1.position = canvasMemory;
			memory1.writeBytes(pixels);
			memory1.position = 0;
			openfl_Memory.select(memory1);
			var thresholdMask1 = threshold & mask;
			var position1;
			var pixelMask1;
			var pixelValue1;
			var i1;
			var test1;
			var _g4 = 0;
			while(_g4 < dh) {
				var yy1 = _g4++;
				var _g11 = 0;
				while(_g11 < dw) {
					var xx1 = _g11++;
					position1 = (xx1 + sx + (yy1 + sy) * sw) * 4;
					pixelValue1 = openfl_Memory._setPositionTemporarily(canvasMemory + position1,function() {
						return openfl_Memory.gcRef.readInt();
					});
					pixelMask1 = pixelValue1 & mask;
					i1 = openfl_display_BitmapData.__ucompare(pixelMask1,thresholdMask1);
					test1 = false;
					if(operation == "==") test1 = i1 == 0; else if(operation == "<") test1 = i1 == -1; else if(operation == ">") test1 = i1 == 1; else if(operation == "!=") test1 = i1 != 0; else if(operation == "<=") test1 = i1 == 0 || i1 == -1; else if(operation == ">=") test1 = i1 == 0 || i1 == 1;
					if(test1) {
						openfl_Memory.setI32(position1,color);
						hits1++;
					}
				}
			}
			memory1.position = 0;
			this.setPixels(targetRect,memory1);
			openfl_Memory.select(null);
			return hits1;
		}
	}
	,unlock: function(changeRect) {
	}
	,__createUVs: function(x0,y0,x1,y1,x2,y2,x3,y3) {
		if(y3 == null) y3 = 1;
		if(x3 == null) x3 = 0;
		if(y2 == null) y2 = 1;
		if(x2 == null) x2 = 1;
		if(y1 == null) y1 = 0;
		if(x1 == null) x1 = 1;
		if(y0 == null) y0 = 0;
		if(x0 == null) x0 = 0;
		if(this.__uvData == null) this.__uvData = new openfl_display_TextureUvs();
		this.__uvData.x0 = x0;
		this.__uvData.y0 = y0;
		this.__uvData.x1 = x1;
		this.__uvData.y1 = y1;
		this.__uvData.x2 = x2;
		this.__uvData.y2 = y2;
		this.__uvData.x3 = x3;
		this.__uvData.y3 = y3;
	}
	,__drawGL: function(renderSession,source,matrix,colorTransform,blendMode,clipRect,smoothing,drawSelf,clearBuffer,readPixels,powerOfTwo) {
		if(powerOfTwo == null) powerOfTwo = true;
		if(readPixels == null) readPixels = false;
		if(clearBuffer == null) clearBuffer = false;
		if(drawSelf == null) drawSelf = false;
		if(smoothing == null) smoothing = false;
		this.__pingPongTexture = openfl__$internal_renderer_opengl_GLBitmap.pushFramebuffer(renderSession,this.__pingPongTexture,this.rect,smoothing,this.transparent,clearBuffer,powerOfTwo);
		openfl__$internal_renderer_opengl_GLBitmap.drawBitmapDrawable(renderSession,drawSelf?this:null,source,matrix,colorTransform,blendMode,clipRect);
		openfl__$internal_renderer_opengl_GLBitmap.popFramebuffer(renderSession,readPixels?this.image:null);
		var uv = this.__pingPongTexture.get_renderTexture().__uvData;
		this.__createUVs(uv.x0,uv.y0,uv.x1,uv.y1,uv.x2,uv.y2,uv.x3,uv.y3);
		this.__isValid = true;
		this.__usingPingPongTexture = true;
	}
	,__fromBase64: function(base64,type,onload) {
		var _g = this;
		lime_graphics_Image.fromBase64(base64,type,function(image) {
			_g.__fromImage(image);
			if(onload != null) onload(_g);
		});
	}
	,__fromBytes: function(bytes,rawAlpha,onload) {
		var _g = this;
		lime_graphics_Image.fromBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes(bytes),function(image) {
			_g.__fromImage(image);
			if(rawAlpha != null) {
				lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
				lime_graphics_utils_ImageCanvasUtil.createImageData(image);
				var data = image.buffer.data;
				var _g2 = 0;
				var _g1 = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(rawAlpha);
				while(_g2 < _g1) {
					var i = _g2++;
					var val = rawAlpha.readUnsignedByte();
					data[i * 4 + 3] = val;
				}
				image.dirty = true;
			}
			if(onload != null) onload(_g);
		});
	}
	,__fromFile: function(path,onload,onerror) {
		var _g = this;
		lime_graphics_Image.fromFile(path,function(image) {
			_g.__fromImage(image);
			if(onload != null) onload(_g);
		},onerror);
	}
	,__fromImage: function(image) {
		if(image != null && image.buffer != null) {
			this.image = image;
			this.width = image.width;
			this.height = image.height;
			this.rect = new openfl_geom_Rectangle(0,0,image.width,image.height);
			this.__isValid = true;
		}
	}
	,__renderCairo: function(renderSession) {
		if(!this.__isValid) return;
		var cairo = renderSession.cairo;
		if(this.__worldTransform == null) this.__worldTransform = new openfl_geom_Matrix();
		var transform = this.__worldTransform;
		if(renderSession.roundPixels) {
			var matrix = transform.__toMatrix3();
			matrix.tx = Math.round(matrix.tx);
			matrix.ty = Math.round(matrix.ty);
			cairo.set_matrix(matrix);
		} else cairo.set_matrix(transform.__toMatrix3());
		var surface = this.getSurface();
		if(surface != null) {
			var pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface(surface);
			if(cairo.get_antialias() == 1) lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter(pattern,3); else lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter(pattern,1);
			cairo.set_source(pattern);
			cairo.paint();
		}
	}
	,__renderCairoMask: function(renderSession) {
	}
	,__renderCanvas: function(renderSession) {
		if(!this.__isValid) return;
		lime_graphics_utils_ImageCanvasUtil.sync(this.image,false);
		var context = renderSession.context;
		if(this.__worldTransform == null) this.__worldTransform = new openfl_geom_Matrix();
		context.globalAlpha = 1;
		var transform = this.__worldTransform;
		if(renderSession.roundPixels) context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx | 0,transform.ty | 0); else context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.drawImage(this.image.get_src(),0,0);
	}
	,__renderCanvasMask: function(renderSession) {
	}
	,__renderGL: function(renderSession) {
		renderSession.spriteBatch.renderBitmapData(this,false,this.__worldTransform,this.__worldColorTransform,this.__worldColorTransform.alphaMultiplier,this.__blendMode,this.__shader);
	}
	,__resize: function(width,height) {
		this.width = width;
		this.height = height;
		this.rect.width = width;
		this.rect.height = height;
	}
	,__sync: function() {
		lime_graphics_utils_ImageCanvasUtil.sync(this.image,false);
	}
	,__updateChildren: function(transformOnly) {
	}
	,__updateMask: function(maskGraphics) {
	}
	,__updateTransforms: function(overrideTransform) {
		if(overrideTransform == null) this.__worldTransform.identity(); else this.__worldTransform = overrideTransform;
	}
	,__class__: openfl_display_BitmapData
};
var co_doubleduck_utils_SplashBG = function(width,height,transparent,fillRGBA,onload) {
	if(fillRGBA == null) fillRGBA = -1;
	if(transparent == null) transparent = true;
	openfl_display_BitmapData.call(this,0,0,transparent,fillRGBA);
	if(co_doubleduck_utils_SplashBG.preload != null) {
		this.image = co_doubleduck_utils_SplashBG.preload;
		width = this.image.width;
		height = this.image.height;
	} else this.__fromBase64(haxe_Resource.getString(co_doubleduck_utils_SplashBG.resourceName),co_doubleduck_utils_SplashBG.resourceType,function(b) {
		if(co_doubleduck_utils_SplashBG.preload == null) co_doubleduck_utils_SplashBG.preload = b.image;
		if(onload != null) onload(b);
	});
};
$hxClasses["co.doubleduck.utils.SplashBG"] = co_doubleduck_utils_SplashBG;
co_doubleduck_utils_SplashBG.__name__ = ["co","doubleduck","utils","SplashBG"];
co_doubleduck_utils_SplashBG.preload = null;
co_doubleduck_utils_SplashBG.__super__ = openfl_display_BitmapData;
co_doubleduck_utils_SplashBG.prototype = $extend(openfl_display_BitmapData.prototype,{
	__class__: co_doubleduck_utils_SplashBG
});
var co_doubleduck_utils_ProgBG = function(width,height,transparent,fillRGBA,onload) {
	if(fillRGBA == null) fillRGBA = -1;
	if(transparent == null) transparent = true;
	openfl_display_BitmapData.call(this,0,0,transparent,fillRGBA);
	if(co_doubleduck_utils_ProgBG.preload != null) {
		this.image = co_doubleduck_utils_ProgBG.preload;
		width = this.image.width;
		height = this.image.height;
	} else this.__fromBase64(haxe_Resource.getString(co_doubleduck_utils_ProgBG.resourceName),co_doubleduck_utils_ProgBG.resourceType,function(b) {
		if(co_doubleduck_utils_ProgBG.preload == null) co_doubleduck_utils_ProgBG.preload = b.image;
		if(onload != null) onload(b);
	});
};
$hxClasses["co.doubleduck.utils.ProgBG"] = co_doubleduck_utils_ProgBG;
co_doubleduck_utils_ProgBG.__name__ = ["co","doubleduck","utils","ProgBG"];
co_doubleduck_utils_ProgBG.preload = null;
co_doubleduck_utils_ProgBG.__super__ = openfl_display_BitmapData;
co_doubleduck_utils_ProgBG.prototype = $extend(openfl_display_BitmapData.prototype,{
	__class__: co_doubleduck_utils_ProgBG
});
var co_doubleduck_utils_ProgFill = function(width,height,transparent,fillRGBA,onload) {
	if(fillRGBA == null) fillRGBA = -1;
	if(transparent == null) transparent = true;
	openfl_display_BitmapData.call(this,0,0,transparent,fillRGBA);
	if(co_doubleduck_utils_ProgFill.preload != null) {
		this.image = co_doubleduck_utils_ProgFill.preload;
		width = this.image.width;
		height = this.image.height;
	} else this.__fromBase64(haxe_Resource.getString(co_doubleduck_utils_ProgFill.resourceName),co_doubleduck_utils_ProgFill.resourceType,function(b) {
		if(co_doubleduck_utils_ProgFill.preload == null) co_doubleduck_utils_ProgFill.preload = b.image;
		if(onload != null) onload(b);
	});
};
$hxClasses["co.doubleduck.utils.ProgFill"] = co_doubleduck_utils_ProgFill;
co_doubleduck_utils_ProgFill.__name__ = ["co","doubleduck","utils","ProgFill"];
co_doubleduck_utils_ProgFill.preload = null;
co_doubleduck_utils_ProgFill.__super__ = openfl_display_BitmapData;
co_doubleduck_utils_ProgFill.prototype = $extend(openfl_display_BitmapData.prototype,{
	__class__: co_doubleduck_utils_ProgFill
});
var co_doubleduck_utils_Mesh = function() {
	this._nodes = [];
};
$hxClasses["co.doubleduck.utils.Mesh"] = co_doubleduck_utils_Mesh;
co_doubleduck_utils_Mesh.__name__ = ["co","doubleduck","utils","Mesh"];
co_doubleduck_utils_Mesh.prototype = {
	addNode: function(val,connectTo) {
		if(this.getNode(val) != null) return;
		var node = new co_doubleduck_utils_MeshNode(val);
		var connNode = this.getNode(connectTo);
		if(connNode != null) node.connectTo(connNode);
		this._nodes.push(node);
	}
	,calcPath: function(srcVal,destVal) {
		var srcNode = this.getNode(srcVal);
		var destNode = this.getNode(destVal);
		return this.calcNodePath(srcNode,destNode,[]);
	}
	,calcNodePath: function(srcNode,destNode,passed) {
		if(srcNode == null || destNode == null) return null;
		var srcConn = srcNode.getConnections();
		if(HxOverrides.indexOf(srcConn,destNode,0) != -1) return [srcNode.getValue(),destNode.getValue()];
		var _g = 0;
		while(_g < srcConn.length) {
			var conn = srcConn[_g];
			++_g;
			if(HxOverrides.indexOf(passed,conn,0) == -1) {
				var path = this.calcNodePath(conn,destNode,passed.concat([srcNode]));
				if(path != null) {
					path.unshift(srcNode.getValue());
					return path;
				}
			}
		}
		return null;
	}
	,getNode: function(val) {
		var _g = 0;
		var _g1 = this._nodes;
		while(_g < _g1.length) {
			var node = _g1[_g];
			++_g;
			if(node.getValue() == val) return node;
		}
		return null;
	}
	,__class__: co_doubleduck_utils_Mesh
};
var co_doubleduck_utils_MeshNode = function(val) {
	this._val = val;
	this._conNodes = [];
};
$hxClasses["co.doubleduck.utils.MeshNode"] = co_doubleduck_utils_MeshNode;
co_doubleduck_utils_MeshNode.__name__ = ["co","doubleduck","utils","MeshNode"];
co_doubleduck_utils_MeshNode.prototype = {
	getValue: function() {
		return this._val;
	}
	,connectTo: function(node) {
		if(HxOverrides.indexOf(this._conNodes,node,0) == -1) {
			this._conNodes.push(node);
			node.connectTo(this);
		}
	}
	,getConnections: function() {
		return this._conNodes;
	}
	,__class__: co_doubleduck_utils_MeshNode
};
var co_doubleduck_utils_NotifManager = function() { };
$hxClasses["co.doubleduck.utils.NotifManager"] = co_doubleduck_utils_NotifManager;
co_doubleduck_utils_NotifManager.__name__ = ["co","doubleduck","utils","NotifManager"];
co_doubleduck_utils_NotifManager.init = function(storage) {
	if(co_doubleduck_utils_NotifManager.inited) return;
	co_doubleduck_utils_NotifManager.inited = true;
};
co_doubleduck_utils_NotifManager.queueNotif = function(seconds,title,text,iconUrl) {
	var id = "";
	if(com_funtomic_GameOps.isInKiziApp()) {
		if(iconUrl != null) {
			var browserUrl = window.location.href;
			iconUrl = browserUrl.substr(0,browserUrl.indexOf("index.html")) + iconUrl;
		}
		id = com_funtomic_GameOps.KiziAPI_sendLocalNotification(seconds,iconUrl,title,text,title,text,null);
	} else return null;
	return id;
};
co_doubleduck_utils_NotifManager.cancelNotif = function(queuedNotifId) {
	com_funtomic_GameOps.KiziAPI_cancelLocalNotification(queuedNotifId);
};
var co_doubleduck_utils_PlayTimer = function() { };
$hxClasses["co.doubleduck.utils.PlayTimer"] = co_doubleduck_utils_PlayTimer;
co_doubleduck_utils_PlayTimer.__name__ = ["co","doubleduck","utils","PlayTimer"];
co_doubleduck_utils_PlayTimer._initialStamp = null;
co_doubleduck_utils_PlayTimer._lastIaaStamp = null;
co_doubleduck_utils_PlayTimer.init = function() {
	co_doubleduck_utils_PlayTimer._initialStamp = co_doubleduck_utils_PlayTimer.stamp();
	co_doubleduck_utils_PlayTimer.iaaTimer();
};
co_doubleduck_utils_PlayTimer.getDuration = function() {
	co_doubleduck_utils_PlayTimer.verifyStamp();
	return co_doubleduck_utils_PlayTimer.stamp() - co_doubleduck_utils_PlayTimer._initialStamp;
};
co_doubleduck_utils_PlayTimer.iaaTimer = function() {
	co_doubleduck_utils_PlayTimer.verifyStamp();
	co_doubleduck_utils_Utils.delayedCall(5,co_doubleduck_utils_PlayTimer.iaaTimer);
};
co_doubleduck_utils_PlayTimer.verifyStamp = function() {
	var currStamp = co_doubleduck_utils_PlayTimer.stamp();
	if(currStamp - co_doubleduck_utils_PlayTimer._lastIaaStamp > 7) currStamp = co_doubleduck_utils_PlayTimer._lastIaaStamp + 5;
	co_doubleduck_utils_PlayTimer._lastIaaStamp = currStamp;
};
co_doubleduck_utils_PlayTimer.stamp = function() {
	return Math.round(haxe_Timer.stamp());
};
var co_doubleduck_utils_ProgBar = function(back,fill) {
	this._maskTo = 1;
	this._maskFrom = 0;
	openfl_display_Sprite.call(this);
	this._back = back;
	this._fill = fill;
	this.addChild(this._back);
	this._fillPerc = { };
	this._fillPerc.val = 0;
	this._fillWidth = fill.get_width();
	this._fillHeight = fill.get_height();
	this._mask = new openfl_display_Sprite();
	this.setupMask();
	this.updateMask();
	this._fill.set_mask(this._mask);
	this.addChild(this._fill);
	this.addChild(this._mask);
};
$hxClasses["co.doubleduck.utils.ProgBar"] = co_doubleduck_utils_ProgBar;
co_doubleduck_utils_ProgBar.__name__ = ["co","doubleduck","utils","ProgBar"];
co_doubleduck_utils_ProgBar.__super__ = openfl_display_Sprite;
co_doubleduck_utils_ProgBar.prototype = $extend(openfl_display_Sprite.prototype,{
	setFillVals: function(width,height) {
		this._fillWidth = width;
		this._fillHeight = height;
		this.setupMask();
	}
	,reapplyMask: function() {
		this._fill.set_mask(this._mask);
	}
	,setFillPerc: function(value,duration) {
		if(duration == null) duration = 0;
		if(value == 0) value = 0.001;
		co_doubleduck_utils_TweenChain.removeTweens(this._fillPerc);
		if(duration <= 0) {
			this._fillPerc.val = value;
			this.updateMask();
		} else co_doubleduck_utils_TweenChain.get(this._fillPerc).tto({ val : value},duration,null,$bind(this,this.updateMask));
	}
	,getFillPerc: function() {
		return this._fillPerc.val;
	}
	,set_maskFrom: function(val) {
		this._maskFrom = val;
		this.setupMask();
		return this._maskFrom;
	}
	,set_maskTo: function(val) {
		this._maskTo = val;
		this.setupMask();
		return this._maskTo;
	}
	,setupMask: function() {
		this._mask.get_graphics().clear();
		this._mask.get_graphics().beginFill(0);
		this._mask.get_graphics().drawRect(0,0,this._fillWidth * (this._maskTo - this._maskFrom),this._fillHeight);
		this._mask.get_graphics().endFill();
		this._mask.set_x(this._fillWidth * this._maskFrom);
	}
	,updateMask: function(obj) {
		this._mask.set_scaleX(this._fillPerc.val);
	}
	,__class__: co_doubleduck_utils_ProgBar
	,__properties__: $extend(openfl_display_Sprite.prototype.__properties__,{set_maskTo:"set_maskTo",set_maskFrom:"set_maskFrom"})
});
var co_doubleduck_utils_SoundMgr = function() { };
$hxClasses["co.doubleduck.utils.SoundMgr"] = co_doubleduck_utils_SoundMgr;
co_doubleduck_utils_SoundMgr.__name__ = ["co","doubleduck","utils","SoundMgr"];
co_doubleduck_utils_SoundMgr._muted = null;
co_doubleduck_utils_SoundMgr._sounds = null;
co_doubleduck_utils_SoundMgr._perstistence = null;
co_doubleduck_utils_SoundMgr.forceFileType = function(type) {
	co_doubleduck_utils_SoundMgr._fileType = type;
};
co_doubleduck_utils_SoundMgr.init = function(persistence) {
	co_doubleduck_utils_SoundMgr._perstistence = persistence;
	if(co_doubleduck_utils_SoundMgr._sounds == null) {
		co_doubleduck_utils_SoundMgr._sounds = new haxe_ds_StringMap();
		co_doubleduck_utils_SoundMgr._muted = co_doubleduck_utils_SoundMgr._perstistence.getValue("MUTE_STATE") == "true";
	}
	co_doubleduck_utils_SoundMgr.available = true;
	co_doubleduck_utils_Utils.delayedCall(3,co_doubleduck_utils_SoundMgr.registerActivateEvents);
};
co_doubleduck_utils_SoundMgr.registerActivateEvents = function() {
	var document = window.document;
	if(co_doubleduck_utils_SoundMgr.isChrome) document.addEventListener("webkitvisibilitychange",co_doubleduck_utils_SoundMgr.handleVisibilityChange); else {
		openfl_Lib.current.stage.addEventListener(openfl_events_Event.ACTIVATE,co_doubleduck_utils_SoundMgr.handleActivate);
		openfl_Lib.current.stage.addEventListener(openfl_events_Event.DEACTIVATE,co_doubleduck_utils_SoundMgr.handleDeactivate);
	}
};
co_doubleduck_utils_SoundMgr.handleVisibilityChange = function(e) {
	var hidden = document.hidden;
	if(hidden) co_doubleduck_utils_SoundMgr.handleDeactivate(); else co_doubleduck_utils_SoundMgr.handleActivate();
};
co_doubleduck_utils_SoundMgr.handleActivate = function(e) {
	if(!co_doubleduck_utils_SoundMgr.available || co_doubleduck_utils_SoundMgr._muted) return;
	if(co_doubleduck_utils_SoundMgr.isChrome) {
		var $it0 = co_doubleduck_utils_SoundMgr.audios.iterator();
		while( $it0.hasNext() ) {
			var audio = $it0.next();
			audio.volume = 1;
		}
		return;
	} else {
		var $it1 = co_doubleduck_utils_SoundMgr._sounds.keys();
		while( $it1.hasNext() ) {
			var soundKey = $it1.next();
			if(co_doubleduck_utils_SoundMgr._sounds.get(soundKey).isMusic) co_doubleduck_utils_SoundMgr.setSoundVolume(soundKey,1);
		}
	}
};
co_doubleduck_utils_SoundMgr.handleDeactivate = function(e) {
	if(!co_doubleduck_utils_SoundMgr.available || co_doubleduck_utils_SoundMgr._muted) return;
	if(co_doubleduck_utils_SoundMgr.isChrome) {
		var $it0 = co_doubleduck_utils_SoundMgr.audios.iterator();
		while( $it0.hasNext() ) {
			var audio = $it0.next();
			audio.volume = 0;
		}
		return;
	} else {
		var $it1 = co_doubleduck_utils_SoundMgr._sounds.keys();
		while( $it1.hasNext() ) {
			var soundKey = $it1.next();
			if(co_doubleduck_utils_SoundMgr._sounds.get(soundKey).isMusic) co_doubleduck_utils_SoundMgr.setSoundVolume(soundKey,0);
		}
	}
};
co_doubleduck_utils_SoundMgr.getMute = function() {
	return co_doubleduck_utils_SoundMgr._muted;
};
co_doubleduck_utils_SoundMgr.setMute = function(value) {
	co_doubleduck_utils_SoundMgr._muted = value;
	if(co_doubleduck_utils_SoundMgr._muted) co_doubleduck_utils_SoundMgr._perstistence.setValue("MUTE_STATE","true"); else co_doubleduck_utils_SoundMgr._perstistence.setValue("MUTE_STATE","false");
	var iter = co_doubleduck_utils_SoundMgr._sounds.keys();
	while(iter.hasNext()) {
		var cKey = iter.next();
		co_doubleduck_utils_SoundMgr.setSoundVolume(cKey,co_doubleduck_utils_SoundMgr._muted?0:1);
	}
	if(co_doubleduck_utils_SoundMgr.isChrome) {
		var $it0 = co_doubleduck_utils_SoundMgr.audios.iterator();
		while( $it0.hasNext() ) {
			var audio = $it0.next();
			if(co_doubleduck_utils_SoundMgr._muted) audio.volume = 0; else audio.volume = 1;
		}
		return;
	}
};
co_doubleduck_utils_SoundMgr.isAvailable = function() {
	return co_doubleduck_utils_SoundMgr.available && !(co_doubleduck_utils_SoundMgr.isAndroidBrowser && !co_doubleduck_utils_SoundMgr.isChrome);
	return co_doubleduck_utils_SoundMgr.available;
};
co_doubleduck_utils_SoundMgr.playSound = function(name,loop,startingPos,music,forceType) {
	if(forceType == null) forceType = "";
	if(music == null) music = false;
	if(startingPos == null) startingPos = 0;
	if(loop == null) loop = false;
	if(co_doubleduck_utils_SoundMgr._muted || !co_doubleduck_utils_SoundMgr.isAvailable()) return null;
	var sound;
	var fileType = co_doubleduck_utils_SoundMgr.fileType();
	if(forceType != "") fileType = forceType;
	if(music) {
		if(co_doubleduck_utils_SoundMgr.isChrome) {
			if(co_doubleduck_utils_SoundMgr.audios.exists("musics/" + name)) {
				var audio = co_doubleduck_utils_SoundMgr.audios.get("musics/" + name);
				audio.loop = loop;
				audio.play();
			}
			return name;
		}
		sound = openfl_Assets.getSound("musics/" + name + fileType,true);
	} else sound = openfl_Assets.getSound("sounds/" + name + fileType,true);
	if(sound != null) {
		var newHandle = co_doubleduck_utils_SoundMgr.newHandle();
		var loops;
		if(loop) loops = 10000; else loops = 0;
		if(startingPos > 0) {
			if(startingPos >= sound.get_length() * 1000 * 0.925) startingPos = 0;
		}
		var chan = sound.play(startingPos,loops);
		chan.addEventListener(openfl_events_Event.SOUND_COMPLETE,co_doubleduck_utils_SoundMgr.handleSoundFinish);
		var data = { };
		data.sName = name;
		data.sChannel = chan;
		data.isLoop = loop;
		data.isMusic = music;
		data.forceType = forceType;
		co_doubleduck_utils_SoundMgr._sounds.set(newHandle,data);
		if(co_doubleduck_utils_SoundMgr._muted) co_doubleduck_utils_SoundMgr.setSoundVolume(newHandle,0,music);
		return newHandle;
	}
	return null;
};
co_doubleduck_utils_SoundMgr.pauseSound = function(sHandle) {
	if(!co_doubleduck_utils_SoundMgr._sounds.exists(sHandle)) return;
	var sound = co_doubleduck_utils_SoundMgr._sounds.get(sHandle);
	sound.pausePos = sound.sChannel.get_position();
	sound.sChannel.stop();
};
co_doubleduck_utils_SoundMgr.resumeSound = function(sHandle) {
	if(!co_doubleduck_utils_SoundMgr._sounds.exists(sHandle)) return;
	var dat = co_doubleduck_utils_SoundMgr._sounds.get(sHandle);
	co_doubleduck_utils_SoundMgr.stopSound(sHandle);
	co_doubleduck_utils_SoundMgr.forceNextHandle(sHandle);
	co_doubleduck_utils_SoundMgr.playSound(dat.sName,dat.isLoop,dat.pausePos,dat.isMusic,dat.forceType);
};
co_doubleduck_utils_SoundMgr.stopSound = function(handle,isMusic) {
	if(isMusic == null) isMusic = false;
	if(isMusic) {
		if(co_doubleduck_utils_SoundMgr.isChrome) {
			if(co_doubleduck_utils_SoundMgr.audios.exists("musics/" + handle)) {
				var audio = co_doubleduck_utils_SoundMgr.audios.get("musics/" + handle);
				audio.pause();
				audio.currentTime = 0;
			}
			return;
		}
	}
	if(handle == null || handle.length == 0) return;
	if(co_doubleduck_utils_SoundMgr._sounds.exists(handle)) {
		var data = co_doubleduck_utils_SoundMgr._sounds.get(handle);
		var chan = data.sChannel;
		chan.stop();
		chan.removeEventListener(openfl_events_Event.SOUND_COMPLETE,co_doubleduck_utils_SoundMgr.handleSoundFinish);
		chan = null;
		co_doubleduck_utils_SoundMgr._sounds.remove(handle);
	}
};
co_doubleduck_utils_SoundMgr.setSoundVolume = function(handle,volume,isMusic) {
	if(isMusic == null) isMusic = false;
	if(isMusic) {
		if(co_doubleduck_utils_SoundMgr.isChrome) {
			if(co_doubleduck_utils_SoundMgr.audios.exists("musics/" + handle)) {
				var audio = co_doubleduck_utils_SoundMgr.audios.get("musics/" + handle);
				audio.volume = volume;
			}
			return;
		}
	}
	if(handle == null || handle.length == 0) return;
	if(co_doubleduck_utils_SoundMgr._muted) volume = 0;
	if(co_doubleduck_utils_SoundMgr._sounds.exists(handle)) {
		var data = co_doubleduck_utils_SoundMgr._sounds.get(handle);
		var chan = data.sChannel;
		var soundTransform = chan.get_soundTransform();
		soundTransform.volume = volume;
		chan.set_soundTransform(soundTransform);
	}
};
co_doubleduck_utils_SoundMgr.stopAll = function() {
	var iter = co_doubleduck_utils_SoundMgr._sounds.keys();
	while(iter.hasNext()) {
		var cKey = iter.next();
		co_doubleduck_utils_SoundMgr.stopSound(cKey);
	}
};
co_doubleduck_utils_SoundMgr.handleSoundFinish = function(e) {
	var chan = e.target;
	chan.removeEventListener(openfl_events_Event.SOUND_COMPLETE,co_doubleduck_utils_SoundMgr.handleSoundFinish);
	var $it0 = co_doubleduck_utils_SoundMgr._sounds.keys();
	while( $it0.hasNext() ) {
		var cKey = $it0.next();
		if(co_doubleduck_utils_SoundMgr._sounds.get(cKey).sChannel == chan) {
			co_doubleduck_utils_SoundMgr._sounds.remove(cKey);
			return;
		}
	}
};
co_doubleduck_utils_SoundMgr.forceNextHandle = function(handle) {
	co_doubleduck_utils_SoundMgr._forceHandle = handle;
};
co_doubleduck_utils_SoundMgr.newHandle = function() {
	if(co_doubleduck_utils_SoundMgr._forceHandle != "") {
		var retHandle = co_doubleduck_utils_SoundMgr._forceHandle;
		co_doubleduck_utils_SoundMgr._forceHandle = "";
		return retHandle;
	}
	co_doubleduck_utils_SoundMgr._idCounter++;
	return "snd" + (co_doubleduck_utils_SoundMgr._idCounter - 1);
};
co_doubleduck_utils_SoundMgr.fileType = function() {
	co_doubleduck_utils_SoundMgr._fileType = ".ogg";
	return co_doubleduck_utils_SoundMgr._fileType;
};
var co_doubleduck_utils_ToggleButton = function(asset,centered,data,smoothing) {
	if(smoothing == null) smoothing = false;
	if(centered == null) centered = true;
	this._state = 0;
	this._toggleSheet = spritesheet_importers_BitmapImporter.create(asset,2,1,Math.floor(asset.width / 2),asset.height);
	co_doubleduck_utils_Button.call(this,this._toggleSheet.getFrame(this._state).bitmapData,centered,data,smoothing);
};
$hxClasses["co.doubleduck.utils.ToggleButton"] = co_doubleduck_utils_ToggleButton;
co_doubleduck_utils_ToggleButton.__name__ = ["co","doubleduck","utils","ToggleButton"];
co_doubleduck_utils_ToggleButton.__super__ = co_doubleduck_utils_Button;
co_doubleduck_utils_ToggleButton.prototype = $extend(co_doubleduck_utils_Button.prototype,{
	setToggleState: function(value) {
		if(value) this._state = 1; else this._state = 0;
		this._image.bitmapData = this._toggleSheet.getFrame(this._state).bitmapData;
	}
	,getToggleState: function() {
		return this._state == 1;
	}
	,act: function() {
		this._state = 1 - this._state;
		this._image.bitmapData = this._toggleSheet.getFrame(this._state).bitmapData;
		co_doubleduck_utils_Button.prototype.act.call(this);
	}
	,__class__: co_doubleduck_utils_ToggleButton
});
var co_doubleduck_utils_TweenAnimator = function() { };
$hxClasses["co.doubleduck.utils.TweenAnimator"] = co_doubleduck_utils_TweenAnimator;
co_doubleduck_utils_TweenAnimator.__name__ = ["co","doubleduck","utils","TweenAnimator"];
co_doubleduck_utils_TweenAnimator.spin = function(obj,duration,amount) {
	if(amount == null) amount = 0;
	if(duration == null) duration = 1000;
	obj.set_rotation(0);
	if(amount > 0) {
		amount--;
		if(amount == 0) return;
	}
	co_doubleduck_utils_TweenChain.get(obj).tto({ rotation : 360},duration).call(co_doubleduck_utils_TweenAnimator.spin,[obj,duration,amount]);
};
co_doubleduck_utils_TweenAnimator.nudge = function(obj,duration,amount) {
	if(amount == null) amount = 0;
	if(duration == null) duration = 550;
	obj.set_scaleX(obj.set_scaleY(1));
	if(amount > 0) {
		amount--;
		if(amount == 0) return;
	}
	co_doubleduck_utils_TweenChain.get(obj).tto({ scaleX : 1.15, scaleY : 1.15},Math.floor(duration / 2),motion_easing_Sine.get_easeInOut()).tto({ scaleX : 1, scaleY : 1},Math.floor(duration / 2),motion_easing_Sine.get_easeInOut()).call(co_doubleduck_utils_TweenAnimator.nudge,[obj,duration,amount]);
};
co_doubleduck_utils_TweenAnimator.hover = function(obj,duration,amount) {
	if(amount == null) amount = 0;
	if(duration == null) duration = 1200;
	if(amount > 0) {
		amount--;
		if(amount == 0) return;
	}
	co_doubleduck_utils_TweenChain.get(obj).tto({ y : obj.get_y() - 5},Math.floor(duration / 4),motion_easing_Sine.get_easeOut()).tto({ y : obj.get_y() + 5},Math.floor(duration / 2),motion_easing_Sine.get_easeInOut()).tto({ y : obj.get_y()},Math.floor(duration / 4),motion_easing_Sine.get_easeIn()).call(co_doubleduck_utils_TweenAnimator.hover,[obj,duration,amount]);
};
co_doubleduck_utils_TweenAnimator.slowJiggle = function(obj,factor,duration,amount) {
	if(amount == null) amount = 0;
	if(duration == null) duration = 2400;
	if(factor == null) factor = 0.03;
	if(amount > 0) {
		amount--;
		if(amount == 0) return;
	}
	co_doubleduck_utils_TweenChain.get(obj).tto({ scaleX : 1 + factor, scaleY : 1 - factor},Math.floor(duration / 4),motion_easing_Sine.get_easeOut()).tto({ scaleX : 1 - factor, scaleY : 1 + factor},Math.floor(duration / 2),motion_easing_Sine.get_easeInOut()).tto({ scaleX : 1, scaleY : 1},Math.floor(duration / 4),motion_easing_Sine.get_easeIn()).call(co_doubleduck_utils_TweenAnimator.slowJiggle,[obj,duration,amount]);
};
co_doubleduck_utils_TweenAnimator.shake = function(obj,strength,speed,amount) {
	if(amount == null) amount = 0;
	if(speed == null) speed = 50;
	if(strength == null) strength = 10;
	if(amount > 0) {
		amount--;
		if(amount == 0) return;
	}
	co_doubleduck_utils_TweenChain.get(obj).tto({ x : obj.get_x() - strength / 2 + Math.random() * strength, y : obj.get_y() - strength / 2 + Math.random() * strength},speed,motion_easing_Sine.get_easeOut()).tto({ x : obj.get_x() - strength / 2 + Math.random() * strength, y : obj.get_y() - strength / 2 + Math.random() * strength},2 * speed,motion_easing_Sine.get_easeInOut()).tto({ x : obj.get_x(), y : obj.get_y()},speed,motion_easing_Sine.get_easeIn()).call(co_doubleduck_utils_TweenAnimator.shake,[obj,strength,speed,amount]);
};
var co_doubleduck_utils_TweenChain = function(obj,overwrite,debug) {
	if(debug == null) debug = false;
	if(overwrite == null) overwrite = false;
	if(co_doubleduck_utils_TweenChain.allowNew) {
		this._chains = [];
		this._currIndex = 0;
		this._obj = obj;
		this._debug = debug;
		this._overwrite = overwrite;
		this._activated = false;
	} else throw new js__$Boot_HaxeError("Wrong call to function new(), use TweenChain.get()");
};
$hxClasses["co.doubleduck.utils.TweenChain"] = co_doubleduck_utils_TweenChain;
co_doubleduck_utils_TweenChain.__name__ = ["co","doubleduck","utils","TweenChain"];
co_doubleduck_utils_TweenChain.get = function(obj,overwrite,debug) {
	if(debug == null) debug = false;
	if(overwrite == null) overwrite = false;
	co_doubleduck_utils_TweenChain.allowNew = true;
	var ret = new co_doubleduck_utils_TweenChain(obj,overwrite,debug);
	co_doubleduck_utils_TweenChain.activeChains.push(ret);
	ret._id = co_doubleduck_utils_TweenChain.count;
	co_doubleduck_utils_TweenChain.count++;
	co_doubleduck_utils_TweenChain.allowNew = false;
	return ret;
};
co_doubleduck_utils_TweenChain.removeTweens = function(obj) {
	var arr = [];
	var _g = 0;
	var _g1 = co_doubleduck_utils_TweenChain.activeChains;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		if(i._obj == obj) {
			if(i._runningTween != null) motion_Actuate.stop(obj,null,false,false);
			i._chains = [];
			arr.push(i);
		}
	}
	var _g2 = 0;
	while(_g2 < arr.length) {
		var i1 = arr[_g2];
		++_g2;
		HxOverrides.remove(co_doubleduck_utils_TweenChain.activeChains,i1);
	}
};
co_doubleduck_utils_TweenChain.getActiveChains = function(withoutNulls) {
	if(withoutNulls == null) withoutNulls = false;
	if(withoutNulls) {
		var arr = [];
		var _g = 0;
		var _g1 = co_doubleduck_utils_TweenChain.activeChains;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i._obj != null) arr.push(i);
		}
		return arr;
	}
	return co_doubleduck_utils_TweenChain.activeChains;
};
co_doubleduck_utils_TweenChain.purge = function() {
	motion_Actuate.reset();
	co_doubleduck_utils_TweenChain.activeChains = null;
	co_doubleduck_utils_TweenChain.activeChains = [];
};
co_doubleduck_utils_TweenChain.prototype = {
	tto: function(props,duration,ease,onUpdate) {
		var chain = this.getNewChainHash();
		if(duration == 0) chain.set("type",co_doubleduck_utils_ChainTypes.APPLY); else {
			if(ease == null) ease = motion_easing_Linear.get_easeNone();
			chain.set("type",co_doubleduck_utils_ChainTypes.TWEEN);
			chain.set("duration",duration / 1000);
			if(__map_reserved.ease != null) chain.setReserved("ease",ease); else chain.h["ease"] = ease;
			chain.set("onUpdate",onUpdate);
		}
		chain.set("props",props);
		this.addToQueue(chain);
		return this;
	}
	,wait: function(duration) {
		if(duration == null) duration = 10;
		if(duration == 0) return this;
		var chain = this.getNewChainHash();
		chain.set("duration",duration / 1000);
		chain.set("type",co_doubleduck_utils_ChainTypes.TIMER);
		this.addToQueue(chain);
		return this;
	}
	,call: function(handler,params) {
		var chain = this.getNewChainHash();
		if(params == null) params = [];
		chain.set("handler",handler);
		if(__map_reserved.params != null) chain.setReserved("params",params); else chain.h["params"] = params;
		chain.set("type",co_doubleduck_utils_ChainTypes.CALL);
		this.addToQueue(chain);
		return this;
	}
	,addToQueue: function(d) {
		this._chains.push(d);
		if(!this._activated) {
			if((__map_reserved.duration != null?d.getReserved("duration"):d.h["duration"]) == 0) {
				if((__map_reserved.type != null?d.getReserved("type"):d.h["type"]) == co_doubleduck_utils_ChainTypes.APPLY) motion_Actuate.apply(this._obj,__map_reserved.props != null?d.getReserved("props"):d.h["props"]); else if((__map_reserved.type != null?d.getReserved("type"):d.h["type"]) == co_doubleduck_utils_ChainTypes.CALL) Reflect.callMethod(__map_reserved.handler != null?d.getReserved("handler"):d.h["handler"],__map_reserved.handler != null?d.getReserved("handler"):d.h["handler"],__map_reserved.params != null?d.getReserved("params"):d.h["params"]);
				this._currIndex++;
			} else {
				this._activated = true;
				this.act();
			}
		}
	}
	,act: function() {
		if(this._currIndex >= this._chains.length) {
			this.destroy();
			return;
		}
		var currChain = this._chains[this._currIndex];
		this._currIndex++;
		this._runningTween = null;
		this.debugTrace(this._currIndex + "/" + this._chains.length + " :: " + Std.string(currChain));
		if((__map_reserved.type != null?currChain.getReserved("type"):currChain.h["type"]) == co_doubleduck_utils_ChainTypes.TWEEN) {
			if((__map_reserved.onUpdate != null?currChain.getReserved("onUpdate"):currChain.h["onUpdate"]) == null) this._runningTween = motion_Actuate.tween(this._obj,__map_reserved.duration != null?currChain.getReserved("duration"):currChain.h["duration"],__map_reserved.props != null?currChain.getReserved("props"):currChain.h["props"],this._overwrite).ease(__map_reserved.ease != null?currChain.getReserved("ease"):currChain.h["ease"]).onComplete($bind(this,this.doneActuateTween)); else this._runningTween = motion_Actuate.tween(this._obj,__map_reserved.duration != null?currChain.getReserved("duration"):currChain.h["duration"],__map_reserved.props != null?currChain.getReserved("props"):currChain.h["props"],this._overwrite).ease(__map_reserved.ease != null?currChain.getReserved("ease"):currChain.h["ease"]).onUpdate(__map_reserved.onUpdate != null?currChain.getReserved("onUpdate"):currChain.h["onUpdate"],[this._obj]).onComplete($bind(this,this.doneActuateTween));
			this._runningTween.autoVisible(co_doubleduck_utils_TweenChain.autoVisible);
		} else if((__map_reserved.type != null?currChain.getReserved("type"):currChain.h["type"]) == co_doubleduck_utils_ChainTypes.APPLY) {
			motion_Actuate.apply(this._obj,__map_reserved.props != null?currChain.getReserved("props"):currChain.h["props"]);
			this.act();
		} else if((__map_reserved.type != null?currChain.getReserved("type"):currChain.h["type"]) == co_doubleduck_utils_ChainTypes.TIMER) motion_Actuate.timer(__map_reserved.duration != null?currChain.getReserved("duration"):currChain.h["duration"]).onComplete($bind(this,this.act)); else if((__map_reserved.type != null?currChain.getReserved("type"):currChain.h["type"]) == co_doubleduck_utils_ChainTypes.CALL) {
			Reflect.callMethod(__map_reserved.handler != null?currChain.getReserved("handler"):currChain.h["handler"],__map_reserved.handler != null?currChain.getReserved("handler"):currChain.h["handler"],__map_reserved.params != null?currChain.getReserved("params"):currChain.h["params"]);
			this.act();
		}
	}
	,doneActuateTween: function() {
		var currChain = this._chains[this._currIndex - 1];
		var _g = 0;
		var _g1 = Reflect.fields(__map_reserved.props != null?currChain.getReserved("props"):currChain.h["props"]);
		while(_g < _g1.length) {
			var prop = _g1[_g];
			++_g;
			var val = Reflect.getProperty(__map_reserved.props != null?currChain.getReserved("props"):currChain.h["props"],prop);
			Reflect.setProperty(this._obj,prop,val);
		}
		this.act();
	}
	,destroy: function() {
		HxOverrides.remove(co_doubleduck_utils_TweenChain.activeChains,this);
		this._chains = null;
		if(this._obj == null) co_doubleduck_utils_TweenChain.removeTweens(this._obj);
	}
	,debugTrace: function(d) {
		if(this._debug) null;
	}
	,getNewChainHash: function() {
		var ret = new haxe_ds_StringMap();
		if(__map_reserved.type != null) ret.setReserved("type",null); else ret.h["type"] = null;
		if(__map_reserved.duration != null) ret.setReserved("duration",0); else ret.h["duration"] = 0;
		return ret;
	}
	,__class__: co_doubleduck_utils_TweenChain
};
var co_doubleduck_utils_ChainTypes = $hxClasses["co.doubleduck.utils.ChainTypes"] = { __ename__ : ["co","doubleduck","utils","ChainTypes"], __constructs__ : ["TWEEN","TIMER","CALL","APPLY"] };
co_doubleduck_utils_ChainTypes.TWEEN = ["TWEEN",0];
co_doubleduck_utils_ChainTypes.TWEEN.toString = $estr;
co_doubleduck_utils_ChainTypes.TWEEN.__enum__ = co_doubleduck_utils_ChainTypes;
co_doubleduck_utils_ChainTypes.TIMER = ["TIMER",1];
co_doubleduck_utils_ChainTypes.TIMER.toString = $estr;
co_doubleduck_utils_ChainTypes.TIMER.__enum__ = co_doubleduck_utils_ChainTypes;
co_doubleduck_utils_ChainTypes.CALL = ["CALL",2];
co_doubleduck_utils_ChainTypes.CALL.toString = $estr;
co_doubleduck_utils_ChainTypes.CALL.__enum__ = co_doubleduck_utils_ChainTypes;
co_doubleduck_utils_ChainTypes.APPLY = ["APPLY",3];
co_doubleduck_utils_ChainTypes.APPLY.toString = $estr;
co_doubleduck_utils_ChainTypes.APPLY.__enum__ = co_doubleduck_utils_ChainTypes;
co_doubleduck_utils_ChainTypes.__empty_constructs__ = [co_doubleduck_utils_ChainTypes.TWEEN,co_doubleduck_utils_ChainTypes.TIMER,co_doubleduck_utils_ChainTypes.CALL,co_doubleduck_utils_ChainTypes.APPLY];
var co_doubleduck_utils_Utils = function() { };
$hxClasses["co.doubleduck.utils.Utils"] = co_doubleduck_utils_Utils;
co_doubleduck_utils_Utils.__name__ = ["co","doubleduck","utils","Utils"];
co_doubleduck_utils_Utils.delayedCall = function(delay,call,args,obj) {
	if(obj != null) co_doubleduck_utils_TweenChain.get(obj).wait(delay * 1000 | 0).call(call,args); else motion_Actuate.timer(delay).onComplete(call,args);
};
co_doubleduck_utils_Utils.rectOverlap = function(r1,r2) {
	if(r2.contains(r1.x,r1.y)) return true;
	if(r2.contains(r1.x + r1.width,r1.y + r1.height)) return true;
	if(r2.contains(r1.x + r1.width,r1.y)) return true;
	if(r2.contains(r1.x,r1.y + r1.height)) return true;
	if(r1.contains(r2.x,r2.y)) return true;
	if(r1.contains(r2.x + r2.width,r2.y + r2.height)) return true;
	if(r1.contains(r2.x + r2.width,r2.y)) return true;
	if(r1.contains(r2.x,r2.y + r2.height)) return true;
	return false;
};
co_doubleduck_utils_Utils.map = function(value,aMin,aMax,bMin,bMax) {
	if(bMax == null) bMax = 1;
	if(bMin == null) bMin = 0;
	if(value <= aMin) return bMin;
	if(value >= aMax) return bMax;
	return (value - aMin) * (bMax - bMin) / (aMax - aMin) + bMin;
};
co_doubleduck_utils_Utils.intRange = function(range) {
	var parts = range.split("-");
	var res = [];
	var _g = 0;
	while(_g < parts.length) {
		var part = parts[_g];
		++_g;
		res.push(Std.parseInt(part));
	}
	return res;
};
co_doubleduck_utils_Utils.nrand = function() {
	return (Math.random() + Math.random()) / 2;
};
co_doubleduck_utils_Utils.getDeviceType = function() {
	return co_doubleduck_utils_DeviceType.HTML5;
	return null;
};
co_doubleduck_utils_Utils.shuffleArray = function(arr) {
	var tmp;
	var j;
	var i = arr.length;
	while(i > 0) {
		j = Std["int"](Math.random() * i);
		tmp = arr[--i];
		arr[i] = arr[j];
		arr[j] = tmp;
	}
};
co_doubleduck_utils_Utils.sign = function(n) {
	if(n < 0) return -1;
	return 1;
};
co_doubleduck_utils_Utils.createBitmap = function(width,height,fillColor) {
	if(fillColor == null) fillColor = -1;
	return new openfl_display_Bitmap(new openfl_display_BitmapData(width,height,true,fillColor));
};
co_doubleduck_utils_Utils.epochTime = function() {
	return new Date().getTime() / 1000;
};
co_doubleduck_utils_Utils.disableAndroidBackBtn = function() {
};
var co_doubleduck_utils_DeviceType = $hxClasses["co.doubleduck.utils.DeviceType"] = { __ename__ : ["co","doubleduck","utils","DeviceType"], __constructs__ : ["iPhone3","iPhone4","iPhone5","iPad","iPadRetina","Android","DesktopFlash","DesktopNative","HTML5"] };
co_doubleduck_utils_DeviceType.iPhone3 = ["iPhone3",0];
co_doubleduck_utils_DeviceType.iPhone3.toString = $estr;
co_doubleduck_utils_DeviceType.iPhone3.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.iPhone4 = ["iPhone4",1];
co_doubleduck_utils_DeviceType.iPhone4.toString = $estr;
co_doubleduck_utils_DeviceType.iPhone4.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.iPhone5 = ["iPhone5",2];
co_doubleduck_utils_DeviceType.iPhone5.toString = $estr;
co_doubleduck_utils_DeviceType.iPhone5.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.iPad = ["iPad",3];
co_doubleduck_utils_DeviceType.iPad.toString = $estr;
co_doubleduck_utils_DeviceType.iPad.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.iPadRetina = ["iPadRetina",4];
co_doubleduck_utils_DeviceType.iPadRetina.toString = $estr;
co_doubleduck_utils_DeviceType.iPadRetina.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.Android = ["Android",5];
co_doubleduck_utils_DeviceType.Android.toString = $estr;
co_doubleduck_utils_DeviceType.Android.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.DesktopFlash = ["DesktopFlash",6];
co_doubleduck_utils_DeviceType.DesktopFlash.toString = $estr;
co_doubleduck_utils_DeviceType.DesktopFlash.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.DesktopNative = ["DesktopNative",7];
co_doubleduck_utils_DeviceType.DesktopNative.toString = $estr;
co_doubleduck_utils_DeviceType.DesktopNative.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.HTML5 = ["HTML5",8];
co_doubleduck_utils_DeviceType.HTML5.toString = $estr;
co_doubleduck_utils_DeviceType.HTML5.__enum__ = co_doubleduck_utils_DeviceType;
co_doubleduck_utils_DeviceType.__empty_constructs__ = [co_doubleduck_utils_DeviceType.iPhone3,co_doubleduck_utils_DeviceType.iPhone4,co_doubleduck_utils_DeviceType.iPhone5,co_doubleduck_utils_DeviceType.iPad,co_doubleduck_utils_DeviceType.iPadRetina,co_doubleduck_utils_DeviceType.Android,co_doubleduck_utils_DeviceType.DesktopFlash,co_doubleduck_utils_DeviceType.DesktopNative,co_doubleduck_utils_DeviceType.HTML5];
var co_doubleduck_utils_data_StorageAdapter = function() {
	this.autoFlush = true;
};
$hxClasses["co.doubleduck.utils.data.StorageAdapter"] = co_doubleduck_utils_data_StorageAdapter;
co_doubleduck_utils_data_StorageAdapter.__name__ = ["co","doubleduck","utils","data","StorageAdapter"];
co_doubleduck_utils_data_StorageAdapter.get = function(domain,type) {
	if(type == co_doubleduck_utils_data_StorageAdapterType.LOCAL_STORAGE) return new co_doubleduck_utils_data_LocalStorageAdapter(domain); else if(type == co_doubleduck_utils_data_StorageAdapterType.SHARED_OBJECT) return new co_doubleduck_utils_data_SharedObjectAdapter(domain);
	return null;
};
co_doubleduck_utils_data_StorageAdapter.prototype = {
	getValue: function(key) {
		throw new js__$Boot_HaxeError("DDException: function not implemented!");
		return null;
	}
	,setValue: function(key,value) {
		throw new js__$Boot_HaxeError("DDException: function not implemented!");
		null;
		return;
	}
	,removeValue: function(key) {
		throw new js__$Boot_HaxeError("DDException: function not implemented!");
		null;
		return;
	}
	,rawData: function() {
		throw new js__$Boot_HaxeError("DDException: function not implemented!");
		return null;
	}
	,clear: function() {
		throw new js__$Boot_HaxeError("DDException: function not implemented!");
		null;
		return;
	}
	,flush: function() {
	}
	,getString: function(key) {
		var result = this.getValue(key[0]);
		return result;
	}
	,setString: function(key,value) {
		this.setValue(key[0],value);
	}
	,initString: function(key,defaultValue) {
		if(defaultValue == null) defaultValue = "";
		if(this.getString(key) == null) this.setString(key,defaultValue);
	}
	,getFloat: function(key) {
		var result = this.getValue(key[0]);
		return result;
	}
	,setFloat: function(key,value) {
		this.setValue(key[0],value);
	}
	,initFloat: function(key,defaultValue) {
		if(defaultValue == null) defaultValue = 0;
		if(this.getString(key) == null) this.setFloat(key,defaultValue);
	}
	,getInt: function(key) {
		var result = Std["int"](this.getValue(key[0]));
		return result;
	}
	,setInt: function(key,value) {
		this.setValue(key[0],value);
	}
	,initInt: function(key,defaultValue) {
		if(defaultValue == null) defaultValue = 0;
		if(this.getString(key) == null) this.setInt(key,defaultValue);
	}
	,__class__: co_doubleduck_utils_data_StorageAdapter
};
var co_doubleduck_utils_data_LocalStorageAdapter = function(domain) {
	co_doubleduck_utils_data_StorageAdapter.call(this);
	this._domain = domain;
	this._ls = this.getLocalStorage();
};
$hxClasses["co.doubleduck.utils.data.LocalStorageAdapter"] = co_doubleduck_utils_data_LocalStorageAdapter;
co_doubleduck_utils_data_LocalStorageAdapter.__name__ = ["co","doubleduck","utils","data","LocalStorageAdapter"];
co_doubleduck_utils_data_LocalStorageAdapter.__super__ = co_doubleduck_utils_data_StorageAdapter;
co_doubleduck_utils_data_LocalStorageAdapter.prototype = $extend(co_doubleduck_utils_data_StorageAdapter.prototype,{
	getValue: function(key) {
		var result = this._ls.getItem(this._domain + key);
		if(result == null) return null;
		return JSON.parse(result);
	}
	,setValue: function(key,value) {
		this._ls.setItem(this._domain + key,JSON.stringify(value));
	}
	,removeValue: function(key) {
		this._ls.removeItem(this._domain + key);
	}
	,clear: function() {
		this._ls.clear();
	}
	,rawData: function() {
		return this._ls;
	}
	,getLocalStorage: function() {
		var ls = js_Browser.getLocalStorage();
		if(ls != null) try {
			ls.setItem("ddstoragetest","1");
			ls.getItem("ddstoragetest");
			ls.removeItem("ddstoragetest");
			return ls;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
		}
		return new co_doubleduck_utils_data_DummyLocalStorage();
	}
	,__class__: co_doubleduck_utils_data_LocalStorageAdapter
});
var co_doubleduck_utils_data_DummyLocalStorage = function() {
	this.data = { };
};
$hxClasses["co.doubleduck.utils.data.DummyLocalStorage"] = co_doubleduck_utils_data_DummyLocalStorage;
co_doubleduck_utils_data_DummyLocalStorage.__name__ = ["co","doubleduck","utils","data","DummyLocalStorage"];
co_doubleduck_utils_data_DummyLocalStorage.prototype = {
	setItem: function(key,value) {
		Reflect.setProperty(this.data,key,value);
	}
	,getItem: function(key) {
		return Reflect.getProperty(this.data,key);
	}
	,removeItem: function(key) {
		Reflect.deleteField(this.data,key);
	}
	,clear: function() {
		this.data = { };
	}
	,__class__: co_doubleduck_utils_data_DummyLocalStorage
};
var co_doubleduck_utils_data_SharedObjectAdapter = function(domain) {
	co_doubleduck_utils_data_StorageAdapter.call(this);
	this._domain = domain;
	var localPath = "";
	this._data = openfl_net_SharedObject.getLocal(domain + "savedata",localPath);
};
$hxClasses["co.doubleduck.utils.data.SharedObjectAdapter"] = co_doubleduck_utils_data_SharedObjectAdapter;
co_doubleduck_utils_data_SharedObjectAdapter.__name__ = ["co","doubleduck","utils","data","SharedObjectAdapter"];
co_doubleduck_utils_data_SharedObjectAdapter.__super__ = co_doubleduck_utils_data_StorageAdapter;
co_doubleduck_utils_data_SharedObjectAdapter.prototype = $extend(co_doubleduck_utils_data_StorageAdapter.prototype,{
	getValue: function(key) {
		return Reflect.getProperty(this._data.data,key);
	}
	,setValue: function(key,value) {
		this._data.data[key] = value;
		if(this.autoFlush) this._data.flush();
	}
	,removeValue: function(key) {
		Reflect.deleteField(this._data.data,key);
		if(this.autoFlush) this._data.flush();
	}
	,clear: function() {
		this._data.clear();
		if(this.autoFlush) this._data.flush();
	}
	,rawData: function() {
		return this._data;
	}
	,flush: function() {
		this._data.flush();
	}
	,__class__: co_doubleduck_utils_data_SharedObjectAdapter
});
var co_doubleduck_utils_data_StorageAdapterType = $hxClasses["co.doubleduck.utils.data.StorageAdapterType"] = { __ename__ : ["co","doubleduck","utils","data","StorageAdapterType"], __constructs__ : ["LOCAL_STORAGE","SHARED_OBJECT"] };
co_doubleduck_utils_data_StorageAdapterType.LOCAL_STORAGE = ["LOCAL_STORAGE",0];
co_doubleduck_utils_data_StorageAdapterType.LOCAL_STORAGE.toString = $estr;
co_doubleduck_utils_data_StorageAdapterType.LOCAL_STORAGE.__enum__ = co_doubleduck_utils_data_StorageAdapterType;
co_doubleduck_utils_data_StorageAdapterType.SHARED_OBJECT = ["SHARED_OBJECT",1];
co_doubleduck_utils_data_StorageAdapterType.SHARED_OBJECT.toString = $estr;
co_doubleduck_utils_data_StorageAdapterType.SHARED_OBJECT.__enum__ = co_doubleduck_utils_data_StorageAdapterType;
co_doubleduck_utils_data_StorageAdapterType.__empty_constructs__ = [co_doubleduck_utils_data_StorageAdapterType.LOCAL_STORAGE,co_doubleduck_utils_data_StorageAdapterType.SHARED_OBJECT];
var com_funtomic_GameOpsStatus = $hxClasses["com.funtomic.GameOpsStatus"] = { __ename__ : ["com","funtomic","GameOpsStatus"], __constructs__ : ["UNINITIALIZED","INITIALIZING","INITIALIZED","INITIALIZE_FAILED","QUITTING"] };
com_funtomic_GameOpsStatus.UNINITIALIZED = ["UNINITIALIZED",0];
com_funtomic_GameOpsStatus.UNINITIALIZED.toString = $estr;
com_funtomic_GameOpsStatus.UNINITIALIZED.__enum__ = com_funtomic_GameOpsStatus;
com_funtomic_GameOpsStatus.INITIALIZING = ["INITIALIZING",1];
com_funtomic_GameOpsStatus.INITIALIZING.toString = $estr;
com_funtomic_GameOpsStatus.INITIALIZING.__enum__ = com_funtomic_GameOpsStatus;
com_funtomic_GameOpsStatus.INITIALIZED = ["INITIALIZED",2];
com_funtomic_GameOpsStatus.INITIALIZED.toString = $estr;
com_funtomic_GameOpsStatus.INITIALIZED.__enum__ = com_funtomic_GameOpsStatus;
com_funtomic_GameOpsStatus.INITIALIZE_FAILED = ["INITIALIZE_FAILED",3];
com_funtomic_GameOpsStatus.INITIALIZE_FAILED.toString = $estr;
com_funtomic_GameOpsStatus.INITIALIZE_FAILED.__enum__ = com_funtomic_GameOpsStatus;
com_funtomic_GameOpsStatus.QUITTING = ["QUITTING",4];
com_funtomic_GameOpsStatus.QUITTING.toString = $estr;
com_funtomic_GameOpsStatus.QUITTING.__enum__ = com_funtomic_GameOpsStatus;
com_funtomic_GameOpsStatus.__empty_constructs__ = [com_funtomic_GameOpsStatus.UNINITIALIZED,com_funtomic_GameOpsStatus.INITIALIZING,com_funtomic_GameOpsStatus.INITIALIZED,com_funtomic_GameOpsStatus.INITIALIZE_FAILED,com_funtomic_GameOpsStatus.QUITTING];
var com_funtomic_GameOps = function() { };
$hxClasses["com.funtomic.GameOps"] = com_funtomic_GameOps;
com_funtomic_GameOps.__name__ = ["com","funtomic","GameOps"];
com_funtomic_GameOps.gameVersion = null;
com_funtomic_GameOps.domain = null;
com_funtomic_GameOps.userID = null;
com_funtomic_GameOps.fbId = null;
com_funtomic_GameOps.experimentId = null;
com_funtomic_GameOps.alternativeId = null;
com_funtomic_GameOps.FBAppId = null;
com_funtomic_GameOps.platform = null;
com_funtomic_GameOps.isNative = null;
com_funtomic_GameOps.url = null;
com_funtomic_GameOps.hostType = null;
com_funtomic_GameOps.lastLevelNumber = null;
com_funtomic_GameOps.gameConfig = null;
com_funtomic_GameOps.elapsedPlayTimeAtInit = null;
com_funtomic_GameOps.elapsedGameTime = null;
com_funtomic_GameOps.levelsWon = null;
com_funtomic_GameOps.sessionId = null;
com_funtomic_GameOps.mediaSource = null;
com_funtomic_GameOps.campaignName = null;
com_funtomic_GameOps.isHidden = null;
com_funtomic_GameOps.gameOpsStorage = null;
com_funtomic_GameOps.GOPFuntomicAds = null;
com_funtomic_GameOps.GOPDevice = null;
com_funtomic_GameOps.advertisingId = null;
com_funtomic_GameOps.init = function(pDomain,pGameVersion,pDefaultConfig,pGameState,callback) {
	if(com_funtomic_GameOps.status != com_funtomic_GameOpsStatus.UNINITIALIZED) return;
	com_funtomic_GameOps.status = com_funtomic_GameOpsStatus.INITIALIZING;
	com_funtomic_GameOps.domain = pDomain;
	com_funtomic_GameOps.gameVersion = pGameVersion;
	com_funtomic_GameOps.gameOpsStorage = Type.resolveClass("com.funtomic.GameOpsStorage");
	if(com_funtomic_GameOps.gameOpsStorage != null) (Reflect.field(com_funtomic_GameOps.gameOpsStorage,"init"))();
	com_funtomic_GameOps.readLocalStorage();
	com_funtomic_GameOps.readGameStateLocalStorage();
	com_funtomic_GameOps.url = window.location.href;
	com_funtomic_GameOps.startTimer("session");
	if(com_funtomic_GameOps.isInKiziWrapper()) {
		com_funtomic_GameOps.isNative = true;
		com_funtomic_GameOps.platform = com_funtomic_GameOps.getPlatform();
	} else {
		com_funtomic_GameOps.platform = "web";
		com_funtomic_GameOps.isNative = false;
	}
	com_funtomic_GameOps.hostType = com_funtomic_GameOps.getUserOS();
	if(com_funtomic_GameOps.isInKiziApp()) com_funtomic_GameOps.hostType += "_kizi_app"; else if(com_funtomic_GameOps.isNative) com_funtomic_GameOps.hostType += "_native_app"; else com_funtomic_GameOps.hostType += "_browser";
	com_funtomic_GameOps.sessionId = com_funtomic_GameOps.generateRandomString(20);
	if(com_funtomic_GameOps.localStorage.installDate == null) {
		com_funtomic_GameOps.localStorage.installDate = Math.round(new Date().getTime() / 1000);
		com_funtomic_GameOps.firstSession = true;
		com_funtomic_GameOps.reportEvent("first_run");
	}
	com_funtomic_GameOps.elapsedGameTime = com_funtomic_GameOps.storageGet("FuntomicGameOps-ElapsedGameTime",0);
	if(com_funtomic_GameOps.localStorage.elapsedGameTime != null) {
		com_funtomic_GameOps.elapsedGameTime = com_funtomic_GameOps.localStorage.elapsedGameTime;
		Reflect.deleteField(com_funtomic_GameOps.localStorage,"elapsedGameTime");
	}
	if(com_funtomic_GameOps.localStorage.originalVersion == null) com_funtomic_GameOps.localStorage.originalVersion = com_funtomic_GameOps.gameVersion;
	com_funtomic_GameOps.elapsedPlayTimeAtInit = com_funtomic_GameOps.elapsedGameTime;
	com_funtomic_GameOps.userID = com_funtomic_GameOps.localStorage.userID;
	var html5ApiUserId = com_funtomic_GameOps.KiziAPI_getUserId();
	if(html5ApiUserId != null) com_funtomic_GameOps.userID = html5ApiUserId;
	com_funtomic_GameOps.levelsWon = 0;
	if(com_funtomic_GameOps.localStorage.config == null || com_funtomic_GameOps.localStorage.configForVersion != null && com_funtomic_GameOps.localStorage.configForVersion != com_funtomic_GameOps.gameVersion) com_funtomic_GameOps.localStorage.config = pDefaultConfig;
	com_funtomic_GameOps.gameConfig = com_funtomic_GameOps.localStorage.config;
	if(com_funtomic_GameOps.localStorage.isSynced == null) com_funtomic_GameOps.localStorage.isSynced = false;
	if(com_funtomic_GameOps.localStorage.experimentId != null) com_funtomic_GameOps.experimentId = com_funtomic_GameOps.localStorage.experimentId;
	if(com_funtomic_GameOps.localStorage.alternativeId != null) com_funtomic_GameOps.alternativeId = com_funtomic_GameOps.localStorage.alternativeId;
	var lastSessionEndEvent = com_funtomic_GameOps.storageGet("FuntomicGameOps-SessionEndEvent",null);
	if(lastSessionEndEvent != null) {
		com_funtomic_GameOps.reportEvents([lastSessionEndEvent]);
		com_funtomic_GameOps.storageRemove("FuntomicGameOps-SessionEndEvent");
	}
	var prefix = null;
	if(Reflect.field(window.document,"hidden") != null) prefix = ""; else if(Reflect.field(window.document,"webkitHidden")) prefix = "webkit";
	var onVisibilityChanged = function(_) {
		com_funtomic_GameOps.isHidden = Reflect.field(window.document,prefix == ""?"hidden":prefix + "Hidden");
		if(com_funtomic_GameOps.isHidden) com_funtomic_GameOps.sessionEnd();
		com_funtomic_GameOps.pauseTimers(com_funtomic_GameOps.isHidden);
	};
	var onPageTransitionChange = function(event) {
		com_funtomic_GameOps.isHidden = event.type == "pagehide";
		if(com_funtomic_GameOps.isHidden) com_funtomic_GameOps.sessionEnd();
		com_funtomic_GameOps.pauseTimers(com_funtomic_GameOps.isHidden);
	};
	if(prefix != null) window.document.addEventListener(prefix + "visibilitychange",onVisibilityChanged,false); else {
		window.addEventListener("pageshow",onPageTransitionChange,false);
		window.addEventListener("pagehide",onPageTransitionChange,false);
	}
	var sessionEndTimer = new haxe_Timer(5000);
	sessionEndTimer.run = function() {
		com_funtomic_GameOps.sessionEnd();
	};
	com_funtomic_GameOps.reportEvent("session_start");
	com_funtomic_GameOps.gameStateGameOpsData.elapsed_game_time = com_funtomic_GameOps.elapsedGameTime;
	com_funtomic_GameOps.gameStateGameOpsData.install_date = com_funtomic_GameOps.localStorage.installDate;
	com_funtomic_GameOps.writeLocalStorage();
	com_funtomic_GameOps.writeGameStateLocalStorage();
	pGameState.game_ops_data = com_funtomic_GameOps.gameStateGameOpsData;
	com_funtomic_GameOps.setAdvertisingIdVariable();
	com_funtomic_GameOps.loadGameConfig(pGameState,callback);
};
com_funtomic_GameOps.sendRequest = function(url,params,onSuccess,onStatus,onError,isPost,isAsync) {
	if(isAsync == null) isAsync = true;
	if(isPost == null) isPost = true;
	var request = new haxe_Http(null);
	request.url = url;
	if(params != null) {
		var _g = 0;
		var _g1 = Reflect.fields(params);
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			request.setParameter(key,Reflect.field(params,key));
		}
	}
	if(onSuccess != null) request.onData = onSuccess;
	if(onStatus != null) request.onStatus = onStatus;
	if(onError != null) request.onError = onError;
	request.request(isPost);
};
com_funtomic_GameOps.loadGameConfig = function(gameState,callback) {
	com_funtomic_GameOpsLogger.verbose(["Fetching game config for: ",com_funtomic_GameOps.domain]);
	var url = com_funtomic_GameOps.apiURLPrefix + com_funtomic_GameOps.apiConfigLocation;
	var params = { domain : com_funtomic_GameOps.domain, game_state : JSON.stringify(gameState), game_ops_version : com_funtomic_GameOps.gameOpsVersion, game_version : com_funtomic_GameOps.gameVersion, platform_name : com_funtomic_GameOps.platform};
	if(com_funtomic_GameOps.userID != null) params.user_id = com_funtomic_GameOps.userID;
	if(com_funtomic_GameOps.experimentId != null) params.experiment_id = com_funtomic_GameOps.experimentId;
	if(com_funtomic_GameOps.alternativeId != null) params.alternative_id = com_funtomic_GameOps.alternativeId;
	if(com_funtomic_GameOps.localStorage.userEmail != null) params.user_email = com_funtomic_GameOps.localStorage.userEmail;
	if(com_funtomic_GameOps.localStorage.configMd5 != null && com_funtomic_GameOps.localStorage.config != null) params.config_md5 = com_funtomic_GameOps.localStorage.configMd5;
	com_funtomic_GameOps.sendRequest(url,params,function(responseString) {
		com_funtomic_GameOps.onConfigLoadSuccess(responseString);
		if(callback != null) callback(true);
		com_funtomic_GameOps.afterInit();
	},com_funtomic_GameOps.onConfigLoadReturned,function(msg) {
		com_funtomic_GameOps.IOErrorHandler(msg);
		com_funtomic_GameOps.status = com_funtomic_GameOpsStatus.INITIALIZE_FAILED;
		if(callback != null) callback(false);
		com_funtomic_GameOps.afterInit();
	},true,false);
};
com_funtomic_GameOps.onConfigLoadReturned = function(status) {
	switch(status) {
	case 500:
		com_funtomic_GameOps.onConfigLoadFailure();
		break;
	case 0:
		com_funtomic_GameOps.onConfigLoadTimeout();
		break;
	}
};
com_funtomic_GameOps.onConfigLoadTimeout = function() {
	com_funtomic_GameOpsLogger.error(["Timeout while fetching game config from server"]);
};
com_funtomic_GameOps.onConfigLoadFailure = function() {
	com_funtomic_GameOpsLogger.error(["Error loading config"]);
};
com_funtomic_GameOps.IOErrorHandler = function(msg) {
	com_funtomic_GameOpsLogger.error(["Error caught ",msg]);
};
com_funtomic_GameOps.onConfigLoadSuccess = function(resultString) {
	var result = JSON.parse(resultString);
	com_funtomic_GameOpsLogger.verbose(["Config successfuly loaded",resultString]);
	if(result != null) {
		if(result.user_id != null) {
			com_funtomic_GameOps.userID = result.user_id;
			com_funtomic_GameOps.localStorage.userID = result.user_id;
		}
		if(result.is_debug_mode) com_funtomic_GameOps.isDebugMode = result.is_debug_mode;
		if(result.install_date) com_funtomic_GameOps.localStorage.installDate = result.install_date;
		com_funtomic_GameOps.experimentId = result.experiment_id;
		com_funtomic_GameOps.localStorage.experimentId = com_funtomic_GameOps.experimentId;
		com_funtomic_GameOps.alternativeId = result.alternative_id;
		com_funtomic_GameOps.localStorage.alternativeId = com_funtomic_GameOps.alternativeId;
		if(result.config != null) com_funtomic_GameOps.localStorage.config = result.config;
		com_funtomic_GameOps.gameConfig = com_funtomic_GameOps.localStorage.config;
		com_funtomic_GameOps.localStorage.configMd5 = result.config_md5;
		com_funtomic_GameOps.localStorage.configForVersion = com_funtomic_GameOps.gameVersion;
		com_funtomic_GameOps.localStorage.googlePublicKey = result.google_public_key;
		com_funtomic_GameOps.localStorage.appstoreId = result.appstore_id;
		com_funtomic_GameOps.writeLocalStorage();
		com_funtomic_GameOps.status = com_funtomic_GameOpsStatus.INITIALIZED;
		com_funtomic_GameOps.reportUnsentEvents();
	}
};
com_funtomic_GameOps.afterInit = function() {
	var AppsFlyerInterface = Type.resolveClass("co.doubleduck.DDAppsFlyer");
	if(AppsFlyerInterface != null) {
		var afInterface = (Reflect.field(AppsFlyerInterface,"getInstance"))();
		(Reflect.field(afInterface,"addEventListener"))(Reflect.field(AppsFlyerInterface,"INSTALL_CONVERSATION_DATA_LOADED"),function(e) {
			com_funtomic_GameOpsLogger.verbose(["got conversion data from AppsFlyer: ",Reflect.field(e,"data")]);
			com_funtomic_GameOps.appsflyerConversionData = JSON.parse(Reflect.field(e,"data"));
			if(com_funtomic_GameOps.appsflyerConversionData == null) com_funtomic_GameOps.reportEvent("appsflyer_conversion_data_received",{ 'data_empty' : true}); else {
				com_funtomic_GameOps.reportEvent("appsflyer_conversion_data_received",com_funtomic_GameOps.appsflyerConversionData);
				var _g = 0;
				var _g1 = ["media_source","pid"];
				while(_g < _g1.length) {
					var key = _g1[_g];
					++_g;
					if(Reflect.field(com_funtomic_GameOps.appsflyerConversionData,key) != null) {
						com_funtomic_GameOps.mediaSource = Reflect.field(com_funtomic_GameOps.appsflyerConversionData,key);
						break;
					}
				}
				var _g2 = 0;
				var _g11 = ["campaign","campaign_name","c"];
				while(_g2 < _g11.length) {
					var key1 = _g11[_g2];
					++_g2;
					if(Reflect.field(com_funtomic_GameOps.appsflyerConversionData,key1) != null) {
						com_funtomic_GameOps.campaignName = Reflect.field(com_funtomic_GameOps.appsflyerConversionData,key1);
						break;
					}
				}
				if(com_funtomic_GameOps.appsflyerConversionData.af_sub5 != null) com_funtomic_GameOps.localStorage.isConverted = true; else com_funtomic_GameOps.localStorage.isConverted = false;
				com_funtomic_GameOps.writeLocalStorage();
			}
		});
		(Reflect.field(afInterface,"getConversionData"))();
	}
	if(com_funtomic_GameOps.alternativeId != null) com_funtomic_GameOps.KiziAPI_setAlternativeId();
	var HTML5API_params = { game_ops_version : com_funtomic_GameOps.gameOpsVersion, game_version : com_funtomic_GameOps.gameVersion, game_session_id : com_funtomic_GameOps.sessionId, game_user_id : com_funtomic_GameOps.userID};
	if(com_funtomic_GameOps.experimentId != null) HTML5API_params.game_experiment_id = com_funtomic_GameOps.experimentId;
	if(com_funtomic_GameOps.alternativeId != null) HTML5API_params.game_alternative_id = com_funtomic_GameOps.alternativeId;
	com_funtomic_GameOps.KiziAPI_reportCustomEvent("game_ops_data",HTML5API_params);
	com_funtomic_GameOpsLogger.debug(["Executing " + com_funtomic_GameOps.deferredReportEvents.length + " deferred event report calls"]);
	var _g3 = 0;
	var _g12 = com_funtomic_GameOps.deferredReportEvents;
	while(_g3 < _g12.length) {
		var repotEventFunc = _g12[_g3];
		++_g3;
		repotEventFunc();
	}
	com_funtomic_GameOps.deferredReportEvents = [];
	try {
		if(com_funtomic_GameOps.gameConfig.eval_on_after_init != null && com_funtomic_GameOps.gameConfig.eval_on_after_init != "") {
			window.evalInContext = function(js, context) { return function() { return eval(js); }.call(context); }
			var evalInContext = Reflect.field(window,"evalInContext");
			evalInContext(com_funtomic_GameOps.gameConfig.eval_on_after_init,com_funtomic_GameOps);
		}
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
		com_funtomic_GameOps.reportEvent("error_eval",{ code : com_funtomic_GameOps.gameConfig.eval_on_after_init, message : Std.string(e1)});
	}
	var _g4 = 0;
	var _g13 = com_funtomic_GameOps.onInitDoneFunctions;
	while(_g4 < _g13.length) {
		var func = _g13[_g4];
		++_g4;
		func();
	}
};
com_funtomic_GameOps.getConfig = function() {
	return com_funtomic_GameOps.gameConfig;
};
com_funtomic_GameOps.getEventsStaticParams = function(events) {
	var data = { domain : com_funtomic_GameOps.domain, uuid : com_funtomic_GameOps.userID, platform : com_funtomic_GameOps.platform, is_native : com_funtomic_GameOps.isNative, is_synced : com_funtomic_GameOps.localStorage.isSynced, install_date : com_funtomic_GameOps.localStorage.installDate, original_version : com_funtomic_GameOps.localStorage.originalVersion, partial_data : com_funtomic_GameOps.localStorage.partialData, is_in_kizi_app : com_funtomic_GameOps.isInKiziApp(), is_in_kizi_web : com_funtomic_GameOps.isInKiziWeb(), is_in_kizi_mobile_web : com_funtomic_GameOps.isInKiziMobileWeb(), host_type : com_funtomic_GameOps.hostType, events : events};
	try {
		var campaignData = Reflect.field(window,"jsinterface").getCampaignData();
		var res = JSON.parse(campaignData);
		var _g = 0;
		var _g1 = Reflect.fields(res);
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			Reflect.setField(data,key,Reflect.field(res,key));
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
	}
	if(com_funtomic_GameOps.url != null) data.url = com_funtomic_GameOps.url;
	if(com_funtomic_GameOps.localStorage.isConverted != null) data.is_converted = com_funtomic_GameOps.localStorage.isConverted;
	if(com_funtomic_GameOps.mediaSource != null) data.media_source = com_funtomic_GameOps.mediaSource;
	if(com_funtomic_GameOps.campaignName != null) data.campaign_name = com_funtomic_GameOps.campaignName;
	return data;
};
com_funtomic_GameOps.reportEvents = function(events) {
	if(com_funtomic_GameOps.status != com_funtomic_GameOpsStatus.INITIALIZED) {
		com_funtomic_GameOps.queueEvents(events);
		return;
	}
	var url = com_funtomic_GameOps.apiURLPrefix + com_funtomic_GameOps.apiEventsLocation;
	var data = com_funtomic_GameOps.getEventsStaticParams(events);
	var params = { domain : com_funtomic_GameOps.domain, data : JSON.stringify(data)};
	com_funtomic_GameOpsLogger.verbose(["Posting event to:",url]);
	com_funtomic_GameOps.sendRequest(url,params,com_funtomic_GameOps.eventReportSucceeded,function(status) {
		com_funtomic_GameOps.onEventReportReturned(status,events);
	},com_funtomic_GameOps.IOErrorHandler);
	com_funtomic_GameOps.sessionEnd();
};
com_funtomic_GameOps.onEventReportReturned = function(status,events) {
	switch(status) {
	case 500:
		com_funtomic_GameOps.eventReportFailed();
		break;
	case 0:
		com_funtomic_GameOps.eventReportTimeout(events);
		break;
	}
};
com_funtomic_GameOps.eventReportTimeout = function(events) {
	com_funtomic_GameOpsLogger.error(["Report event timeout"]);
	com_funtomic_GameOps.queueEvents(events);
};
com_funtomic_GameOps.eventReportFailed = function() {
	com_funtomic_GameOpsLogger.error(["Report event failed"]);
	com_funtomic_GameOps.localStorage.unsentEvents = [];
	com_funtomic_GameOps.localStorage.partialData = true;
	com_funtomic_GameOps.writeLocalStorage();
};
com_funtomic_GameOps.eventReportSucceeded = function(data) {
	com_funtomic_GameOpsLogger.verbose(["Event Posted " + data]);
	com_funtomic_GameOps.reportUnsentEvents();
};
com_funtomic_GameOps.reportEvent = function(eventType,params) {
	if(com_funtomic_GameOps.isEventsTraceOnly) return;
	var _g = com_funtomic_GameOps.status;
	switch(_g[1]) {
	case 1:
		com_funtomic_GameOps.deferredReportEvents.push(function() {
			com_funtomic_GameOps.reportEvent(eventType,params);
		});
		break;
	default:
		var event = com_funtomic_GameOps.prepareEventObject(eventType,params);
		com_funtomic_GameOps.reportEvents([event]);
	}
};
com_funtomic_GameOps.prepareEventObject = function(eventType,params) {
	var timestamp = Std.string(new Date().getTime() / 1000);
	var event = { event_type : eventType, timestamp : timestamp};
	if(com_funtomic_GameOps.experimentId != null) event.experiment_id = com_funtomic_GameOps.experimentId;
	if(com_funtomic_GameOps.alternativeId != null) event.alternative_id = com_funtomic_GameOps.alternativeId;
	var elapsedSessionTime = com_funtomic_GameOps.sampleTimer("session");
	event.elapsed_session_time = Math.round(elapsedSessionTime / 1000);
	event.elapsed_play_time = Math.round(com_funtomic_GameOps.elapsedPlayTimeAtInit + elapsedSessionTime / 1000);
	event.session_id = com_funtomic_GameOps.sessionId;
	event.game_ops_version = com_funtomic_GameOps.gameOpsVersion;
	event.game_version = com_funtomic_GameOps.gameVersion;
	if(com_funtomic_GameOps.firstSession) event.first_session = true;
	if(com_funtomic_GameOps.fbId != null) event.fb_id = com_funtomic_GameOps.fbId;
	if(com_funtomic_GameOps.advertisingId != null) event.advertising_id = com_funtomic_GameOps.advertisingId;
	event = com_funtomic_GameOps.extendObject(event,params);
	if(com_funtomic_GameOps.additionalEventsParams != null) event = com_funtomic_GameOps.extendObject(event,com_funtomic_GameOps.additionalEventsParams);
	return event;
};
com_funtomic_GameOps.queueEvents = function(events) {
	com_funtomic_GameOpsLogger.verbose(["Queuing events:" + JSON.stringify(events)]);
	if(com_funtomic_GameOps.localStorage.unsentEvents == null) com_funtomic_GameOps.localStorage.unsentEvents = [];
	var _g = 0;
	while(_g < events.length) {
		var event = events[_g];
		++_g;
		com_funtomic_GameOps.localStorage.unsentEvents.push(event);
	}
	if(com_funtomic_GameOps.localStorage.unsentEvents.length > com_funtomic_GameOps.MAX_SAVED_UNSENT_EVENTS) {
		com_funtomic_GameOps.localStorage.unsentEvents = [];
		com_funtomic_GameOps.localStorage.partialData = true;
	}
	com_funtomic_GameOps.writeLocalStorage();
	com_funtomic_GameOpsLogger.verbose(["There are now " + Std.string(com_funtomic_GameOps.localStorage.unsentEvents.length) + " unsent events."]);
};
com_funtomic_GameOps.reportUnsentEvents = function() {
	if(com_funtomic_GameOps.localStorage.unsentEvents != null && com_funtomic_GameOps.localStorage.unsentEvents.length > 0) {
		com_funtomic_GameOpsLogger.verbose(["reporting unsent events",com_funtomic_GameOps.localStorage.unsentEvents.length]);
		com_funtomic_GameOps.reportEvents(com_funtomic_GameOps.localStorage.unsentEvents);
		com_funtomic_GameOps.localStorage.unsentEvents = [];
		com_funtomic_GameOps.writeLocalStorage();
	}
};
com_funtomic_GameOps.levelStarted = function(levelNumber,extraParams) {
	com_funtomic_GameOps.startTimer("level_" + levelNumber);
	com_funtomic_GameOps.levelsNumbers.push(levelNumber);
	if(com_funtomic_GameOps.gameStateGameOpsData.progress == null) com_funtomic_GameOps.gameStateGameOpsData.progress = { };
	if(com_funtomic_GameOps.gameStateGameOpsData.progress.top_level == null || com_funtomic_GameOps.gameStateGameOpsData.progress.top_level < levelNumber) {
		com_funtomic_GameOps.gameStateGameOpsData.progress.top_level = levelNumber;
		com_funtomic_GameOps.writeGameStateLocalStorage();
	}
	var data = { level : levelNumber};
	if(extraParams != null) data = com_funtomic_GameOps.extendObject(extraParams,data);
	com_funtomic_GameOps.reportEvent("level_started",data);
	com_funtomic_GameOps.KiziAPI_levelStarted([levelNumber,extraParams]);
};
com_funtomic_GameOps.levelEnded = function(levelNumber,won,extraParams) {
	var levelDuration = com_funtomic_GameOps.stopTimer("level_" + levelNumber);
	if(levelDuration == -1) {
		com_funtomic_GameOpsLogger.error(["levelEnded was called without a matching startLevel!"]);
		return;
	}
	if(won) com_funtomic_GameOps.levelsWon++;
	var data = { level : levelNumber, level_duration : Math.round(levelDuration / 1000), won : won == null?"null":"" + won};
	if(com_funtomic_GameOps.movesDuration.length > 0) {
		data.moves_duration = com_funtomic_GameOps.movesDuration.join(",");
		com_funtomic_GameOps.movesDuration = [];
	}
	if(extraParams != null) data = com_funtomic_GameOps.extendObject(extraParams,data);
	com_funtomic_GameOps.reportEvent("level_ended",data);
	if(won && levelNumber == com_funtomic_GameOps.lastLevelNumber) com_funtomic_GameOps.reportEvent("game_completion");
	com_funtomic_GameOps.KiziAPI_levelEnded([levelNumber,won,extraParams]);
};
com_funtomic_GameOps.sessionEnd = function(sendInNextPlay,extraParams) {
	if(sendInNextPlay == null) sendInNextPlay = true;
	var sessionDuration = com_funtomic_GameOps.sampleTimer("session");
	if(sessionDuration == -1) {
		com_funtomic_GameOpsLogger.error(["sessionEnd was called without a matching sessionStart!"]);
		return;
	}
	var lnu = [];
	var _g = 0;
	var _g1 = com_funtomic_GameOps.levelsNumbers;
	while(_g < _g1.length) {
		var lvlNum = _g1[_g];
		++_g;
		if(HxOverrides.indexOf(lnu,lvlNum,0) == -1) lnu.push(lvlNum);
	}
	var data = { session_duration : Math.round(sessionDuration / 1000), levels_numbers : lnu.toString(), won_percent : 0, levels_count : com_funtomic_GameOps.levelsNumbers.length, levels_won : com_funtomic_GameOps.levelsWon, sent_by : "application"};
	if(extraParams != null) data = com_funtomic_GameOps.extendObject(extraParams,data);
	if(data.levels_count > 0) data.won_percent = com_funtomic_GameOps.levelsWon / com_funtomic_GameOps.levelsNumbers.length * 100;
	com_funtomic_GameOps.updateTotalElapsedTime(sessionDuration / 1000);
	var event = com_funtomic_GameOps.prepareEventObject("session_end",data);
	if(sendInNextPlay) {
		com_funtomic_GameOpsLogger.verbose(["writing session end event to local storage"]);
		com_funtomic_GameOps.storageSet("FuntomicGameOps-SessionEndEvent",event);
	} else com_funtomic_GameOps.reportEvents([event]);
};
com_funtomic_GameOps.setLastLevelNumber = function(pLastLevelNumber) {
	com_funtomic_GameOps.lastLevelNumber = pLastLevelNumber;
};
com_funtomic_GameOps.updateTotalElapsedTime = function(sessionDuration) {
	com_funtomic_GameOps.storageSet("FuntomicGameOps-ElapsedGameTime",com_funtomic_GameOps.elapsedPlayTimeAtInit + sessionDuration);
};
com_funtomic_GameOps.startTimer = function(key) {
	com_funtomic_GameOpsLogger.verbose(["Timer '" + key + "' started."]);
	Reflect.setField(com_funtomic_GameOps.timers,key,[com_funtomic_GameOps.getTimestamp(),0.0]);
};
com_funtomic_GameOps.sampleTimer = function(key,remove) {
	if(remove == null) remove = false;
	if(Reflect.field(com_funtomic_GameOps.timers,key) == null) return -1;
	var elapsed = Reflect.field(com_funtomic_GameOps.timers,key)[1];
	if(Reflect.field(com_funtomic_GameOps.timers,key)[0] != 0) elapsed += com_funtomic_GameOps.getTimestamp() - Reflect.field(com_funtomic_GameOps.timers,key)[0];
	if(remove) Reflect.deleteField(com_funtomic_GameOps.timers,key);
	com_funtomic_GameOpsLogger.verbose(["Timer '" + key + "' sampled. Current elapsed time is " + elapsed]);
	return elapsed;
};
com_funtomic_GameOps.stopTimer = function(key) {
	com_funtomic_GameOpsLogger.verbose(["Timer '" + key + "' stopped"]);
	return com_funtomic_GameOps.sampleTimer(key,true);
};
com_funtomic_GameOps.pauseTimers = function(state) {
	if(state == null) state = true;
	var _g = 0;
	var _g1 = Reflect.fields(com_funtomic_GameOps.timers);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		if(state) {
			if(Reflect.field(com_funtomic_GameOps.timers,key)[0] != 0) {
				Reflect.field(com_funtomic_GameOps.timers,key)[1] += com_funtomic_GameOps.getTimestamp() - Reflect.field(com_funtomic_GameOps.timers,key)[0];
				Reflect.field(com_funtomic_GameOps.timers,key)[0] = 0;
				com_funtomic_GameOpsLogger.verbose(["Timer '" + key + "' paused at " + Reflect.field(com_funtomic_GameOps.timers,key)[1] + " ms"]);
			} else com_funtomic_GameOpsLogger.verbose(["NOTE: Timer '" + key + "' attempt to pause at " + Reflect.field(com_funtomic_GameOps.timers,key)[1] + " **but was already paused**"]);
		} else if(Reflect.field(com_funtomic_GameOps.timers,key)[0] == 0) {
			Reflect.field(com_funtomic_GameOps.timers,key)[0] = com_funtomic_GameOps.getTimestamp();
			com_funtomic_GameOpsLogger.verbose(["Timer '" + key + "' unpaused at " + Reflect.field(com_funtomic_GameOps.timers,key)[1] + " ms"]);
		} else com_funtomic_GameOpsLogger.verbose(["NOTE: Timer '" + key + "' attempt to unpause at " + Reflect.field(com_funtomic_GameOps.timers,key)[1] + " **but was already unpaused**"]);
	}
};
com_funtomic_GameOps.saveGameState = function(gameState,key,callback,usesNum,expiryDays) {
	if(expiryDays == null) expiryDays = 7;
	if(usesNum == null) usesNum = 1;
	if(com_funtomic_GameOps.status != com_funtomic_GameOpsStatus.INITIALIZED) return;
	var url = com_funtomic_GameOps.apiURLPrefix + com_funtomic_GameOps.apiTokensLocation;
	com_funtomic_GameOpsLogger.verbose(["Getting a token:",url]);
	var params = { domain : com_funtomic_GameOps.domain, game_state : JSON.stringify(gameState), user_id : Std.string(com_funtomic_GameOps.userID), expiry_days : expiryDays == null?"null":"" + expiryDays};
	if(key != null) params.key = key; else if(com_funtomic_GameOps.fbId != null) params.key = com_funtomic_GameOps.fbId; else if(usesNum == null) params.uses_num = "null"; else params.uses_num = "" + usesNum;
	com_funtomic_GameOps.sendRequest(url,params,function(resultString) {
		var result = JSON.parse(resultString);
		if(result != null) {
			if(result.error_msg != null) com_funtomic_GameOpsLogger.error(["Error caught:",result.error_msg]); else {
				com_funtomic_GameOpsLogger.verbose(["Saved game state under key:",result.token]);
				if(callback != null) callback(result.token);
			}
		}
	},null,com_funtomic_GameOps.IOErrorHandler);
};
com_funtomic_GameOps.loadGameState = function(key,callback) {
	if(com_funtomic_GameOps.status != com_funtomic_GameOpsStatus.INITIALIZED) {
		if(callback != null) callback(false,null);
		return;
	}
	if(key == null) {
		if(com_funtomic_GameOps.fbId == null) {
			com_funtomic_GameOpsLogger.error(["Calling loadGameState() without a key is only possible after calling successfully logging in to FB via FBLogin()"]);
			if(callback != null) callback(false,null);
			return;
		}
		key = com_funtomic_GameOps.fbId;
	}
	var url = com_funtomic_GameOps.apiURLPrefix + com_funtomic_GameOps.apiTokensLocation + key;
	com_funtomic_GameOpsLogger.verbose(["Fetching game state for key:",key]);
	com_funtomic_GameOps.sendRequest(url + "?domain=" + com_funtomic_GameOps.domain,null,function(resultString) {
		var result = JSON.parse(resultString);
		if(result != null && result.game_state != null) {
			com_funtomic_GameOpsLogger.verbose(["Fetched game state:",result.game_state]);
			com_funtomic_GameOps.localStorage.isSynced = true;
			com_funtomic_GameOps.writeLocalStorage();
			com_funtomic_GameOps.reportEvent("load_game_state",{ previous_uuid : result.user_id});
			if(callback != null) callback(true,JSON.parse(result.game_state));
		} else if(callback != null) callback(false,null);
	},null,function(msg) {
		com_funtomic_GameOps.IOErrorHandler(msg);
		callback(false,null);
	},false);
};
com_funtomic_GameOps.getTimestamp = function() {
	return new Date().getTime();
};
com_funtomic_GameOps.getGooglePublicKey = function() {
	return com_funtomic_GameOps.localStorage.googlePublicKey;
};
com_funtomic_GameOps.extendObject = function(obj1,obj2) {
	var _g = 0;
	var _g1 = Reflect.fields(obj2);
	while(_g < _g1.length) {
		var k = _g1[_g];
		++_g;
		var value = Reflect.field(obj2,k);
		var key;
		if(k == null) key = "null"; else key = "" + k;
		obj1[key] = value;
	}
	return obj1;
};
com_funtomic_GameOps.generateRandomString = function(strlen) {
	var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
	var num_chars = chars.length - 1;
	var randomChar = "";
	var _g = 0;
	while(_g < strlen) {
		var i = _g++;
		randomChar += chars.charAt(Math.floor(Math.random() * num_chars));
	}
	return randomChar;
};
com_funtomic_GameOps.storageSet = function(key,value) {
	if(com_funtomic_GameOps.gameOpsStorage != null) return (Reflect.field(com_funtomic_GameOps.gameOpsStorage,"set"))(com_funtomic_GameOps.domain + key,value); else return flambe_System.storage.set(com_funtomic_GameOps.domain + key,value);
};
com_funtomic_GameOps.storageGet = function(key,defaultValue) {
	if(com_funtomic_GameOps.gameOpsStorage != null) return (Reflect.field(com_funtomic_GameOps.gameOpsStorage,"get"))(com_funtomic_GameOps.domain + key,defaultValue); else return flambe_System.storage.get(com_funtomic_GameOps.domain + key,defaultValue);
};
com_funtomic_GameOps.storageRemove = function(key) {
	if(com_funtomic_GameOps.gameOpsStorage != null) (Reflect.field(com_funtomic_GameOps.gameOpsStorage,"remove"))(com_funtomic_GameOps.domain + key); else flambe_System.storage.remove(com_funtomic_GameOps.domain + key);
};
com_funtomic_GameOps.setAdditionalEventsParam = function(key,value) {
	if(com_funtomic_GameOps.additionalEventsParams == null) com_funtomic_GameOps.additionalEventsParams = { };
	com_funtomic_GameOps.additionalEventsParams[key] = value;
};
com_funtomic_GameOps.removeAdditionalEventsParam = function(key) {
	if(com_funtomic_GameOps.additionalEventsParams != null) Reflect.deleteField(com_funtomic_GameOps.additionalEventsParams,key);
};
com_funtomic_GameOps.writeLocalStorage = function() {
	com_funtomic_GameOps.storageSet("FuntomicGameOps",com_funtomic_GameOps.localStorage);
};
com_funtomic_GameOps.writeGameStateLocalStorage = function() {
	com_funtomic_GameOps.storageSet("FuntomicGameOps-GameState",com_funtomic_GameOps.gameStateGameOpsData);
};
com_funtomic_GameOps.readLocalStorage = function() {
	com_funtomic_GameOps.localStorage = com_funtomic_GameOps.storageGet("FuntomicGameOps",{ });
};
com_funtomic_GameOps.readGameStateLocalStorage = function() {
	com_funtomic_GameOps.gameStateGameOpsData = com_funtomic_GameOps.storageGet("FuntomicGameOps-GameState",{ });
};
com_funtomic_GameOps.setFlag = function(name) {
	if(Reflect.field(com_funtomic_GameOps.flags,name) == true) {
		com_funtomic_GameOpsLogger.debug([name + " is already running."]);
		return false;
	} else {
		com_funtomic_GameOps.flags[name] = true;
		return true;
	}
};
com_funtomic_GameOps.unsetFlag = function(name) {
	Reflect.deleteField(com_funtomic_GameOps.flags,name);
};
com_funtomic_GameOps.initGOPFuntomicAds = function() {
	if(com_funtomic_GameOps.GOPFuntomicAds == null) {
		var GOPFuntomicAdsClass = Type.resolveClass("co.doubleduck.gameops.GOPFuntomicAds");
		if(GOPFuntomicAdsClass != null) com_funtomic_GameOps.GOPFuntomicAds = (Reflect.field(GOPFuntomicAdsClass,"getInstance"))();
	}
};
com_funtomic_GameOps.requestCrossPromotionAd = function() {
	com_funtomic_GameOps.initGOPFuntomicAds();
	if(com_funtomic_GameOps.GOPFuntomicAds != null) (Reflect.field(com_funtomic_GameOps.GOPFuntomicAds,"requestAd"))();
};
com_funtomic_GameOps.displayCrossPromotionAd = function(placement) {
	if(placement == null) placement = "";
	com_funtomic_GameOps.initGOPFuntomicAds();
	if(com_funtomic_GameOps.GOPFuntomicAds != null) (Reflect.field(com_funtomic_GameOps.GOPFuntomicAds,"displayAd"))();
};
com_funtomic_GameOps.initGOPDevice = function() {
	if(com_funtomic_GameOps.GOPDevice == null) {
		var GOPDeviceClass = Type.resolveClass("co.doubleduck.gameops.GOPDevice");
		if(GOPDeviceClass != null) com_funtomic_GameOps.GOPDevice = (Reflect.field(GOPDeviceClass,"getInstance"))();
	}
};
com_funtomic_GameOps.setAdvertisingIdVariable = function() {
	com_funtomic_GameOps.initGOPDevice();
	if(com_funtomic_GameOps.GOPDevice != null) (Reflect.field(com_funtomic_GameOps.GOPDevice,"getAdvertisingIdAsync"))(function(advId) {
		com_funtomic_GameOps.advertisingId = advId;
	});
};
com_funtomic_GameOps.callKIZIAPIFunction = function(functionName,params) {
	var HTML5API = Reflect.field(window,"HTML5API");
	if(HTML5API == null) return null;
	var fn = Reflect.field(HTML5API,functionName);
	if(fn == null) return null;
	var returned;
	if((params instanceof Array) && params.__enum__ == null) returned = fn.apply(HTML5API,params); else returned = fn.apply(HTML5API,[params]);
	com_funtomic_GameOps.reportEvent("html5api_called",{ function_name : functionName, function_returned : returned, params : JSON.stringify(params)});
	return returned;
};
com_funtomic_GameOps.getPlatform = function() {
	try {
		var platform_raw = Reflect.field(window,"jsinterface").getPlatform().toLowerCase();
		if(platform_raw == "ios") return "iOS";
		if(platform_raw == "android") return "Android";
		return platform_raw;
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return "other";
	}
};
com_funtomic_GameOps.isInKiziWrapper = function() {
	try {
		return Reflect.field(window,"jsinterface").getPackageName() != "com.funtomic.Kizi";
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return false;
	}
};
com_funtomic_GameOps.isInKiziApp = function() {
	try {
		return Reflect.field(window,"jsinterface").getPackageName() == "com.funtomic.Kizi";
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return false;
	}
};
com_funtomic_GameOps.isInKiziMobileWeb = function() {
	try {
		return window.parent.location.host == "m.kizi.com";
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return false;
	}
};
com_funtomic_GameOps.isInKiziWeb = function() {
	try {
		return window.parent.location.host == "kizi.com";
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return false;
	}
};
com_funtomic_GameOps.getUserOS = function() {
	if(com_funtomic_GameOps.getPlatform() != "other") return com_funtomic_GameOps.getPlatform().toLowerCase(); else if(new EReg("(Android)","i").match(window.navigator.userAgent)) return "android"; else if(new EReg("(iPad|iPhone|iPod)","i").match(window.navigator.userAgent)) return "ios"; else return "other";
};
com_funtomic_GameOps.KiziAPI_levelStarted = function(params) {
	com_funtomic_GameOps.callKIZIAPIFunction("levelStarted",params);
};
com_funtomic_GameOps.KiziAPI_levelEnded = function(params) {
	com_funtomic_GameOps.callKIZIAPIFunction("levelEnded",params);
};
com_funtomic_GameOps.KiziAPI_preloaderStarted = function(params) {
	com_funtomic_GameOps.callKIZIAPIFunction("preloaderStarted",params);
};
com_funtomic_GameOps.KiziAPI_preloaderEnded = function(params) {
	com_funtomic_GameOps.callKIZIAPIFunction("preloaderEnded",params);
};
com_funtomic_GameOps.KiziAPI_showStartButton = function() {
	return com_funtomic_GameOps.callKIZIAPIFunction("showStartButton");
};
com_funtomic_GameOps.KiziAPI_isAdPlaying = function() {
	return com_funtomic_GameOps.callKIZIAPIFunction("isAdPlaying");
};
com_funtomic_GameOps.KiziAPI_onAdStart = function(callback) {
	com_funtomic_GameOps.callKIZIAPIFunction("onAdStart",callback);
};
com_funtomic_GameOps.KiziAPI_onAdComplete = function(callback) {
	com_funtomic_GameOps.callKIZIAPIFunction("onAdComplete",callback);
};
com_funtomic_GameOps.KiziAPI_isMidrollPending = function() {
	return com_funtomic_GameOps.callKIZIAPIFunction("isMidrollPending");
};
com_funtomic_GameOps.KiziAPI_displayMidroll = function() {
	return com_funtomic_GameOps.callKIZIAPIFunction("displayMidroll");
};
com_funtomic_GameOps.KiziAPI_setWidgetState = function(params) {
	com_funtomic_GameOps.callKIZIAPIFunction("setWidgetState",params);
};
com_funtomic_GameOps.KiziAPI_sendLocalNotification = function(delaySconds,iconUrl,title,text,bigContentTitle,bigContentText,gameExtras) {
	return com_funtomic_GameOps.callKIZIAPIFunction("sendLocalNotification",[delaySconds,iconUrl,title,text,bigContentTitle,bigContentText,gameExtras]);
};
com_funtomic_GameOps.KiziAPI_cancelLocalNotification = function(id) {
	com_funtomic_GameOps.callKIZIAPIFunction("cancelLocalNotification",id);
};
com_funtomic_GameOps.KiziAPI_isIncentivizedVideoAvailable = function() {
	return com_funtomic_GameOps.callKIZIAPIFunction("isIncentivizedVideoAvailable");
};
com_funtomic_GameOps.KiziAPI_showIncentivizedVideo = function(callback) {
	com_funtomic_GameOps.callKIZIAPIFunction("showIncentivizedVideo",function(isFullyWatched) {
		com_funtomic_GameOps.reportEvent("HTML5API_IncentivizedVideoWatched",{ is_fully_watched : isFullyWatched});
		callback(isFullyWatched);
	});
};
com_funtomic_GameOps.KiziAPI_reportCustomEvent = function(eventType,params) {
	if(params == null) params = { };
	params.custom_event_name = eventType;
	com_funtomic_GameOps.callKIZIAPIFunction("reportCustomEvent",params);
};
com_funtomic_GameOps.KiziAPI_getUserId = function() {
	return com_funtomic_GameOps.callKIZIAPIFunction("getUserId");
};
com_funtomic_GameOps.KiziAPI_setAlternativeId = function() {
	com_funtomic_GameOps.callKIZIAPIFunction("setAlternativeId",com_funtomic_GameOps.alternativeId);
};
var com_funtomic_GameOpsLogger = function() { };
$hxClasses["com.funtomic.GameOpsLogger"] = com_funtomic_GameOpsLogger;
com_funtomic_GameOpsLogger.__name__ = ["com","funtomic","GameOpsLogger"];
com_funtomic_GameOpsLogger.verbose = function(params) {
	com_funtomic_GameOpsLogger.log(2,params.join(" "));
};
com_funtomic_GameOpsLogger.debug = function(params) {
	com_funtomic_GameOpsLogger.log(1,params.join(" "));
};
com_funtomic_GameOpsLogger.error = function(params) {
	com_funtomic_GameOpsLogger.log(0,"ERROR - " + params.join(" "));
	null;
};
com_funtomic_GameOpsLogger.log = function(logLevel,message) {
	if(logLevel <= com_funtomic_GameOpsLogger.logLevel) {
		var now = new Date();
		var datetimeString = now.getDay() + "." + now.getMonth() + "." + now.getFullYear() + " " + now.getHours() + ":" + now.getMinutes() + ":" + now.getSeconds();
		null;
	}
};
var flambe_External = function() {
};
$hxClasses["flambe.External"] = flambe_External;
flambe_External.__name__ = ["flambe","External"];
flambe_External.prototype = {
	call: function(name,params) {
		if(params == null) params = [];
		var object = window;
		var method = object;
		var _g = 0;
		var _g1 = name.split(".");
		while(_g < _g1.length) {
			var fieldName = _g1[_g];
			++_g;
			object = method;
			method = Reflect.field(object,fieldName);
		}
		return Reflect.callMethod(object,method,params);
	}
	,__class__: flambe_External
};
var flambe_Storage = function() {
};
$hxClasses["flambe.Storage"] = flambe_Storage;
flambe_Storage.__name__ = ["flambe","Storage"];
flambe_Storage._adapter = null;
flambe_Storage._domain = null;
flambe_Storage.setStorageAdapter = function(domain,adapter) {
	flambe_Storage._domain = domain;
	flambe_Storage._adapter = adapter;
};
flambe_Storage.prototype = {
	get: function(key,defaultValue) {
		if(key.indexOf(flambe_Storage._domain) == 0) key = HxOverrides.substr(key,flambe_Storage._domain.length,null);
		if(flambe_Storage._adapter.getValue(key) == null) {
			flambe_Storage._adapter.setValue(key,defaultValue);
			return defaultValue;
		}
		return flambe_Storage._adapter.getValue(key);
	}
	,set: function(key,value) {
		if(key.indexOf(flambe_Storage._domain) == 0) key = HxOverrides.substr(key,flambe_Storage._domain.length,null);
		flambe_Storage._adapter.setValue(key,value);
		return true;
	}
	,remove: function(key) {
		flambe_Storage._adapter.removeValue(key);
	}
	,__class__: flambe_Storage
};
var flambe_System = function() { };
$hxClasses["flambe.System"] = flambe_System;
flambe_System.__name__ = ["flambe","System"];
var haxe_StackItem = $hxClasses["haxe.StackItem"] = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.__empty_constructs__ = [haxe_StackItem.CFunction];
var haxe_CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.lastException = null;
haxe_CallStack.getStack = function(e) {
	if(e == null) return [];
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) site = haxe_CallStack.wrapCallSite(site);
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.wrapCallSite = null;
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		if(m == null) b.b += "null"; else b.b += "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		if(file == null) b.b += "null"; else b.b += "" + file;
		b.b += " line ";
		if(line == null) b.b += "null"; else b.b += "" + line;
		if(s1 != null) b.b += ")";
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		if(cname == null) b.b += "null"; else b.b += "" + cname;
		b.b += ".";
		if(meth == null) b.b += "null"; else b.b += "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		if(n == null) b.b += "null"; else b.b += "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) return []; else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") stack.shift();
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else m.push(haxe_StackItem.Module(StringTools.trim(line)));
		}
		return m;
	} else return s;
};
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
};
$hxClasses["haxe.Http"] = haxe_Http;
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	setParameter: function(param,value) {
		this.params = Lambda.filter(this.params,function(p) {
			return p.param != param;
		});
		this.params.push({ param : param, value : value});
		return this;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) return;
			var s;
			try {
				s = r.status;
			} catch( e ) {
				haxe_CallStack.lastException = e;
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				s = null;
			}
			if(s != null) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) if(r.responseText != null) s = 200; else s = 404;
			}
			if(s == undefined) s = null;
			if(s != null) me.onStatus(s);
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else switch(s) {
			case 12029:
				me.req = null;
				me.onError("Failed to connect to host");
				break;
			case 12007:
				me.req = null;
				me.onError("Unknown host");
				break;
			default:
				me.req = null;
				me.responseData = r.responseText;
				me.onError("Http Error #" + r.status);
			}
		};
		if(this.async) r.onreadystatechange = onreadystatechange;
		var uri = this.postData;
		if(uri != null) post = true; else {
			var _g_head = this.params.h;
			var _g_val = null;
			while(_g_head != null) {
				var p;
				p = (function($this) {
					var $r;
					_g_val = _g_head[0];
					_g_head = _g_head[1];
					$r = _g_val;
					return $r;
				}(this));
				if(uri == null) uri = ""; else uri += "&";
				uri += encodeURIComponent(p.param) + "=" + encodeURIComponent(p.value);
			}
		}
		try {
			if(post) r.open("POST",this.url,this.async); else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question?"?":"&") + uri,this.async);
				uri = null;
			} else r.open("GET",this.url,this.async);
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		var _g_head1 = this.headers.h;
		var _g_val1 = null;
		while(_g_head1 != null) {
			var h1;
			h1 = (function($this) {
				var $r;
				_g_val1 = _g_head1[0];
				_g_head1 = _g_head1[1];
				$r = _g_val1;
				return $r;
			}(this));
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) onreadystatechange(null);
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = ["haxe","Resource"];
haxe_Resource.content = null;
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return x.str;
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return haxe_io_Bytes.ofString(x.str);
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.get(s);
		if(x != null) {
			this.buf.b += "R";
			if(x == null) this.buf.b += "null"; else this.buf.b += "" + x;
			return;
		}
		this.shash.set(s,this.scount++);
		this.buf.b += "y";
		s = encodeURIComponent(s);
		if(s.length == null) this.buf.b += "null"; else this.buf.b += "" + s.length;
		this.buf.b += ":";
		if(s == null) this.buf.b += "null"; else this.buf.b += "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				if(i == null) this.buf.b += "null"; else this.buf.b += "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		{
			var _g = Type["typeof"](v);
			switch(_g[1]) {
			case 0:
				this.buf.b += "n";
				break;
			case 1:
				var v1 = v;
				if(v1 == 0) {
					this.buf.b += "z";
					return;
				}
				this.buf.b += "i";
				if(v1 == null) this.buf.b += "null"; else this.buf.b += "" + v1;
				break;
			case 2:
				var v2 = v;
				if(isNaN(v2)) this.buf.b += "k"; else if(!isFinite(v2)) if(v2 < 0) this.buf.b += "m"; else this.buf.b += "p"; else {
					this.buf.b += "d";
					if(v2 == null) this.buf.b += "null"; else this.buf.b += "" + v2;
				}
				break;
			case 3:
				if(v) this.buf.b += "t"; else this.buf.b += "f";
				break;
			case 6:
				var c = _g[2];
				if(c == String) {
					this.serializeString(v);
					return;
				}
				if(this.useCache && this.serializeRef(v)) return;
				switch(c) {
				case Array:
					var ucount = 0;
					this.buf.b += "a";
					var l = v.length;
					var _g1 = 0;
					while(_g1 < l) {
						var i = _g1++;
						if(v[i] == null) ucount++; else {
							if(ucount > 0) {
								if(ucount == 1) this.buf.b += "n"; else {
									this.buf.b += "u";
									if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
								}
								ucount = 0;
							}
							this.serialize(v[i]);
						}
					}
					if(ucount > 0) {
						if(ucount == 1) this.buf.b += "n"; else {
							this.buf.b += "u";
							if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
						}
					}
					this.buf.b += "h";
					break;
				case List:
					this.buf.b += "l";
					var v3 = v;
					var _g1_head = v3.h;
					var _g1_val = null;
					while(_g1_head != null) {
						var i1;
						_g1_val = _g1_head[0];
						_g1_head = _g1_head[1];
						i1 = _g1_val;
						this.serialize(i1);
					}
					this.buf.b += "h";
					break;
				case Date:
					var d = v;
					this.buf.b += "v";
					this.buf.add(d.getTime());
					break;
				case haxe_ds_StringMap:
					this.buf.b += "b";
					var v4 = v;
					var $it0 = v4.keys();
					while( $it0.hasNext() ) {
						var k = $it0.next();
						this.serializeString(k);
						this.serialize(__map_reserved[k] != null?v4.getReserved(k):v4.h[k]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_IntMap:
					this.buf.b += "q";
					var v5 = v;
					var $it1 = v5.keys();
					while( $it1.hasNext() ) {
						var k1 = $it1.next();
						this.buf.b += ":";
						if(k1 == null) this.buf.b += "null"; else this.buf.b += "" + k1;
						this.serialize(v5.h[k1]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_ObjectMap:
					this.buf.b += "M";
					var v6 = v;
					var $it2 = v6.keys();
					while( $it2.hasNext() ) {
						var k2 = $it2.next();
						var id = Reflect.field(k2,"__id__");
						Reflect.deleteField(k2,"__id__");
						this.serialize(k2);
						k2.__id__ = id;
						this.serialize(v6.h[k2.__id__]);
					}
					this.buf.b += "h";
					break;
				case haxe_io_Bytes:
					var v7 = v;
					var i2 = 0;
					var max = v7.length - 2;
					var charsBuf = new StringBuf();
					var b64 = haxe_Serializer.BASE64;
					while(i2 < max) {
						var b1 = v7.get(i2++);
						var b2 = v7.get(i2++);
						var b3 = v7.get(i2++);
						charsBuf.add(b64.charAt(b1 >> 2));
						charsBuf.add(b64.charAt((b1 << 4 | b2 >> 4) & 63));
						charsBuf.add(b64.charAt((b2 << 2 | b3 >> 6) & 63));
						charsBuf.add(b64.charAt(b3 & 63));
					}
					if(i2 == max) {
						var b11 = v7.get(i2++);
						var b21 = v7.get(i2++);
						charsBuf.add(b64.charAt(b11 >> 2));
						charsBuf.add(b64.charAt((b11 << 4 | b21 >> 4) & 63));
						charsBuf.add(b64.charAt(b21 << 2 & 63));
					} else if(i2 == max + 1) {
						var b12 = v7.get(i2++);
						charsBuf.add(b64.charAt(b12 >> 2));
						charsBuf.add(b64.charAt(b12 << 4 & 63));
					}
					var chars = charsBuf.b;
					this.buf.b += "s";
					if(chars.length == null) this.buf.b += "null"; else this.buf.b += "" + chars.length;
					this.buf.b += ":";
					if(chars == null) this.buf.b += "null"; else this.buf.b += "" + chars;
					break;
				default:
					if(this.useCache) this.cache.pop();
					if(v.hxSerialize != null) {
						this.buf.b += "C";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						v.hxSerialize(this);
						this.buf.b += "g";
					} else {
						this.buf.b += "c";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						this.serializeFields(v);
					}
				}
				break;
			case 4:
				if(js_Boot.__instanceof(v,Class)) {
					var className = Type.getClassName(v);
					this.buf.b += "A";
					this.serializeString(className);
				} else if(js_Boot.__instanceof(v,Enum)) {
					this.buf.b += "B";
					this.serializeString(Type.getEnumName(v));
				} else {
					if(this.useCache && this.serializeRef(v)) return;
					this.buf.b += "o";
					this.serializeFields(v);
				}
				break;
			case 7:
				var e = _g[2];
				if(this.useCache) {
					if(this.serializeRef(v)) return;
					this.cache.pop();
				}
				if(this.useEnumIndex) this.buf.b += "j"; else this.buf.b += "w";
				this.serializeString(Type.getEnumName(e));
				if(this.useEnumIndex) {
					this.buf.b += ":";
					this.buf.b += Std.string(v[1]);
				} else this.serializeString(v[0]);
				this.buf.b += ":";
				var l1 = v.length;
				this.buf.b += Std.string(l1 - 2);
				var _g11 = 2;
				while(_g11 < l1) {
					var i3 = _g11++;
					this.serialize(v[i3]);
				}
				if(this.useCache) this.cache.push(v);
				break;
			case 5:
				throw new js__$Boot_HaxeError("Cannot serialize function");
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
			}
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.measure = function(f,pos) {
	var t0 = haxe_Timer.stamp();
	var r = f();
	haxe_Log.trace(haxe_Timer.stamp() - t0 + "s",pos);
	return r;
};
haxe_Timer.stamp = function() {
	return new Date().getTime() / 1000;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) return;
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_1) {
			return null;
		}}; else this.resolver = r;
	}
	,get: function(p) {
		return this.buf.charCodeAt(p);
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
		}
		return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw new js__$Boot_HaxeError("Invalid object");
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(!(typeof(k) == "string")) throw new js__$Boot_HaxeError("Invalid object key");
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.get(this.pos++) != 58) throw new js__$Boot_HaxeError("Invalid enum format");
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.get(this.pos++);
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			return this.readFloat();
		case 121:
			var len = this.readDigits();
			if(this.get(this.pos++) != 58 || this.length - this.pos < len) throw new js__$Boot_HaxeError("Invalid string length");
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 107:
			return NaN;
		case 109:
			return -Infinity;
		case 112:
			return Infinity;
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) throw new js__$Boot_HaxeError("Invalid reference");
			return this.cache[n1];
		case 82:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.scache.length) throw new js__$Boot_HaxeError("Invalid string reference");
			return this.scache[n2];
		case 120:
			throw new js__$Boot_HaxeError(this.unserialize());
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw new js__$Boot_HaxeError("Class not found " + name);
			var o1 = Type.createEmptyInstance(cl);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 119:
			var name1 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name1);
			if(edecl == null) throw new js__$Boot_HaxeError("Enum not found " + name1);
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name2 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name2);
			if(edecl1 == null) throw new js__$Boot_HaxeError("Enum not found " + name2);
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl1)[index];
			if(tag == null) throw new js__$Boot_HaxeError("Unknown enum index " + name2 + "@" + index);
			var e1 = this.unserializeEnum(edecl1,tag);
			this.cache.push(e1);
			return e1;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf1 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				h.set(s1,this.unserialize());
			}
			this.pos++;
			return h;
		case 113:
			var h1 = new haxe_ds_IntMap();
			this.cache.push(h1);
			var buf3 = this.buf;
			var c1 = this.get(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				h1.set(i,this.unserialize());
				c1 = this.get(this.pos++);
			}
			if(c1 != 104) throw new js__$Boot_HaxeError("Invalid IntMap format");
			return h1;
		case 77:
			var h2 = new haxe_ds_ObjectMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s2 = this.unserialize();
				h2.set(s2,this.unserialize());
			}
			this.pos++;
			return h2;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				var s3 = HxOverrides.substr(this.buf,this.pos,19);
				d = HxOverrides.strDate(s3);
				this.pos += 19;
			} else {
				var t = this.readFloat();
				var d1 = new Date();
				d1.setTime(t);
				d = d1;
			}
			this.cache.push(d);
			return d;
		case 115:
			var len1 = this.readDigits();
			var buf5 = this.buf;
			if(this.get(this.pos++) != 58 || this.length - this.pos < len1) throw new js__$Boot_HaxeError("Invalid bytes length");
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len1 & 3;
			var size;
			size = (len1 >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len1 - rest);
			var bytes = haxe_io_Bytes.alloc(size);
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c2 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c11 << 2 | c2 >> 4);
				var c3 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c2 << 4 | c3 >> 2);
				var c4 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c3 << 6 | c4);
			}
			if(rest >= 2) {
				var c12 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c21 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c12 << 2 | c21 >> 4);
				if(rest == 3) {
					var c31 = codes[StringTools.fastCodeAt(buf5,i1++)];
					bytes.set(bpos++,c21 << 4 | c31 >> 2);
				}
			}
			this.pos += len1;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name3 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name3);
			if(cl1 == null) throw new js__$Boot_HaxeError("Class not found " + name3);
			var o2 = Type.createEmptyInstance(cl1);
			this.cache.push(o2);
			o2.hxUnserialize(this);
			if(this.get(this.pos++) != 103) throw new js__$Boot_HaxeError("Invalid custom data");
			return o2;
		case 65:
			var name4 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name4);
			if(cl2 == null) throw new js__$Boot_HaxeError("Class not found " + name4);
			return cl2;
		case 66:
			var name5 = this.unserialize();
			var e2 = this.resolver.resolveEnum(name5);
			if(e2 == null) throw new js__$Boot_HaxeError("Enum not found " + name5);
			return e2;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) complement = true;
	if(complement) while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) nbits++;
	if(nbits > 8 || len != 1 << nbits) throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = haxe_io_Bytes.alloc(size + (b.length * 8 % nbits == 0?0:1));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.get(pin++);
			}
			curbits -= nbits;
			out.set(pout++,base.b[buf >> curbits & mask]);
		}
		if(curbits > 0) out.set(pout++,base.b[buf << nbits - curbits & mask]);
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) this.initTable();
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = haxe_io_Bytes.alloc(size);
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.get(pin++)];
				if(i == -1) throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				buf |= i;
			}
			curbits -= 8;
			out.set(pout++,buf >> curbits & 255);
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = ["haxe","crypto","Md5"];
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	var h = m.doEncode(haxe_crypto_Md5.str2blks(s));
	return m.hex(h);
};
haxe_crypto_Md5.str2blks = function(str) {
	var nblk = (str.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	while(_g < blksSize) {
		var i1 = _g++;
		blks[i1] = 0;
	}
	var i = 0;
	while(i < str.length) {
		blks[i >> 2] |= HxOverrides.cca(str,i) << (str.length * 8 + i) % 4 * 8;
		i++;
	}
	blks[i >> 2] |= 128 << (str.length * 8 + i) % 4 * 8;
	var l = str.length * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var hex_chr = "0123456789abcdef";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < 4) {
				var j = _g1++;
				str += hex_chr.charAt(num >> j * 8 + 4 & 15) + hex_chr.charAt(num >> j * 8 & 15);
			}
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_crypto_Sha1 = function() {
};
$hxClasses["haxe.crypto.Sha1"] = haxe_crypto_Sha1;
haxe_crypto_Sha1.__name__ = ["haxe","crypto","Sha1"];
haxe_crypto_Sha1.encode = function(s) {
	var sh = new haxe_crypto_Sha1();
	var h = sh.doEncode(haxe_crypto_Sha1.str2blks(s));
	return sh.hex(h);
};
haxe_crypto_Sha1.str2blks = function(s) {
	var nblk = (s.length + 8 >> 6) + 1;
	var blks = [];
	var _g1 = 0;
	var _g = nblk * 16;
	while(_g1 < _g) {
		var i1 = _g1++;
		blks[i1] = 0;
	}
	var _g11 = 0;
	var _g2 = s.length;
	while(_g11 < _g2) {
		var i2 = _g11++;
		var p1 = i2 >> 2;
		blks[p1] |= HxOverrides.cca(s,i2) << 24 - ((i2 & 3) << 3);
	}
	var i = s.length;
	var p = i >> 2;
	blks[p] |= 128 << 24 - ((i & 3) << 3);
	blks[nblk * 16 - 1] = s.length * 8;
	return blks;
};
haxe_crypto_Sha1.prototype = {
	doEncode: function(x) {
		var w = [];
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var e = -1009589776;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var j = 0;
			while(j < 80) {
				if(j < 16) w[j] = x[i + j]; else w[j] = this.rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16],1);
				var t = (a << 5 | a >>> 27) + this.ft(j,b,c,d) + e + w[j] + this.kt(j);
				e = d;
				d = c;
				c = b << 30 | b >>> 2;
				b = a;
				a = t;
				j++;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			i += 16;
		}
		return [a,b,c,d,e];
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,ft: function(t,b,c,d) {
		if(t < 20) return b & c | ~b & d;
		if(t < 40) return b ^ c ^ d;
		if(t < 60) return b & c | b & d | c & d;
		return b ^ c ^ d;
	}
	,kt: function(t) {
		if(t < 20) return 1518500249;
		if(t < 40) return 1859775393;
		if(t < 60) return -1894007588;
		return -899497514;
	}
	,hex: function(a) {
		var str = "";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			str += StringTools.hex(num,8);
		}
		return str.toLowerCase();
	}
	,__class__: haxe_crypto_Sha1
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { };
	this.h.__keys__ = { };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) return false;
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		return this.map.get(this.keys[this.index++]);
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds__$Vector_Vector_$Impl_$ = {};
$hxClasses["haxe.ds._Vector.Vector_Impl_"] = haxe_ds__$Vector_Vector_$Impl_$;
haxe_ds__$Vector_Vector_$Impl_$.__name__ = ["haxe","ds","_Vector","Vector_Impl_"];
haxe_ds__$Vector_Vector_$Impl_$.blit = function(src,srcPos,dest,destPos,len) {
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		dest[destPos + i] = src[srcPos + i];
	}
};
haxe_ds__$Vector_Vector_$Impl_$.toArray = function(this1) {
	var a = [];
	var len = this1.length;
	var _g = 0;
	while(_g < len) {
		var i = _g++;
		a[i] = this1[i];
	}
	return a;
};
var haxe_io_Eof = function() { };
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) return 0.0;
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) return 0;
	var af;
	if(f < 0) af = -f; else af = f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) exp = -127; else if(exp > 128) exp = 128;
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) return 0.0;
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av;
		if(v < 0) av = -v; else av = v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig;
		var v1 = (av / Math.pow(2,exp) - 1) * 4503599627370496.;
		sig = Math.round(v1);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else this.dir = null;
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.withoutExtension = function(path) {
	var s = new haxe_io_Path(path);
	s.ext = null;
	return s.toString();
};
haxe_io_Path.prototype = {
	toString: function() {
		return (this.dir == null?"":this.dir + (this.backslash?"\\":"/")) + this.file + (this.ext == null?"":"." + this.ext);
	}
	,__class__: haxe_io_Path
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) Error.captureStackTrace(this,js__$Boot_HaxeError);
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg;
	if(i != null) msg = i.fileName + ":" + i.lineNumber + ": "; else msg = "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	if(typeof(document) != "undefined" && (d = document.getElementById("haxe:trace")) != null) d.innerHTML += js_Boot.__unhtml(msg) + "<br/>"; else if(typeof console != "undefined" && console.log != null) console.log(msg);
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) return Array; else {
		var cl = o.__class__;
		if(cl != null) return cl;
		var name = js_Boot.__nativeClassName(o);
		if(name != null) return js_Boot.__resolveNativeClass(name);
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str2 = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i1 = _g1++;
					if(i1 != 2) str2 += "," + js_Boot.__string_rec(o[i1],s); else str2 += js_Boot.__string_rec(o[i1],s);
				}
				return str2 + ")";
			}
			var l = o.length;
			var i;
			var str1 = "[";
			s += "\t";
			var _g2 = 0;
			while(_g2 < l) {
				var i2 = _g2++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		return (o instanceof Array) && o.__enum__ == null;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) return true;
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) return true;
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) return o; else throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") return null;
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") return new XMLHttpRequest();
	if(typeof ActiveXObject != "undefined") return new ActiveXObject("Microsoft.XMLHTTP");
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	if(byteOffset == null) this.offset = 0; else this.offset = byteOffset;
	if(byteLength == null) this.length = buffer.byteLength - this.offset; else this.length = byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) return v - 256; else return v;
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) return v - 65536; else return v;
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8; else return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) return a | b << 8 | c << 16 | d << 24; else return d | c << 8 | b << 16 | a << 24;
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) return v + 4294967296.; else return v;
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		if(value < 0) this.buf.a[byteOffset + this.offset] = value + 128 & 255; else this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g = 0;
		while(_g < arg1) {
			var i = _g++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) offset = 0;
		if(length == null) length = buffer.byteLength - offset;
		if(offset == 0) arr = buffer.a; else arr = buffer.a.slice(offset,offset + length);
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	var t = this;
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			t[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			t[i1 + offset] = a1[i1];
		}
	} else throw new js__$Boot_HaxeError("TODO");
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var t = this;
	var a = js_html_compat_Uint8Array._new(t.slice(start,end));
	a.byteOffset = start;
	return a;
};
var lime_AssetCache = function() {
	this.enabled = true;
	this.audio = new haxe_ds_StringMap();
	this.font = new haxe_ds_StringMap();
	this.image = new haxe_ds_StringMap();
	this.version = Std["int"](Math.random() * 1000000);
};
$hxClasses["lime.AssetCache"] = lime_AssetCache;
lime_AssetCache.__name__ = ["lime","AssetCache"];
lime_AssetCache.prototype = {
	clear: function(prefix) {
		if(prefix == null) {
			this.audio = new haxe_ds_StringMap();
			this.font = new haxe_ds_StringMap();
			this.image = new haxe_ds_StringMap();
		} else {
			var keys = this.audio.keys();
			while( keys.hasNext() ) {
				var key = keys.next();
				if(StringTools.startsWith(key,prefix)) this.audio.remove(key);
			}
			var keys1 = this.font.keys();
			while( keys1.hasNext() ) {
				var key1 = keys1.next();
				if(StringTools.startsWith(key1,prefix)) this.font.remove(key1);
			}
			var keys2 = this.image.keys();
			while( keys2.hasNext() ) {
				var key2 = keys2.next();
				if(StringTools.startsWith(key2,prefix)) this.image.remove(key2);
			}
		}
	}
	,__class__: lime_AssetCache
};
var lime_app_Event_$Void_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Void_Void"] = lime_app_Event_$Void_$Void;
lime_app_Event_$Void_$Void.__name__ = ["lime","app","Event_Void_Void"];
lime_app_Event_$Void_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function() {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i]();
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Void_$Void
};
var lime_Assets = function() { };
$hxClasses["lime.Assets"] = lime_Assets;
lime_Assets.__name__ = ["lime","Assets"];
lime_Assets.exists = function(id,type) {
	lime_Assets.initialize();
	if(type == null) type = "BINARY";
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) return library.exists(symbolName,type);
	return false;
};
lime_Assets.getAudioBuffer = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.audio.exists(id)) {
		var audio = lime_Assets.cache.audio.get(id);
		if(lime_Assets.isValidAudio(audio)) return audio;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"SOUND")) {
			if(library.isLocal(symbolName,"SOUND")) {
				var audio1 = library.getAudioBuffer(symbolName);
				if(useCache && lime_Assets.cache.enabled) lime_Assets.cache.audio.set(id,audio1);
				return audio1;
			} else null;
		} else null;
	} else null;
	return null;
};
lime_Assets.getBytes = function(id) {
	lime_Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"BINARY")) {
			if(library.isLocal(symbolName,"BINARY")) return library.getBytes(symbolName); else null;
		} else null;
	} else null;
	return null;
};
lime_Assets.getFont = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.font.exists(id)) return lime_Assets.cache.font.get(id);
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"FONT")) {
			if(library.isLocal(symbolName,"FONT")) {
				var font = library.getFont(symbolName);
				if(useCache && lime_Assets.cache.enabled) lime_Assets.cache.font.set(id,font);
				return font;
			} else null;
		} else null;
	} else null;
	return null;
};
lime_Assets.getImage = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.image.exists(id)) {
		var image = lime_Assets.cache.image.get(id);
		if(lime_Assets.isValidImage(image)) return image;
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"IMAGE")) {
			if(library.isLocal(symbolName,"IMAGE")) {
				var image1 = library.getImage(symbolName);
				if(useCache && lime_Assets.cache.enabled) lime_Assets.cache.image.set(id,image1);
				return image1;
			} else null;
		} else null;
	} else null;
	return null;
};
lime_Assets.getLibrary = function(name) {
	if(name == null || name == "") name = "default";
	return lime_Assets.libraries.get(name);
};
lime_Assets.getPath = function(id) {
	lime_Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,null)) return library.getPath(symbolName); else null;
	} else null;
	return null;
};
lime_Assets.getText = function(id) {
	lime_Assets.initialize();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"TEXT")) {
			if(library.isLocal(symbolName,"TEXT")) return library.getText(symbolName); else null;
		} else null;
	} else null;
	return null;
};
lime_Assets.initialize = function() {
	if(!lime_Assets.initialized) {
		lime_Assets.registerLibrary("default",new DefaultAssetLibrary());
		lime_Assets.initialized = true;
	}
};
lime_Assets.isLocal = function(id,type,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	if(useCache && lime_Assets.cache.enabled) {
		if(type == "IMAGE" || type == null) {
			if(lime_Assets.cache.image.exists(id)) return true;
		}
		if(type == "FONT" || type == null) {
			if(lime_Assets.cache.font.exists(id)) return true;
		}
		if(type == "SOUND" || type == "MUSIC" || type == null) {
			if(lime_Assets.cache.audio.exists(id)) return true;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) return library.isLocal(symbolName,type);
	return false;
};
lime_Assets.isValidAudio = function(buffer) {
	return buffer != null;
};
lime_Assets.isValidImage = function(buffer) {
	return true;
};
lime_Assets.list = function(type) {
	lime_Assets.initialize();
	var items = [];
	var $it0 = lime_Assets.libraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var libraryItems = library.list(type);
		if(libraryItems != null) items = items.concat(libraryItems);
	}
	return items;
};
lime_Assets.loadAudioBuffer = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.audio.exists(id)) {
		var audio = lime_Assets.cache.audio.get(id);
		if(lime_Assets.isValidAudio(audio)) {
			promise.complete(audio);
			return promise.future;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"SOUND")) {
			var future = library.loadAudioBuffer(symbolName);
			if(useCache && lime_Assets.cache.enabled) future.onComplete(function(audio1) {
				lime_Assets.cache.audio.set(id,audio1);
			});
			promise.completeWith(future);
		} else promise.error("[Assets] There is no audio asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadBytes = function(id) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"BINARY")) promise.completeWith(library.loadBytes(symbolName)); else promise.error("[Assets] There is no String or Bytes asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadFont = function(id) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"FONT")) promise.completeWith(library.loadFont(symbolName)); else promise.error("[Assets] There is no Font asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadImage = function(id,useCache) {
	if(useCache == null) useCache = true;
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	if(useCache && lime_Assets.cache.enabled && lime_Assets.cache.image.exists(id)) {
		var image = lime_Assets.cache.image.get(id);
		if(lime_Assets.isValidImage(image)) {
			promise.complete(image);
			return promise.future;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"IMAGE")) {
			var future = library.loadImage(symbolName);
			if(useCache && lime_Assets.cache.enabled) future.onComplete(function(image1) {
				lime_Assets.cache.image.set(id,image1);
			});
			promise.completeWith(future);
		} else promise.error("[Assets] There is no Image asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.loadLibrary = function(name) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var data = lime_Assets.getText("libraries/" + name + ".json");
	if(data != null && data != "") {
		var info = JSON.parse(data);
		var library = Type.createInstance(Type.resolveClass(info.type),info.args);
		lime_Assets.libraries.set(name,library);
		library.onChange.add(($_=lime_Assets.onChange,$bind($_,$_.dispatch)));
		promise.completeWith(library.load());
	} else promise.error("[Assets] There is no asset library named \"" + name + "\"");
	return promise.future;
};
lime_Assets.loadText = function(id) {
	lime_Assets.initialize();
	var promise = new lime_app_Promise();
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = lime_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"TEXT")) promise.completeWith(library.loadText(symbolName)); else promise.error("[Assets] There is no String asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
lime_Assets.registerLibrary = function(name,library) {
	if(lime_Assets.libraries.exists(name)) {
		if(lime_Assets.libraries.get(name) == library) return; else lime_Assets.unloadLibrary(name);
	}
	if(library != null) library.onChange.add(lime_Assets.library_onChange);
	lime_Assets.libraries.set(name,library);
};
lime_Assets.unloadLibrary = function(name) {
	lime_Assets.initialize();
	var library = lime_Assets.libraries.get(name);
	if(library != null) {
		lime_Assets.cache.clear(name + ":");
		library.onChange.remove(lime_Assets.library_onChange);
		library.unload();
	}
	lime_Assets.libraries.remove(name);
};
lime_Assets.library_onChange = function() {
	lime_Assets.cache.clear();
	lime_Assets.onChange.dispatch();
};
var lime__$backend_html5_HTML5Application = function(parent) {
	this.gameDeviceCache = new haxe_ds_IntMap();
	this.parent = parent;
	this.currentUpdate = 0;
	this.lastUpdate = 0;
	this.nextUpdate = 0;
	this.framePeriod = -1;
	lime_audio_AudioManager.init();
	lime__$backend_html5_HTML5Application.__fixAndroidMath();
};
$hxClasses["lime._backend.html5.HTML5Application"] = lime__$backend_html5_HTML5Application;
lime__$backend_html5_HTML5Application.__name__ = ["lime","_backend","html5","HTML5Application"];
lime__$backend_html5_HTML5Application.__fixAndroidMath = function() {
	if(window.navigator.userAgent.indexOf("Linux; U; Android 4") >= 0) {
		var sin = Math.sin;
		var cos = Math.cos;
		Math.sin = function(x) {
			if(x == 0) return 0; else return sin(x);
		};
		Math.cos = function(x1) {
			if(x1 == 0) return 1; else return cos(x1);
		};
	}
};
lime__$backend_html5_HTML5Application.prototype = {
	convertKeyCode: function(keyCode) {
		if(keyCode >= 65 && keyCode <= 90) return keyCode + 32;
		switch(keyCode) {
		case 16:
			return 1073742049;
		case 17:
			return 1073742048;
		case 18:
			return 1073742050;
		case 20:
			return 1073741881;
		case 144:
			return 1073741907;
		case 37:
			return 1073741904;
		case 38:
			return 1073741906;
		case 39:
			return 1073741903;
		case 40:
			return 1073741905;
		case 45:
			return 1073741897;
		case 46:
			return 127;
		case 36:
			return 1073741898;
		case 35:
			return 1073741901;
		case 33:
			return 1073741899;
		case 34:
			return 1073741902;
		case 112:
			return 1073741882;
		case 113:
			return 1073741883;
		case 114:
			return 1073741884;
		case 115:
			return 1073741885;
		case 116:
			return 1073741886;
		case 117:
			return 1073741887;
		case 118:
			return 1073741888;
		case 119:
			return 1073741889;
		case 120:
			return 1073741890;
		case 121:
			return 1073741891;
		case 122:
			return 1073741892;
		case 123:
			return 1073741893;
		case 124:
			return 1073741928;
		case 125:
			return 1073741929;
		case 126:
			return 1073741930;
		case 186:
			return 59;
		case 187:
			return 61;
		case 188:
			return 44;
		case 189:
			return 45;
		case 190:
			return 46;
		case 191:
			return 47;
		case 192:
			return 96;
		case 219:
			return 91;
		case 220:
			return 92;
		case 221:
			return 93;
		case 222:
			return 39;
		}
		return keyCode;
	}
	,create: function(config) {
	}
	,exec: function() {
		window.addEventListener("keydown",$bind(this,this.handleKeyEvent),false);
		window.addEventListener("keyup",$bind(this,this.handleKeyEvent),false);
		window.addEventListener("focus",$bind(this,this.handleWindowEvent),false);
		window.addEventListener("blur",$bind(this,this.handleWindowEvent),false);
		window.addEventListener("resize",$bind(this,this.handleWindowEvent),false);
		window.addEventListener("beforeunload",$bind(this,this.handleWindowEvent),false);
		
			var lastTime = 0;
			var vendors = ['ms', 'moz', 'webkit', 'o'];
			for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
				window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
				window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];
			}
			
			if (!window.requestAnimationFrame)
				window.requestAnimationFrame = function(callback, element) {
					var currTime = new Date().getTime();
					var timeToCall = Math.max(0, 16 - (currTime - lastTime));
					var id = window.setTimeout(function() { callback(currTime + timeToCall); }, 
					  timeToCall);
					lastTime = currTime + timeToCall;
					return id;
				};
			
			if (!window.cancelAnimationFrame)
				window.cancelAnimationFrame = function(id) {
					clearTimeout(id);
				};
			
			window.requestAnimFrame = window.requestAnimationFrame;
		;
		this.lastUpdate = new Date().getTime();
		this.handleApplicationEvent();
		return 0;
	}
	,exit: function() {
	}
	,getFrameRate: function() {
		if(this.framePeriod < 0) return 60; else if(this.framePeriod == 1000) return 0; else return 1000 / this.framePeriod;
	}
	,handleApplicationEvent: function(__) {
		this.updateGameDevices();
		this.currentUpdate = new Date().getTime();
		if(this.currentUpdate >= this.nextUpdate) {
			this.deltaTime = this.currentUpdate - this.lastUpdate;
			this.parent.onUpdate.dispatch(this.deltaTime | 0);
			if(this.parent.renderers[0] != null) {
				this.parent.renderers[0].onRender.dispatch();
				this.parent.renderers[0].flip();
			}
			if(this.framePeriod < 0) {
				this.nextUpdate = this.currentUpdate;
				this.nextUpdate = this.currentUpdate;
			} else this.nextUpdate = this.currentUpdate + this.framePeriod;
			this.lastUpdate = this.currentUpdate;
		}
		window.requestAnimationFrame($bind(this,this.handleApplicationEvent));
	}
	,handleKeyEvent: function(event) {
		if(event.type == "keyup") window.hackKeyUp(event);

		if(this.parent.windows[0] != null) {
			var keyCode = this.convertKeyCode(event.keyCode != null?event.keyCode:event.which);
			var modifier;
			modifier = (event.shiftKey?3:0) | (event.ctrlKey?192:0) | (event.altKey?768:0) | (event.metaKey?3072:0);
			if(event.type == "keydown") this.parent.windows[0].onKeyDown.dispatch(keyCode,modifier); else this.parent.windows[0].onKeyUp.dispatch(keyCode,modifier);
		}
	}
	,handleWindowEvent: function(event) {
		if(this.parent.windows[0] != null) {
			var _g = event.type;
			switch(_g) {
			case "focus":
				this.parent.windows[0].onFocusIn.dispatch();
				this.parent.windows[0].onActivate.dispatch();
				break;
			case "blur":
				this.parent.windows[0].onFocusOut.dispatch();
				this.parent.windows[0].onDeactivate.dispatch();
				break;
			case "resize":
				var cacheWidth = this.parent.windows[0].__width;
				var cacheHeight = this.parent.windows[0].__height;
				this.parent.windows[0].backend.handleResize();
				if(this.parent.windows[0].__width != cacheWidth || this.parent.windows[0].__height != cacheHeight) this.parent.windows[0].onResize.dispatch(this.parent.windows[0].__width,this.parent.windows[0].__height);
				break;
			case "beforeunload":
				this.parent.windows[0].onClose.dispatch();
				break;
			}
		}
	}
	,setFrameRate: function(value) {
		if(value >= 60) this.framePeriod = -1; else if(value > 0) this.framePeriod = 1000 / value; else this.framePeriod = 1000;
		return value;
	}
	,updateGameDevices: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		if(devices == null) return;
		var id;
		var gamepad;
		var joystick;
		var data;
		var cache;
		var _g1 = 0;
		var _g = devices.length;
		while(_g1 < _g) {
			var i = _g1++;
			id = i;
			data = devices[id];
			if(data == null) continue;
			if(!this.gameDeviceCache.h.hasOwnProperty(id)) {
				cache = new lime__$backend_html5_GameDeviceData();
				cache.id = id;
				cache.connected = data.connected;
				var _g3 = 0;
				var _g2 = data.buttons.length;
				while(_g3 < _g2) {
					var i1 = _g3++;
					cache.buttons.push(data.buttons[i1].value);
				}
				var _g31 = 0;
				var _g21 = data.axes.length;
				while(_g31 < _g21) {
					var i2 = _g31++;
					cache.axes.push(data.axes[i2]);
				}
				if(data.mapping == "standard") cache.isGamepad = true;
				this.gameDeviceCache.h[id] = cache;
				if(data.connected) {
					lime_ui_Joystick.__connect(id);
					if(cache.isGamepad) lime_ui_Gamepad.__connect(id);
				}
			}
			cache = this.gameDeviceCache.h[id];
			joystick = lime_ui_Joystick.devices.h[id];
			gamepad = lime_ui_Gamepad.devices.h[id];
			if(data.connected) {
				var button;
				var value;
				var _g32 = 0;
				var _g22 = data.buttons.length;
				while(_g32 < _g22) {
					var i3 = _g32++;
					value = data.buttons[i3].value;
					if(value != cache.buttons[i3]) {
						if(i3 == 6) {
							joystick.onAxisMove.dispatch(data.axes.length,value);
							if(gamepad != null) gamepad.onAxisMove.dispatch(4,value);
						} else if(i3 == 7) {
							joystick.onAxisMove.dispatch(data.axes.length + 1,value);
							if(gamepad != null) gamepad.onAxisMove.dispatch(5,value);
						} else {
							if(value > 0) joystick.onButtonDown.dispatch(i3); else joystick.onButtonUp.dispatch(i3);
							if(gamepad != null) {
								switch(i3) {
								case 0:
									button = 0;
									break;
								case 1:
									button = 1;
									break;
								case 2:
									button = 2;
									break;
								case 3:
									button = 3;
									break;
								case 4:
									button = 9;
									break;
								case 5:
									button = 10;
									break;
								case 8:
									button = 4;
									break;
								case 9:
									button = 6;
									break;
								case 10:
									button = 7;
									break;
								case 11:
									button = 8;
									break;
								case 12:
									button = 11;
									break;
								case 13:
									button = 12;
									break;
								case 14:
									button = 13;
									break;
								case 15:
									button = 14;
									break;
								case 16:
									button = 5;
									break;
								default:
									continue;
								}
								if(value > 0) gamepad.onButtonDown.dispatch(button); else gamepad.onButtonUp.dispatch(button);
							}
						}
						cache.buttons[i3] = value;
					}
				}
				var _g33 = 0;
				var _g23 = data.axes.length;
				while(_g33 < _g23) {
					var i4 = _g33++;
					if(data.axes[i4] != cache.axes[i4]) {
						joystick.onAxisMove.dispatch(i4,data.axes[i4]);
						if(gamepad != null) gamepad.onAxisMove.dispatch(i4,data.axes[i4]);
						cache.axes[i4] = data.axes[i4];
					}
				}
			} else if(cache.connected) {
				cache.connected = false;
				lime_ui_Joystick.__disconnect(id);
				lime_ui_Gamepad.__disconnect(id);
			}
		}
	}
	,__class__: lime__$backend_html5_HTML5Application
};
var lime__$backend_html5_GameDeviceData = function() {
	this.connected = true;
	this.buttons = [];
	this.axes = [];
};
$hxClasses["lime._backend.html5.GameDeviceData"] = lime__$backend_html5_GameDeviceData;
lime__$backend_html5_GameDeviceData.__name__ = ["lime","_backend","html5","GameDeviceData"];
lime__$backend_html5_GameDeviceData.prototype = {
	__class__: lime__$backend_html5_GameDeviceData
};
var lime__$backend_html5_HTML5Mouse = function() { };
$hxClasses["lime._backend.html5.HTML5Mouse"] = lime__$backend_html5_HTML5Mouse;
lime__$backend_html5_HTML5Mouse.__name__ = ["lime","_backend","html5","HTML5Mouse"];
lime__$backend_html5_HTML5Mouse.__cursor = null;
lime__$backend_html5_HTML5Mouse.__hidden = null;
lime__$backend_html5_HTML5Mouse.hide = function() {
	if(!lime__$backend_html5_HTML5Mouse.__hidden) {
		lime__$backend_html5_HTML5Mouse.__hidden = true;
		var _g = 0;
		var _g1 = lime_app_Application.current.windows;
		while(_g < _g1.length) {
			var $window = _g1[_g];
			++_g;
			$window.backend.element.style.cursor = "none";
		}
	}
};
lime__$backend_html5_HTML5Mouse.show = function() {
	if(lime__$backend_html5_HTML5Mouse.__hidden) {
		lime__$backend_html5_HTML5Mouse.__hidden = false;
		var cacheValue = lime__$backend_html5_HTML5Mouse.__cursor;
		lime__$backend_html5_HTML5Mouse.__cursor = null;
		lime__$backend_html5_HTML5Mouse.set_cursor(cacheValue);
	}
};
lime__$backend_html5_HTML5Mouse.warp = function(x,y,window) {
};
lime__$backend_html5_HTML5Mouse.get_cursor = function() {
	if(lime__$backend_html5_HTML5Mouse.__cursor == null) return lime_ui_MouseCursor.DEFAULT;
	return lime__$backend_html5_HTML5Mouse.__cursor;
};
lime__$backend_html5_HTML5Mouse.set_cursor = function(value) {
	if(lime__$backend_html5_HTML5Mouse.__cursor != value) {
		if(!lime__$backend_html5_HTML5Mouse.__hidden) {
			var _g = 0;
			var _g1 = lime_app_Application.current.windows;
			while(_g < _g1.length) {
				var $window = _g1[_g];
				++_g;
				switch(value[1]) {
				case 0:
					$window.backend.element.style.cursor = "default";
					break;
				case 1:
					$window.backend.element.style.cursor = "crosshair";
					break;
				case 3:
					$window.backend.element.style.cursor = "move";
					break;
				case 4:
					$window.backend.element.style.cursor = "pointer";
					break;
				case 5:
					$window.backend.element.style.cursor = "nesw-resize";
					break;
				case 6:
					$window.backend.element.style.cursor = "ns-resize";
					break;
				case 7:
					$window.backend.element.style.cursor = "nwse-resize";
					break;
				case 8:
					$window.backend.element.style.cursor = "ew-resize";
					break;
				case 9:
					$window.backend.element.style.cursor = "text";
					break;
				case 10:
					$window.backend.element.style.cursor = "wait";
					break;
				case 11:
					$window.backend.element.style.cursor = "wait";
					break;
				default:
					$window.backend.element.style.cursor = "auto";
				}
			}
		}
		lime__$backend_html5_HTML5Mouse.__cursor = value;
	}
	return lime__$backend_html5_HTML5Mouse.__cursor;
};
lime__$backend_html5_HTML5Mouse.get_lock = function() {
	return false;
};
lime__$backend_html5_HTML5Mouse.set_lock = function(value) {
	return value;
};
var lime__$backend_html5_HTML5Renderer = function(parent) {
	this.parent = parent;
};
$hxClasses["lime._backend.html5.HTML5Renderer"] = lime__$backend_html5_HTML5Renderer;
lime__$backend_html5_HTML5Renderer.__name__ = ["lime","_backend","html5","HTML5Renderer"];
lime__$backend_html5_HTML5Renderer.prototype = {
	create: function() {
		this.createContext();
		{
			var _g = this.parent.context;
			switch(_g[1]) {
			case 0:
				this.parent.window.backend.canvas.addEventListener("webglcontextlost",$bind(this,this.handleEvent),false);
				this.parent.window.backend.canvas.addEventListener("webglcontextrestored",$bind(this,this.handleEvent),false);
				break;
			default:
			}
		}
	}
	,createContext: function() {
		if(this.parent.window.backend.div != null) {
			this.parent.context = lime_graphics_RenderContext.DOM(this.parent.window.backend.div);
			this.parent.type = lime_graphics_RendererType.DOM;
		} else if(this.parent.window.backend.canvas != null) {
			var webgl = null;
			if(webgl == null) {
				this.parent.context = lime_graphics_RenderContext.CANVAS(this.parent.window.backend.canvas.getContext("2d"));
				this.parent.type = lime_graphics_RendererType.CANVAS;
			} else {
				lime_graphics_opengl_GL.context = webgl;
				this.parent.context = lime_graphics_RenderContext.OPENGL(lime_graphics_opengl_GL.context);
				this.parent.type = lime_graphics_RendererType.OPENGL;
			}
		}
	}
	,flip: function() {
	}
	,handleEvent: function(event) {
		var _g = event.type;
		switch(_g) {
		case "webglcontextlost":
			event.preventDefault();
			this.parent.context = null;
			this.parent.onContextLost.dispatch();
			break;
		case "webglcontextrestored":
			this.createContext();
			this.parent.onContextRestored.dispatch(this.parent.context);
			break;
		default:
		}
	}
	,render: function() {
	}
	,__class__: lime__$backend_html5_HTML5Renderer
};
var lime__$backend_html5_HTML5Window = function(parent) {
	this.unusedTouchesPool = new List();
	this.currentTouches = new haxe_ds_IntMap();
	this.parent = parent;
	if(parent.config != null && Object.prototype.hasOwnProperty.call(parent.config,"element")) this.element = parent.config.element;
};
$hxClasses["lime._backend.html5.HTML5Window"] = lime__$backend_html5_HTML5Window;
lime__$backend_html5_HTML5Window.__name__ = ["lime","_backend","html5","HTML5Window"];
lime__$backend_html5_HTML5Window.textInput = null;
lime__$backend_html5_HTML5Window.prototype = {
	alert: function(message,title) {
		if(message != null) js_Browser.alert(message);
	}
	,close: function() {
		this.parent.application.removeWindow(this.parent);
	}
	,create: function(application) {
		this.setWidth = this.parent.__width;
		this.setHeight = this.parent.__height;
		this.parent.id = lime__$backend_html5_HTML5Window.windowID++;
		if(js_Boot.__instanceof(this.element,HTMLCanvasElement)) this.canvas = this.element; else this.canvas = window.document.createElement("canvas");
		if(this.canvas != null) {
			var style = this.canvas.style;
			style.setProperty("-webkit-transform","translateZ(0)",null);
			style.setProperty("transform","translateZ(0)",null);
		} else if(this.div != null) {
			var style1 = this.div.style;
			style1.setProperty("-webkit-transform","translate3D(0,0,0)",null);
			style1.setProperty("transform","translate3D(0,0,0)",null);
			style1.position = "relative";
			style1.overflow = "hidden";
			style1.setProperty("-webkit-user-select","none",null);
			style1.setProperty("-moz-user-select","none",null);
			style1.setProperty("-ms-user-select","none",null);
			style1.setProperty("-o-user-select","none",null);
		}
		if(this.parent.__width == 0 && this.parent.__height == 0) {
			if(this.element != null) {
				this.parent.set_width(this.element.clientWidth);
				this.parent.set_height(this.element.clientHeight);
			} else {
				this.parent.set_width(window.innerWidth);
				this.parent.set_height(window.innerHeight);
			}
			this.parent.set_fullscreen(true);
		}
		if(this.canvas != null) {
			this.canvas.width = this.parent.__width;
			this.canvas.height = this.parent.__height;
		} else {
			this.div.style.width = this.parent.__width + "px";
			this.div.style.height = this.parent.__height + "px";
		}
		this.handleResize();
		if(this.element != null) {
			if(this.canvas != null) {
				if(this.element != this.canvas) this.element.appendChild(this.canvas);
			} else this.element.appendChild(this.div);
			var events = ["mousedown","mouseenter","mouseleave","mousemove","mouseup","wheel"];
			var standardTouch = typeof(window.ontouchstart) != "undefined";
			if(!standardTouch) {
				var _g = 0;
				while(_g < events.length) {
					var event = events[_g];
					++_g;
					this.element.addEventListener(event,$bind(this,this.handleMouseEvent),true);
				}
			}
			window.document.addEventListener("dragstart",function(e) {
				if(e.target.nodeName.toLowerCase() == "img") {
					e.preventDefault();
					return false;
				}
				return true;
			},false);
			this.element.addEventListener("touchstart",$bind(this,this.handleTouchEvent),true);
			this.element.addEventListener("touchmove",$bind(this,this.handleTouchEvent),true);
			this.element.addEventListener("touchend",$bind(this,this.handleTouchEvent),true);
			this.element.addEventListener("gamepadconnected",$bind(this,this.handleGamepadEvent),true);
			this.element.addEventListener("gamepaddisconnected",$bind(this,this.handleGamepadEvent),true);
		}
	}
	,focus: function() {
	}
	,getDisplay: function() {
		return lime_system_System.getDisplay(0);
	}
	,getEnableTextEvents: function() {
		return this.enableTextEvents;
	}
	,handleFocusEvent: function(event) {
		if(this.enableTextEvents) haxe_Timer.delay(function() {
			lime__$backend_html5_HTML5Window.textInput.focus();
		},20);
	}
	,handleGamepadEvent: function(event) {
		var _g = event.type;
		switch(_g) {
		case "gamepadconnected":
			lime_ui_Joystick.__connect(event.gamepad.index);
			if(event.gamepad.mapping == "standard") lime_ui_Gamepad.__connect(event.gamepad.index);
			break;
		case "gamepaddisconnected":
			lime_ui_Joystick.__disconnect(event.gamepad.index);
			lime_ui_Gamepad.__disconnect(event.gamepad.index);
			break;
		default:
		}
	}
	,handleInputEvent: function(event) {
		if(lime__$backend_html5_HTML5Window.textInput.value != "") {
			this.parent.onTextInput.dispatch(lime__$backend_html5_HTML5Window.textInput.value);
			lime__$backend_html5_HTML5Window.textInput.value = "";
		}
	}
	,handleMouseEvent: function(event) {
		var x = 0.0;
		var y = 0.0;
		if(event.type != "wheel") {
			if(this.element != null) {
				if(this.canvas != null) {
					var rect = this.canvas.getBoundingClientRect();
					x = (event.clientX - rect.left) * (this.parent.__width / rect.width);
					y = (event.clientY - rect.top) * (this.parent.__height / rect.height);
				} else if(this.div != null) {
					var rect1 = this.div.getBoundingClientRect();
					x = event.clientX - rect1.left;
					y = event.clientY - rect1.top;
				} else {
					var rect2 = this.element.getBoundingClientRect();
					x = (event.clientX - rect2.left) * (this.parent.__width / rect2.width);
					y = (event.clientY - rect2.top) * (this.parent.__height / rect2.height);
				}
			} else {
				x = event.clientX;
				y = event.clientY;
			}
			var _g = event.type;
			switch(_g) {
			case "mousedown":
				this.parent.onMouseDown.dispatch(x,y,event.button);
				break;
			case "mouseenter":
				this.parent.onEnter.dispatch();
				break;
			case "mouseleave":
				this.parent.onLeave.dispatch();
				break;
			case "mouseup":
				this.parent.onMouseUp.dispatch(x,y,event.button);
				break;
			case "mousemove":
				this.parent.onMouseMove.dispatch(x,y);
				break;
			default:
			}
		} else this.parent.onMouseWheel.dispatch(event.deltaX,-event.deltaY);
	}
	,handleResize: function() {
		var stretch = this.parent.__fullscreen || this.setWidth == 0 && this.setHeight == 0;
		if(this.element != null && (this.div == null || this.div != null && stretch)) {
			if(stretch) {
				if(this.parent.__width != this.element.clientWidth || this.parent.__height != this.element.clientHeight) {
					this.parent.set_width(this.element.clientWidth);
					this.parent.set_height(this.element.clientHeight);
					if(this.canvas != null) {
						if(this.element != this.canvas) {
							this.canvas.width = this.element.clientWidth;
							this.canvas.height = this.element.clientHeight;
						}
					} else {
						this.div.style.width = this.element.clientWidth + "px";
						this.div.style.height = this.element.clientHeight + "px";
					}
				}
			} else {
				var scaleX = this.element.clientWidth / this.setWidth;
				var scaleY = this.element.clientHeight / this.setHeight;
				var currentRatio = scaleX / scaleY;
				var targetRatio = Math.min(scaleX,scaleY);
				if(this.canvas != null) {
					if(this.element != this.canvas) {
						this.canvas.style.width = this.setWidth * targetRatio + "px";
						this.canvas.style.height = this.setHeight * targetRatio + "px";
						this.canvas.style.marginLeft = (this.element.clientWidth - this.setWidth * targetRatio) / 2 + "px";
						this.canvas.style.marginTop = (this.element.clientHeight - this.setHeight * targetRatio) / 2 + "px";
					}
				} else {
					this.div.style.width = this.setWidth * targetRatio + "px";
					this.div.style.height = this.setHeight * targetRatio + "px";
					this.div.style.marginLeft = (this.element.clientWidth - this.setWidth * targetRatio) / 2 + "px";
					this.div.style.marginTop = (this.element.clientHeight - this.setHeight * targetRatio) / 2 + "px";
				}
			}
		}
	}
	,handleTouchEvent: function(event) {
		event.preventDefault();
		var rect = null;
		if(this.element != null) {
			if(this.canvas != null) rect = this.canvas.getBoundingClientRect(); else if(this.div != null) rect = this.div.getBoundingClientRect(); else rect = this.element.getBoundingClientRect();
		}
		var windowWidth = this.setWidth;
		var windowHeight = this.setHeight;
		if(windowWidth == 0 || windowHeight == 0) {
			if(rect != null) {
				windowWidth = rect.width;
				windowHeight = rect.height;
			} else {
				windowWidth = 1;
				windowHeight = 1;
			}
		}
		var _g = 0;
		var _g1 = event.changedTouches;
		while(_g < _g1.length) {
			var data = _g1[_g];
			++_g;
			var x = 0.0;
			var y = 0.0;
			if(rect != null) {
				x = (data.clientX - rect.left) * (windowWidth / rect.width);
				y = (data.clientY - rect.top) * (windowHeight / rect.height);
			} else {
				x = data.clientX;
				y = data.clientY;
			}
			var _g2 = event.type;
			switch(_g2) {
			case "touchstart":
				var touchesCount = 1;
				var $it0 = this.currentTouches.keys();
				while( $it0.hasNext() ) {
					var tid = $it0.next();
					touchesCount++;
				}
				if(touchesCount != event.touches.length) {
					var newTouches = new haxe_ds_IntMap();
					var foundPrimary = false;
					var _g3 = 0;
					var _g4 = event.touches;
					while(_g3 < _g4.length) {
						var touchDat = _g4[_g3];
						++_g3;
						if(!this.currentTouches.h.hasOwnProperty(touchDat.identifier)) continue;
						var leTouch = this.currentTouches.h[touchDat.identifier];
						newTouches.h[touchDat.identifier] = leTouch;
						if(this.primaryTouch != null && leTouch == this.primaryTouch) foundPrimary = true;
					}
					this.currentTouches = newTouches;
					if(!foundPrimary) this.primaryTouch = null;
				}
				var touch = this.unusedTouchesPool.pop();
				if(touch == null) touch = new lime_ui_Touch(x / windowWidth,y / windowHeight,data.identifier,0,0,data.force,this.parent.id); else {
					touch.x = x / windowWidth;
					touch.y = y / windowHeight;
					touch.id = data.identifier;
					touch.dx = 0;
					touch.dy = 0;
					touch.pressure = data.force;
					touch.device = this.parent.id;
				}
				this.currentTouches.h[data.identifier] = touch;
				lime_ui_Touch.onStart.dispatch(touch);
				if(this.primaryTouch == null) this.primaryTouch = touch;
				if(touch == this.primaryTouch) this.parent.onMouseDown.dispatch(x,y,0);
				break;
			case "touchend":
				var touch1 = this.currentTouches.h[data.identifier];
				if(touch1 != null) {
					var cacheX = touch1.x;
					var cacheY = touch1.y;
					touch1.x = x / windowWidth;
					touch1.y = y / windowHeight;
					touch1.dx = touch1.x - cacheX;
					touch1.dy = touch1.y - cacheY;
					touch1.pressure = data.force;
					lime_ui_Touch.onEnd.dispatch(touch1);
					this.currentTouches.remove(data.identifier);
					this.unusedTouchesPool.add(touch1);
					if(touch1 == this.primaryTouch) {
						this.parent.onMouseUp.dispatch(x,y,0);
						this.primaryTouch = null;
					}
				}
				break;
			case "touchmove":
				var touch2 = this.currentTouches.h[data.identifier];
				if(touch2 != null) {
					var cacheX1 = touch2.x;
					var cacheY1 = touch2.y;
					touch2.x = x / windowWidth;
					touch2.y = y / windowHeight;
					touch2.dx = touch2.x - cacheX1;
					touch2.dy = touch2.y - cacheY1;
					touch2.pressure = data.force;
					lime_ui_Touch.onMove.dispatch(touch2);
					if(touch2 == this.primaryTouch) this.parent.onMouseMove.dispatch(x,y);
				}
				break;
			default:
			}
		}
	}
	,move: function(x,y) {
	}
	,resize: function(width,height) {
	}
	,setEnableTextEvents: function(value) {
		if(value) {
			if(lime__$backend_html5_HTML5Window.textInput == null) {
				lime__$backend_html5_HTML5Window.textInput = window.document.createElement("input");
				lime__$backend_html5_HTML5Window.textInput.type = "text";
				lime__$backend_html5_HTML5Window.textInput.style.position = "absolute";
				lime__$backend_html5_HTML5Window.textInput.style.opacity = "0";
				lime__$backend_html5_HTML5Window.textInput.style.color = "transparent";
				lime__$backend_html5_HTML5Window.textInput.value = "";
				lime__$backend_html5_HTML5Window.textInput.autocapitalize = "off";
				lime__$backend_html5_HTML5Window.textInput.autocorrect = "off";
				lime__$backend_html5_HTML5Window.textInput.autocomplete = "off";
				lime__$backend_html5_HTML5Window.textInput.style.left = "0px";
				lime__$backend_html5_HTML5Window.textInput.style.top = "50%";
				if(new EReg("(iPad|iPhone|iPod).*OS 8_","gi").match(window.navigator.userAgent)) {
					lime__$backend_html5_HTML5Window.textInput.style.fontSize = "0px";
					lime__$backend_html5_HTML5Window.textInput.style.width = "0px";
					lime__$backend_html5_HTML5Window.textInput.style.height = "0px";
				} else {
					lime__$backend_html5_HTML5Window.textInput.style.width = "1px";
					lime__$backend_html5_HTML5Window.textInput.style.height = "1px";
				}
				lime__$backend_html5_HTML5Window.textInput.style.pointerEvents = "none";
				lime__$backend_html5_HTML5Window.textInput.style.zIndex = "-10000000";
				window.document.body.appendChild(lime__$backend_html5_HTML5Window.textInput);
			}
			if(!this.enableTextEvents) {
				lime__$backend_html5_HTML5Window.textInput.addEventListener("input",$bind(this,this.handleInputEvent),true);
				lime__$backend_html5_HTML5Window.textInput.addEventListener("blur",$bind(this,this.handleFocusEvent),true);
			}
			lime__$backend_html5_HTML5Window.textInput.focus();
		} else if(lime__$backend_html5_HTML5Window.textInput != null) {
			lime__$backend_html5_HTML5Window.textInput.removeEventListener("input",$bind(this,this.handleInputEvent),true);
			lime__$backend_html5_HTML5Window.textInput.removeEventListener("blur",$bind(this,this.handleFocusEvent),true);
			lime__$backend_html5_HTML5Window.textInput.blur();
		}
		return this.enableTextEvents = value;
	}
	,setFullscreen: function(value) {
		return false;
	}
	,setIcon: function(image) {
	}
	,setMinimized: function(value) {
		return false;
	}
	,setTitle: function(value) {
		return value;
	}
	,__class__: lime__$backend_html5_HTML5Window
};
var lime_app_IModule = function() { };
$hxClasses["lime.app.IModule"] = lime_app_IModule;
lime_app_IModule.__name__ = ["lime","app","IModule"];
lime_app_IModule.prototype = {
	__class__: lime_app_IModule
};
var lime_app_Module = function() {
	this.onExit = new lime_app_Event_$Int_$Void();
};
$hxClasses["lime.app.Module"] = lime_app_Module;
lime_app_Module.__name__ = ["lime","app","Module"];
lime_app_Module.__interfaces__ = [lime_app_IModule];
lime_app_Module.prototype = {
	onGamepadAxisMove: function(gamepad,axis,value) {
	}
	,onGamepadButtonDown: function(gamepad,button) {
	}
	,onGamepadButtonUp: function(gamepad,button) {
	}
	,onGamepadConnect: function(gamepad) {
		null;
	}
	,onGamepadDisconnect: function(gamepad) {
	}
	,onJoystickAxisMove: function(joystick,axis,value) {
	}
	,onJoystickButtonDown: function(joystick,button) {
	}
	,onJoystickButtonUp: function(joystick,button) {
	}
	,onJoystickConnect: function(joystick) {
	}
	,onJoystickDisconnect: function(joystick) {
	}
	,onJoystickHatMove: function(joystick,hat,position) {
	}
	,onJoystickTrackballMove: function(joystick,trackball,value) {
	}
	,onKeyDown: function(window,keyCode,modifier) {
	}
	,onKeyUp: function(window,keyCode,modifier) {
	}
	,onModuleExit: function(code) {
	}
	,onMouseDown: function(window,x,y,button) {
	}
	,onMouseMove: function(window,x,y) {
	}
	,onMouseMoveRelative: function(window,x,y) {
	}
	,onMouseUp: function(window,x,y,button) {
	}
	,onMouseWheel: function(window,deltaX,deltaY) {
	}
	,onPreloadComplete: function() {
	}
	,onPreloadProgress: function(loaded,total) {
	}
	,onRenderContextLost: function(renderer) {
	}
	,onRenderContextRestored: function(renderer,context) {
	}
	,onTextEdit: function(window,text,start,length) {
	}
	,onTextInput: function(window,text) {
	}
	,onTouchEnd: function(touch) {
	}
	,onTouchMove: function(touch) {
	}
	,onTouchStart: function(touch) {
	}
	,onWindowActivate: function(window) {
	}
	,onWindowClose: function(window) {
	}
	,onWindowCreate: function(window) {
	}
	,onWindowDeactivate: function(window) {
	}
	,onWindowEnter: function(window) {
	}
	,onWindowFocusIn: function(window) {
	}
	,onWindowFocusOut: function(window) {
	}
	,onWindowFullscreen: function(window) {
	}
	,onWindowLeave: function(window) {
	}
	,onWindowMove: function(window,x,y) {
	}
	,onWindowMinimize: function(window) {
	}
	,onWindowResize: function(window,width,height) {
	}
	,onWindowRestore: function(window) {
	}
	,render: function(renderer) {
	}
	,update: function(deltaTime) {
	}
	,__class__: lime_app_Module
};
var lime_app_Application = function() {
	this.onUpdate = new lime_app_Event_$Int_$Void();
	lime_app_Module.call(this);
	if(lime_app_Application.current == null) lime_app_Application.current = this;
	this.modules = [];
	this.renderers = [];
	this.windows = [];
	this.windowByID = new haxe_ds_IntMap();
	this.backend = new lime__$backend_html5_HTML5Application(this);
	this.onExit.add($bind(this,this.onModuleExit));
	this.onUpdate.add($bind(this,this.update));
	lime_ui_Gamepad.onConnect.add($bind(this,this.__onGamepadConnect));
	lime_ui_Joystick.onConnect.add($bind(this,this.__onJoystickConnect));
	lime_ui_Touch.onStart.add($bind(this,this.onTouchStart));
	lime_ui_Touch.onMove.add($bind(this,this.onTouchMove));
	lime_ui_Touch.onEnd.add($bind(this,this.onTouchEnd));
};
$hxClasses["lime.app.Application"] = lime_app_Application;
lime_app_Application.__name__ = ["lime","app","Application"];
lime_app_Application.current = null;
lime_app_Application.__super__ = lime_app_Module;
lime_app_Application.prototype = $extend(lime_app_Module.prototype,{
	addModule: function(module) {
		this.modules.push(module);
		if(this.windows.length > 0) {
			var _g = 0;
			var _g1 = this.windows;
			while(_g < _g1.length) {
				var $window = _g1[_g];
				++_g;
				module.onWindowCreate($window);
			}
			if(this.preloader == null || this.preloader.complete) module.onPreloadComplete();
		}
	}
	,addRenderer: function(renderer) {
		renderer.onRender.add((function(f,a1) {
			return function() {
				f(a1);
			};
		})($bind(this,this.render),renderer));
		renderer.onContextLost.add((function(f1,a11) {
			return function() {
				f1(a11);
			};
		})($bind(this,this.onRenderContextLost),renderer));
		renderer.onContextRestored.add((function(f2,a12) {
			return function(a2) {
				f2(a12,a2);
			};
		})($bind(this,this.onRenderContextRestored),renderer));
		this.renderers.push(renderer);
	}
	,create: function(config) {
		this.config = config;
		this.backend.create(config);
		if(config != null) {
			if(Object.prototype.hasOwnProperty.call(config,"fps")) this.backend.setFrameRate(config.fps);
			if(Object.prototype.hasOwnProperty.call(config,"windows")) {
				var _g = 0;
				var _g1 = config.windows;
				while(_g < _g1.length) {
					var windowConfig = _g1[_g];
					++_g;
					var $window = new lime_ui_Window(windowConfig);
					this.createWindow($window);
					break;
				}
			}
			if(this.preloader == null || this.preloader.complete) this.onPreloadComplete();
		}
	}
	,createWindow: function(window) {
		window.onActivate.add((function(f,a1) {
			return function() {
				f(a1);
			};
		})($bind(this,this.onWindowActivate),window));
		window.onClose.add((function(f1,a11) {
			return function() {
				f1(a11);
			};
		})($bind(this,this.onWindowClose),window));
		window.onCreate.add((function(f2,a12) {
			return function() {
				f2(a12);
			};
		})($bind(this,this.onWindowCreate),window));
		window.onDeactivate.add((function(f3,a13) {
			return function() {
				f3(a13);
			};
		})($bind(this,this.onWindowDeactivate),window));
		window.onEnter.add((function(f4,a14) {
			return function() {
				f4(a14);
			};
		})($bind(this,this.onWindowEnter),window));
		window.onFocusIn.add((function(f5,a15) {
			return function() {
				f5(a15);
			};
		})($bind(this,this.onWindowFocusIn),window));
		window.onFocusOut.add((function(f6,a16) {
			return function() {
				f6(a16);
			};
		})($bind(this,this.onWindowFocusOut),window));
		window.onFullscreen.add((function(f7,a17) {
			return function() {
				f7(a17);
			};
		})($bind(this,this.onWindowFullscreen),window));
		window.onKeyDown.add((function(f8,a18) {
			return function(a2,a3) {
				f8(a18,a2,a3);
			};
		})($bind(this,this.onKeyDown),window));
		window.onKeyUp.add((function(f9,a19) {
			return function(a21,a31) {
				f9(a19,a21,a31);
			};
		})($bind(this,this.onKeyUp),window));
		window.onLeave.add((function(f10,a110) {
			return function() {
				f10(a110);
			};
		})($bind(this,this.onWindowLeave),window));
		window.onMinimize.add((function(f11,a111) {
			return function() {
				f11(a111);
			};
		})($bind(this,this.onWindowMinimize),window));
		window.onMouseDown.add((function(f12,a112) {
			return function(x,y,a22) {
				f12(a112,x,y,a22);
			};
		})($bind(this,this.onMouseDown),window));
		window.onMouseMove.add((function(f13,a113) {
			return function(x1,y1) {
				f13(a113,x1,y1);
			};
		})($bind(this,this.onMouseMove),window));
		window.onMouseMoveRelative.add((function(f14,a114) {
			return function(x2,y2) {
				f14(a114,x2,y2);
			};
		})($bind(this,this.onMouseMoveRelative),window));
		window.onMouseUp.add((function(f15,a115) {
			return function(x3,y3,a23) {
				f15(a115,x3,y3,a23);
			};
		})($bind(this,this.onMouseUp),window));
		window.onMouseWheel.add((function(f16,a116) {
			return function(a24,a32) {
				f16(a116,a24,a32);
			};
		})($bind(this,this.onMouseWheel),window));
		window.onMove.add((function(f17,a117) {
			return function(x4,y4) {
				f17(a117,x4,y4);
			};
		})($bind(this,this.onWindowMove),window));
		window.onResize.add((function(f18,a118) {
			return function(a25,a33) {
				f18(a118,a25,a33);
			};
		})($bind(this,this.onWindowResize),window));
		window.onRestore.add((function(f19,a119) {
			return function() {
				f19(a119);
			};
		})($bind(this,this.onWindowRestore),window));
		window.onTextEdit.add((function(f20,a120) {
			return function(a26,a34,a4) {
				f20(a120,a26,a34,a4);
			};
		})($bind(this,this.onTextEdit),window));
		window.onTextInput.add((function(f21,a121) {
			return function(a27) {
				f21(a121,a27);
			};
		})($bind(this,this.onTextInput),window));
		if(window.renderer == null) {
			var renderer = new lime_graphics_Renderer(window);
			this.addRenderer(renderer);
		}
		window.create(this);
		this.windows.push(window);
		this.windowByID.h[window.id] = window;
		window.onCreate.dispatch();
	}
	,exec: function() {
		lime_app_Application.current = this;
		return this.backend.exec();
	}
	,onGamepadAxisMove: function(gamepad,axis,value) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadAxisMove(gamepad,axis,value);
		}
	}
	,onGamepadButtonDown: function(gamepad,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadButtonDown(gamepad,button);
		}
	}
	,onGamepadButtonUp: function(gamepad,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadButtonUp(gamepad,button);
		}
	}
	,onGamepadConnect: function(gamepad) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadConnect(gamepad);
		}
	}
	,onGamepadDisconnect: function(gamepad) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onGamepadDisconnect(gamepad);
		}
	}
	,onJoystickAxisMove: function(joystick,axis,value) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickAxisMove(joystick,axis,value);
		}
	}
	,onJoystickButtonDown: function(joystick,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickButtonDown(joystick,button);
		}
	}
	,onJoystickButtonUp: function(joystick,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickButtonUp(joystick,button);
		}
	}
	,onJoystickConnect: function(joystick) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickConnect(joystick);
		}
	}
	,onJoystickDisconnect: function(joystick) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickDisconnect(joystick);
		}
	}
	,onJoystickHatMove: function(joystick,hat,position) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickHatMove(joystick,hat,position);
		}
	}
	,onJoystickTrackballMove: function(joystick,trackball,value) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onJoystickTrackballMove(joystick,trackball,value);
		}
	}
	,onKeyDown: function(window,keyCode,modifier) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onKeyDown(window,keyCode,modifier);
		}
	}
	,onKeyUp: function(window,keyCode,modifier) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onKeyUp(window,keyCode,modifier);
		}
	}
	,onModuleExit: function(code) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onModuleExit(code);
		}
		this.backend.exit();
	}
	,onMouseDown: function(window,x,y,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseDown(window,x,y,button);
		}
	}
	,onMouseMove: function(window,x,y) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseMove(window,x,y);
		}
	}
	,onMouseMoveRelative: function(window,x,y) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseMoveRelative(window,x,y);
		}
	}
	,onMouseUp: function(window,x,y,button) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseUp(window,x,y,button);
		}
	}
	,onMouseWheel: function(window,deltaX,deltaY) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onMouseWheel(window,deltaX,deltaY);
		}
	}
	,onPreloadComplete: function() {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onPreloadComplete();
		}
	}
	,onPreloadProgress: function(loaded,total) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onPreloadProgress(loaded,total);
		}
	}
	,onRenderContextLost: function(renderer) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onRenderContextLost(renderer);
		}
	}
	,onRenderContextRestored: function(renderer,context) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onRenderContextRestored(renderer,context);
		}
	}
	,onTextEdit: function(window,text,start,length) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTextEdit(window,text,start,length);
		}
	}
	,onTextInput: function(window,text) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTextInput(window,text);
		}
	}
	,onTouchEnd: function(touch) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTouchEnd(touch);
		}
	}
	,onTouchMove: function(touch) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTouchMove(touch);
		}
	}
	,onTouchStart: function(touch) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onTouchStart(touch);
		}
	}
	,onWindowActivate: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowActivate(window);
		}
	}
	,onWindowClose: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowClose(window);
		}
		this.removeWindow(window);
	}
	,onWindowCreate: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowCreate(window);
		}
	}
	,onWindowDeactivate: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowDeactivate(window);
		}
	}
	,onWindowEnter: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowEnter(window);
		}
	}
	,onWindowFocusIn: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowFocusIn(window);
		}
	}
	,onWindowFocusOut: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowFocusOut(window);
		}
	}
	,onWindowFullscreen: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowFullscreen(window);
		}
	}
	,onWindowLeave: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowLeave(window);
		}
	}
	,onWindowMinimize: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowMinimize(window);
		}
	}
	,onWindowMove: function(window,x,y) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowMove(window,x,y);
		}
	}
	,onWindowResize: function(window,width,height) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowResize(window,width,height);
		}
	}
	,onWindowRestore: function(window) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.onWindowRestore(window);
		}
	}
	,removeModule: function(module) {
		if(module != null) {
			module.onModuleExit(0);
			HxOverrides.remove(this.modules,module);
		}
	}
	,removeRenderer: function(renderer) {
		if(renderer != null && HxOverrides.indexOf(this.renderers,renderer,0) > -1) HxOverrides.remove(this.renderers,renderer);
	}
	,removeWindow: function(window) {
		if(window != null && this.windowByID.h.hasOwnProperty(window.id)) {
			HxOverrides.remove(this.windows,window);
			this.windowByID.remove(window.id);
			window.close();
			if(this.windows[0] == window) this.window = null;
		}
	}
	,render: function(renderer) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.render(renderer);
		}
	}
	,setPreloader: function(preloader) {
		if(this.preloader != null) {
			this.preloader.onProgress.remove($bind(this,this.onPreloadProgress));
			this.preloader.onComplete.remove($bind(this,this.onPreloadComplete));
		}
		this.preloader = preloader;
		if(preloader.complete) this.onPreloadComplete(); else {
			preloader.onProgress.add($bind(this,this.onPreloadProgress));
			preloader.onComplete.add($bind(this,this.onPreloadComplete));
		}
	}
	,update: function(deltaTime) {
		var _g = 0;
		var _g1 = this.modules;
		while(_g < _g1.length) {
			var module = _g1[_g];
			++_g;
			module.update(deltaTime);
		}
	}
	,__onGamepadConnect: function(gamepad) {
		this.onGamepadConnect(gamepad);
		gamepad.onAxisMove.add((function(f,a1) {
			return function(a2,a3) {
				f(a1,a2,a3);
			};
		})($bind(this,this.onGamepadAxisMove),gamepad));
		gamepad.onButtonDown.add((function(f1,a11) {
			return function(a21) {
				f1(a11,a21);
			};
		})($bind(this,this.onGamepadButtonDown),gamepad));
		gamepad.onButtonUp.add((function(f2,a12) {
			return function(a22) {
				f2(a12,a22);
			};
		})($bind(this,this.onGamepadButtonUp),gamepad));
		gamepad.onDisconnect.add((function(f3,a13) {
			return function() {
				f3(a13);
			};
		})($bind(this,this.onGamepadDisconnect),gamepad));
	}
	,__onJoystickConnect: function(joystick) {
		this.onJoystickConnect(joystick);
		joystick.onAxisMove.add((function(f,a1) {
			return function(a2,a3) {
				f(a1,a2,a3);
			};
		})($bind(this,this.onJoystickAxisMove),joystick));
		joystick.onButtonDown.add((function(f1,a11) {
			return function(a21) {
				f1(a11,a21);
			};
		})($bind(this,this.onJoystickButtonDown),joystick));
		joystick.onButtonUp.add((function(f2,a12) {
			return function(a22) {
				f2(a12,a22);
			};
		})($bind(this,this.onJoystickButtonUp),joystick));
		joystick.onDisconnect.add((function(f3,a13) {
			return function() {
				f3(a13);
			};
		})($bind(this,this.onJoystickDisconnect),joystick));
		joystick.onHatMove.add((function(f4,a14) {
			return function(a23,a31) {
				f4(a14,a23,a31);
			};
		})($bind(this,this.onJoystickHatMove),joystick));
		joystick.onTrackballMove.add((function(f5,a15) {
			return function(a24,a32) {
				f5(a15,a24,a32);
			};
		})($bind(this,this.onJoystickTrackballMove),joystick));
	}
	,get_frameRate: function() {
		return this.backend.getFrameRate();
	}
	,set_frameRate: function(value) {
		return this.backend.setFrameRate(value);
	}
	,get_renderer: function() {
		return this.renderers[0];
	}
	,get_window: function() {
		return this.windows[0];
	}
	,__class__: lime_app_Application
	,__properties__: {get_window:"get_window",get_renderer:"get_renderer",set_frameRate:"set_frameRate",get_frameRate:"get_frameRate"}
});
var lime_app_Event = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event"] = lime_app_Event;
lime_app_Event.__name__ = ["lime","app","Event"];
lime_app_Event.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,__class__: lime_app_Event
};
var lime_app_Event_$Dynamic_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Dynamic_Void"] = lime_app_Event_$Dynamic_$Void;
lime_app_Event_$Dynamic_$Void.__name__ = ["lime","app","Event_Dynamic_Void"];
lime_app_Event_$Dynamic_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Dynamic_$Void
};
var lime_app_Event_$Float_$Float_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Float_Float_Int_Void"] = lime_app_Event_$Float_$Float_$Int_$Void;
lime_app_Event_$Float_$Float_$Int_$Void.__name__ = ["lime","app","Event_Float_Float_Int_Void"];
lime_app_Event_$Float_$Float_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1,a2) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1,a2);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Float_$Float_$Int_$Void
};
var lime_app_Event_$Float_$Float_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Float_Float_Void"] = lime_app_Event_$Float_$Float_$Void;
lime_app_Event_$Float_$Float_$Void.__name__ = ["lime","app","Event_Float_Float_Void"];
lime_app_Event_$Float_$Float_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Float_$Float_$Void
};
var lime_app_Event_$Int_$Float_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_Float_Void"] = lime_app_Event_$Int_$Float_$Void;
lime_app_Event_$Int_$Float_$Void.__name__ = ["lime","app","Event_Int_Float_Void"];
lime_app_Event_$Int_$Float_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$Float_$Void
};
var lime_app_Event_$Int_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_Int_Void"] = lime_app_Event_$Int_$Int_$Void;
lime_app_Event_$Int_$Int_$Void.__name__ = ["lime","app","Event_Int_Int_Void"];
lime_app_Event_$Int_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$Int_$Void
};
var lime_app_Event_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_Void"] = lime_app_Event_$Int_$Void;
lime_app_Event_$Int_$Void.__name__ = ["lime","app","Event_Int_Void"];
lime_app_Event_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$Void
};
var lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_Int_lime_ui_JoystickHatPosition_Void"] = lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void;
lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void.__name__ = ["lime","app","Event_Int_lime_ui_JoystickHatPosition_Void"];
lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void
};
var lime_app_Event_$String_$Int_$Int_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_String_Int_Int_Void"] = lime_app_Event_$String_$Int_$Int_$Void;
lime_app_Event_$String_$Int_$Int_$Void.__name__ = ["lime","app","Event_String_Int_Int_Void"];
lime_app_Event_$String_$Int_$Int_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1,a2) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1,a2);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$String_$Int_$Int_$Void
};
var lime_app_Event_$String_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_String_Void"] = lime_app_Event_$String_$Void;
lime_app_Event_$String_$Void.__name__ = ["lime","app","Event_String_Void"];
lime_app_Event_$String_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$String_$Void
};
var lime_app_Event_$lime_$graphics_$RenderContext_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_graphics_RenderContext_Void"] = lime_app_Event_$lime_$graphics_$RenderContext_$Void;
lime_app_Event_$lime_$graphics_$RenderContext_$Void.__name__ = ["lime","app","Event_lime_graphics_RenderContext_Void"];
lime_app_Event_$lime_$graphics_$RenderContext_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$graphics_$RenderContext_$Void
};
var lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_GamepadAxis_Float_Void"] = lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void;
lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void.__name__ = ["lime","app","Event_lime_ui_GamepadAxis_Float_Void"];
lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void
};
var lime_app_Event_$lime_$ui_$GamepadButton_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_GamepadButton_Void"] = lime_app_Event_$lime_$ui_$GamepadButton_$Void;
lime_app_Event_$lime_$ui_$GamepadButton_$Void.__name__ = ["lime","app","Event_lime_ui_GamepadButton_Void"];
lime_app_Event_$lime_$ui_$GamepadButton_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$GamepadButton_$Void
};
var lime_app_Event_$lime_$ui_$Gamepad_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_Gamepad_Void"] = lime_app_Event_$lime_$ui_$Gamepad_$Void;
lime_app_Event_$lime_$ui_$Gamepad_$Void.__name__ = ["lime","app","Event_lime_ui_Gamepad_Void"];
lime_app_Event_$lime_$ui_$Gamepad_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$Gamepad_$Void
};
var lime_app_Event_$lime_$ui_$Joystick_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_Joystick_Void"] = lime_app_Event_$lime_$ui_$Joystick_$Void;
lime_app_Event_$lime_$ui_$Joystick_$Void.__name__ = ["lime","app","Event_lime_ui_Joystick_Void"];
lime_app_Event_$lime_$ui_$Joystick_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$Joystick_$Void
};
var lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void;
lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void.__name__ = ["lime","app","Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"];
lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a,a1) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a,a1);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void
};
var lime_app_Event_$lime_$ui_$Touch_$Void = function() {
	this.canceled = false;
	this.__listeners = [];
	this.__priorities = [];
	this.__repeat = [];
};
$hxClasses["lime.app.Event_lime_ui_Touch_Void"] = lime_app_Event_$lime_$ui_$Touch_$Void;
lime_app_Event_$lime_$ui_$Touch_$Void.__name__ = ["lime","app","Event_lime_ui_Touch_Void"];
lime_app_Event_$lime_$ui_$Touch_$Void.prototype = {
	add: function(listener,once,priority) {
		if(priority == null) priority = 0;
		if(once == null) once = false;
		var _g1 = 0;
		var _g = this.__priorities.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(priority > this.__priorities[i]) {
				this.__listeners.splice(i,0,listener);
				this.__priorities.splice(i,0,priority);
				this.__repeat.splice(i,0,!once);
				return;
			}
		}
		this.__listeners.push(listener);
		this.__priorities.push(priority);
		this.__repeat.push(!once);
	}
	,cancel: function() {
		this.canceled = true;
	}
	,has: function(listener) {
		var _g = 0;
		var _g1 = this.__listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(Reflect.compareMethods(l,listener)) return true;
		}
		return false;
	}
	,remove: function(listener) {
		var i = this.__listeners.length;
		while(--i >= 0) if(Reflect.compareMethods(this.__listeners[i],listener)) {
			this.__listeners.splice(i,1);
			this.__priorities.splice(i,1);
			this.__repeat.splice(i,1);
		}
	}
	,dispatch: function(a) {
		this.canceled = false;
		var listeners = this.__listeners;
		var repeat = this.__repeat;
		var i = 0;
		while(i < listeners.length) {
			listeners[i](a);
			if(!repeat[i]) this.remove(listeners[i]); else i++;
			if(this.canceled) break;
		}
	}
	,__class__: lime_app_Event_$lime_$ui_$Touch_$Void
};
var lime_app_Future = function(work) {
	if(work != null) {
		if(lime_app_Future.__threadPool == null) {
			lime_app_Future.__threadPool = new lime_system_ThreadPool();
			lime_app_Future.__threadPool.doWork.add(lime_app_Future.threadPool_doWork);
			lime_app_Future.__threadPool.onComplete.add(lime_app_Future.threadPool_onComplete);
			lime_app_Future.__threadPool.onError.add(lime_app_Future.threadPool_onError);
		}
		var promise = new lime_app_Promise();
		promise.future = this;
		lime_app_Future.__threadPool.queue({ promise : promise, work : work});
	}
};
$hxClasses["lime.app.Future"] = lime_app_Future;
lime_app_Future.__name__ = ["lime","app","Future"];
lime_app_Future.__threadPool = null;
lime_app_Future.threadPool_doWork = function(state) {
	try {
		var result = state.work();
		lime_app_Future.__threadPool.sendComplete({ promise : state.promise, result : result});
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		lime_app_Future.__threadPool.sendError({ promise : state.promise, error : e});
	}
};
lime_app_Future.threadPool_onComplete = function(state) {
	state.promise.complete(state.result);
};
lime_app_Future.threadPool_onError = function(state) {
	state.promise.error(state.error);
};
lime_app_Future.prototype = {
	onComplete: function(listener) {
		if(listener != null) {
			if(this.__completed) listener(this.value); else if(!this.__errored) {
				if(this.__completeListeners == null) this.__completeListeners = [];
				this.__completeListeners.push(listener);
			}
		}
		return this;
	}
	,onError: function(listener) {
		if(listener != null) {
			if(this.__errored) listener(this.__errorMessage); else if(!this.__completed) {
				if(this.__errorListeners == null) this.__errorListeners = [];
				this.__errorListeners.push(listener);
			}
		}
		return this;
	}
	,onProgress: function(listener) {
		if(listener != null) {
			if(this.__progressListeners == null) this.__progressListeners = [];
			this.__progressListeners.push(listener);
		}
		return this;
	}
	,then: function(next) {
		if(this.__completed) return next(this.value); else if(this.__errored) {
			var future = new lime_app_Future();
			future.onError(this.__errorMessage);
			return future;
		} else {
			var promise = new lime_app_Promise();
			this.onError($bind(promise,promise.error));
			this.onProgress($bind(promise,promise.progress));
			this.onComplete(function(val) {
				var future1 = next(val);
				future1.onError($bind(promise,promise.error));
				future1.onComplete($bind(promise,promise.complete));
			});
			return promise.future;
		}
	}
	,get_isCompleted: function() {
		return this.__completed || this.__errored;
	}
	,__class__: lime_app_Future
	,__properties__: {get_isCompleted:"get_isCompleted"}
};
var lime_app_Preloader = function() {
	this.total = 0;
	this.loaded = 0;
	this.onProgress = new lime_app_Event_$Int_$Int_$Void();
	this.onComplete = new lime_app_Event_$Void_$Void();
	this.onProgress.add($bind(this,this.update));
};
$hxClasses["lime.app.Preloader"] = lime_app_Preloader;
lime_app_Preloader.__name__ = ["lime","app","Preloader"];
lime_app_Preloader.prototype = {
	create: function(config) {
	}
	,load: function(urls,types) {
		var url = null;
		var cacheVersion = GlobalVars.gameVersion;
		var _g1 = 0;
		var _g = urls.length;
		while(_g1 < _g) {
			var i = _g1++;
			url = urls[i];
			var _g2 = types[i];
			switch(_g2) {
			case "IMAGE":
				if(!lime_app_Preloader.images.exists(url)) {
					var image = new Image();
					lime_app_Preloader.images.set(url,image);
					image.onload = $bind(this,this.image_onLoad);
					image.onerror = $bind(this,this.handleLoadError);
					image.src = url + "?" + cacheVersion;
					this.total++;
				}
				break;
			case "BINARY":
				if(!lime_app_Preloader.loaders.exists(url)) {
					var loader = new lime_net_HTTPRequest();
					lime_app_Preloader.loaders.set(url,loader);
					this.total++;
				}
				break;
			case "TEXT":
				if(!lime_app_Preloader.loaders.exists(url)) {
					var urlLoader = { };
					urlLoader.dataFormat = openfl_net_URLLoaderDataFormat.BINARY;
					urlLoader.bytes = ApplicationMain.embeddedFiles.shift();
					var value = urlLoader;
					lime_app_Preloader.loaders.set(url,value);
					this.total++;
				}
				break;
			case "FONT":
				this.total++;
				this.loadFont(url);
				break;
			default:
			}
		}
		var $it0 = lime_app_Preloader.loaders.keys();
		while( $it0.hasNext() ) {
			var url1 = $it0.next();
			var loader1 = lime_app_Preloader.loaders.get(url1);
			if(js_Boot.__instanceof(loader1,lime_net_HTTPRequest)) {
				var future = loader1.load(url1 + "?" + cacheVersion);
				future.onComplete($bind(this,this.loader_onComplete));
			} else this.loader_onComplete(null);
		}
		if(this.total == 0) this.start();
	}
	,loadFont: function(font) {
		var _g = this;
		if(window.document.fonts && ($_=window.document.fonts,$bind($_,$_.load))) window.document.fonts.load("1em '" + font + "'").then(function(_) {
			_g.loaded++;
			_g.onProgress.dispatch(_g.loaded,_g.total);
			if(_g.loaded == _g.total) _g.start();
		}); else {
			var node = window.document.createElement("span");
			node.innerHTML = "giItT1WQy@!-/#";
			var style = node.style;
			style.position = "absolute";
			style.left = "-10000px";
			style.top = "-10000px";
			style.fontSize = "300px";
			style.fontFamily = "sans-serif";
			style.fontVariant = "normal";
			style.fontStyle = "normal";
			style.fontWeight = "normal";
			style.letterSpacing = "0";
			window.document.body.appendChild(node);
			var width = node.offsetWidth;
			style.fontFamily = "'" + font + "', sans-serif";
			var interval = null;
			var found = false;
			var checkFont = function() {
				if(node.offsetWidth != width) {
					if(!found) {
						found = true;
						return false;
					}
					_g.loaded++;
					if(interval != null) window.clearInterval(interval);
					node.parentNode.removeChild(node);
					node = null;
					_g.onProgress.dispatch(_g.loaded,_g.total);
					if(_g.loaded == _g.total) _g.start();
					return true;
				}
				return false;
			};
			if(!checkFont()) interval = window.setInterval(checkFont,50);
		}
	}
	,start: function() {
		this.complete = true;
		this.onComplete.dispatch();
	}
	,update: function(loaded,total) {
	}
	,image_onLoad: function(_) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,loader_onComplete: function(_) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,handleLoadError: function(e) {
		var target = e.target;
		var src = target.src;
		window.setTimeout(function() {
			target.src = src;
		},2000);
	}
	,__class__: lime_app_Preloader
};
var lime_app_Promise = function() {
	this.future = new lime_app_Future();
};
$hxClasses["lime.app.Promise"] = lime_app_Promise;
lime_app_Promise.__name__ = ["lime","app","Promise"];
lime_app_Promise.prototype = {
	complete: function(data) {
		if(!this.future.__errored) {
			this.future.__completed = true;
			this.future.value = data;
			if(this.future.__completeListeners != null) {
				var _g = 0;
				var _g1 = this.future.__completeListeners;
				while(_g < _g1.length) {
					var listener = _g1[_g];
					++_g;
					listener(data);
				}
				this.future.__completeListeners = null;
			}
		}
		return this;
	}
	,completeWith: function(future) {
		future.onComplete($bind(this,this.complete));
		future.onError($bind(this,this.error));
		future.onProgress($bind(this,this.progress));
		return this;
	}
	,error: function(msg) {
		if(!this.future.__completed) {
			this.future.__errored = true;
			this.future.__errorMessage = msg;
			if(this.future.__errorListeners != null) {
				var _g = 0;
				var _g1 = this.future.__errorListeners;
				while(_g < _g1.length) {
					var listener = _g1[_g];
					++_g;
					listener(msg);
				}
				this.future.__errorListeners = null;
			}
		}
		return this;
	}
	,progress: function(progress) {
		if(!this.future.__errored && !this.future.__completed) {
			if(this.future.__progressListeners != null) {
				var _g = 0;
				var _g1 = this.future.__progressListeners;
				while(_g < _g1.length) {
					var listener = _g1[_g];
					++_g;
					listener(progress);
				}
			}
		}
		return this;
	}
	,get_isCompleted: function() {
		return this.future.get_isCompleted();
	}
	,__class__: lime_app_Promise
	,__properties__: {get_isCompleted:"get_isCompleted"}
};
var lime_audio_ALAudioContext = function() {
	this.EXPONENT_DISTANCE_CLAMPED = 53254;
	this.EXPONENT_DISTANCE = 53253;
	this.LINEAR_DISTANCE_CLAMPED = 53252;
	this.LINEAR_DISTANCE = 53251;
	this.INVERSE_DISTANCE_CLAMPED = 53250;
	this.INVERSE_DISTANCE = 53249;
	this.DISTANCE_MODEL = 53248;
	this.DOPPLER_VELOCITY = 49153;
	this.SPEED_OF_SOUND = 49155;
	this.DOPPLER_FACTOR = 49152;
	this.EXTENSIONS = 45060;
	this.RENDERER = 45059;
	this.VERSION = 45058;
	this.VENDOR = 45057;
	this.OUT_OF_MEMORY = 40965;
	this.INVALID_OPERATION = 40964;
	this.INVALID_VALUE = 40963;
	this.INVALID_ENUM = 40962;
	this.INVALID_NAME = 40961;
	this.NO_ERROR = 0;
	this.SIZE = 8196;
	this.CHANNELS = 8195;
	this.BITS = 8194;
	this.FREQUENCY = 8193;
	this.FORMAT_STEREO16 = 4355;
	this.FORMAT_STEREO8 = 4354;
	this.FORMAT_MONO16 = 4353;
	this.FORMAT_MONO8 = 4352;
	this.UNDETERMINED = 4144;
	this.STREAMING = 4137;
	this.STATIC = 4136;
	this.SOURCE_TYPE = 4135;
	this.BYTE_OFFSET = 4134;
	this.SAMPLE_OFFSET = 4133;
	this.SEC_OFFSET = 4132;
	this.MAX_DISTANCE = 4131;
	this.CONE_OUTER_GAIN = 4130;
	this.ROLLOFF_FACTOR = 4129;
	this.REFERENCE_DISTANCE = 4128;
	this.BUFFERS_PROCESSED = 4118;
	this.BUFFERS_QUEUED = 4117;
	this.STOPPED = 4116;
	this.PAUSED = 4115;
	this.PLAYING = 4114;
	this.INITIAL = 4113;
	this.SOURCE_STATE = 4112;
	this.ORIENTATION = 4111;
	this.MAX_GAIN = 4110;
	this.MIN_GAIN = 4109;
	this.GAIN = 4106;
	this.BUFFER = 4105;
	this.LOOPING = 4103;
	this.VELOCITY = 4102;
	this.DIRECTION = 4101;
	this.POSITION = 4100;
	this.PITCH = 4099;
	this.CONE_OUTER_ANGLE = 4098;
	this.CONE_INNER_ANGLE = 4097;
	this.SOURCE_RELATIVE = 514;
	this.TRUE = 1;
	this.FALSE = 0;
	this.NONE = 0;
};
$hxClasses["lime.audio.ALAudioContext"] = lime_audio_ALAudioContext;
lime_audio_ALAudioContext.__name__ = ["lime","audio","ALAudioContext"];
lime_audio_ALAudioContext.prototype = {
	bufferData: function(buffer,format,data,size,freq) {
		lime_audio_openal_AL.bufferData(buffer,format,data,size,freq);
	}
	,buffer3f: function(buffer,param,value1,value2,value3) {
		lime_audio_openal_AL.buffer3f(buffer,param,value1,value2,value3);
	}
	,buffer3i: function(buffer,param,value1,value2,value3) {
		lime_audio_openal_AL.buffer3i(buffer,param,value1,value2,value3);
	}
	,bufferf: function(buffer,param,value) {
		lime_audio_openal_AL.bufferf(buffer,param,value);
	}
	,bufferfv: function(buffer,param,values) {
		lime_audio_openal_AL.bufferfv(buffer,param,values);
	}
	,bufferi: function(buffer,param,value) {
		lime_audio_openal_AL.bufferi(buffer,param,value);
	}
	,bufferiv: function(buffer,param,values) {
		lime_audio_openal_AL.bufferiv(buffer,param,values);
	}
	,deleteBuffer: function(buffer) {
		lime_audio_openal_AL.deleteBuffer(buffer);
	}
	,deleteBuffers: function(buffers) {
		lime_audio_openal_AL.deleteBuffers(buffers);
	}
	,deleteSource: function(source) {
		lime_audio_openal_AL.deleteSource(source);
	}
	,deleteSources: function(sources) {
		lime_audio_openal_AL.deleteSources(sources);
	}
	,disable: function(capability) {
		lime_audio_openal_AL.disable(capability);
	}
	,distanceModel: function(distanceModel) {
		lime_audio_openal_AL.distanceModel(distanceModel);
	}
	,dopplerFactor: function(value) {
		lime_audio_openal_AL.dopplerFactor(value);
	}
	,dopplerVelocity: function(value) {
		lime_audio_openal_AL.dopplerVelocity(value);
	}
	,enable: function(capability) {
		lime_audio_openal_AL.enable(capability);
	}
	,genSource: function() {
		return lime_audio_openal_AL.genSource();
	}
	,genSources: function(n) {
		return lime_audio_openal_AL.genSources(n);
	}
	,genBuffer: function() {
		return lime_audio_openal_AL.genBuffer();
	}
	,genBuffers: function(n) {
		return lime_audio_openal_AL.genBuffers(n);
	}
	,getBoolean: function(param) {
		return lime_audio_openal_AL.getBoolean(param);
	}
	,getBooleanv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getBooleanv(param,count);
	}
	,getBuffer3f: function(buffer,param) {
		return lime_audio_openal_AL.getBuffer3f(buffer,param);
	}
	,getBuffer3i: function(buffer,param) {
		return lime_audio_openal_AL.getBuffer3i(buffer,param);
	}
	,getBufferf: function(buffer,param) {
		return lime_audio_openal_AL.getBufferf(buffer,param);
	}
	,getBufferfv: function(buffer,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getBufferfv(buffer,param,count);
	}
	,getBufferi: function(buffer,param) {
		return lime_audio_openal_AL.getBufferi(buffer,param);
	}
	,getBufferiv: function(buffer,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getBufferiv(buffer,param,count);
	}
	,getDouble: function(param) {
		return lime_audio_openal_AL.getDouble(param);
	}
	,getDoublev: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getDoublev(param,count);
	}
	,getEnumValue: function(ename) {
		return lime_audio_openal_AL.getEnumValue(ename);
	}
	,getError: function() {
		return lime_audio_openal_AL.getError();
	}
	,getErrorString: function() {
		return lime_audio_openal_AL.getErrorString();
	}
	,getFloat: function(param) {
		return lime_audio_openal_AL.getFloat(param);
	}
	,getFloatv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getFloatv(param,count);
	}
	,getInteger: function(param) {
		return lime_audio_openal_AL.getInteger(param);
	}
	,getIntegerv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getIntegerv(param,count);
	}
	,getListener3f: function(param) {
		return lime_audio_openal_AL.getListener3f(param);
	}
	,getListener3i: function(param) {
		return lime_audio_openal_AL.getListener3i(param);
	}
	,getListenerf: function(param) {
		return lime_audio_openal_AL.getListenerf(param);
	}
	,getListenerfv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getListenerfv(param,count);
	}
	,getListeneri: function(param) {
		return lime_audio_openal_AL.getListeneri(param);
	}
	,getListeneriv: function(param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getListeneriv(param,count);
	}
	,getProcAddress: function(fname) {
		return lime_audio_openal_AL.getProcAddress(fname);
	}
	,getSource3f: function(source,param) {
		return lime_audio_openal_AL.getSource3f(source,param);
	}
	,getSourcef: function(source,param) {
		return lime_audio_openal_AL.getSourcef(source,param);
	}
	,getSource3i: function(source,param) {
		return lime_audio_openal_AL.getSource3i(source,param);
	}
	,getSourcefv: function(source,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getSourcefv(source,param);
	}
	,getSourcei: function(source,param) {
		return lime_audio_openal_AL.getSourcei(source,param);
	}
	,getSourceiv: function(source,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_AL.getSourceiv(source,param,count);
	}
	,getString: function(param) {
		return lime_audio_openal_AL.getString(param);
	}
	,isBuffer: function(buffer) {
		return lime_audio_openal_AL.isBuffer(buffer);
	}
	,isEnabled: function(capability) {
		return lime_audio_openal_AL.isEnabled(capability);
	}
	,isExtensionPresent: function(extname) {
		return lime_audio_openal_AL.isExtensionPresent(extname);
	}
	,isSource: function(source) {
		return lime_audio_openal_AL.isSource(source);
	}
	,listener3f: function(param,value1,value2,value3) {
		lime_audio_openal_AL.listener3f(param,value1,value2,value3);
	}
	,listener3i: function(param,value1,value2,value3) {
		lime_audio_openal_AL.listener3i(param,value1,value2,value3);
	}
	,listenerf: function(param,value) {
		lime_audio_openal_AL.listenerf(param,value);
	}
	,listenerfv: function(param,values) {
		lime_audio_openal_AL.listenerfv(param,values);
	}
	,listeneri: function(param,value) {
		lime_audio_openal_AL.listeneri(param,value);
	}
	,listeneriv: function(param,values) {
		lime_audio_openal_AL.listeneriv(param,values);
	}
	,source3f: function(source,param,value1,value2,value3) {
		lime_audio_openal_AL.source3f(source,param,value1,value2,value3);
	}
	,source3i: function(source,param,value1,value2,value3) {
		lime_audio_openal_AL.source3i(source,param,value1,value2,value3);
	}
	,sourcef: function(source,param,value) {
		lime_audio_openal_AL.sourcef(source,param,value);
	}
	,sourcefv: function(source,param,values) {
		lime_audio_openal_AL.sourcefv(source,param,values);
	}
	,sourcei: function(source,param,value) {
		lime_audio_openal_AL.sourcei(source,param,value);
	}
	,sourceiv: function(source,param,values) {
		lime_audio_openal_AL.sourceiv(source,param,values);
	}
	,sourcePlay: function(source) {
		lime_audio_openal_AL.sourcePlay(source);
	}
	,sourcePlayv: function(sources) {
		lime_audio_openal_AL.sourcePlayv(sources);
	}
	,sourceStop: function(source) {
		lime_audio_openal_AL.sourceStop(source);
	}
	,sourceStopv: function(sources) {
		lime_audio_openal_AL.sourceStopv(sources);
	}
	,sourceRewind: function(source) {
		lime_audio_openal_AL.sourceRewind(source);
	}
	,sourceRewindv: function(sources) {
		lime_audio_openal_AL.sourceRewindv(sources);
	}
	,sourcePause: function(source) {
		lime_audio_openal_AL.sourcePause(source);
	}
	,sourcePausev: function(sources) {
		lime_audio_openal_AL.sourcePausev(sources);
	}
	,sourceQueueBuffer: function(source,buffer) {
		lime_audio_openal_AL.sourceQueueBuffer(source,buffer);
	}
	,sourceQueueBuffers: function(source,nb,buffers) {
		lime_audio_openal_AL.sourceQueueBuffers(source,nb,buffers);
	}
	,sourceUnqueueBuffer: function(source) {
		return lime_audio_openal_AL.sourceUnqueueBuffer(source);
	}
	,sourceUnqueueBuffers: function(source,nb) {
		return lime_audio_openal_AL.sourceUnqueueBuffers(source,nb);
	}
	,speedOfSound: function(value) {
		lime_audio_openal_AL.speedOfSound(value);
	}
	,__class__: lime_audio_ALAudioContext
};
var lime_audio_ALCAudioContext = function() {
	this.ALL_DEVICES_SPECIFIER = 4115;
	this.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
	this.ENUMERATE_ALL_EXT = 1;
	this.EXTENSIONS = 4102;
	this.DEVICE_SPECIFIER = 4101;
	this.DEFAULT_DEVICE_SPECIFIER = 4100;
	this.ALL_ATTRIBUTES = 4099;
	this.ATTRIBUTES_SIZE = 4098;
	this.OUT_OF_MEMORY = 40965;
	this.INVALID_VALUE = 40964;
	this.INVALID_ENUM = 40963;
	this.INVALID_CONTEXT = 40962;
	this.INVALID_DEVICE = 40961;
	this.NO_ERROR = 0;
	this.STEREO_SOURCES = 4113;
	this.MONO_SOURCES = 4112;
	this.SYNC = 4105;
	this.REFRESH = 4104;
	this.FREQUENCY = 4103;
	this.TRUE = 1;
	this.FALSE = 0;
};
$hxClasses["lime.audio.ALCAudioContext"] = lime_audio_ALCAudioContext;
lime_audio_ALCAudioContext.__name__ = ["lime","audio","ALCAudioContext"];
lime_audio_ALCAudioContext.prototype = {
	closeDevice: function(device) {
		return lime_audio_openal_ALC.closeDevice(device);
	}
	,createContext: function(device,attrlist) {
		return lime_audio_openal_ALC.createContext(device,attrlist);
	}
	,destroyContext: function(context) {
		lime_audio_openal_ALC.destroyContext(context);
	}
	,getContextsDevice: function(context) {
		return lime_audio_openal_ALC.getContextsDevice(context);
	}
	,getCurrentContext: function() {
		return lime_audio_openal_ALC.getCurrentContext();
	}
	,getError: function(device) {
		return lime_audio_openal_ALC.getError(device);
	}
	,getErrorString: function(device) {
		return lime_audio_openal_ALC.getErrorString(device);
	}
	,getIntegerv: function(device,param,count) {
		if(count == null) count = 1;
		return lime_audio_openal_ALC.getIntegerv(device,param,count);
	}
	,getString: function(device,param) {
		return lime_audio_openal_ALC.getString(device,param);
	}
	,makeContextCurrent: function(context) {
		return lime_audio_openal_ALC.makeContextCurrent(context);
	}
	,openDevice: function(deviceName) {
		return lime_audio_openal_ALC.openDevice(deviceName);
	}
	,processContext: function(context) {
		lime_audio_openal_ALC.processContext(context);
	}
	,suspendContext: function(context) {
		lime_audio_openal_ALC.suspendContext(context);
	}
	,__class__: lime_audio_ALCAudioContext
};
var lime_audio_AudioBuffer = function() {
	this.id = 0;
};
$hxClasses["lime.audio.AudioBuffer"] = lime_audio_AudioBuffer;
lime_audio_AudioBuffer.__name__ = ["lime","audio","AudioBuffer"];
lime_audio_AudioBuffer.fromBytes = function(bytes) {
	return null;
};
lime_audio_AudioBuffer.fromFile = function(path) {
	return null;
};
lime_audio_AudioBuffer.fromURL = function(url,handler) {
	if(url != null && url.indexOf("http://") == -1 && url.indexOf("https://") == -1) handler(lime_audio_AudioBuffer.fromFile(url)); else {
	}
};
lime_audio_AudioBuffer.prototype = {
	dispose: function() {
	}
	,__class__: lime_audio_AudioBuffer
};
var lime_audio_AudioContext = $hxClasses["lime.audio.AudioContext"] = { __ename__ : ["lime","audio","AudioContext"], __constructs__ : ["OPENAL","HTML5","WEB","FLASH","CUSTOM"] };
lime_audio_AudioContext.OPENAL = function(alc,al) { var $x = ["OPENAL",0,alc,al]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.HTML5 = function(context) { var $x = ["HTML5",1,context]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.WEB = function(context) { var $x = ["WEB",2,context]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.FLASH = function(context) { var $x = ["FLASH",3,context]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.CUSTOM = function(data) { var $x = ["CUSTOM",4,data]; $x.__enum__ = lime_audio_AudioContext; $x.toString = $estr; return $x; };
lime_audio_AudioContext.__empty_constructs__ = [];
var lime_audio_AudioManager = function() { };
$hxClasses["lime.audio.AudioManager"] = lime_audio_AudioManager;
lime_audio_AudioManager.__name__ = ["lime","audio","AudioManager"];
lime_audio_AudioManager.context = null;
lime_audio_AudioManager.init = function(context) {
	if(lime_audio_AudioManager.context == null) {
		if(context == null) try {
			window.AudioContext = window.AudioContext || window.webkitAudioContext;;
			lime_audio_AudioManager.context = lime_audio_AudioContext.WEB(new AudioContext ());
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			lime_audio_AudioManager.context = lime_audio_AudioContext.HTML5(new lime_audio_HTML5AudioContext());
		} else lime_audio_AudioManager.context = context;
	}
};
lime_audio_AudioManager.resume = function() {
	if(lime_audio_AudioManager.context != null) {
		var _g = lime_audio_AudioManager.context;
		switch(_g[1]) {
		case 0:
			var al = _g[3];
			var alc = _g[2];
			alc.processContext(alc.getCurrentContext());
			break;
		default:
		}
	}
};
lime_audio_AudioManager.shutdown = function() {
	if(lime_audio_AudioManager.context != null) {
		var _g = lime_audio_AudioManager.context;
		switch(_g[1]) {
		case 0:
			var al = _g[3];
			var alc = _g[2];
			var currentContext = alc.getCurrentContext();
			if(currentContext != null) {
				var device = alc.getContextsDevice(currentContext);
				alc.makeContextCurrent(null);
				alc.destroyContext(currentContext);
				alc.closeDevice(device);
			}
			break;
		default:
		}
	}
};
lime_audio_AudioManager.suspend = function() {
	if(lime_audio_AudioManager.context != null) {
		var _g = lime_audio_AudioManager.context;
		switch(_g[1]) {
		case 0:
			var al = _g[3];
			var alc = _g[2];
			alc.suspendContext(alc.getCurrentContext());
			break;
		default:
		}
	}
};
var lime_audio_AudioSource = function(buffer,offset,length,loops) {
	if(loops == null) loops = 0;
	if(offset == null) offset = 0;
	this.onComplete = new lime_app_Event_$Void_$Void();
	this.buffer = buffer;
	this.offset = offset;
	if(length != null && length != 0) this.set_length(length);
	this.set_loops(loops);
	this.id = 0;
	if(buffer != null) this.init();
};
$hxClasses["lime.audio.AudioSource"] = lime_audio_AudioSource;
lime_audio_AudioSource.__name__ = ["lime","audio","AudioSource"];
lime_audio_AudioSource.prototype = {
	dispose: function() {
		{
			var _g = lime_audio_AudioManager.context;
			switch(_g[1]) {
			case 0:
				var al = _g[3];
				var alc = _g[2];
				if(this.id != 0) al.deleteSource(this.id);
				break;
			default:
			}
		}
	}
	,init: function() {
		{
			var _g = lime_audio_AudioManager.context;
			switch(_g[1]) {
			case 0:
				var al = _g[3];
				var alc = _g[2];
				if(this.buffer.id == 0) {
					this.buffer.id = al.genBuffer();
					var format = 0;
					if(this.buffer.channels == 1) {
						if(this.buffer.bitsPerSample == 8) format = al.FORMAT_MONO8; else if(this.buffer.bitsPerSample == 16) format = al.FORMAT_MONO16;
					} else if(this.buffer.channels == 2) {
						if(this.buffer.bitsPerSample == 8) format = al.FORMAT_STEREO8; else if(this.buffer.bitsPerSample == 16) format = al.FORMAT_STEREO16;
					}
					al.bufferData(this.buffer.id,format,this.buffer.data,this.buffer.data.length,this.buffer.sampleRate);
				}
				this.id = al.genSource();
				al.sourcei(this.id,al.BUFFER,this.buffer.id);
				break;
			default:
			}
		}
	}
	,play: function() {
	}
	,pause: function() {
	}
	,stop: function() {
	}
	,timer_onRun: function() {
	}
	,get_currentTime: function() {
		return 0;
	}
	,set_currentTime: function(value) {
		return this.pauseTime = value;
	}
	,get_gain: function() {
		return 1;
	}
	,set_gain: function(value) {
		return 1;
	}
	,get_length: function() {
		if(this.__length != null) return this.__length;
		return 0;
	}
	,set_length: function(value) {
		return this.__length = value;
	}
	,get_loops: function() {
		return this.__loops;
	}
	,set_loops: function(loops) {
		return this.__loops = loops;
	}
	,__class__: lime_audio_AudioSource
	,__properties__: {set_loops:"set_loops",get_loops:"get_loops",set_length:"set_length",get_length:"get_length",set_gain:"set_gain",get_gain:"get_gain",set_currentTime:"set_currentTime",get_currentTime:"get_currentTime"}
};
var lime_audio_FlashAudioContext = function() {
};
$hxClasses["lime.audio.FlashAudioContext"] = lime_audio_FlashAudioContext;
lime_audio_FlashAudioContext.__name__ = ["lime","audio","FlashAudioContext"];
lime_audio_FlashAudioContext.prototype = {
	createBuffer: function(stream,context) {
		return null;
	}
	,getBytesLoaded: function(buffer) {
		return 0;
	}
	,getBytesTotal: function(buffer) {
		return 0;
	}
	,getID3: function(buffer) {
		return null;
	}
	,getIsBuffering: function(buffer) {
		return false;
	}
	,getIsURLInaccessible: function(buffer) {
		return false;
	}
	,getLength: function(buffer) {
		return 0;
	}
	,getURL: function(buffer) {
		return null;
	}
	,close: function(buffer) {
	}
	,extract: function(buffer,target,length,startPosition) {
		if(startPosition == null) startPosition = -1;
		return 0;
	}
	,load: function(buffer,stream,context) {
	}
	,loadCompressedDataFromByteArray: function(buffer,bytes,bytesLength) {
	}
	,loadPCMFromByteArray: function(buffer,bytes,samples,format,stereo,sampleRate) {
		if(sampleRate == null) sampleRate = 44100;
		if(stereo == null) stereo = true;
	}
	,play: function(buffer,startTime,loops,sndTransform) {
		if(loops == null) loops = 0;
		if(startTime == null) startTime = 0;
		return null;
	}
	,__class__: lime_audio_FlashAudioContext
};
var lime_audio_HTML5AudioContext = function() {
	this.NETWORK_NO_SOURCE = 3;
	this.NETWORK_LOADING = 2;
	this.NETWORK_IDLE = 1;
	this.NETWORK_EMPTY = 0;
	this.HAVE_NOTHING = 0;
	this.HAVE_METADATA = 1;
	this.HAVE_FUTURE_DATA = 3;
	this.HAVE_ENOUGH_DATA = 4;
	this.HAVE_CURRENT_DATA = 2;
};
$hxClasses["lime.audio.HTML5AudioContext"] = lime_audio_HTML5AudioContext;
lime_audio_HTML5AudioContext.__name__ = ["lime","audio","HTML5AudioContext"];
lime_audio_HTML5AudioContext.prototype = {
	canPlayType: function(buffer,type) {
		if(buffer.src != null) return buffer.src.canPlayType(type);
		return null;
	}
	,createBuffer: function(urlString) {
		var buffer = new lime_audio_AudioBuffer();
		buffer.src = new Audio();
		buffer.src.src = urlString;
		return buffer;
	}
	,getAutoplay: function(buffer) {
		if(buffer.src != null) return buffer.src.autoplay;
		return false;
	}
	,getBuffered: function(buffer) {
		if(buffer.src != null) return buffer.src.buffered;
		return null;
	}
	,getCurrentSrc: function(buffer) {
		if(buffer.src != null) return buffer.src.currentSrc;
		return null;
	}
	,getCurrentTime: function(buffer) {
		if(buffer.src != null) return buffer.src.currentTime;
		return 0;
	}
	,getDefaultPlaybackRate: function(buffer) {
		if(buffer.src != null) return buffer.src.defaultPlaybackRate;
		return 1;
	}
	,getDuration: function(buffer) {
		if(buffer.src != null) return buffer.src.duration;
		return 0;
	}
	,getEnded: function(buffer) {
		if(buffer.src != null) return buffer.src.ended;
		return false;
	}
	,getError: function(buffer) {
		if(buffer.src != null) return buffer.src.error;
		return null;
	}
	,getLoop: function(buffer) {
		if(buffer.src != null) return buffer.src.loop;
		return false;
	}
	,getMuted: function(buffer) {
		if(buffer.src != null) return buffer.src.muted;
		return false;
	}
	,getNetworkState: function(buffer) {
		if(buffer.src != null) return buffer.src.networkState;
		return 0;
	}
	,getPaused: function(buffer) {
		if(buffer.src != null) return buffer.src.paused;
		return false;
	}
	,getPlaybackRate: function(buffer) {
		if(buffer.src != null) return buffer.src.playbackRate;
		return 1;
	}
	,getPlayed: function(buffer) {
		if(buffer.src != null) return buffer.src.played;
		return null;
	}
	,getPreload: function(buffer) {
		if(buffer.src != null) return buffer.src.preload;
		return null;
	}
	,getReadyState: function(buffer) {
		if(buffer.src != null) return buffer.src.readyState;
		return 0;
	}
	,getSeekable: function(buffer) {
		if(buffer.src != null) return buffer.src.seekable;
		return null;
	}
	,getSeeking: function(buffer) {
		if(buffer.src != null) return buffer.src.seeking;
		return false;
	}
	,getSrc: function(buffer) {
		if(buffer.src != null) return buffer.src.src;
		return null;
	}
	,getStartTime: function(buffer) {
		if(buffer.src != null) return buffer.src.playbackRate;
		return 0;
	}
	,getVolume: function(buffer) {
		if(buffer.src != null) return buffer.src.volume;
		return 1;
	}
	,load: function(buffer) {
		if(buffer.src != null) return buffer.src.load();
	}
	,pause: function(buffer) {
		if(buffer.src != null) return buffer.src.pause();
	}
	,play: function(buffer) {
		if(buffer.src != null) return buffer.src.play();
	}
	,setAutoplay: function(buffer,value) {
		if(buffer.src != null) buffer.src.autoplay = value;
	}
	,setCurrentTime: function(buffer,value) {
		if(buffer.src != null) buffer.src.currentTime = value;
	}
	,setDefaultPlaybackRate: function(buffer,value) {
		if(buffer.src != null) buffer.src.defaultPlaybackRate = value;
	}
	,setLoop: function(buffer,value) {
		if(buffer.src != null) buffer.src.loop = value;
	}
	,setMuted: function(buffer,value) {
		if(buffer.src != null) buffer.src.muted = value;
	}
	,setPlaybackRate: function(buffer,value) {
		if(buffer.src != null) buffer.src.playbackRate = value;
	}
	,setPreload: function(buffer,value) {
		if(buffer.src != null) buffer.src.preload = value;
	}
	,setSrc: function(buffer,value) {
		if(buffer.src != null) buffer.src.src = value;
	}
	,setVolume: function(buffer,value) {
		if(buffer.src != null) buffer.src.volume = value;
	}
	,__class__: lime_audio_HTML5AudioContext
};
var lime_audio_openal_AL = function() { };
$hxClasses["lime.audio.openal.AL"] = lime_audio_openal_AL;
lime_audio_openal_AL.__name__ = ["lime","audio","openal","AL"];
lime_audio_openal_AL.bufferData = function(buffer,format,data,size,freq) {
};
lime_audio_openal_AL.buffer3f = function(buffer,param,value1,value2,value3) {
};
lime_audio_openal_AL.buffer3i = function(buffer,param,value1,value2,value3) {
};
lime_audio_openal_AL.bufferf = function(buffer,param,value) {
};
lime_audio_openal_AL.bufferfv = function(buffer,param,values) {
};
lime_audio_openal_AL.bufferi = function(buffer,param,value) {
};
lime_audio_openal_AL.bufferiv = function(buffer,param,values) {
};
lime_audio_openal_AL.deleteBuffer = function(buffer) {
};
lime_audio_openal_AL.deleteBuffers = function(buffers) {
};
lime_audio_openal_AL.deleteSource = function(source) {
};
lime_audio_openal_AL.deleteSources = function(sources) {
};
lime_audio_openal_AL.disable = function(capability) {
};
lime_audio_openal_AL.distanceModel = function(distanceModel) {
};
lime_audio_openal_AL.dopplerFactor = function(value) {
};
lime_audio_openal_AL.dopplerVelocity = function(value) {
};
lime_audio_openal_AL.enable = function(capability) {
};
lime_audio_openal_AL.genSource = function() {
	return 0;
};
lime_audio_openal_AL.genSources = function(n) {
	return null;
};
lime_audio_openal_AL.genBuffer = function() {
	return 0;
};
lime_audio_openal_AL.genBuffers = function(n) {
	return null;
};
lime_audio_openal_AL.getBoolean = function(param) {
	return false;
};
lime_audio_openal_AL.getBooleanv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getBuffer3f = function(buffer,param) {
	return null;
};
lime_audio_openal_AL.getBuffer3i = function(buffer,param) {
	return null;
};
lime_audio_openal_AL.getBufferf = function(buffer,param) {
	return 0;
};
lime_audio_openal_AL.getBufferfv = function(buffer,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getBufferi = function(buffer,param) {
	return 0;
};
lime_audio_openal_AL.getBufferiv = function(buffer,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getDouble = function(param) {
	return 0;
};
lime_audio_openal_AL.getDoublev = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getEnumValue = function(ename) {
	return 0;
};
lime_audio_openal_AL.getError = function() {
	return 0;
};
lime_audio_openal_AL.getErrorString = function() {
	var _g = lime_audio_openal_AL.getError();
	switch(_g) {
	case 40961:
		return "INVALID_NAME: Invalid parameter name";
	case 40962:
		return "INVALID_ENUM: Invalid enum value";
	case 40963:
		return "INVALID_VALUE: Invalid parameter value";
	case 40964:
		return "INVALID_OPERATION: Illegal operation or call";
	case 40965:
		return "OUT_OF_MEMORY: OpenAL has run out of memory";
	default:
		return "";
	}
};
lime_audio_openal_AL.getFloat = function(param) {
	return 0;
};
lime_audio_openal_AL.getFloatv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getInteger = function(param) {
	return 0;
};
lime_audio_openal_AL.getIntegerv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getListener3f = function(param) {
	return null;
};
lime_audio_openal_AL.getListener3i = function(param) {
	return null;
};
lime_audio_openal_AL.getListenerf = function(param) {
	return 0;
};
lime_audio_openal_AL.getListenerfv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getListeneri = function(param) {
	return 0;
};
lime_audio_openal_AL.getListeneriv = function(param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getProcAddress = function(fname) {
	return null;
};
lime_audio_openal_AL.getSource3f = function(source,param) {
	return null;
};
lime_audio_openal_AL.getSourcef = function(source,param) {
	return 0;
};
lime_audio_openal_AL.getSource3i = function(source,param) {
	return null;
};
lime_audio_openal_AL.getSourcefv = function(source,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getSourcei = function(source,param) {
	return 0;
};
lime_audio_openal_AL.getSourceiv = function(source,param,count) {
	if(count == null) count = 1;
	return null;
};
lime_audio_openal_AL.getString = function(param) {
	return null;
};
lime_audio_openal_AL.isBuffer = function(buffer) {
	return false;
};
lime_audio_openal_AL.isEnabled = function(capability) {
	return false;
};
lime_audio_openal_AL.isExtensionPresent = function(extname) {
	return false;
};
lime_audio_openal_AL.isSource = function(source) {
	return false;
};
lime_audio_openal_AL.listener3f = function(param,value1,value2,value3) {
};
lime_audio_openal_AL.listener3i = function(param,value1,value2,value3) {
};
lime_audio_openal_AL.listenerf = function(param,value) {
};
lime_audio_openal_AL.listenerfv = function(param,values) {
};
lime_audio_openal_AL.listeneri = function(param,value) {
};
lime_audio_openal_AL.listeneriv = function(param,values) {
};
lime_audio_openal_AL.source3f = function(source,param,value1,value2,value3) {
};
lime_audio_openal_AL.source3i = function(source,param,value1,value2,value3) {
};
lime_audio_openal_AL.sourcef = function(source,param,value) {
};
lime_audio_openal_AL.sourcefv = function(source,param,values) {
};
lime_audio_openal_AL.sourcei = function(source,param,value) {
};
lime_audio_openal_AL.sourceiv = function(source,param,values) {
};
lime_audio_openal_AL.sourcePlay = function(source) {
};
lime_audio_openal_AL.sourcePlayv = function(sources) {
};
lime_audio_openal_AL.sourceStop = function(source) {
};
lime_audio_openal_AL.sourceStopv = function(sources) {
};
lime_audio_openal_AL.sourceRewind = function(source) {
};
lime_audio_openal_AL.sourceRewindv = function(sources) {
};
lime_audio_openal_AL.sourcePause = function(source) {
};
lime_audio_openal_AL.sourcePausev = function(sources) {
};
lime_audio_openal_AL.sourceQueueBuffer = function(source,buffer) {
};
lime_audio_openal_AL.sourceQueueBuffers = function(source,nb,buffers) {
};
lime_audio_openal_AL.sourceUnqueueBuffer = function(source) {
	return 0;
};
lime_audio_openal_AL.sourceUnqueueBuffers = function(source,nb) {
	return null;
};
lime_audio_openal_AL.speedOfSound = function(value) {
};
var lime_audio_openal_ALC = function() { };
$hxClasses["lime.audio.openal.ALC"] = lime_audio_openal_ALC;
lime_audio_openal_ALC.__name__ = ["lime","audio","openal","ALC"];
lime_audio_openal_ALC.closeDevice = function(device) {
	return false;
};
lime_audio_openal_ALC.createContext = function(device,attrlist) {
	return null;
};
lime_audio_openal_ALC.destroyContext = function(context) {
};
lime_audio_openal_ALC.getContextsDevice = function(context) {
	return null;
};
lime_audio_openal_ALC.getCurrentContext = function() {
	return null;
};
lime_audio_openal_ALC.getError = function(device) {
	return 0;
};
lime_audio_openal_ALC.getErrorString = function(device) {
	var _g = lime_audio_openal_ALC.getError(device);
	switch(_g) {
	case 40961:
		return "INVALID_DEVICE: Invalid device (or no device?)";
	case 40962:
		return "INVALID_CONTEXT: Invalid context (or no context?)";
	case 40963:
		return "INVALID_ENUM: Invalid enum value";
	case 40964:
		return "INVALID_VALUE: Invalid param value";
	case 40965:
		return "OUT_OF_MEMORY: OpenAL has run out of memory";
	default:
		return "";
	}
};
lime_audio_openal_ALC.getIntegerv = function(device,param,size) {
	return null;
};
lime_audio_openal_ALC.getString = function(device,param) {
	return null;
};
lime_audio_openal_ALC.makeContextCurrent = function(context) {
	return false;
};
lime_audio_openal_ALC.openDevice = function(deviceName) {
	return null;
};
lime_audio_openal_ALC.processContext = function(context) {
};
lime_audio_openal_ALC.suspendContext = function(context) {
};
var lime_audio_openal__$ALContext_ALContext_$Impl_$ = {};
$hxClasses["lime.audio.openal._ALContext.ALContext_Impl_"] = lime_audio_openal__$ALContext_ALContext_$Impl_$;
lime_audio_openal__$ALContext_ALContext_$Impl_$.__name__ = ["lime","audio","openal","_ALContext","ALContext_Impl_"];
lime_audio_openal__$ALContext_ALContext_$Impl_$._new = function(handle) {
	return handle;
};
var lime_audio_openal__$ALDevice_ALDevice_$Impl_$ = {};
$hxClasses["lime.audio.openal._ALDevice.ALDevice_Impl_"] = lime_audio_openal__$ALDevice_ALDevice_$Impl_$;
lime_audio_openal__$ALDevice_ALDevice_$Impl_$.__name__ = ["lime","audio","openal","_ALDevice","ALDevice_Impl_"];
lime_audio_openal__$ALDevice_ALDevice_$Impl_$._new = function(handle) {
	return handle;
};
var lime_graphics_ConsoleRenderContext = function() {
};
$hxClasses["lime.graphics.ConsoleRenderContext"] = lime_graphics_ConsoleRenderContext;
lime_graphics_ConsoleRenderContext.__name__ = ["lime","graphics","ConsoleRenderContext"];
lime_graphics_ConsoleRenderContext.prototype = {
	createIndexBuffer: function(indices,count) {
		return new lime_graphics_console_IndexBuffer();
	}
	,createVertexBuffer: function(decl,count) {
		return new lime_graphics_console_VertexBuffer();
	}
	,lookupShader: function(name) {
		return new lime_graphics_console_Shader();
	}
	,clear: function(r,g,b,a,depth,stencil) {
		if(stencil == null) stencil = 0;
		if(depth == null) depth = 1.0;
	}
	,bindShader: function(shader) {
	}
	,setViewport: function(x,y,width,height,nearPlane,farPlane) {
		if(farPlane == null) farPlane = 1.0;
		if(nearPlane == null) nearPlane = 0.0;
	}
	,setVertexShaderConstantF: function(startRegister,vec4,vec4count) {
	}
	,setVertexSource: function(vb) {
	}
	,setIndexSource: function(ib) {
	}
	,draw: function(primitive,startVertex,primitiveCount) {
	}
	,drawIndexed: function(primitive,vertexCount,startIndex,primitiveCount) {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,__class__: lime_graphics_ConsoleRenderContext
	,__properties__: {get_height:"get_height",get_width:"get_width"}
};
var lime_graphics_FlashRenderContext = function() {
};
$hxClasses["lime.graphics.FlashRenderContext"] = lime_graphics_FlashRenderContext;
lime_graphics_FlashRenderContext.__name__ = ["lime","graphics","FlashRenderContext"];
lime_graphics_FlashRenderContext.prototype = {
	addChild: function(child) {
		return null;
	}
	,addChildAt: function(child,index) {
		return null;
	}
	,addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
	}
	,areInaccessibleObjectsUnderPoint: function(point) {
		return false;
	}
	,contains: function(child) {
		return false;
	}
	,dispatchEvent: function(event) {
		return false;
	}
	,getBounds: function(targetCoordinateSpace) {
		return null;
	}
	,getChildAt: function(index) {
		return null;
	}
	,getChildByName: function(name) {
		return null;
	}
	,getChildIndex: function(child) {
		return 0;
	}
	,getObjectsUnderPoint: function(point) {
		return null;
	}
	,getRect: function(targetCoordinateSpace) {
		return null;
	}
	,globalToLocal: function(point) {
		return null;
	}
	,globalToLocal3D: function(point) {
		return null;
	}
	,hasEventListener: function(type) {
		return false;
	}
	,hitTestObject: function(obj) {
		return false;
	}
	,hitTestPoint: function(x,y,shapeFlag) {
		if(shapeFlag == null) shapeFlag = false;
		return false;
	}
	,local3DToGlobal: function(point3d) {
		return null;
	}
	,localToGlobal: function(point) {
		return null;
	}
	,removeChild: function(child) {
		return null;
	}
	,removeChildAt: function(index) {
		return null;
	}
	,removeChildren: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 2147483647;
		if(beginIndex == null) beginIndex = 0;
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
	}
	,requestSoftKeyboard: function() {
		return false;
	}
	,setChildIndex: function(child,index) {
	}
	,startDrag: function(lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
	}
	,startTouchDrag: function(touchPointID,lockCenter,bounds) {
		if(lockCenter == null) lockCenter = false;
	}
	,stopAllMovieClips: function() {
	}
	,stopDrag: function() {
	}
	,stopTouchDrag: function(touchPointID) {
	}
	,swapChildren: function(child1,child2) {
	}
	,swapChildrenAt: function(index1,index2) {
	}
	,toString: function() {
		return null;
	}
	,willTrigger: function(type) {
		return false;
	}
	,__class__: lime_graphics_FlashRenderContext
};
var lime_graphics_Image = function(buffer,offsetX,offsetY,width,height,color,type) {
	if(height == null) height = -1;
	if(width == null) width = -1;
	if(offsetY == null) offsetY = 0;
	if(offsetX == null) offsetX = 0;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
	this.width = width;
	this.height = height;
	if(type == null) {
		if(lime_app_Application.current != null && lime_app_Application.current.renderers[0] != null) {
			var _g = lime_app_Application.current.renderers[0].context;
			switch(_g[1]) {
			case 2:case 1:
				this.type = lime_graphics_ImageType.CANVAS;
				break;
			case 3:
				this.type = lime_graphics_ImageType.FLASH;
				break;
			default:
				this.type = lime_graphics_ImageType.DATA;
			}
		} else this.type = lime_graphics_ImageType.DATA;
	} else this.type = type;
	if(buffer == null) {
		if(width > 0 && height > 0) {
			var _g1 = this.type;
			switch(_g1[1]) {
			case 0:
				this.buffer = new lime_graphics_ImageBuffer(null,width,height);
				lime_graphics_utils_ImageCanvasUtil.createCanvas(this,width,height);
				if(color != null) this.fillRect(new lime_math_Rectangle(0,0,width,height),color);
				break;
			case 1:
				this.buffer = new lime_graphics_ImageBuffer((function($this) {
					var $r;
					var elements = width * height * 4;
					var this1;
					if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
					$r = this1;
					return $r;
				}(this)),width,height);
				if(color != null) this.fillRect(new lime_math_Rectangle(0,0,width,height),color);
				break;
			case 2:
				break;
			default:
			}
		}
	} else this.__fromImageBuffer(buffer);
};
$hxClasses["lime.graphics.Image"] = lime_graphics_Image;
lime_graphics_Image.__name__ = ["lime","graphics","Image"];
lime_graphics_Image.__base64Encoder = null;
lime_graphics_Image.fromBase64 = function(base64,type,onload) {
	if(base64 == null) return null;
	var image = new lime_graphics_Image();
	image.__fromBase64(base64,type,onload);
	return image;
};
lime_graphics_Image.fromBitmapData = function(bitmapData) {
	if(bitmapData == null) return null;
	return bitmapData.image;
};
lime_graphics_Image.fromBytes = function(bytes,onload) {
	if(bytes == null) return null;
	var image = new lime_graphics_Image();
	image.__fromBytes(bytes,onload);
	return image;
};
lime_graphics_Image.fromCanvas = function(canvas) {
	if(canvas == null) return null;
	var buffer = new lime_graphics_ImageBuffer(null,canvas.width,canvas.height);
	buffer.set_src(canvas);
	return new lime_graphics_Image(buffer);
};
lime_graphics_Image.fromFile = function(path,onload,onerror) {
	var image = new lime_graphics_Image();
	image.__fromFile(path,onload,onerror);
	return image;
};
lime_graphics_Image.fromImageElement = function(image) {
	if(image == null) return null;
	var buffer = new lime_graphics_ImageBuffer(null,image.width,image.height);
	buffer.set_src(image);
	return new lime_graphics_Image(buffer);
};
lime_graphics_Image.__base64Encode = function(bytes) {
	var extension;
	var _g = bytes.length % 3;
	switch(_g) {
	case 1:
		extension = "==";
		break;
	case 2:
		extension = "=";
		break;
	default:
		extension = "";
	}
	if(lime_graphics_Image.__base64Encoder == null) lime_graphics_Image.__base64Encoder = new haxe_crypto_BaseCode(haxe_io_Bytes.ofString(lime_graphics_Image.__base64Chars));
	return lime_graphics_Image.__base64Encoder.encodeBytes(bytes).toString() + extension;
};
lime_graphics_Image.__isJPG = function(bytes) {
	return bytes.b[0] == 255 && bytes.b[1] == 216;
};
lime_graphics_Image.__isPNG = function(bytes) {
	return bytes.b[0] == 137 && bytes.b[1] == 80 && bytes.b[2] == 78 && bytes.b[3] == 71 && bytes.b[4] == 13 && bytes.b[5] == 10 && bytes.b[6] == 26 && bytes.b[7] == 10;
};
lime_graphics_Image.__isGIF = function(bytes) {
	if(bytes.b[0] == 71 && bytes.b[1] == 73 && bytes.b[2] == 70 && bytes.b[3] == 56) {
		var b = bytes.b[4];
		return (b == 55 || b == 57) && bytes.b[5] == 97;
	}
	return false;
};
lime_graphics_Image.prototype = {
	clone: function() {
		if(this.buffer != null) {
			if(this.type == lime_graphics_ImageType.CANVAS && this.buffer.__srcImage == null) {
				lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
				lime_graphics_utils_ImageCanvasUtil.sync(this,true);
			}
			var image = new lime_graphics_Image(this.buffer.clone(),this.offsetX,this.offsetY,this.width,this.height,null,this.type);
			image.dirty = this.dirty;
			return image;
		} else return new lime_graphics_Image(null,this.offsetX,this.offsetY,this.width,this.height,null,this.type);
	}
	,colorTransform: function(rect,colorMatrix) {
		rect = this.__clipRect(rect);
		if(this.buffer == null || rect == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.colorTransform(this,rect,colorMatrix);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.colorTransform(this,rect,colorMatrix);
			break;
		case 2:
			rect.offset(this.offsetX,this.offsetY);
			this.buffer.__srcBitmapData.colorTransform(rect.__toFlashRectangle(),lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__toFlashColorTransform(colorMatrix));
			break;
		default:
		}
	}
	,copyChannel: function(sourceImage,sourceRect,destPoint,sourceChannel,destChannel) {
		sourceRect = this.__clipRect(sourceRect);
		if(this.buffer == null || sourceRect == null) return;
		if(destChannel == lime_graphics_ImageChannel.ALPHA && !this.get_transparent()) return;
		if(sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.copyChannel(this,sourceImage,sourceRect,destPoint,sourceChannel,destChannel);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.copyChannel(this,sourceImage,sourceRect,destPoint,sourceChannel,destChannel);
			break;
		case 2:
			var srcChannel;
			switch(sourceChannel[1]) {
			case 0:
				srcChannel = 1;
				break;
			case 1:
				srcChannel = 2;
				break;
			case 2:
				srcChannel = 4;
				break;
			case 3:
				srcChannel = 8;
				break;
			}
			var dstChannel;
			switch(destChannel[1]) {
			case 0:
				dstChannel = 1;
				break;
			case 1:
				dstChannel = 2;
				break;
			case 2:
				dstChannel = 4;
				break;
			case 3:
				dstChannel = 8;
				break;
			}
			sourceRect.offset(sourceImage.offsetX,sourceImage.offsetY);
			destPoint.offset(this.offsetX,this.offsetY);
			this.buffer.__srcBitmapData.copyChannel(sourceImage.buffer.get_src(),sourceRect.__toFlashRectangle(),destPoint.__toFlashPoint(),srcChannel,dstChannel);
			break;
		default:
		}
	}
	,copyPixels: function(sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha) {
		if(mergeAlpha == null) mergeAlpha = false;
		if(this.buffer == null || sourceImage == null) return;
		if(sourceRect.width <= 0 || sourceRect.height <= 0) return;
		if(this.width <= 0 || this.height <= 0) return;
		if(sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;
		if(sourceRect.x < 0) {
			sourceRect.width += sourceRect.x;
			sourceRect.x = 0;
		}
		if(sourceRect.y < 0) {
			sourceRect.height += sourceRect.y;
			sourceRect.y = 0;
		}
		if(destPoint.x + sourceRect.width > this.width) sourceRect.width = this.width - destPoint.x;
		if(destPoint.y + sourceRect.height > this.height) sourceRect.height = this.height - destPoint.y;
		if(destPoint.x < 0) {
			sourceRect.width += destPoint.x;
			sourceRect.x = -destPoint.x;
			destPoint.x = 0;
		}
		if(destPoint.y < 0) {
			sourceRect.height += destPoint.y;
			sourceRect.y = -destPoint.y;
			destPoint.y = 0;
		}
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
			lime_graphics_utils_ImageCanvasUtil.copyPixels(this,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageCanvasUtil.convertToData(sourceImage);
			lime_graphics_utils_ImageDataUtil.copyPixels(this,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha);
			break;
		case 2:
			sourceRect.offset(sourceImage.offsetX,sourceImage.offsetY);
			destPoint.offset(this.offsetX,this.offsetY);
			if(alphaImage != null && alphaPoint != null) alphaPoint.offset(alphaImage.offsetX,alphaImage.offsetY);
			this.buffer.__srcBitmapData.copyPixels(sourceImage.buffer.__srcBitmapData,sourceRect.__toFlashRectangle(),destPoint.__toFlashPoint(),alphaImage != null?alphaImage.buffer.get_src():null,alphaPoint != null?alphaPoint.__toFlashPoint():null,mergeAlpha);
			break;
		default:
		}
	}
	,encode: function(format,quality) {
		if(quality == null) quality = 90;
		if(format == null) format = "png";
		switch(format) {
		case "png":
			return lime_graphics_format_PNG.encode(this);
		case "jpg":case "jpeg":
			return lime_graphics_format_JPEG.encode(this,quality);
		case "bmp":
			return lime_graphics_format_BMP.encode(this);
		default:
		}
		return null;
	}
	,fillRect: function(rect,color,format) {
		rect = this.__clipRect(rect);
		if(this.buffer == null || rect == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.fillRect(this,rect,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			if(this.buffer.data.length == 0) return;
			lime_graphics_utils_ImageDataUtil.fillRect(this,rect,color,format);
			break;
		case 2:
			rect.offset(this.offsetX,this.offsetY);
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.fillRect(rect.__toFlashRectangle(),argb);
			break;
		default:
		}
	}
	,floodFill: function(x,y,color,format) {
		if(this.buffer == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.floodFill(this,x,y,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.floodFill(this,x,y,color,format);
			break;
		case 2:
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.floodFill(x + this.offsetX,y + this.offsetY,argb);
			break;
		default:
		}
	}
	,getColorBoundsRect: function(mask,color,findColor,format) {
		if(findColor == null) findColor = true;
		if(this.buffer == null) return null;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getColorBoundsRect(this,mask,color,findColor,format);
		case 1:
			return lime_graphics_utils_ImageDataUtil.getColorBoundsRect(this,mask,color,findColor,format);
		case 2:
			var rect = this.buffer.__srcBitmapData.getColorBoundsRect(mask,color,findColor);
			return new lime_math_Rectangle(rect.x,rect.y,rect.width,rect.height);
		default:
			return null;
		}
	}
	,getPixel: function(x,y,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return 0;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			return lime_graphics_utils_ImageCanvasUtil.getPixel(this,x,y,format);
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getPixel(this,x,y,format);
		case 2:
			var color = this.buffer.__srcBitmapData.getPixel(x + this.offsetX,y + this.offsetY);
			if(format != null) switch(format) {
			case 1:
				return color;
			case 2:
				var bgra;
				{
					var bgra1 = 0;
					bgra1 = (color & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color >> 16 & 255 & 255) << 8 | color >> 24 & 255 & 255;
					bgra = bgra1;
				}
				return bgra;
			default:
				var rgba;
				{
					var rgba1 = 0;
					rgba1 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba = rgba1;
				}
				return rgba;
			} else {
				var rgba2;
				{
					var rgba3 = 0;
					rgba3 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba2 = rgba3;
				}
				return rgba2;
			}
			break;
		default:
			return 0;
		}
	}
	,getPixel32: function(x,y,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return 0;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			return lime_graphics_utils_ImageCanvasUtil.getPixel32(this,x,y,format);
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getPixel32(this,x,y,format);
		case 2:
			var color = this.buffer.__srcBitmapData.getPixel32(x + this.offsetX,y + this.offsetY);
			if(format != null) switch(format) {
			case 1:
				return color;
			case 2:
				var bgra;
				{
					var bgra1 = 0;
					bgra1 = (color & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color >> 16 & 255 & 255) << 8 | color >> 24 & 255 & 255;
					bgra = bgra1;
				}
				return bgra;
			default:
				var rgba;
				{
					var rgba1 = 0;
					rgba1 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba = rgba1;
				}
				return rgba;
			} else {
				var rgba2;
				{
					var rgba3 = 0;
					rgba3 = (color >> 16 & 255 & 255) << 24 | (color >> 8 & 255 & 255) << 16 | (color & 255 & 255) << 8 | color >> 24 & 255 & 255;
					rgba2 = rgba3;
				}
				return rgba2;
			}
			break;
		default:
			return 0;
		}
	}
	,getPixels: function(rect,format) {
		if(this.buffer == null) return null;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			return lime_graphics_utils_ImageCanvasUtil.getPixels(this,rect,format);
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			return lime_graphics_utils_ImageDataUtil.getPixels(this,rect,format);
		case 2:
			return null;
		default:
			return null;
		}
	}
	,merge: function(sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
		if(this.buffer == null || sourceImage == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
			lime_graphics_utils_ImageCanvasUtil.merge(this,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageCanvasUtil.convertToData(sourceImage);
			lime_graphics_utils_ImageDataUtil.merge(this,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
			break;
		case 2:
			sourceRect.offset(this.offsetX,this.offsetY);
			this.buffer.__srcBitmapData.merge(sourceImage.buffer.__srcBitmapData,sourceRect.__toFlashRectangle(),destPoint.__toFlashPoint(),redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
			break;
		default:
			return null;
		}
	}
	,resize: function(newWidth,newHeight) {
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.resize(this,newWidth,newHeight);
			break;
		case 1:
			lime_graphics_utils_ImageDataUtil.resize(this,newWidth,newHeight);
			break;
		case 2:
			break;
		default:
		}
		this.buffer.width = newWidth;
		this.buffer.height = newHeight;
		this.offsetX = 0;
		this.offsetY = 0;
		this.width = newWidth;
		this.height = newHeight;
	}
	,scroll: function(x,y) {
		if(this.buffer == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.scroll(this,x,y);
			break;
		case 1:
			this.copyPixels(this,this.get_rect(),new lime_math_Vector2(x,y));
			break;
		case 2:
			this.buffer.__srcBitmapData.scroll(x + this.offsetX,y + this.offsetX);
			break;
		default:
		}
	}
	,setPixel: function(x,y,color,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.setPixel(this,x,y,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.setPixel(this,x,y,color,format);
			break;
		case 2:
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.setPixel(x + this.offsetX,y + this.offsetX,argb);
			break;
		default:
		}
	}
	,threshold: function(sourceImage,sourceRect,destPoint,operation,threshold,color,mask,copySource) {
		if(copySource == null) copySource = false;
		if(mask == null) mask = -1;
		if(color == null) color = 0;
		return lime_graphics_utils_ImageDataUtil.threshold(this,sourceImage,sourceRect,destPoint,operation,threshold,color,mask,copySource);
	}
	,setPixel32: function(x,y,color,format) {
		if(this.buffer == null || x < 0 || y < 0 || x >= this.width || y >= this.height) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.setPixel32(this,x,y,color,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.setPixel32(this,x,y,color,format);
			break;
		case 2:
			var argb;
			if(format != null) switch(format) {
			case 1:
				argb = color;
				break;
			case 2:
				{
					var bgra = color;
					var argb1 = 0;
					argb1 = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
					argb = argb1;
				}
				break;
			default:
				{
					var rgba = color;
					var argb2 = 0;
					argb2 = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
					argb = argb2;
				}
			} else {
				var rgba1 = color;
				var argb3 = 0;
				argb3 = (rgba1 & 255 & 255) << 24 | (rgba1 >> 24 & 255 & 255) << 16 | (rgba1 >> 16 & 255 & 255) << 8 | rgba1 >> 8 & 255 & 255;
				argb = argb3;
			}
			this.buffer.__srcBitmapData.setPixel32(x + this.offsetX,y + this.offsetY,argb);
			break;
		default:
		}
	}
	,setPixels: function(rect,bytes,format) {
		rect = this.__clipRect(rect);
		if(this.buffer == null || rect == null) return;
		var _g = this.type;
		switch(_g[1]) {
		case 0:
			lime_graphics_utils_ImageCanvasUtil.setPixels(this,rect,bytes,format);
			break;
		case 1:
			lime_graphics_utils_ImageCanvasUtil.convertToData(this);
			lime_graphics_utils_ImageDataUtil.setPixels(this,rect,bytes,format);
			break;
		case 2:
			break;
		default:
		}
	}
	,__clipRect: function(r) {
		if(r == null) return null;
		if(r.x < 0) {
			r.width -= -r.x;
			r.x = 0;
			if(r.x + r.width <= 0) return null;
		}
		if(r.y < 0) {
			r.height -= -r.y;
			r.y = 0;
			if(r.y + r.height <= 0) return null;
		}
		if(r.x + r.width >= this.width) {
			r.width -= r.x + r.width - this.width;
			if(r.width <= 0) return null;
		}
		if(r.y + r.height >= this.height) {
			r.height -= r.y + r.height - this.height;
			if(r.height <= 0) return null;
		}
		return r;
	}
	,__fromBase64: function(base64,type,onload) {
		var _g = this;
		var image = new Image();
		image.crossOrigin = "Anonymous";
		var image_onLoaded = function(event) {
			_g.buffer = new lime_graphics_ImageBuffer(null,image.width,image.height);
			_g.buffer.__srcImage = image;
			_g.offsetX = 0;
			_g.offsetY = 0;
			_g.width = _g.buffer.width;
			_g.height = _g.buffer.height;
			if(onload != null) onload(_g);
		};
		image.addEventListener("load",image_onLoaded,false);
		image.src = "data:" + type + ";base64," + base64;
	}
	,__fromBytes: function(bytes,onload) {
		var type = "";
		if(lime_graphics_Image.__isPNG(bytes)) type = "image/png"; else if(lime_graphics_Image.__isJPG(bytes)) type = "image/jpeg"; else if(lime_graphics_Image.__isGIF(bytes)) type = "image/gif"; else throw new js__$Boot_HaxeError("Image tried to read PNG/JPG Bytes, but found an invalid header.");
		this.__fromBase64(lime_graphics_Image.__base64Encode(bytes),type,onload);
	}
	,__fromFile: function(path,onload,onerror) {
		var _g = this;
		var image = new Image();
		image.crossOrigin = "Anonymous";
		image.onload = function(_) {
			_g.buffer = new lime_graphics_ImageBuffer(null,image.width,image.height);
			_g.buffer.__srcImage = image;
			_g.width = image.width;
			_g.height = image.height;
			if(onload != null) onload(_g);
		};
		image.onerror = function(_1) {
			if(onerror != null) onerror();
		};
		image.src = path;
		if(image.complete) {
		}
	}
	,__fromImageBuffer: function(buffer) {
		this.buffer = buffer;
		if(buffer != null) {
			if(this.width == -1) this.width = buffer.width;
			if(this.height == -1) this.height = buffer.height;
		}
	}
	,get_data: function() {
		if(this.buffer.data == null && this.buffer.width > 0 && this.buffer.height > 0) {
			lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
			lime_graphics_utils_ImageCanvasUtil.sync(this,false);
			lime_graphics_utils_ImageCanvasUtil.createImageData(this);
		}
		return this.buffer.data;
	}
	,set_data: function(value) {
		return this.buffer.data = value;
	}
	,get_format: function() {
		return this.buffer.format;
	}
	,set_format: function(value) {
		if(this.buffer.format != value) {
			var _g = this.type;
			switch(_g[1]) {
			case 1:
				lime_graphics_utils_ImageDataUtil.setFormat(this,value);
				break;
			default:
			}
		}
		return this.buffer.format = value;
	}
	,get_powerOfTwo: function() {
		return this.buffer.width != 0 && (this.buffer.width & ~this.buffer.width + 1) == this.buffer.width && (this.buffer.height != 0 && (this.buffer.height & ~this.buffer.height + 1) == this.buffer.height);
	}
	,set_powerOfTwo: function(value) {
		if(value != this.get_powerOfTwo()) {
			var newWidth = 1;
			var newHeight = 1;
			while(newWidth < this.buffer.width) newWidth <<= 1;
			while(newHeight < this.buffer.height) newHeight <<= 1;
			var _g = this.type;
			switch(_g[1]) {
			case 0:
				break;
			case 1:
				lime_graphics_utils_ImageDataUtil.resizeBuffer(this,newWidth,newHeight);
				break;
			case 2:
				break;
			default:
			}
		}
		return value;
	}
	,get_premultiplied: function() {
		return this.buffer.premultiplied;
	}
	,set_premultiplied: function(value) {
		if(value && !this.buffer.premultiplied) {
			var _g = this.type;
			switch(_g[1]) {
			case 1:
				lime_graphics_utils_ImageCanvasUtil.convertToData(this);
				lime_graphics_utils_ImageDataUtil.multiplyAlpha(this);
				break;
			default:
			}
		} else if(!value && this.buffer.premultiplied) {
			var _g1 = this.type;
			switch(_g1[1]) {
			case 1:
				lime_graphics_utils_ImageCanvasUtil.convertToData(this);
				lime_graphics_utils_ImageDataUtil.unmultiplyAlpha(this);
				break;
			default:
			}
		}
		return value;
	}
	,get_rect: function() {
		return new lime_math_Rectangle(0,0,this.width,this.height);
	}
	,get_src: function() {
		if(this.buffer.__srcCanvas == null) lime_graphics_utils_ImageCanvasUtil.convertToCanvas(this);
		return this.buffer.get_src();
	}
	,set_src: function(value) {
		return this.buffer.set_src(value);
	}
	,get_transparent: function() {
		if(this.buffer == null) return false;
		return this.buffer.transparent;
	}
	,set_transparent: function(value) {
		if(this.buffer == null) return false;
		return this.buffer.transparent = value;
	}
	,__class__: lime_graphics_Image
	,__properties__: {set_transparent:"set_transparent",get_transparent:"get_transparent",set_src:"set_src",get_src:"get_src",get_rect:"get_rect",set_premultiplied:"set_premultiplied",get_premultiplied:"get_premultiplied",set_powerOfTwo:"set_powerOfTwo",get_powerOfTwo:"get_powerOfTwo",set_format:"set_format",get_format:"get_format",set_data:"set_data",get_data:"get_data"}
};
var lime_graphics_ImageBuffer = function(data,width,height,bitsPerPixel,format) {
	if(bitsPerPixel == null) bitsPerPixel = 32;
	if(height == null) height = 0;
	if(width == null) width = 0;
	this.data = data;
	this.width = width;
	this.height = height;
	this.bitsPerPixel = bitsPerPixel;
	if(format == null) this.format = 0; else this.format = format;
	this.transparent = true;
};
$hxClasses["lime.graphics.ImageBuffer"] = lime_graphics_ImageBuffer;
lime_graphics_ImageBuffer.__name__ = ["lime","graphics","ImageBuffer"];
lime_graphics_ImageBuffer.prototype = {
	clone: function() {
		var buffer = new lime_graphics_ImageBuffer(this.data,this.width,this.height,this.bitsPerPixel);
		if(this.data != null) {
			var elements = this.data.byteLength;
			var this1;
			if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
			buffer.data = this1;
			var copy;
			var view = this.data;
			var this2;
			if(view != null) this2 = new Uint8Array(view); else this2 = null;
			copy = this2;
			buffer.data.set(copy);
		} else if(this.__srcImageData != null) {
			buffer.__srcCanvas = window.document.createElement("canvas");
			buffer.__srcContext = buffer.__srcCanvas.getContext("2d");
			buffer.__srcCanvas.width = this.__srcImageData.width;
			buffer.__srcCanvas.height = this.__srcImageData.height;
			buffer.__srcImageData = buffer.__srcContext.createImageData(this.__srcImageData.width,this.__srcImageData.height);
			var copy1 = new Uint8ClampedArray(this.__srcImageData.data);
			buffer.__srcImageData.data.set(copy1);
		} else if(this.__srcCanvas != null) {
			buffer.__srcCanvas = window.document.createElement("canvas");
			buffer.__srcContext = buffer.__srcCanvas.getContext("2d");
			buffer.__srcCanvas.width = this.__srcCanvas.width;
			buffer.__srcCanvas.height = this.__srcCanvas.height;
			buffer.__srcContext.drawImage(this.__srcCanvas,0,0);
		} else buffer.__srcImage = this.__srcImage;
		buffer.bitsPerPixel = this.bitsPerPixel;
		buffer.format = this.format;
		buffer.premultiplied = this.premultiplied;
		buffer.transparent = this.transparent;
		return buffer;
	}
	,get_src: function() {
		if(this.__srcImage != null) return this.__srcImage;
		return this.__srcCanvas;
	}
	,set_src: function(value) {
		if(js_Boot.__instanceof(value,Image)) this.__srcImage = value; else if(js_Boot.__instanceof(value,HTMLCanvasElement)) {
			this.__srcCanvas = value;
			this.__srcContext = this.__srcCanvas.getContext("2d");
		}
		return value;
	}
	,get_stride: function() {
		return this.width * 4;
	}
	,__class__: lime_graphics_ImageBuffer
	,__properties__: {get_stride:"get_stride",set_src:"set_src",get_src:"get_src"}
};
var lime_graphics_ImageChannel = $hxClasses["lime.graphics.ImageChannel"] = { __ename__ : ["lime","graphics","ImageChannel"], __constructs__ : ["RED","GREEN","BLUE","ALPHA"] };
lime_graphics_ImageChannel.RED = ["RED",0];
lime_graphics_ImageChannel.RED.toString = $estr;
lime_graphics_ImageChannel.RED.__enum__ = lime_graphics_ImageChannel;
lime_graphics_ImageChannel.GREEN = ["GREEN",1];
lime_graphics_ImageChannel.GREEN.toString = $estr;
lime_graphics_ImageChannel.GREEN.__enum__ = lime_graphics_ImageChannel;
lime_graphics_ImageChannel.BLUE = ["BLUE",2];
lime_graphics_ImageChannel.BLUE.toString = $estr;
lime_graphics_ImageChannel.BLUE.__enum__ = lime_graphics_ImageChannel;
lime_graphics_ImageChannel.ALPHA = ["ALPHA",3];
lime_graphics_ImageChannel.ALPHA.toString = $estr;
lime_graphics_ImageChannel.ALPHA.__enum__ = lime_graphics_ImageChannel;
lime_graphics_ImageChannel.__empty_constructs__ = [lime_graphics_ImageChannel.RED,lime_graphics_ImageChannel.GREEN,lime_graphics_ImageChannel.BLUE,lime_graphics_ImageChannel.ALPHA];
var lime_graphics_ImageType = $hxClasses["lime.graphics.ImageType"] = { __ename__ : ["lime","graphics","ImageType"], __constructs__ : ["CANVAS","DATA","FLASH","CUSTOM"] };
lime_graphics_ImageType.CANVAS = ["CANVAS",0];
lime_graphics_ImageType.CANVAS.toString = $estr;
lime_graphics_ImageType.CANVAS.__enum__ = lime_graphics_ImageType;
lime_graphics_ImageType.DATA = ["DATA",1];
lime_graphics_ImageType.DATA.toString = $estr;
lime_graphics_ImageType.DATA.__enum__ = lime_graphics_ImageType;
lime_graphics_ImageType.FLASH = ["FLASH",2];
lime_graphics_ImageType.FLASH.toString = $estr;
lime_graphics_ImageType.FLASH.__enum__ = lime_graphics_ImageType;
lime_graphics_ImageType.CUSTOM = ["CUSTOM",3];
lime_graphics_ImageType.CUSTOM.toString = $estr;
lime_graphics_ImageType.CUSTOM.__enum__ = lime_graphics_ImageType;
lime_graphics_ImageType.__empty_constructs__ = [lime_graphics_ImageType.CANVAS,lime_graphics_ImageType.DATA,lime_graphics_ImageType.FLASH,lime_graphics_ImageType.CUSTOM];
var lime_graphics_RenderContext = $hxClasses["lime.graphics.RenderContext"] = { __ename__ : ["lime","graphics","RenderContext"], __constructs__ : ["OPENGL","CANVAS","DOM","FLASH","CAIRO","CONSOLE","CUSTOM","NONE"] };
lime_graphics_RenderContext.OPENGL = function(gl) { var $x = ["OPENGL",0,gl]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CANVAS = function(context) { var $x = ["CANVAS",1,context]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.DOM = function(element) { var $x = ["DOM",2,element]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.FLASH = function(stage) { var $x = ["FLASH",3,stage]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CAIRO = function(cairo) { var $x = ["CAIRO",4,cairo]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CONSOLE = function(context) { var $x = ["CONSOLE",5,context]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.CUSTOM = function(data) { var $x = ["CUSTOM",6,data]; $x.__enum__ = lime_graphics_RenderContext; $x.toString = $estr; return $x; };
lime_graphics_RenderContext.NONE = ["NONE",7];
lime_graphics_RenderContext.NONE.toString = $estr;
lime_graphics_RenderContext.NONE.__enum__ = lime_graphics_RenderContext;
lime_graphics_RenderContext.__empty_constructs__ = [lime_graphics_RenderContext.NONE];
var lime_graphics_Renderer = function(window) {
	this.onRender = new lime_app_Event_$Void_$Void();
	this.onContextRestored = new lime_app_Event_$lime_$graphics_$RenderContext_$Void();
	this.onContextLost = new lime_app_Event_$Void_$Void();
	this.window = window;
	this.backend = new lime__$backend_html5_HTML5Renderer(this);
	this.window.renderer = this;
};
$hxClasses["lime.graphics.Renderer"] = lime_graphics_Renderer;
lime_graphics_Renderer.__name__ = ["lime","graphics","Renderer"];
lime_graphics_Renderer.prototype = {
	create: function() {
		this.backend.create();
	}
	,flip: function() {
		this.backend.flip();
	}
	,render: function() {
		this.backend.render();
	}
	,__class__: lime_graphics_Renderer
};
var lime_graphics_RendererType = $hxClasses["lime.graphics.RendererType"] = { __ename__ : ["lime","graphics","RendererType"], __constructs__ : ["OPENGL","CANVAS","DOM","FLASH","CAIRO","CONSOLE","CUSTOM"] };
lime_graphics_RendererType.OPENGL = ["OPENGL",0];
lime_graphics_RendererType.OPENGL.toString = $estr;
lime_graphics_RendererType.OPENGL.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CANVAS = ["CANVAS",1];
lime_graphics_RendererType.CANVAS.toString = $estr;
lime_graphics_RendererType.CANVAS.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.DOM = ["DOM",2];
lime_graphics_RendererType.DOM.toString = $estr;
lime_graphics_RendererType.DOM.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.FLASH = ["FLASH",3];
lime_graphics_RendererType.FLASH.toString = $estr;
lime_graphics_RendererType.FLASH.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CAIRO = ["CAIRO",4];
lime_graphics_RendererType.CAIRO.toString = $estr;
lime_graphics_RendererType.CAIRO.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CONSOLE = ["CONSOLE",5];
lime_graphics_RendererType.CONSOLE.toString = $estr;
lime_graphics_RendererType.CONSOLE.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.CUSTOM = ["CUSTOM",6];
lime_graphics_RendererType.CUSTOM.toString = $estr;
lime_graphics_RendererType.CUSTOM.__enum__ = lime_graphics_RendererType;
lime_graphics_RendererType.__empty_constructs__ = [lime_graphics_RendererType.OPENGL,lime_graphics_RendererType.CANVAS,lime_graphics_RendererType.DOM,lime_graphics_RendererType.FLASH,lime_graphics_RendererType.CAIRO,lime_graphics_RendererType.CONSOLE,lime_graphics_RendererType.CUSTOM];
var lime_graphics_cairo_Cairo = function(surface) {
	if(surface != null) {
	}
};
$hxClasses["lime.graphics.cairo.Cairo"] = lime_graphics_cairo_Cairo;
lime_graphics_cairo_Cairo.__name__ = ["lime","graphics","cairo","Cairo"];
lime_graphics_cairo_Cairo.__properties__ = {get_versionString:"get_versionString",get_version:"get_version"}
lime_graphics_cairo_Cairo.version = null;
lime_graphics_cairo_Cairo.versionString = null;
lime_graphics_cairo_Cairo.get_version = function() {
	return 0;
};
lime_graphics_cairo_Cairo.get_versionString = function() {
	return "";
};
lime_graphics_cairo_Cairo.prototype = {
	arc: function(xc,yc,radius,angle1,angle2) {
	}
	,arcNegative: function(xc,yc,radius,angle1,angle2) {
	}
	,clip: function() {
	}
	,clipExtents: function(x1,y1,x2,y2) {
	}
	,clipPreserve: function() {
	}
	,closePath: function() {
	}
	,copyPage: function() {
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
	}
	,fill: function() {
	}
	,fillExtents: function(x1,y1,x2,y2) {
	}
	,fillPreserve: function() {
	}
	,identityMatrix: function() {
	}
	,inClip: function(x,y) {
		return false;
	}
	,inFill: function(x,y) {
		return false;
	}
	,inStroke: function(x,y) {
		return false;
	}
	,lineTo: function(x,y) {
	}
	,moveTo: function(x,y) {
	}
	,mask: function(pattern) {
	}
	,maskSurface: function(surface,x,y) {
	}
	,newPath: function() {
	}
	,paint: function() {
	}
	,paintWithAlpha: function(alpha) {
	}
	,popGroup: function() {
		return null;
	}
	,popGroupToSource: function() {
	}
	,pushGroup: function() {
	}
	,pushGroupWithContent: function(content) {
	}
	,recreate: function(surface) {
	}
	,rectangle: function(x,y,width,height) {
	}
	,relCurveTo: function(dx1,dy1,dx2,dy2,dx3,dy3) {
	}
	,relLineTo: function(dx,dy) {
	}
	,relMoveTo: function(dx,dy) {
	}
	,resetClip: function() {
	}
	,restore: function() {
	}
	,save: function() {
	}
	,setFontSize: function(size) {
	}
	,setSourceRGB: function(r,g,b) {
	}
	,setSourceRGBA: function(r,g,b,a) {
	}
	,setSourceSurface: function(surface,x,y) {
	}
	,showPage: function() {
	}
	,showText: function(utf8) {
	}
	,status: function() {
		return 0;
	}
	,stroke: function() {
	}
	,strokeExtents: function(x1,y1,x2,y2) {
	}
	,strokePreserve: function() {
	}
	,transform: function(matrix) {
	}
	,rotate: function(amount) {
	}
	,scale: function(x,y) {
	}
	,translate: function(x,y) {
	}
	,get_antialias: function() {
		return 0;
	}
	,set_antialias: function(value) {
		return value;
	}
	,get_currentPoint: function() {
		return null;
	}
	,get_dash: function() {
		return [];
	}
	,set_dash: function(value) {
		return value;
	}
	,get_dashCount: function() {
		return 0;
	}
	,get_fillRule: function() {
		return 0;
	}
	,set_fillRule: function(value) {
		return value;
	}
	,get_fontFace: function() {
		return 0;
	}
	,set_fontFace: function(value) {
		return value;
	}
	,get_fontOptions: function() {
		return null;
	}
	,set_fontOptions: function(value) {
		return value;
	}
	,get_groupTarget: function() {
		return 0;
	}
	,get_hasCurrentPoint: function() {
		return false;
	}
	,get_lineCap: function() {
		return 0;
	}
	,set_lineCap: function(value) {
		return value;
	}
	,get_lineJoin: function() {
		return 0;
	}
	,set_lineJoin: function(value) {
		return value;
	}
	,get_lineWidth: function() {
		return 0;
	}
	,set_lineWidth: function(value) {
		return value;
	}
	,get_matrix: function() {
		return null;
	}
	,set_matrix: function(value) {
		return value;
	}
	,get_miterLimit: function() {
		return 0;
	}
	,set_miterLimit: function(value) {
		return value;
	}
	,get_operator: function() {
		return 0;
	}
	,set_operator: function(value) {
		return value;
	}
	,get_source: function() {
		return 0;
	}
	,set_source: function(value) {
		return value;
	}
	,get_target: function() {
		return 0;
	}
	,get_tolerance: function() {
		return 0;
	}
	,set_tolerance: function(value) {
		return value;
	}
	,__class__: lime_graphics_cairo_Cairo
	,__properties__: {set_tolerance:"set_tolerance",get_tolerance:"get_tolerance",get_target:"get_target",set_source:"set_source",get_source:"get_source",set_operator:"set_operator",get_operator:"get_operator",set_miterLimit:"set_miterLimit",get_miterLimit:"get_miterLimit",set_matrix:"set_matrix",get_matrix:"get_matrix",set_lineWidth:"set_lineWidth",get_lineWidth:"get_lineWidth",set_lineJoin:"set_lineJoin",get_lineJoin:"get_lineJoin",set_lineCap:"set_lineCap",get_lineCap:"get_lineCap",get_hasCurrentPoint:"get_hasCurrentPoint",get_groupTarget:"get_groupTarget",set_fontOptions:"set_fontOptions",get_fontOptions:"get_fontOptions",set_fontFace:"set_fontFace",get_fontFace:"get_fontFace",set_fillRule:"set_fillRule",get_fillRule:"get_fillRule",get_dashCount:"get_dashCount",set_dash:"set_dash",get_dash:"get_dash",get_currentPoint:"get_currentPoint",set_antialias:"set_antialias",get_antialias:"get_antialias"}
};
var lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoFTFontFace.CairoFTFontFace_Impl_"] = lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$;
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoFTFontFace","CairoFTFontFace_Impl_"];
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$._new = function() {
	return 0;
};
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$.create = function(face,loadFlags) {
	return 0;
};
var lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_"] = lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$;
lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoFontFace","CairoFontFace_Impl_"];
lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$._new = function() {
	return null;
};
lime_graphics_cairo__$CairoFontFace_CairoFontFace_$Impl_$.status = function(this1) {
	return 0;
};
var lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_"] = lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$;
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoFontOptions","CairoFontOptions_Impl_"];
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.__properties__ = {set_subpixelOrder:"set_subpixelOrder",get_subpixelOrder:"get_subpixelOrder",set_hintStyle:"set_hintStyle",get_hintStyle:"get_hintStyle",set_hintMetrics:"set_hintMetrics",get_hintMetrics:"get_hintMetrics",set_antialias:"set_antialias",get_antialias:"get_antialias"}
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$._new = function() {
	return null;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_antialias = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_antialias = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_hintMetrics = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_hintMetrics = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_hintStyle = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_hintStyle = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.get_subpixelOrder = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoFontOptions_CairoFontOptions_$Impl_$.set_subpixelOrder = function(this1,value) {
	return value;
};
var lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_"] = lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$;
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoImageSurface","CairoImageSurface_Impl_"];
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.__properties__ = {get_width:"get_width",get_stride:"get_stride",get_height:"get_height",get_format:"get_format",get_data:"get_data"}
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$._new = function(format,width,height) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.create = function(data,format,width,height,stride) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.fromImage = function(image) {
	return null;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_data = function(this1) {
	return null;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_format = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_height = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_stride = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoImageSurface_CairoImageSurface_$Impl_$.get_width = function(this1) {
	return 0;
};
var lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoPattern.CairoPattern_Impl_"] = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$;
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoPattern","CairoPattern_Impl_"];
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.__properties__ = {set_matrix:"set_matrix",get_matrix:"get_matrix",set_filter:"set_filter",get_filter:"get_filter",set_extend:"set_extend",get_extend:"get_extend",get_colorStopCount:"get_colorStopCount"}
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$._new = function(handle) {
	return handle;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.addColorStopRGB = function(this1,offset,r,g,b) {
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.addColorStopRGBA = function(this1,offset,r,g,b,a) {
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface = function(surface) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createLinear = function(x0,y0,x1,y1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRadial = function(cx0,cy0,radius0,cx1,cy1,radius1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGB = function(r,g,b) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGBA = function(r,g,b,a) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_colorStopCount = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_extend = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_extend = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_filter = function(this1) {
	return 0;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter = function(this1,value) {
	return value;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_matrix = function(this1) {
	return null;
};
lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_matrix = function(this1,value) {
	return value;
};
var lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$ = {};
$hxClasses["lime.graphics.cairo._CairoSurface.CairoSurface_Impl_"] = lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$;
lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.__name__ = ["lime","graphics","cairo","_CairoSurface","CairoSurface_Impl_"];
lime_graphics_cairo__$CairoSurface_CairoSurface_$Impl_$.flush = function(this1) {
};
var lime_graphics_console_IndexBuffer = function() {
};
$hxClasses["lime.graphics.console.IndexBuffer"] = lime_graphics_console_IndexBuffer;
lime_graphics_console_IndexBuffer.__name__ = ["lime","graphics","console","IndexBuffer"];
lime_graphics_console_IndexBuffer.prototype = {
	__class__: lime_graphics_console_IndexBuffer
};
var lime_graphics_console_Primitive = $hxClasses["lime.graphics.console.Primitive"] = { __ename__ : ["lime","graphics","console","Primitive"], __constructs__ : ["Point","Line","LineStrip","Triangle","TriangleStrip"] };
lime_graphics_console_Primitive.Point = ["Point",0];
lime_graphics_console_Primitive.Point.toString = $estr;
lime_graphics_console_Primitive.Point.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.Line = ["Line",1];
lime_graphics_console_Primitive.Line.toString = $estr;
lime_graphics_console_Primitive.Line.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.LineStrip = ["LineStrip",2];
lime_graphics_console_Primitive.LineStrip.toString = $estr;
lime_graphics_console_Primitive.LineStrip.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.Triangle = ["Triangle",3];
lime_graphics_console_Primitive.Triangle.toString = $estr;
lime_graphics_console_Primitive.Triangle.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.TriangleStrip = ["TriangleStrip",4];
lime_graphics_console_Primitive.TriangleStrip.toString = $estr;
lime_graphics_console_Primitive.TriangleStrip.__enum__ = lime_graphics_console_Primitive;
lime_graphics_console_Primitive.__empty_constructs__ = [lime_graphics_console_Primitive.Point,lime_graphics_console_Primitive.Line,lime_graphics_console_Primitive.LineStrip,lime_graphics_console_Primitive.Triangle,lime_graphics_console_Primitive.TriangleStrip];
var lime_graphics_console_Shader = function() {
};
$hxClasses["lime.graphics.console.Shader"] = lime_graphics_console_Shader;
lime_graphics_console_Shader.__name__ = ["lime","graphics","console","Shader"];
lime_graphics_console_Shader.prototype = {
	__class__: lime_graphics_console_Shader
};
var lime_graphics_console_VertexBuffer = function() {
};
$hxClasses["lime.graphics.console.VertexBuffer"] = lime_graphics_console_VertexBuffer;
lime_graphics_console_VertexBuffer.__name__ = ["lime","graphics","console","VertexBuffer"];
lime_graphics_console_VertexBuffer.prototype = {
	lock: function() {
		return new lime_graphics_console_VertexOutput();
	}
	,unlock: function() {
	}
	,__class__: lime_graphics_console_VertexBuffer
};
var lime_graphics_console_VertexOutput = function() {
};
$hxClasses["lime.graphics.console.VertexOutput"] = lime_graphics_console_VertexOutput;
lime_graphics_console_VertexOutput.__name__ = ["lime","graphics","console","VertexOutput"];
lime_graphics_console_VertexOutput.prototype = {
	vec2: function(x,y) {
	}
	,vec3: function(x,y,z) {
	}
	,color: function(r,g,b,a) {
	}
	,__class__: lime_graphics_console_VertexOutput
};
var lime_graphics_format_BMP = function() { };
$hxClasses["lime.graphics.format.BMP"] = lime_graphics_format_BMP;
lime_graphics_format_BMP.__name__ = ["lime","graphics","format","BMP"];
lime_graphics_format_BMP.encode = function(image,type) {
	if(image.get_premultiplied() || image.get_format() != 0) {
		image = image.clone();
		image.set_premultiplied(false);
		image.set_format(0);
	}
	if(type == null) type = lime_graphics_format_BMPType.RGB;
	var fileHeaderLength = 14;
	var infoHeaderLength = 40;
	var pixelValuesLength = image.width * image.height * 4;
	if(type != null) switch(type[1]) {
	case 1:
		infoHeaderLength = 108;
		break;
	case 2:
		fileHeaderLength = 0;
		pixelValuesLength += image.width * image.height;
		break;
	case 0:
		pixelValuesLength = image.width * 3 + image.width * 3 % 4 + image.height * 3 + image.height * 3;
		break;
	default:
	} else {
	}
	var data = haxe_io_Bytes.alloc(fileHeaderLength + infoHeaderLength + pixelValuesLength);
	var position = 0;
	if(fileHeaderLength > 0) {
		data.set(position++,66);
		data.set(position++,77);
		data.setInt32(position,data.length);
		position += 4;
		data.setUInt16(position,0);
		position += 2;
		data.setUInt16(position,0);
		position += 2;
		data.setInt32(position,fileHeaderLength + infoHeaderLength);
		position += 4;
	}
	data.setInt32(position,infoHeaderLength);
	position += 4;
	data.setInt32(position,image.width);
	position += 4;
	data.setInt32(position,type == lime_graphics_format_BMPType.ICO?image.height * 2:image.height);
	position += 4;
	data.setUInt16(position,1);
	position += 2;
	data.setUInt16(position,type == lime_graphics_format_BMPType.RGB?24:32);
	position += 2;
	data.setInt32(position,type == lime_graphics_format_BMPType.BITFIELD?3:0);
	position += 4;
	data.setInt32(position,pixelValuesLength);
	position += 4;
	data.setInt32(position,11824);
	position += 4;
	data.setInt32(position,11824);
	position += 4;
	data.setInt32(position,0);
	position += 4;
	data.setInt32(position,0);
	position += 4;
	if(type == lime_graphics_format_BMPType.BITFIELD) {
		data.setInt32(position,16711680);
		position += 4;
		data.setInt32(position,65280);
		position += 4;
		data.setInt32(position,255);
		position += 4;
		data.setInt32(position,-16777216);
		position += 4;
		data.set(position++,32);
		data.set(position++,110);
		data.set(position++,105);
		data.set(position++,87);
		var _g = 0;
		while(_g < 48) {
			var i = _g++;
			data.set(position++,0);
		}
	}
	var pixels = image.getPixels(new lime_math_Rectangle(0,0,image.width,image.height),1);
	var readPosition = 0;
	var a;
	var r;
	var g;
	var b;
	if(type != null) switch(type[1]) {
	case 1:
		var _g1 = 0;
		var _g2 = image.height;
		while(_g1 < _g2) {
			var y = _g1++;
			readPosition = (image.height - 1 - y) * 4 * image.width;
			var _g3 = 0;
			var _g21 = image.width;
			while(_g3 < _g21) {
				var x = _g3++;
				a = pixels.get(readPosition++);
				r = pixels.get(readPosition++);
				g = pixels.get(readPosition++);
				b = pixels.get(readPosition++);
				data.set(position++,b);
				data.set(position++,g);
				data.set(position++,r);
				data.set(position++,a);
			}
		}
		break;
	case 2:
		var andMask = haxe_io_Bytes.alloc(image.width * image.height);
		var maskPosition = 0;
		var _g11 = 0;
		var _g4 = image.height;
		while(_g11 < _g4) {
			var y1 = _g11++;
			readPosition = (image.height - 1 - y1) * 4 * image.width;
			var _g31 = 0;
			var _g22 = image.width;
			while(_g31 < _g22) {
				var x1 = _g31++;
				a = pixels.get(readPosition++);
				r = pixels.get(readPosition++);
				g = pixels.get(readPosition++);
				b = pixels.get(readPosition++);
				data.set(position++,b);
				data.set(position++,g);
				data.set(position++,r);
				data.set(position++,a);
				andMask.set(maskPosition++,0);
			}
		}
		data.blit(position,andMask,0,image.width * image.height);
		break;
	case 0:
		var _g12 = 0;
		var _g5 = image.height;
		while(_g12 < _g5) {
			var y2 = _g12++;
			readPosition = (image.height - 1 - y2) * 4 * image.width;
			var _g32 = 0;
			var _g23 = image.width;
			while(_g32 < _g23) {
				var x2 = _g32++;
				a = pixels.get(readPosition++);
				r = pixels.get(readPosition++);
				g = pixels.get(readPosition++);
				b = pixels.get(readPosition++);
				data.set(position++,b);
				data.set(position++,g);
				data.set(position++,r);
			}
			var _g33 = 0;
			var _g24 = image.width * 3 % 4;
			while(_g33 < _g24) {
				var i1 = _g33++;
				data.set(position++,0);
			}
		}
		break;
	default:
	} else {
	}
	return data;
};
var lime_graphics_format_BMPType = $hxClasses["lime.graphics.format.BMPType"] = { __ename__ : ["lime","graphics","format","BMPType"], __constructs__ : ["RGB","BITFIELD","ICO"] };
lime_graphics_format_BMPType.RGB = ["RGB",0];
lime_graphics_format_BMPType.RGB.toString = $estr;
lime_graphics_format_BMPType.RGB.__enum__ = lime_graphics_format_BMPType;
lime_graphics_format_BMPType.BITFIELD = ["BITFIELD",1];
lime_graphics_format_BMPType.BITFIELD.toString = $estr;
lime_graphics_format_BMPType.BITFIELD.__enum__ = lime_graphics_format_BMPType;
lime_graphics_format_BMPType.ICO = ["ICO",2];
lime_graphics_format_BMPType.ICO.toString = $estr;
lime_graphics_format_BMPType.ICO.__enum__ = lime_graphics_format_BMPType;
lime_graphics_format_BMPType.__empty_constructs__ = [lime_graphics_format_BMPType.RGB,lime_graphics_format_BMPType.BITFIELD,lime_graphics_format_BMPType.ICO];
var lime_graphics_format_JPEG = function() { };
$hxClasses["lime.graphics.format.JPEG"] = lime_graphics_format_JPEG;
lime_graphics_format_JPEG.__name__ = ["lime","graphics","format","JPEG"];
lime_graphics_format_JPEG.decodeBytes = function(bytes,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_JPEG.decodeFile = function(path,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_JPEG.encode = function(image,quality) {
	if(image.get_premultiplied() || image.get_format() != 0) {
		image = image.clone();
		image.set_premultiplied(false);
		image.set_format(0);
	}
	lime_graphics_utils_ImageCanvasUtil.sync(image,false);
	if(image.buffer.__srcCanvas != null) {
		var data = image.buffer.__srcCanvas.toDataURL("image/jpeg",quality / 100);
		var buffer = window.atob(data.split(";base64,")[1]);
		var bytes = haxe_io_Bytes.alloc(buffer.length);
		var _g1 = 0;
		var _g = buffer.length;
		while(_g1 < _g) {
			var i = _g1++;
			bytes.set(i,HxOverrides.cca(buffer,i));
		}
		return bytes;
	}
	return null;
};
var lime_graphics_format_PNG = function() { };
$hxClasses["lime.graphics.format.PNG"] = lime_graphics_format_PNG;
lime_graphics_format_PNG.__name__ = ["lime","graphics","format","PNG"];
lime_graphics_format_PNG.decodeBytes = function(bytes,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_PNG.decodeFile = function(path,decodeData) {
	if(decodeData == null) decodeData = true;
	return null;
};
lime_graphics_format_PNG.encode = function(image) {
	if(image.get_premultiplied() || image.get_format() != 0) {
		image = image.clone();
		image.set_premultiplied(false);
		image.set_format(0);
	}
	return null;
};
var lime_graphics_opengl_GL = function() { };
$hxClasses["lime.graphics.opengl.GL"] = lime_graphics_opengl_GL;
lime_graphics_opengl_GL.__name__ = ["lime","graphics","opengl","GL"];
lime_graphics_opengl_GL.__properties__ = {get_version:"get_version"}
lime_graphics_opengl_GL.version = null;
lime_graphics_opengl_GL.context = null;
lime_graphics_opengl_GL.activeTexture = function(texture) {
	lime_graphics_opengl_GL.context.activeTexture(texture);
};
lime_graphics_opengl_GL.attachShader = function(program,shader) {
	lime_graphics_opengl_GL.context.attachShader(program,shader);
};
lime_graphics_opengl_GL.bindAttribLocation = function(program,index,name) {
	lime_graphics_opengl_GL.context.bindAttribLocation(program,index,name);
};
lime_graphics_opengl_GL.bindBuffer = function(target,buffer) {
	lime_graphics_opengl_GL.context.bindBuffer(target,buffer);
};
lime_graphics_opengl_GL.bindFramebuffer = function(target,framebuffer) {
	lime_graphics_opengl_GL.context.bindFramebuffer(target,framebuffer);
};
lime_graphics_opengl_GL.bindRenderbuffer = function(target,renderbuffer) {
	lime_graphics_opengl_GL.context.bindRenderbuffer(target,renderbuffer);
};
lime_graphics_opengl_GL.bindTexture = function(target,texture) {
	lime_graphics_opengl_GL.context.bindTexture(target,texture);
};
lime_graphics_opengl_GL.blendColor = function(red,green,blue,alpha) {
	lime_graphics_opengl_GL.context.blendColor(red,green,blue,alpha);
};
lime_graphics_opengl_GL.blendEquation = function(mode) {
	lime_graphics_opengl_GL.context.blendEquation(mode);
};
lime_graphics_opengl_GL.blendEquationSeparate = function(modeRGB,modeAlpha) {
	lime_graphics_opengl_GL.context.blendEquationSeparate(modeRGB,modeAlpha);
};
lime_graphics_opengl_GL.blendFunc = function(sfactor,dfactor) {
	lime_graphics_opengl_GL.context.blendFunc(sfactor,dfactor);
};
lime_graphics_opengl_GL.blendFuncSeparate = function(srcRGB,dstRGB,srcAlpha,dstAlpha) {
	lime_graphics_opengl_GL.context.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);
};
lime_graphics_opengl_GL.bufferData = function(target,data,usage) {
	lime_graphics_opengl_GL.context.bufferData(target,data,usage);
};
lime_graphics_opengl_GL.bufferSubData = function(target,offset,data) {
	lime_graphics_opengl_GL.context.bufferSubData(target,offset,data);
};
lime_graphics_opengl_GL.checkFramebufferStatus = function(target) {
	return lime_graphics_opengl_GL.context.checkFramebufferStatus(target);
};
lime_graphics_opengl_GL.clear = function(mask) {
	lime_graphics_opengl_GL.context.clear(mask);
};
lime_graphics_opengl_GL.clearColor = function(red,green,blue,alpha) {
	lime_graphics_opengl_GL.context.clearColor(red,green,blue,alpha);
};
lime_graphics_opengl_GL.clearDepth = function(depth) {
	lime_graphics_opengl_GL.context.clearDepth(depth);
};
lime_graphics_opengl_GL.clearStencil = function(s) {
	lime_graphics_opengl_GL.context.clearStencil(s);
};
lime_graphics_opengl_GL.colorMask = function(red,green,blue,alpha) {
	lime_graphics_opengl_GL.context.colorMask(red,green,blue,alpha);
};
lime_graphics_opengl_GL.compileShader = function(shader) {
	lime_graphics_opengl_GL.context.compileShader(shader);
};
lime_graphics_opengl_GL.compressedTexImage2D = function(target,level,internalformat,width,height,border,data) {
	lime_graphics_opengl_GL.context.compressedTexImage2D(target,level,internalformat,width,height,border,data);
};
lime_graphics_opengl_GL.compressedTexSubImage2D = function(target,level,xoffset,yoffset,width,height,format,data) {
	lime_graphics_opengl_GL.context.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,data);
};
lime_graphics_opengl_GL.copyTexImage2D = function(target,level,internalformat,x,y,width,height,border) {
	lime_graphics_opengl_GL.context.copyTexImage2D(target,level,internalformat,x,y,width,height,border);
};
lime_graphics_opengl_GL.copyTexSubImage2D = function(target,level,xoffset,yoffset,x,y,width,height) {
	lime_graphics_opengl_GL.context.copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);
};
lime_graphics_opengl_GL.createBuffer = function() {
	return lime_graphics_opengl_GL.context.createBuffer();
};
lime_graphics_opengl_GL.createFramebuffer = function() {
	return lime_graphics_opengl_GL.context.createFramebuffer();
};
lime_graphics_opengl_GL.createProgram = function() {
	return lime_graphics_opengl_GL.context.createProgram();
};
lime_graphics_opengl_GL.createRenderbuffer = function() {
	return lime_graphics_opengl_GL.context.createRenderbuffer();
};
lime_graphics_opengl_GL.createShader = function(type) {
	return lime_graphics_opengl_GL.context.createShader(type);
};
lime_graphics_opengl_GL.createTexture = function() {
	return lime_graphics_opengl_GL.context.createTexture();
};
lime_graphics_opengl_GL.cullFace = function(mode) {
	lime_graphics_opengl_GL.context.cullFace(mode);
};
lime_graphics_opengl_GL.deleteBuffer = function(buffer) {
	lime_graphics_opengl_GL.context.deleteBuffer(buffer);
};
lime_graphics_opengl_GL.deleteFramebuffer = function(framebuffer) {
	lime_graphics_opengl_GL.context.deleteFramebuffer(framebuffer);
};
lime_graphics_opengl_GL.deleteProgram = function(program) {
	lime_graphics_opengl_GL.context.deleteProgram(program);
};
lime_graphics_opengl_GL.deleteRenderbuffer = function(renderbuffer) {
	lime_graphics_opengl_GL.context.deleteRenderbuffer(renderbuffer);
};
lime_graphics_opengl_GL.deleteShader = function(shader) {
	lime_graphics_opengl_GL.context.deleteShader(shader);
};
lime_graphics_opengl_GL.deleteTexture = function(texture) {
	lime_graphics_opengl_GL.context.deleteTexture(texture);
};
lime_graphics_opengl_GL.depthFunc = function(func) {
	lime_graphics_opengl_GL.context.depthFunc(func);
};
lime_graphics_opengl_GL.depthMask = function(flag) {
	lime_graphics_opengl_GL.context.depthMask(flag);
};
lime_graphics_opengl_GL.depthRange = function(zNear,zFar) {
	lime_graphics_opengl_GL.context.depthRange(zNear,zFar);
};
lime_graphics_opengl_GL.detachShader = function(program,shader) {
	lime_graphics_opengl_GL.context.detachShader(program,shader);
};
lime_graphics_opengl_GL.disable = function(cap) {
	lime_graphics_opengl_GL.context.disable(cap);
};
lime_graphics_opengl_GL.disableVertexAttribArray = function(index) {
	lime_graphics_opengl_GL.context.disableVertexAttribArray(index);
};
lime_graphics_opengl_GL.drawArrays = function(mode,first,count) {
	lime_graphics_opengl_GL.context.drawArrays(mode,first,count);
};
lime_graphics_opengl_GL.drawElements = function(mode,count,type,offset) {
	lime_graphics_opengl_GL.context.drawElements(mode,count,type,offset);
};
lime_graphics_opengl_GL.enable = function(cap) {
	lime_graphics_opengl_GL.context.enable(cap);
};
lime_graphics_opengl_GL.enableVertexAttribArray = function(index) {
	lime_graphics_opengl_GL.context.enableVertexAttribArray(index);
};
lime_graphics_opengl_GL.finish = function() {
	lime_graphics_opengl_GL.context.finish();
};
lime_graphics_opengl_GL.flush = function() {
	lime_graphics_opengl_GL.context.flush();
};
lime_graphics_opengl_GL.framebufferRenderbuffer = function(target,attachment,renderbuffertarget,renderbuffer) {
	lime_graphics_opengl_GL.context.framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);
};
lime_graphics_opengl_GL.framebufferTexture2D = function(target,attachment,textarget,texture,level) {
	lime_graphics_opengl_GL.context.framebufferTexture2D(target,attachment,textarget,texture,level);
};
lime_graphics_opengl_GL.frontFace = function(mode) {
	lime_graphics_opengl_GL.context.frontFace(mode);
};
lime_graphics_opengl_GL.generateMipmap = function(target) {
	lime_graphics_opengl_GL.context.generateMipmap(target);
};
lime_graphics_opengl_GL.getActiveAttrib = function(program,index) {
	return lime_graphics_opengl_GL.context.getActiveAttrib(program,index);
};
lime_graphics_opengl_GL.getActiveUniform = function(program,index) {
	return lime_graphics_opengl_GL.context.getActiveUniform(program,index);
};
lime_graphics_opengl_GL.getAttachedShaders = function(program) {
	return lime_graphics_opengl_GL.context.getAttachedShaders(program);
};
lime_graphics_opengl_GL.getAttribLocation = function(program,name) {
	return lime_graphics_opengl_GL.context.getAttribLocation(program,name);
};
lime_graphics_opengl_GL.getBufferParameter = function(target,pname) {
	return lime_graphics_opengl_GL.context.getBufferParameter(target,pname);
};
lime_graphics_opengl_GL.getContextAttributes = function() {
	return lime_graphics_opengl_GL.context.getContextAttributes();
};
lime_graphics_opengl_GL.getError = function() {
	return lime_graphics_opengl_GL.context.getError();
};
lime_graphics_opengl_GL.getExtension = function(name) {
	return lime_graphics_opengl_GL.context.getExtension(name);
};
lime_graphics_opengl_GL.getFramebufferAttachmentParameter = function(target,attachment,pname) {
	return lime_graphics_opengl_GL.context.getFramebufferAttachmentParameter(target,attachment,pname);
};
lime_graphics_opengl_GL.getParameter = function(pname) {
	return lime_graphics_opengl_GL.context.getParameter(pname);
};
lime_graphics_opengl_GL.getProgramInfoLog = function(program) {
	return lime_graphics_opengl_GL.context.getProgramInfoLog(program);
};
lime_graphics_opengl_GL.getProgramParameter = function(program,pname) {
	return lime_graphics_opengl_GL.context.getProgramParameter(program,pname);
};
lime_graphics_opengl_GL.getRenderbufferParameter = function(target,pname) {
	return lime_graphics_opengl_GL.context.getRenderbufferParameter(target,pname);
};
lime_graphics_opengl_GL.getShaderInfoLog = function(shader) {
	return lime_graphics_opengl_GL.context.getShaderInfoLog(shader);
};
lime_graphics_opengl_GL.getShaderParameter = function(shader,pname) {
	return lime_graphics_opengl_GL.context.getShaderParameter(shader,pname);
};
lime_graphics_opengl_GL.getShaderPrecisionFormat = function(shadertype,precisiontype) {
	return lime_graphics_opengl_GL.context.getShaderPrecisionFormat(shadertype,precisiontype);
};
lime_graphics_opengl_GL.getShaderSource = function(shader) {
	return lime_graphics_opengl_GL.context.getShaderSource(shader);
};
lime_graphics_opengl_GL.getSupportedExtensions = function() {
	return lime_graphics_opengl_GL.context.getSupportedExtensions();
};
lime_graphics_opengl_GL.getTexParameter = function(target,pname) {
	return lime_graphics_opengl_GL.context.getTexParameter(target,pname);
};
lime_graphics_opengl_GL.getUniform = function(program,location) {
	return lime_graphics_opengl_GL.context.getUniform(program,location);
};
lime_graphics_opengl_GL.getUniformLocation = function(program,name) {
	return lime_graphics_opengl_GL.context.getUniformLocation(program,name);
};
lime_graphics_opengl_GL.getVertexAttrib = function(index,pname) {
	return lime_graphics_opengl_GL.context.getVertexAttrib(index,pname);
};
lime_graphics_opengl_GL.getVertexAttribOffset = function(index,pname) {
	return lime_graphics_opengl_GL.context.getVertexAttribOffset(index,pname);
};
lime_graphics_opengl_GL.hint = function(target,mode) {
	lime_graphics_opengl_GL.context.hint(target,mode);
};
lime_graphics_opengl_GL.isBuffer = function(buffer) {
	return lime_graphics_opengl_GL.context.isBuffer(buffer);
};
lime_graphics_opengl_GL.isContextLost = function() {
	return lime_graphics_opengl_GL.context.isContextLost();
};
lime_graphics_opengl_GL.isEnabled = function(cap) {
	return lime_graphics_opengl_GL.context.isEnabled(cap);
};
lime_graphics_opengl_GL.isFramebuffer = function(framebuffer) {
	return lime_graphics_opengl_GL.context.isFramebuffer(framebuffer);
};
lime_graphics_opengl_GL.isProgram = function(program) {
	return lime_graphics_opengl_GL.context.isProgram(program);
};
lime_graphics_opengl_GL.isRenderbuffer = function(renderbuffer) {
	return lime_graphics_opengl_GL.context.isRenderbuffer(renderbuffer);
};
lime_graphics_opengl_GL.isShader = function(shader) {
	return lime_graphics_opengl_GL.context.isShader(shader);
};
lime_graphics_opengl_GL.isTexture = function(texture) {
	return lime_graphics_opengl_GL.context.isTexture(texture);
};
lime_graphics_opengl_GL.lineWidth = function(width) {
	lime_graphics_opengl_GL.context.lineWidth(width);
};
lime_graphics_opengl_GL.linkProgram = function(program) {
	lime_graphics_opengl_GL.context.linkProgram(program);
};
lime_graphics_opengl_GL.pixelStorei = function(pname,param) {
	lime_graphics_opengl_GL.context.pixelStorei(pname,param);
};
lime_graphics_opengl_GL.polygonOffset = function(factor,units) {
	lime_graphics_opengl_GL.context.polygonOffset(factor,units);
};
lime_graphics_opengl_GL.readPixels = function(x,y,width,height,format,type,pixels) {
	lime_graphics_opengl_GL.context.readPixels(x,y,width,height,format,type,pixels);
};
lime_graphics_opengl_GL.renderbufferStorage = function(target,internalformat,width,height) {
	lime_graphics_opengl_GL.context.renderbufferStorage(target,internalformat,width,height);
};
lime_graphics_opengl_GL.sampleCoverage = function(value,invert) {
	lime_graphics_opengl_GL.context.sampleCoverage(value,invert);
};
lime_graphics_opengl_GL.scissor = function(x,y,width,height) {
	lime_graphics_opengl_GL.context.scissor(x,y,width,height);
};
lime_graphics_opengl_GL.shaderSource = function(shader,source) {
	lime_graphics_opengl_GL.context.shaderSource(shader,source);
};
lime_graphics_opengl_GL.stencilFunc = function(func,ref,mask) {
	lime_graphics_opengl_GL.context.stencilFunc(func,ref,mask);
};
lime_graphics_opengl_GL.stencilFuncSeparate = function(face,func,ref,mask) {
	lime_graphics_opengl_GL.context.stencilFuncSeparate(face,func,ref,mask);
};
lime_graphics_opengl_GL.stencilMask = function(mask) {
	lime_graphics_opengl_GL.context.stencilMask(mask);
};
lime_graphics_opengl_GL.stencilMaskSeparate = function(face,mask) {
	lime_graphics_opengl_GL.context.stencilMaskSeparate(face,mask);
};
lime_graphics_opengl_GL.stencilOp = function(fail,zfail,zpass) {
	lime_graphics_opengl_GL.context.stencilOp(fail,zfail,zpass);
};
lime_graphics_opengl_GL.stencilOpSeparate = function(face,fail,zfail,zpass) {
	lime_graphics_opengl_GL.context.stencilOpSeparate(face,fail,zfail,zpass);
};
lime_graphics_opengl_GL.texImage2D = function(target,level,internalformat,width,height,border,format,type,pixels) {
	lime_graphics_opengl_GL.context.texImage2D(target,level,internalformat,width,height,border,format,type,pixels);
};
lime_graphics_opengl_GL.texParameterf = function(target,pname,param) {
	lime_graphics_opengl_GL.context.texParameterf(target,pname,param);
};
lime_graphics_opengl_GL.texParameteri = function(target,pname,param) {
	lime_graphics_opengl_GL.context.texParameteri(target,pname,param);
};
lime_graphics_opengl_GL.texSubImage2D = function(target,level,xoffset,yoffset,width,height,format,type,pixels) {
	lime_graphics_opengl_GL.context.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels);
};
lime_graphics_opengl_GL.uniform1f = function(location,x) {
	lime_graphics_opengl_GL.context.uniform1f(location,x);
};
lime_graphics_opengl_GL.uniform1fv = function(location,x) {
	lime_graphics_opengl_GL.context.uniform1fv(location,x);
};
lime_graphics_opengl_GL.uniform1i = function(location,x) {
	lime_graphics_opengl_GL.context.uniform1i(location,x);
};
lime_graphics_opengl_GL.uniform1iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform1iv(location,v);
};
lime_graphics_opengl_GL.uniform2f = function(location,x,y) {
	lime_graphics_opengl_GL.context.uniform2f(location,x,y);
};
lime_graphics_opengl_GL.uniform2fv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform2fv(location,v);
};
lime_graphics_opengl_GL.uniform2i = function(location,x,y) {
	lime_graphics_opengl_GL.context.uniform2i(location,x,y);
};
lime_graphics_opengl_GL.uniform2iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform2iv(location,v);
};
lime_graphics_opengl_GL.uniform3f = function(location,x,y,z) {
	lime_graphics_opengl_GL.context.uniform3f(location,x,y,z);
};
lime_graphics_opengl_GL.uniform3fv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform3fv(location,v);
};
lime_graphics_opengl_GL.uniform3i = function(location,x,y,z) {
	lime_graphics_opengl_GL.context.uniform3i(location,x,y,z);
};
lime_graphics_opengl_GL.uniform3iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform3iv(location,v);
};
lime_graphics_opengl_GL.uniform4f = function(location,x,y,z,w) {
	lime_graphics_opengl_GL.context.uniform4f(location,x,y,z,w);
};
lime_graphics_opengl_GL.uniform4fv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform4fv(location,v);
};
lime_graphics_opengl_GL.uniform4i = function(location,x,y,z,w) {
	lime_graphics_opengl_GL.context.uniform4i(location,x,y,z,w);
};
lime_graphics_opengl_GL.uniform4iv = function(location,v) {
	lime_graphics_opengl_GL.context.uniform4iv(location,v);
};
lime_graphics_opengl_GL.uniformMatrix2fv = function(location,transpose,v) {
	lime_graphics_opengl_GL.context.uniformMatrix2fv(location,transpose,v);
};
lime_graphics_opengl_GL.uniformMatrix3fv = function(location,transpose,v) {
	lime_graphics_opengl_GL.context.uniformMatrix3fv(location,transpose,v);
};
lime_graphics_opengl_GL.uniformMatrix4fv = function(location,transpose,v) {
	lime_graphics_opengl_GL.context.uniformMatrix4fv(location,transpose,v);
};
lime_graphics_opengl_GL.useProgram = function(program) {
	lime_graphics_opengl_GL.context.useProgram(program);
};
lime_graphics_opengl_GL.validateProgram = function(program) {
	lime_graphics_opengl_GL.context.validateProgram(program);
};
lime_graphics_opengl_GL.vertexAttrib1f = function(indx,x) {
	lime_graphics_opengl_GL.context.vertexAttrib1f(indx,x);
};
lime_graphics_opengl_GL.vertexAttrib1fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib1fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttrib2f = function(indx,x,y) {
	lime_graphics_opengl_GL.context.vertexAttrib2f(indx,x,y);
};
lime_graphics_opengl_GL.vertexAttrib2fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib2fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttrib3f = function(indx,x,y,z) {
	lime_graphics_opengl_GL.context.vertexAttrib3f(indx,x,y,z);
};
lime_graphics_opengl_GL.vertexAttrib3fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib3fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttrib4f = function(indx,x,y,z,w) {
	lime_graphics_opengl_GL.context.vertexAttrib4f(indx,x,y,z,w);
};
lime_graphics_opengl_GL.vertexAttrib4fv = function(indx,values) {
	lime_graphics_opengl_GL.context.vertexAttrib4fv(indx,values);
};
lime_graphics_opengl_GL.vertexAttribPointer = function(indx,size,type,normalized,stride,offset) {
	lime_graphics_opengl_GL.context.vertexAttribPointer(indx,size,type,normalized,stride,offset);
};
lime_graphics_opengl_GL.viewport = function(x,y,width,height) {
	lime_graphics_opengl_GL.context.viewport(x,y,width,height);
};
lime_graphics_opengl_GL.get_version = function() {
	return 2;
};
var lime_graphics_utils_ImageCanvasUtil = function() { };
$hxClasses["lime.graphics.utils.ImageCanvasUtil"] = lime_graphics_utils_ImageCanvasUtil;
lime_graphics_utils_ImageCanvasUtil.__name__ = ["lime","graphics","utils","ImageCanvasUtil"];
lime_graphics_utils_ImageCanvasUtil.colorTransform = function(image,rect,colorMatrix) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.colorTransform(image,rect,colorMatrix);
};
lime_graphics_utils_ImageCanvasUtil.convertToCanvas = function(image) {
	var buffer = image.buffer;
	if(buffer.__srcImage != null) {
		if(buffer.__srcCanvas == null) {
			lime_graphics_utils_ImageCanvasUtil.createCanvas(image,buffer.__srcImage.width,buffer.__srcImage.height);
			buffer.__srcContext.drawImage(buffer.__srcImage,0,0);
		}
		buffer.__srcImage = null;
	} else if(buffer.data != null && buffer.__srcCanvas == null) {
		lime_graphics_utils_ImageCanvasUtil.createCanvas(image,buffer.width,buffer.height);
		lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	} else if(buffer.data == null && buffer.__srcImageData != null) buffer.data = buffer.__srcImageData.data;
};
lime_graphics_utils_ImageCanvasUtil.convertToData = function(image) {
	if(image.buffer.data == null) {
		lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
		lime_graphics_utils_ImageCanvasUtil.sync(image,false);
		lime_graphics_utils_ImageCanvasUtil.createImageData(image);
		image.buffer.__srcCanvas = null;
		image.buffer.__srcContext = null;
	}
};
lime_graphics_utils_ImageCanvasUtil.copyChannel = function(image,sourceImage,sourceRect,destPoint,sourceChannel,destChannel) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.createImageData(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.copyChannel(image,sourceImage,sourceRect,destPoint,sourceChannel,destChannel);
};
lime_graphics_utils_ImageCanvasUtil.copyPixels = function(image,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha) {
	if(mergeAlpha == null) mergeAlpha = false;
	if(destPoint == null || destPoint.x >= image.width || destPoint.y >= image.height || sourceRect == null || sourceRect.width < 1 || sourceRect.height < 1) return;
	if(alphaImage != null && alphaImage.get_transparent()) {
		if(alphaPoint == null) alphaPoint = new lime_math_Vector2();
		var tempData = image.clone();
		tempData.copyChannel(alphaImage,new lime_math_Rectangle(alphaPoint.x,alphaPoint.y,sourceRect.width,sourceRect.height),new lime_math_Vector2(sourceRect.x,sourceRect.y),lime_graphics_ImageChannel.ALPHA,lime_graphics_ImageChannel.ALPHA);
		sourceImage = tempData;
	}
	lime_graphics_utils_ImageCanvasUtil.sync(image,true);
	if(!mergeAlpha) {
		if(image.get_transparent() && sourceImage.get_transparent()) image.buffer.__srcContext.clearRect(destPoint.x + image.offsetX,destPoint.y + image.offsetY,sourceRect.width + image.offsetX,sourceRect.height + image.offsetY);
	}
	lime_graphics_utils_ImageCanvasUtil.sync(sourceImage,false);
	if(sourceImage.buffer.get_src() != null) image.buffer.__srcContext.drawImage(sourceImage.buffer.get_src(),sourceRect.x + sourceImage.offsetX | 0,sourceRect.y + sourceImage.offsetY | 0,sourceRect.width | 0,sourceRect.height | 0,destPoint.x + image.offsetX | 0,destPoint.y + image.offsetY | 0,sourceRect.width | 0,sourceRect.height | 0);
};
lime_graphics_utils_ImageCanvasUtil.createCanvas = function(image,width,height) {
	var buffer = image.buffer;
	if(buffer.__srcCanvas == null) {
		buffer.__srcCanvas = window.document.createElement("canvas");
		buffer.__srcCanvas.width = width;
		buffer.__srcCanvas.height = height;
		if(!image.get_transparent()) {
			if(!image.get_transparent()) buffer.__srcCanvas.setAttribute("moz-opaque","true");
			buffer.__srcContext = buffer.__srcCanvas.getContext ("2d", { alpha: false });
		} else buffer.__srcContext = buffer.__srcCanvas.getContext("2d");
		buffer.__srcContext.mozImageSmoothingEnabled = false;
		buffer.__srcContext.msImageSmoothingEnabled = false;
		buffer.__srcContext.imageSmoothingEnabled = false;
	}
};
lime_graphics_utils_ImageCanvasUtil.createImageData = function(image) {
	var buffer = image.buffer;
	if(buffer.__srcImageData == null) {
		if(buffer.data == null) {
			buffer.__srcImageData = buffer.__srcContext.getImageData(0,0,buffer.width,buffer.height);
			var elements = buffer.__srcImageData.data.buffer;
			var this1;
			if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
			buffer.data = this1;
		} else {
			buffer.__srcImageData = buffer.__srcContext.createImageData(buffer.width,buffer.height);
			buffer.__srcImageData.data.set(buffer.data);
		}
		buffer.data = buffer.__srcImageData.data;
	}
};
lime_graphics_utils_ImageCanvasUtil.fillRect = function(image,rect,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.sync(image,true);
	if(rect.x == 0 && rect.y == 0 && rect.width == image.width && rect.height == image.height) {
		if(image.get_transparent() && (color & 255) == 0) {
			image.buffer.__srcCanvas.width = image.buffer.width;
			return;
		}
	}
	var r;
	var g;
	var b;
	var a;
	if(format == 1) {
		r = color >> 16 & 255;
		g = color >> 8 & 255;
		b = color & 255;
		if(image.get_transparent()) a = color >> 24 & 255; else a = 255;
	} else {
		r = color >> 24 & 255;
		g = color >> 16 & 255;
		b = color >> 8 & 255;
		if(image.get_transparent()) a = color & 255; else a = 255;
	}
	image.buffer.__srcContext.fillStyle = "rgba(" + r + ", " + g + ", " + b + ", " + a / 255 + ")";
	image.buffer.__srcContext.fillRect(rect.x + image.offsetX,rect.y + image.offsetY,rect.width + image.offsetX,rect.height + image.offsetY);
};
lime_graphics_utils_ImageCanvasUtil.floodFill = function(image,x,y,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.floodFill(image,x,y,color,format);
};
lime_graphics_utils_ImageCanvasUtil.getPixel = function(image,x,y,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	return lime_graphics_utils_ImageDataUtil.getPixel(image,x,y,format);
};
lime_graphics_utils_ImageCanvasUtil.getPixel32 = function(image,x,y,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	return lime_graphics_utils_ImageDataUtil.getPixel32(image,x,y,format);
};
lime_graphics_utils_ImageCanvasUtil.getPixels = function(image,rect,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	return lime_graphics_utils_ImageDataUtil.getPixels(image,rect,format);
};
lime_graphics_utils_ImageCanvasUtil.merge = function(image,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.createImageData(sourceImage);
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.merge(image,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier);
};
lime_graphics_utils_ImageCanvasUtil.resize = function(image,newWidth,newHeight) {
	var buffer = image.buffer;
	if(buffer.__srcCanvas == null) {
		lime_graphics_utils_ImageCanvasUtil.createCanvas(image,newWidth,newHeight);
		buffer.__srcContext.drawImage(buffer.get_src(),0,0,newWidth,newHeight);
	} else {
		lime_graphics_utils_ImageCanvasUtil.sync(image,true);
		var sourceCanvas = buffer.__srcCanvas;
		buffer.__srcCanvas = null;
		lime_graphics_utils_ImageCanvasUtil.createCanvas(image,newWidth,newHeight);
		buffer.__srcContext.drawImage(sourceCanvas,0,0,newWidth,newHeight);
	}
};
lime_graphics_utils_ImageCanvasUtil.scroll = function(image,x,y) {
	if(x % image.width == 0 && y % image.height == 0) return;
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.sync(image,true);
	image.buffer.__srcContext.clearRect(x,y,image.width,image.height);
	image.buffer.__srcContext.drawImage(image.buffer.__srcCanvas,x,y);
};
lime_graphics_utils_ImageCanvasUtil.setPixel = function(image,x,y,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.setPixel(image,x,y,color,format);
};
lime_graphics_utils_ImageCanvasUtil.setPixel32 = function(image,x,y,color,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.setPixel32(image,x,y,color,format);
};
lime_graphics_utils_ImageCanvasUtil.setPixels = function(image,rect,bytes,format) {
	lime_graphics_utils_ImageCanvasUtil.convertToCanvas(image);
	lime_graphics_utils_ImageCanvasUtil.createImageData(image);
	lime_graphics_utils_ImageDataUtil.setPixels(image,rect,bytes,format);
};
lime_graphics_utils_ImageCanvasUtil.sync = function(image,clear) {
	if(image.dirty && image.buffer.__srcImageData != null && image.type != lime_graphics_ImageType.DATA) {
		image.buffer.__srcContext.putImageData(image.buffer.__srcImageData,0,0);
		image.buffer.data = null;
		image.dirty = false;
	}
	if(clear) {
		image.buffer.__srcImageData = null;
		image.buffer.data = null;
	}
};
var lime_graphics_utils_ImageDataUtil = function() { };
$hxClasses["lime.graphics.utils.ImageDataUtil"] = lime_graphics_utils_ImageDataUtil;
lime_graphics_utils_ImageDataUtil.__name__ = ["lime","graphics","utils","ImageDataUtil"];
lime_graphics_utils_ImageDataUtil.colorTransform = function(image,rect,colorMatrix) {
	var data = image.buffer.data;
	if(data == null) return;
	var format = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var alphaTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getAlphaTable(colorMatrix);
	var redTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getRedTable(colorMatrix);
	var greenTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getGreenTable(colorMatrix);
	var blueTable = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getBlueTable(colorMatrix);
	var row;
	var offset;
	var pixel;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		row = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			offset = row + x * 4;
			switch(format) {
			case 2:
				pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
				break;
			case 0:
				pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
				break;
			case 1:
				pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
				break;
			}
			if(premultiplied) {
				if((pixel & 255) != 0 && (pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
					var r;
					var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
				}
			}
			pixel = (redTable[pixel >> 24 & 255] & 255) << 24 | (greenTable[pixel >> 16 & 255] & 255) << 16 | (blueTable[pixel >> 8 & 255] & 255) << 8 | alphaTable[pixel & 255] & 255;
			if(premultiplied) {
				if((pixel & 255) == 0) {
					if(pixel != 0) pixel = 0;
				} else if((pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
					pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
				}
			}
			switch(format) {
			case 2:
				data[offset] = pixel >> 8 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 24 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 0:
				data[offset] = pixel >> 24 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 8 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 1:
				data[offset] = pixel & 255;
				data[offset + 1] = pixel >> 24 & 255;
				data[offset + 2] = pixel >> 16 & 255;
				data[offset + 3] = pixel >> 8 & 255;
				break;
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.copyChannel = function(image,sourceImage,sourceRect,destPoint,sourceChannel,destChannel) {
	var destIdx;
	switch(destChannel[1]) {
	case 0:
		destIdx = 0;
		break;
	case 1:
		destIdx = 1;
		break;
	case 2:
		destIdx = 2;
		break;
	case 3:
		destIdx = 3;
		break;
	}
	var srcIdx;
	switch(sourceChannel[1]) {
	case 0:
		srcIdx = 0;
		break;
	case 1:
		srcIdx = 1;
		break;
	case 2:
		srcIdx = 2;
		break;
	case 3:
		srcIdx = 3;
		break;
	}
	var srcData = sourceImage.buffer.data;
	var destData = image.buffer.data;
	if(srcData == null || destData == null) return;
	var srcView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var destView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,new lime_math_Rectangle(destPoint.x,destPoint.y,srcView.width,srcView.height));
	var srcFormat = sourceImage.buffer.format;
	var destFormat = image.buffer.format;
	var srcPremultiplied = sourceImage.buffer.premultiplied;
	var destPremultiplied = image.buffer.premultiplied;
	var srcPosition;
	var destPosition;
	var srcPixel;
	var destPixel;
	var value = 0;
	var _g1 = 0;
	var _g = destView.height;
	while(_g1 < _g) {
		var y = _g1++;
		srcPosition = srcView.offset + srcView.stride * y;
		destPosition = destView.offset + destView.stride * y;
		var _g3 = 0;
		var _g2 = destView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			switch(srcFormat) {
			case 2:
				srcPixel = (srcData[srcPosition + 2] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 0:
				srcPixel = (srcData[srcPosition] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition + 2] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 1:
				srcPixel = (srcData[srcPosition + 1] & 255) << 24 | (srcData[srcPosition + 2] & 255) << 16 | (srcData[srcPosition + 3] & 255) << 8 | srcData[srcPosition] & 255;
				break;
			}
			if(srcPremultiplied) {
				if((srcPixel & 255) != 0 && (srcPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (srcPixel & 255);
					var r;
					var idx = Math.round((srcPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((srcPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((srcPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					srcPixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | srcPixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 0:
				destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 1:
				destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
				break;
			}
			if(destPremultiplied) {
				if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
					var r1;
					var idx3 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
					var g1;
					var idx4 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
					var b1;
					var idx5 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
					destPixel = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			switch(srcIdx) {
			case 0:
				value = srcPixel >> 24 & 255;
				break;
			case 1:
				value = srcPixel >> 16 & 255;
				break;
			case 2:
				value = srcPixel >> 8 & 255;
				break;
			case 3:
				value = srcPixel & 255;
				break;
			}
			switch(destIdx) {
			case 0:
				destPixel = (value & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
				value;
				break;
			case 1:
				destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
				value;
				break;
			case 2:
				destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value & 255) << 8 | destPixel & 255 & 255;
				value;
				break;
			case 3:
				destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value & 255;
				value;
				break;
			}
			if(destPremultiplied) {
				if((destPixel & 255) == 0) {
					if(destPixel != 0) destPixel = 0;
				} else if((destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
					destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destData[destPosition] = destPixel >> 8 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 24 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 0:
				destData[destPosition] = destPixel >> 24 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 8 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 1:
				destData[destPosition] = destPixel & 255;
				destData[destPosition + 1] = destPixel >> 24 & 255;
				destData[destPosition + 2] = destPixel >> 16 & 255;
				destData[destPosition + 3] = destPixel >> 8 & 255;
				break;
			}
			srcPosition += 4;
			destPosition += 4;
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.copyPixels = function(image,sourceImage,sourceRect,destPoint,alphaImage,alphaPoint,mergeAlpha) {
	if(mergeAlpha == null) mergeAlpha = false;
	var sourceData = sourceImage.buffer.data;
	var destData = image.buffer.data;
	if(sourceData == null || destData == null) return;
	var sourceView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var destView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,new lime_math_Rectangle(destPoint.x,destPoint.y,sourceView.width,sourceView.height));
	var sourceFormat = sourceImage.buffer.format;
	var destFormat = image.buffer.format;
	var sourcePremultiplied = sourceImage.buffer.premultiplied;
	var destPremultiplied = image.buffer.premultiplied;
	var sourcePosition;
	var destPosition;
	var sourcePixel;
	if(!mergeAlpha || !sourceImage.get_transparent()) {
		var _g1 = 0;
		var _g = destView.height;
		while(_g1 < _g) {
			var y = _g1++;
			sourcePosition = sourceView.offset + sourceView.stride * y;
			destPosition = destView.offset + destView.stride * y;
			var _g3 = 0;
			var _g2 = destView.width;
			while(_g3 < _g2) {
				var x = _g3++;
				switch(sourceFormat) {
				case 2:
					sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
					break;
				case 0:
					sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
					break;
				case 1:
					sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
					break;
				}
				if(sourcePremultiplied) {
					if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
						var r;
						var idx = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
						r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
						var g;
						var idx1 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
						g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
						var b;
						var idx2 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
						b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
						sourcePixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | sourcePixel & 255 & 255;
					}
				}
				if(destPremultiplied) {
					if((sourcePixel & 255) == 0) {
						if(sourcePixel != 0) sourcePixel = 0;
					} else if((sourcePixel & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[sourcePixel & 255];
						sourcePixel = ((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | sourcePixel & 255 & 255;
					}
				}
				switch(destFormat) {
				case 2:
					destData[destPosition] = sourcePixel >> 8 & 255;
					destData[destPosition + 1] = sourcePixel >> 16 & 255;
					destData[destPosition + 2] = sourcePixel >> 24 & 255;
					destData[destPosition + 3] = sourcePixel & 255;
					break;
				case 0:
					destData[destPosition] = sourcePixel >> 24 & 255;
					destData[destPosition + 1] = sourcePixel >> 16 & 255;
					destData[destPosition + 2] = sourcePixel >> 8 & 255;
					destData[destPosition + 3] = sourcePixel & 255;
					break;
				case 1:
					destData[destPosition] = sourcePixel & 255;
					destData[destPosition + 1] = sourcePixel >> 24 & 255;
					destData[destPosition + 2] = sourcePixel >> 16 & 255;
					destData[destPosition + 3] = sourcePixel >> 8 & 255;
					break;
				}
				sourcePosition += 4;
				destPosition += 4;
			}
		}
	} else {
		var sourceAlpha;
		var destAlpha;
		var oneMinusSourceAlpha;
		var blendAlpha;
		var destPixel;
		if(alphaImage == null) {
			var _g11 = 0;
			var _g4 = destView.height;
			while(_g11 < _g4) {
				var y1 = _g11++;
				sourcePosition = sourceView.offset + sourceView.stride * y1;
				destPosition = destView.offset + destView.stride * y1;
				var _g31 = 0;
				var _g21 = destView.width;
				while(_g31 < _g21) {
					var x1 = _g31++;
					switch(sourceFormat) {
					case 2:
						sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 0:
						sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 1:
						sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
						break;
					}
					if(sourcePremultiplied) {
						if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
							var r1;
							var idx3 = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
							var g1;
							var idx4 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
							var b1;
							var idx5 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
							sourcePixel = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | sourcePixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 0:
						destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 1:
						destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
						break;
					}
					if(destPremultiplied) {
						if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
							var r2;
							var idx6 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx6];
							var g2;
							var idx7 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx7];
							var b2;
							var idx8 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx8];
							destPixel = (r2 & 255) << 24 | (g2 & 255) << 16 | (b2 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					sourceAlpha = (sourcePixel & 255) / 255.0;
					destAlpha = (destPixel & 255) / 255.0;
					oneMinusSourceAlpha = 1 - sourceAlpha;
					blendAlpha = sourceAlpha + destAlpha * oneMinusSourceAlpha;
					if(blendAlpha == 0) destPixel = 0; else {
						var value;
						var idx9 = Math.round(((sourcePixel >> 24 & 255) * sourceAlpha + (destPixel >> 24 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx9];
						destPixel = (value & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value;
						var value1;
						var idx10 = Math.round(((sourcePixel >> 16 & 255) * sourceAlpha + (destPixel >> 16 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx10];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value1 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value1;
						var value2;
						var idx11 = Math.round(((sourcePixel >> 8 & 255) * sourceAlpha + (destPixel >> 8 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value2 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx11];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value2 & 255) << 8 | destPixel & 255 & 255;
						value2;
						var value3;
						var idx12 = Math.round(blendAlpha * 255.0);
						value3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx12];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value3 & 255;
						value3;
					}
					if(destPremultiplied) {
						if((destPixel & 255) == 0) {
							if(destPixel != 0) destPixel = 0;
						} else if((destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
							destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destData[destPosition] = destPixel >> 8 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 24 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 0:
						destData[destPosition] = destPixel >> 24 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 8 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 1:
						destData[destPosition] = destPixel & 255;
						destData[destPosition + 1] = destPixel >> 24 & 255;
						destData[destPosition + 2] = destPixel >> 16 & 255;
						destData[destPosition + 3] = destPixel >> 8 & 255;
						break;
					}
					sourcePosition += 4;
					destPosition += 4;
				}
			}
		} else {
			if(alphaPoint == null) alphaPoint = new lime_math_Vector2();
			var alphaData = alphaImage.buffer.data;
			var alphaFormat = alphaImage.buffer.format;
			var alphaPremultiplied = alphaImage.buffer.premultiplied;
			var alphaView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(alphaImage,new lime_math_Rectangle(alphaPoint.x,alphaPoint.y,destView.width,destView.height));
			var alphaPosition;
			var alphaPixel;
			var _g12 = 0;
			var _g5 = alphaView.height;
			while(_g12 < _g5) {
				var y2 = _g12++;
				sourcePosition = sourceView.offset + sourceView.stride * y2;
				destPosition = destView.offset + destView.stride * y2;
				alphaPosition = alphaView.offset + alphaView.stride * y2;
				var _g32 = 0;
				var _g22 = alphaView.width;
				while(_g32 < _g22) {
					var x2 = _g32++;
					switch(sourceFormat) {
					case 2:
						sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 0:
						sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
						break;
					case 1:
						sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
						break;
					}
					if(sourcePremultiplied) {
						if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
							var r3;
							var idx13 = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx13];
							var g3;
							var idx14 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx14];
							var b3;
							var idx15 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b3 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx15];
							sourcePixel = (r3 & 255) << 24 | (g3 & 255) << 16 | (b3 & 255) << 8 | sourcePixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 0:
						destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
						break;
					case 1:
						destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
						break;
					}
					if(destPremultiplied) {
						if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
							var r4;
							var idx16 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx16];
							var g4;
							var idx17 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx17];
							var b4;
							var idx18 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx18];
							destPixel = (r4 & 255) << 24 | (g4 & 255) << 16 | (b4 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					switch(alphaFormat) {
					case 2:
						alphaPixel = (alphaData[alphaPosition + 2] & 255) << 24 | (alphaData[alphaPosition + 1] & 255) << 16 | (alphaData[alphaPosition] & 255) << 8 | alphaData[alphaPosition + 3] & 255;
						break;
					case 0:
						alphaPixel = (alphaData[alphaPosition] & 255) << 24 | (alphaData[alphaPosition + 1] & 255) << 16 | (alphaData[alphaPosition + 2] & 255) << 8 | alphaData[alphaPosition + 3] & 255;
						break;
					case 1:
						alphaPixel = (alphaData[alphaPosition + 1] & 255) << 24 | (alphaData[alphaPosition + 2] & 255) << 16 | (alphaData[alphaPosition + 3] & 255) << 8 | alphaData[alphaPosition] & 255;
						break;
					}
					if(alphaPremultiplied) {
						if((alphaPixel & 255) != 0 && (alphaPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (alphaPixel & 255);
							var r5;
							var idx19 = Math.round((alphaPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							r5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx19];
							var g5;
							var idx20 = Math.round((alphaPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							g5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx20];
							var b5;
							var idx21 = Math.round((alphaPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
							b5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx21];
							alphaPixel = (r5 & 255) << 24 | (g5 & 255) << 16 | (b5 & 255) << 8 | alphaPixel & 255 & 255;
						}
					}
					sourceAlpha = (alphaPixel & 255) / 255;
					destAlpha = (destPixel & 255) / 255;
					oneMinusSourceAlpha = 1 - sourceAlpha;
					blendAlpha = sourceAlpha + destAlpha * oneMinusSourceAlpha;
					if(blendAlpha == 0) destPixel = 0; else {
						var value4;
						var idx22 = Math.round(((sourcePixel >> 24 & 255) * sourceAlpha + (destPixel >> 24 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value4 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx22];
						destPixel = (value4 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value4;
						var value5;
						var idx23 = Math.round(((sourcePixel >> 16 & 255) * sourceAlpha + (destPixel >> 16 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value5 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx23];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value5 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
						value5;
						var value6;
						var idx24 = Math.round(((sourcePixel >> 8 & 255) * sourceAlpha + (destPixel >> 8 & 255) * destAlpha * oneMinusSourceAlpha) / blendAlpha);
						value6 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx24];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value6 & 255) << 8 | destPixel & 255 & 255;
						value6;
						var value7;
						var idx25 = Math.round(blendAlpha * 255.0);
						value7 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx25];
						destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value7 & 255;
						value7;
					}
					if(destPremultiplied) {
						if((destPixel & 255) == 0) {
							if(destPixel != 0) destPixel = 0;
						} else if((destPixel & 255) != 255) {
							lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
							destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
						}
					}
					switch(destFormat) {
					case 2:
						destData[destPosition] = destPixel >> 8 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 24 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 0:
						destData[destPosition] = destPixel >> 24 & 255;
						destData[destPosition + 1] = destPixel >> 16 & 255;
						destData[destPosition + 2] = destPixel >> 8 & 255;
						destData[destPosition + 3] = destPixel & 255;
						break;
					case 1:
						destData[destPosition] = destPixel & 255;
						destData[destPosition + 1] = destPixel >> 24 & 255;
						destData[destPosition + 2] = destPixel >> 16 & 255;
						destData[destPosition + 3] = destPixel >> 8 & 255;
						break;
					}
					sourcePosition += 4;
					destPosition += 4;
				}
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.fillRect = function(image,rect,color,format) {
	var fillColor;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			fillColor = rgba;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba1 = 0;
			rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			fillColor = rgba1;
		}
		break;
	default:
		fillColor = color;
	}
	if(!image.get_transparent()) {
		fillColor = (fillColor >> 24 & 255 & 255) << 24 | (fillColor >> 16 & 255 & 255) << 16 | (fillColor >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	var data = image.buffer.data;
	if(data == null) return;
	var format1 = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var row;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		row = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			var offset = row + x * 4;
			if(premultiplied) {
				if((fillColor & 255) == 0) {
					if(fillColor != 0) fillColor = 0;
				} else if((fillColor & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[fillColor & 255];
					fillColor = ((fillColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((fillColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((fillColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | fillColor & 255 & 255;
				}
			}
			switch(format1) {
			case 2:
				data[offset] = fillColor >> 8 & 255;
				data[offset + 1] = fillColor >> 16 & 255;
				data[offset + 2] = fillColor >> 24 & 255;
				data[offset + 3] = fillColor & 255;
				break;
			case 0:
				data[offset] = fillColor >> 24 & 255;
				data[offset + 1] = fillColor >> 16 & 255;
				data[offset + 2] = fillColor >> 8 & 255;
				data[offset + 3] = fillColor & 255;
				break;
			case 1:
				data[offset] = fillColor & 255;
				data[offset + 1] = fillColor >> 24 & 255;
				data[offset + 2] = fillColor >> 16 & 255;
				data[offset + 3] = fillColor >> 8 & 255;
				break;
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.floodFill = function(image,x,y,color,format) {
	var data = image.buffer.data;
	if(data == null) return;
	if(format == 1) color = (color & 16777215) << 8 | color >> 24 & 255;
	var format1 = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var fillColor = color;
	var hitColor;
	var offset = (y + image.offsetY) * (image.buffer.width * 4) + (x + image.offsetX) * 4;
	switch(format1) {
	case 2:
		hitColor = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		hitColor = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		hitColor = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(premultiplied) {
		if((hitColor & 255) != 0 && (hitColor & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (hitColor & 255);
			var r;
			var idx = Math.round((hitColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((hitColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((hitColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			hitColor = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | hitColor & 255 & 255;
		}
	}
	if(!image.get_transparent()) {
		fillColor = (fillColor >> 24 & 255 & 255) << 24 | (fillColor >> 16 & 255 & 255) << 16 | (fillColor >> 8 & 255 & 255) << 8 | 255;
		255;
		hitColor = (hitColor >> 24 & 255 & 255) << 24 | (hitColor >> 16 & 255 & 255) << 16 | (hitColor >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	if(fillColor == hitColor) return;
	var dx = [0,-1,1,0];
	var dy = [-1,0,0,1];
	var minX = -image.offsetX;
	var minY = -image.offsetY;
	var maxX = minX + image.width;
	var maxY = minY + image.height;
	var queue = [];
	queue.push(x);
	queue.push(y);
	var curPointX;
	var curPointY;
	var nextPointX;
	var nextPointY;
	var nextPointOffset;
	var readColor;
	while(queue.length > 0) {
		curPointY = queue.pop();
		curPointX = queue.pop();
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			nextPointX = curPointX + dx[i];
			nextPointY = curPointY + dy[i];
			if(nextPointX < minX || nextPointY < minY || nextPointX >= maxX || nextPointY >= maxY) continue;
			nextPointOffset = (nextPointY * image.width + nextPointX) * 4;
			switch(format1) {
			case 2:
				readColor = (data[nextPointOffset + 2] & 255) << 24 | (data[nextPointOffset + 1] & 255) << 16 | (data[nextPointOffset] & 255) << 8 | data[nextPointOffset + 3] & 255;
				break;
			case 0:
				readColor = (data[nextPointOffset] & 255) << 24 | (data[nextPointOffset + 1] & 255) << 16 | (data[nextPointOffset + 2] & 255) << 8 | data[nextPointOffset + 3] & 255;
				break;
			case 1:
				readColor = (data[nextPointOffset + 1] & 255) << 24 | (data[nextPointOffset + 2] & 255) << 16 | (data[nextPointOffset + 3] & 255) << 8 | data[nextPointOffset] & 255;
				break;
			}
			if(premultiplied) {
				if((readColor & 255) != 0 && (readColor & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (readColor & 255);
					var r1;
					var idx3 = Math.round((readColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
					var g1;
					var idx4 = Math.round((readColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
					var b1;
					var idx5 = Math.round((readColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
					readColor = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | readColor & 255 & 255;
				}
			}
			if(readColor == hitColor) {
				if(premultiplied) {
					if((fillColor & 255) == 0) {
						if(fillColor != 0) fillColor = 0;
					} else if((fillColor & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[fillColor & 255];
						fillColor = ((fillColor >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((fillColor >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((fillColor >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | fillColor & 255 & 255;
					}
				}
				switch(format1) {
				case 2:
					data[nextPointOffset] = fillColor >> 8 & 255;
					data[nextPointOffset + 1] = fillColor >> 16 & 255;
					data[nextPointOffset + 2] = fillColor >> 24 & 255;
					data[nextPointOffset + 3] = fillColor & 255;
					break;
				case 0:
					data[nextPointOffset] = fillColor >> 24 & 255;
					data[nextPointOffset + 1] = fillColor >> 16 & 255;
					data[nextPointOffset + 2] = fillColor >> 8 & 255;
					data[nextPointOffset + 3] = fillColor & 255;
					break;
				case 1:
					data[nextPointOffset] = fillColor & 255;
					data[nextPointOffset + 1] = fillColor >> 24 & 255;
					data[nextPointOffset + 2] = fillColor >> 16 & 255;
					data[nextPointOffset + 3] = fillColor >> 8 & 255;
					break;
				}
				queue.push(nextPointX);
				queue.push(nextPointY);
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.getColorBoundsRect = function(image,mask,color,findColor,format) {
	if(findColor == null) findColor = true;
	var left = image.width + 1;
	var right = 0;
	var top = image.height + 1;
	var bottom = 0;
	var _color;
	var _mask;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			_color = rgba;
		}
		{
			var argb1 = mask;
			var rgba1 = 0;
			rgba1 = (argb1 >> 16 & 255 & 255) << 24 | (argb1 >> 8 & 255 & 255) << 16 | (argb1 & 255 & 255) << 8 | argb1 >> 24 & 255 & 255;
			_mask = rgba1;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba2 = 0;
			rgba2 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			_color = rgba2;
		}
		{
			var bgra1 = mask;
			var rgba3 = 0;
			rgba3 = (bgra1 >> 8 & 255 & 255) << 24 | (bgra1 >> 16 & 255 & 255) << 16 | (bgra1 >> 24 & 255 & 255) << 8 | bgra1 & 255 & 255;
			_mask = rgba3;
		}
		break;
	default:
		_color = color;
		_mask = mask;
	}
	if(!image.get_transparent()) {
		_color = (_color >> 24 & 255 & 255) << 24 | (_color >> 16 & 255 & 255) << 16 | (_color >> 8 & 255 & 255) << 8 | 255;
		255;
		_mask = (_mask >> 24 & 255 & 255) << 24 | (_mask >> 16 & 255 & 255) << 16 | (_mask >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	var pixel;
	var hit;
	var _g1 = 0;
	var _g = image.width;
	while(_g1 < _g) {
		var x = _g1++;
		hit = false;
		var _g3 = 0;
		var _g2 = image.height;
		while(_g3 < _g2) {
			var y = _g3++;
			pixel = image.getPixel32(x,y,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(x < left) left = x;
				break;
			}
		}
		if(hit) break;
	}
	var ix;
	var _g11 = 0;
	var _g4 = image.width;
	while(_g11 < _g4) {
		var x1 = _g11++;
		ix = image.width - 1 - x1;
		hit = false;
		var _g31 = 0;
		var _g21 = image.height;
		while(_g31 < _g21) {
			var y1 = _g31++;
			pixel = image.getPixel32(ix,y1,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(ix > right) right = ix;
				break;
			}
		}
		if(hit) break;
	}
	var _g12 = 0;
	var _g5 = image.height;
	while(_g12 < _g5) {
		var y2 = _g12++;
		hit = false;
		var _g32 = 0;
		var _g22 = image.width;
		while(_g32 < _g22) {
			var x2 = _g32++;
			pixel = image.getPixel32(x2,y2,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(y2 < top) top = y2;
				break;
			}
		}
		if(hit) break;
	}
	var iy;
	var _g13 = 0;
	var _g6 = image.height;
	while(_g13 < _g6) {
		var y3 = _g13++;
		iy = image.height - 1 - y3;
		hit = false;
		var _g33 = 0;
		var _g23 = image.width;
		while(_g33 < _g23) {
			var x3 = _g33++;
			pixel = image.getPixel32(x3,iy,0);
			if(findColor) hit = (pixel & _mask) == _color; else hit = (pixel & _mask) != _color;
			if(hit) {
				if(iy > bottom) bottom = iy;
				break;
			}
		}
		if(hit) break;
	}
	var w = right - left;
	var h = bottom - top;
	if(w > 0) w++;
	if(h > 0) h++;
	if(w < 0) w = 0;
	if(h < 0) h = 0;
	if(left == right) w = 1;
	if(top == bottom) h = 1;
	if(left > image.width) left = 0;
	if(top > image.height) top = 0;
	return new lime_math_Rectangle(left,top,w,h);
};
lime_graphics_utils_ImageDataUtil.getPixel = function(image,x,y,format) {
	var pixel;
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	switch(image.buffer.format) {
	case 2:
		pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(image.buffer.premultiplied) {
		if((pixel & 255) != 0 && (pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
			var r;
			var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
		}
	}
	pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | 0;
	0;
	switch(format) {
	case 1:
		return (function($this) {
			var $r;
			var argb = 0;
			argb = (pixel & 255 & 255) << 24 | (pixel >> 24 & 255 & 255) << 16 | (pixel >> 16 & 255 & 255) << 8 | pixel >> 8 & 255 & 255;
			$r = argb;
			return $r;
		}(this));
	case 2:
		return (function($this) {
			var $r;
			var bgra = 0;
			bgra = (pixel >> 8 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 24 & 255 & 255) << 8 | pixel & 255 & 255;
			$r = bgra;
			return $r;
		}(this));
	default:
		return pixel;
	}
};
lime_graphics_utils_ImageDataUtil.getPixel32 = function(image,x,y,format) {
	var pixel;
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	switch(image.buffer.format) {
	case 2:
		pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(image.buffer.premultiplied) {
		if((pixel & 255) != 0 && (pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
			var r;
			var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
		}
	}
	switch(format) {
	case 1:
		return (function($this) {
			var $r;
			var argb = 0;
			argb = (pixel & 255 & 255) << 24 | (pixel >> 24 & 255 & 255) << 16 | (pixel >> 16 & 255 & 255) << 8 | pixel >> 8 & 255 & 255;
			$r = argb;
			return $r;
		}(this));
	case 2:
		return (function($this) {
			var $r;
			var bgra = 0;
			bgra = (pixel >> 8 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 24 & 255 & 255) << 8 | pixel & 255 & 255;
			$r = bgra;
			return $r;
		}(this));
	default:
		return pixel;
	}
};
lime_graphics_utils_ImageDataUtil.getPixels = function(image,rect,format) {
	if(image.buffer.data == null) return null;
	var length = rect.width * rect.height | 0;
	var bytes = haxe_io_Bytes.alloc(length * 4);
	var data = image.buffer.data;
	var sourceFormat = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var position;
	var argb;
	var bgra;
	var pixel;
	var destPosition = 0;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		position = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			switch(sourceFormat) {
			case 2:
				pixel = (data[position + 2] & 255) << 24 | (data[position + 1] & 255) << 16 | (data[position] & 255) << 8 | data[position + 3] & 255;
				break;
			case 0:
				pixel = (data[position] & 255) << 24 | (data[position + 1] & 255) << 16 | (data[position + 2] & 255) << 8 | data[position + 3] & 255;
				break;
			case 1:
				pixel = (data[position + 1] & 255) << 24 | (data[position + 2] & 255) << 16 | (data[position + 3] & 255) << 8 | data[position] & 255;
				break;
			}
			if(premultiplied) {
				if((pixel & 255) != 0 && (pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
					var r;
					var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
				}
			}
			switch(format) {
			case 1:
				{
					var argb1 = 0;
					argb1 = (pixel & 255 & 255) << 24 | (pixel >> 24 & 255 & 255) << 16 | (pixel >> 16 & 255 & 255) << 8 | pixel >> 8 & 255 & 255;
					argb = argb1;
				}
				pixel = argb;
				break;
			case 2:
				{
					var bgra1 = 0;
					bgra1 = (pixel >> 8 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 24 & 255 & 255) << 8 | pixel & 255 & 255;
					bgra = bgra1;
				}
				pixel = bgra;
				break;
			default:
			}
			bytes.set(destPosition++,pixel >> 24 & 255);
			bytes.set(destPosition++,pixel >> 16 & 255);
			bytes.set(destPosition++,pixel >> 8 & 255);
			bytes.set(destPosition++,pixel & 255);
			position += 4;
		}
	}
	return bytes;
};
lime_graphics_utils_ImageDataUtil.merge = function(image,sourceImage,sourceRect,destPoint,redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier) {
	if(image.buffer.data == null || sourceImage.buffer.data == null) return;
	var sourceView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var destView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,new lime_math_Rectangle(destPoint.x,destPoint.y,sourceView.width,sourceView.height));
	var sourceData = sourceImage.buffer.data;
	var destData = image.buffer.data;
	var sourceFormat = sourceImage.buffer.format;
	var destFormat = image.buffer.format;
	var sourcePremultiplied = sourceImage.buffer.premultiplied;
	var destPremultiplied = image.buffer.premultiplied;
	var sourcePosition;
	var destPosition;
	var sourcePixel;
	var destPixel;
	var _g1 = 0;
	var _g = destView.height;
	while(_g1 < _g) {
		var y = _g1++;
		sourcePosition = sourceView.offset + sourceView.stride * y;
		destPosition = destView.offset + destView.stride * y;
		var _g3 = 0;
		var _g2 = destView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			switch(sourceFormat) {
			case 2:
				sourcePixel = (sourceData[sourcePosition + 2] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
				break;
			case 0:
				sourcePixel = (sourceData[sourcePosition] & 255) << 24 | (sourceData[sourcePosition + 1] & 255) << 16 | (sourceData[sourcePosition + 2] & 255) << 8 | sourceData[sourcePosition + 3] & 255;
				break;
			case 1:
				sourcePixel = (sourceData[sourcePosition + 1] & 255) << 24 | (sourceData[sourcePosition + 2] & 255) << 16 | (sourceData[sourcePosition + 3] & 255) << 8 | sourceData[sourcePosition] & 255;
				break;
			}
			if(sourcePremultiplied) {
				if((sourcePixel & 255) != 0 && (sourcePixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (sourcePixel & 255);
					var r;
					var idx = Math.round((sourcePixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((sourcePixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((sourcePixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					sourcePixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | sourcePixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destPixel = (destData[destPosition + 2] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 0:
				destPixel = (destData[destPosition] & 255) << 24 | (destData[destPosition + 1] & 255) << 16 | (destData[destPosition + 2] & 255) << 8 | destData[destPosition + 3] & 255;
				break;
			case 1:
				destPixel = (destData[destPosition + 1] & 255) << 24 | (destData[destPosition + 2] & 255) << 16 | (destData[destPosition + 3] & 255) << 8 | destData[destPosition] & 255;
				break;
			}
			if(destPremultiplied) {
				if((destPixel & 255) != 0 && (destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (destPixel & 255);
					var r1;
					var idx3 = Math.round((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx3];
					var g1;
					var idx4 = Math.round((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx4];
					var b1;
					var idx5 = Math.round((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b1 = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx5];
					destPixel = (r1 & 255) << 24 | (g1 & 255) << 16 | (b1 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			var value = ((sourcePixel >> 24 & 255) * redMultiplier + (destPixel >> 24 & 255) * (256 - redMultiplier)) / 256 | 0;
			destPixel = (value & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
			value;
			var value1 = ((sourcePixel >> 16 & 255) * greenMultiplier + (destPixel >> 16 & 255) * (256 - greenMultiplier)) / 256 | 0;
			destPixel = (destPixel >> 24 & 255 & 255) << 24 | (value1 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | destPixel & 255 & 255;
			value1;
			var value2 = ((sourcePixel >> 8 & 255) * blueMultiplier + (destPixel >> 8 & 255) * (256 - blueMultiplier)) / 256 | 0;
			destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (value2 & 255) << 8 | destPixel & 255 & 255;
			value2;
			var value3 = ((sourcePixel & 255) * alphaMultiplier + (destPixel & 255) * (256 - alphaMultiplier)) / 256 | 0;
			destPixel = (destPixel >> 24 & 255 & 255) << 24 | (destPixel >> 16 & 255 & 255) << 16 | (destPixel >> 8 & 255 & 255) << 8 | value3 & 255;
			value3;
			if(destPremultiplied) {
				if((destPixel & 255) == 0) {
					if(destPixel != 0) destPixel = 0;
				} else if((destPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[destPixel & 255];
					destPixel = ((destPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((destPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((destPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | destPixel & 255 & 255;
				}
			}
			switch(destFormat) {
			case 2:
				destData[destPosition] = destPixel >> 8 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 24 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 0:
				destData[destPosition] = destPixel >> 24 & 255;
				destData[destPosition + 1] = destPixel >> 16 & 255;
				destData[destPosition + 2] = destPixel >> 8 & 255;
				destData[destPosition + 3] = destPixel & 255;
				break;
			case 1:
				destData[destPosition] = destPixel & 255;
				destData[destPosition + 1] = destPixel >> 24 & 255;
				destData[destPosition + 2] = destPixel >> 16 & 255;
				destData[destPosition + 3] = destPixel >> 8 & 255;
				break;
			}
			sourcePosition += 4;
			destPosition += 4;
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.multiplyAlpha = function(image) {
	var data = image.buffer.data;
	if(data == null || !image.buffer.transparent) return;
	var format = image.buffer.format;
	var length = data.length / 4 | 0;
	var pixel;
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var offset = i * 4;
		switch(format) {
		case 2:
			pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 0:
			pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 1:
			pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
			break;
		}
		var offset1 = i * 4;
		if((pixel & 255) == 0) {
			if(pixel != 0) pixel = 0;
		} else if((pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
			pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
		}
		switch(format) {
		case 2:
			data[offset1] = pixel >> 8 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 24 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 0:
			data[offset1] = pixel >> 24 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 8 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 1:
			data[offset1] = pixel & 255;
			data[offset1 + 1] = pixel >> 24 & 255;
			data[offset1 + 2] = pixel >> 16 & 255;
			data[offset1 + 3] = pixel >> 8 & 255;
			break;
		}
	}
	image.buffer.premultiplied = true;
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.resize = function(image,newWidth,newHeight) {
	var buffer = image.buffer;
	if(buffer.width == newWidth && buffer.height == newHeight) return;
	var newBuffer = new lime_graphics_ImageBuffer((function($this) {
		var $r;
		var elements = newWidth * newHeight * 4;
		var this1;
		if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
		$r = this1;
		return $r;
	}(this)),newWidth,newHeight);
	var imageWidth = image.width;
	var imageHeight = image.height;
	var data = image.get_data();
	var newData = newBuffer.data;
	var sourceIndex;
	var sourceIndexX;
	var sourceIndexY;
	var sourceIndexXY;
	var index;
	var sourceX;
	var sourceY;
	var u;
	var v;
	var uRatio;
	var vRatio;
	var uOpposite;
	var vOpposite;
	var _g = 0;
	while(_g < newHeight) {
		var y = _g++;
		var _g1 = 0;
		while(_g1 < newWidth) {
			var x = _g1++;
			u = (x + 0.5) / newWidth * imageWidth - 0.5;
			v = (y + 0.5) / newHeight * imageHeight - 0.5;
			sourceX = u | 0;
			sourceY = v | 0;
			sourceIndex = (sourceY * imageWidth + sourceX) * 4;
			if(sourceX < imageWidth - 1) sourceIndexX = sourceIndex + 4; else sourceIndexX = sourceIndex;
			if(sourceY < imageHeight - 1) sourceIndexY = sourceIndex + imageWidth * 4; else sourceIndexY = sourceIndex;
			if(sourceIndexX != sourceIndex) sourceIndexXY = sourceIndexY + 4; else sourceIndexXY = sourceIndexY;
			index = (y * newWidth + x) * 4;
			uRatio = u - sourceX;
			vRatio = v - sourceY;
			uOpposite = 1 - uRatio;
			vOpposite = 1 - vRatio;
			var val = Std["int"]((_$UInt_UInt_$Impl_$.toFloat(data[sourceIndex]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexX]) * uRatio) * vOpposite + (_$UInt_UInt_$Impl_$.toFloat(data[sourceIndexY]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexXY]) * uRatio) * vRatio);
			newData[index] = val;
			var val1 = Std["int"]((_$UInt_UInt_$Impl_$.toFloat(data[sourceIndex + 1]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexX + 1]) * uRatio) * vOpposite + (_$UInt_UInt_$Impl_$.toFloat(data[sourceIndexY + 1]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexXY + 1]) * uRatio) * vRatio);
			newData[index + 1] = val1;
			var val2 = Std["int"]((_$UInt_UInt_$Impl_$.toFloat(data[sourceIndex + 2]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexX + 2]) * uRatio) * vOpposite + (_$UInt_UInt_$Impl_$.toFloat(data[sourceIndexY + 2]) * uOpposite + _$UInt_UInt_$Impl_$.toFloat(data[sourceIndexXY + 2]) * uRatio) * vRatio);
			newData[index + 2] = val2;
			if(data[sourceIndexX + 3] == 0 || data[sourceIndexY + 3] == 0 || data[sourceIndexXY + 3] == 0) newData[index + 3] = 0; else newData[index + 3] = data[sourceIndex + 3];
		}
	}
	buffer.data = newBuffer.data;
	buffer.width = newWidth;
	buffer.height = newHeight;
};
lime_graphics_utils_ImageDataUtil.resizeBuffer = function(image,newWidth,newHeight) {
	var buffer = image.buffer;
	var data = image.get_data();
	var newData;
	var elements = newWidth * newHeight * 4;
	var this1;
	if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
	newData = this1;
	var sourceIndex;
	var index;
	var _g1 = 0;
	var _g = buffer.height;
	while(_g1 < _g) {
		var y = _g1++;
		var _g3 = 0;
		var _g2 = buffer.width;
		while(_g3 < _g2) {
			var x = _g3++;
			sourceIndex = (y * buffer.width + x) * 4;
			index = (y * newWidth + x) * 4;
			newData[index] = data[sourceIndex];
			newData[index + 1] = data[sourceIndex + 1];
			newData[index + 2] = data[sourceIndex + 2];
			newData[index + 3] = data[sourceIndex + 3];
		}
	}
	buffer.data = newData;
	buffer.width = newWidth;
	buffer.height = newHeight;
};
lime_graphics_utils_ImageDataUtil.setFormat = function(image,format) {
	var data = image.buffer.data;
	if(data == null) return;
	var index;
	var a16;
	var length = data.length / 4 | 0;
	var r1;
	var g1;
	var b1;
	var a1;
	var r2;
	var g2;
	var b2;
	var a2;
	var r;
	var g;
	var b;
	var a;
	var _g = image.get_format();
	switch(_g) {
	case 0:
		r1 = 0;
		g1 = 1;
		b1 = 2;
		a1 = 3;
		break;
	case 1:
		r1 = 1;
		g1 = 2;
		b1 = 3;
		a1 = 0;
		break;
	case 2:
		r1 = 2;
		g1 = 1;
		b1 = 0;
		a1 = 3;
		break;
	}
	switch(format) {
	case 0:
		r2 = 0;
		g2 = 1;
		b2 = 2;
		a2 = 3;
		break;
	case 1:
		r2 = 1;
		g2 = 2;
		b2 = 3;
		a2 = 0;
		break;
	case 2:
		r2 = 2;
		g2 = 1;
		b2 = 0;
		a2 = 3;
		break;
	}
	var _g1 = 0;
	while(_g1 < length) {
		var i = _g1++;
		index = i * 4;
		r = data[index + r1];
		g = data[index + g1];
		b = data[index + b1];
		a = data[index + a1];
		data[index + r2] = r;
		data[index + g2] = g;
		data[index + b2] = b;
		data[index + a2] = a;
	}
	image.buffer.format = format;
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.setPixel = function(image,x,y,color,format) {
	var pixel;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			pixel = rgba;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba1 = 0;
			rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			pixel = rgba1;
		}
		break;
	default:
		pixel = color;
	}
	var source = 0;
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	switch(image.buffer.format) {
	case 2:
		source = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		source = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		source = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(image.buffer.premultiplied) {
		if((source & 255) != 0 && (source & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (source & 255);
			var r;
			var idx = Math.round((source >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((source >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((source >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			source = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | source & 255 & 255;
		}
	}
	var value = source & 255;
	pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | value & 255;
	value;
	var data1 = image.buffer.data;
	var offset1 = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	if(image.buffer.premultiplied) {
		if((pixel & 255) == 0) {
			if(pixel != 0) pixel = 0;
		} else if((pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
			pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
		}
	}
	switch(image.buffer.format) {
	case 2:
		data1[offset1] = pixel >> 8 & 255;
		data1[offset1 + 1] = pixel >> 16 & 255;
		data1[offset1 + 2] = pixel >> 24 & 255;
		data1[offset1 + 3] = pixel & 255;
		break;
	case 0:
		data1[offset1] = pixel >> 24 & 255;
		data1[offset1 + 1] = pixel >> 16 & 255;
		data1[offset1 + 2] = pixel >> 8 & 255;
		data1[offset1 + 3] = pixel & 255;
		break;
	case 1:
		data1[offset1] = pixel & 255;
		data1[offset1 + 1] = pixel >> 24 & 255;
		data1[offset1 + 2] = pixel >> 16 & 255;
		data1[offset1 + 3] = pixel >> 8 & 255;
		break;
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.setPixel32 = function(image,x,y,color,format) {
	var pixel;
	switch(format) {
	case 1:
		{
			var argb = color;
			var rgba = 0;
			rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
			pixel = rgba;
		}
		break;
	case 2:
		{
			var bgra = color;
			var rgba1 = 0;
			rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
			pixel = rgba1;
		}
		break;
	default:
		pixel = color;
	}
	if(!image.get_transparent()) {
		pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | 255;
		255;
	}
	var data = image.buffer.data;
	var offset = 4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4;
	if(image.buffer.premultiplied) {
		if((pixel & 255) == 0) {
			if(pixel != 0) pixel = 0;
		} else if((pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
			pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
		}
	}
	switch(image.buffer.format) {
	case 2:
		data[offset] = pixel >> 8 & 255;
		data[offset + 1] = pixel >> 16 & 255;
		data[offset + 2] = pixel >> 24 & 255;
		data[offset + 3] = pixel & 255;
		break;
	case 0:
		data[offset] = pixel >> 24 & 255;
		data[offset + 1] = pixel >> 16 & 255;
		data[offset + 2] = pixel >> 8 & 255;
		data[offset + 3] = pixel & 255;
		break;
	case 1:
		data[offset] = pixel & 255;
		data[offset + 1] = pixel >> 24 & 255;
		data[offset + 2] = pixel >> 16 & 255;
		data[offset + 3] = pixel >> 8 & 255;
		break;
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.setPixels = function(image,rect,bytes,format) {
	if(image.buffer.data == null) return;
	var data = image.buffer.data;
	var sourceFormat = image.buffer.format;
	var premultiplied = image.buffer.premultiplied;
	var dataView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(image,rect);
	var row;
	var color;
	var pixel;
	var transparent = image.get_transparent();
	var dataPosition = 0;
	var _g1 = 0;
	var _g = dataView.height;
	while(_g1 < _g) {
		var y = _g1++;
		row = dataView.offset + dataView.stride * y;
		var _g3 = 0;
		var _g2 = dataView.width;
		while(_g3 < _g2) {
			var x = _g3++;
			color = bytes.b[dataPosition + 3] | bytes.b[dataPosition + 2] << 8 | bytes.b[dataPosition + 1] << 16 | bytes.b[dataPosition] << 24;
			dataPosition += 4;
			switch(format) {
			case 1:
				{
					var argb = color;
					var rgba = 0;
					rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
					pixel = rgba;
				}
				break;
			case 2:
				{
					var bgra = color;
					var rgba1 = 0;
					rgba1 = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
					pixel = rgba1;
				}
				break;
			default:
				pixel = color;
			}
			if(!transparent) {
				pixel = (pixel >> 24 & 255 & 255) << 24 | (pixel >> 16 & 255 & 255) << 16 | (pixel >> 8 & 255 & 255) << 8 | 255;
				255;
			}
			var offset = row + x * 4;
			if(premultiplied) {
				if((pixel & 255) == 0) {
					if(pixel != 0) pixel = 0;
				} else if((pixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[pixel & 255];
					pixel = ((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | pixel & 255 & 255;
				}
			}
			switch(sourceFormat) {
			case 2:
				data[offset] = pixel >> 8 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 24 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 0:
				data[offset] = pixel >> 24 & 255;
				data[offset + 1] = pixel >> 16 & 255;
				data[offset + 2] = pixel >> 8 & 255;
				data[offset + 3] = pixel & 255;
				break;
			case 1:
				data[offset] = pixel & 255;
				data[offset + 1] = pixel >> 24 & 255;
				data[offset + 2] = pixel >> 16 & 255;
				data[offset + 3] = pixel >> 8 & 255;
				break;
			}
		}
	}
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.threshold = function(destImage,sourceImage,sourceRect,destPoint,operation,threshold,color,mask,copySource) {
	if(copySource == null) copySource = false;
	if(mask == null) mask = -1;
	if(color == null) color = 0;
	var thresholdMask = threshold & mask;
	var a = thresholdMask >> 24 & 255;
	var r = thresholdMask >> 16 & 255;
	var g = thresholdMask >> 8 & 255;
	var b = thresholdMask & 255;
	var thresholdRGBA;
	var rgba = 0;
	rgba = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | a & 255;
	thresholdRGBA = rgba;
	a = color >> 24 & 255;
	r = color >> 16 & 255;
	g = color >> 8 & 255;
	b = color & 255;
	var colorRGBA;
	var rgba1 = 0;
	rgba1 = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | a & 255;
	colorRGBA = rgba1;
	var operationEnum;
	switch(operation) {
	case "==":
		operationEnum = 0;
		break;
	case "<":
		operationEnum = 1;
		break;
	case ">":
		operationEnum = 2;
		break;
	case "<=":
		operationEnum = 3;
		break;
	case ">=":
		operationEnum = 4;
		break;
	case "!=":
		operationEnum = 5;
		break;
	default:
		operationEnum = 0;
	}
	var hits = 0;
	if(sourceImage == destImage && sourceRect.equals(destImage.get_rect()) && destPoint.x == 0 && destPoint.y == 0) {
		var pixelMask;
		var i;
		var test;
		hits = lime_graphics_utils_ImageDataUtil.__threshold_inner_loop(destImage,sourceImage,sourceRect,mask,thresholdRGBA,operationEnum,colorRGBA,0,0,sourceRect.width | 0,sourceRect.height | 0);
	} else {
		var destData = destImage.buffer.data;
		var destFormat = destImage.buffer.format;
		var destPremultiplied = destImage.buffer.premultiplied;
		sourceRect = sourceRect.clone();
		if(sourceRect.get_right() > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;
		if(sourceRect.get_bottom() > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;
		var targetRect = sourceRect.clone();
		targetRect.offsetPoint(destPoint);
		if(targetRect.get_right() > destImage.width) targetRect.width = destImage.width - targetRect.x;
		if(targetRect.get_bottom() > destImage.height) targetRect.height = destImage.height - targetRect.y;
		sourceRect.width = Math.min(sourceRect.width,targetRect.width);
		sourceRect.height = Math.min(sourceRect.height,targetRect.height);
		var sx = sourceRect.x | 0;
		var sy = sourceRect.y | 0;
		var sw = sourceRect.width | 0;
		var sh = sourceRect.height | 0;
		var dx = destPoint.x | 0;
		var dy = destPoint.y | 0;
		var bw = destImage.width - sw - dx;
		var bh = destImage.height - sh - dy;
		var dw;
		if(bw < 0) dw = sw + (destImage.width - sw - dx); else dw = sw;
		var dh;
		if(bw < 0) dh = sh + (destImage.height - sh - dy); else dh = sh;
		if(copySource) destImage.copyPixels(sourceImage,sourceRect,destPoint);
		var pixelMask1;
		var i1;
		var test1;
		hits = lime_graphics_utils_ImageDataUtil.__threshold_inner_loop(destImage,sourceImage,sourceRect,mask,thresholdRGBA,operationEnum,colorRGBA,sx,sy,dw,dh);
		return hits;
	}
	return 0;
};
lime_graphics_utils_ImageDataUtil.__threshold_inner_loop = function(image,sourceImage,sourceRect,mask,threshold,operation,color,startX,startY,destWidth,destHeight) {
	var srcView = new lime_graphics_utils__$ImageDataUtil_ImageDataView(sourceImage,sourceRect);
	var srcPixel = 0;
	var srcPosition = 0;
	var srcFormat = sourceImage.buffer.format;
	var srcPremultiplied = sourceImage.buffer.premultiplied;
	var srcData = sourceImage.buffer.data;
	var colorRGBA = color;
	var pixelMask = 0;
	var i = 0;
	var test = false;
	var hits = 0;
	var _g = 0;
	while(_g < destHeight) {
		var yy = _g++;
		srcPosition = srcView.offset + srcView.stride * (yy + startY);
		srcPosition += 4 * startX;
		var _g1 = 0;
		while(_g1 < destWidth) {
			var xx = _g1++;
			switch(srcFormat) {
			case 2:
				srcPixel = (srcData[srcPosition + 2] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 0:
				srcPixel = (srcData[srcPosition] & 255) << 24 | (srcData[srcPosition + 1] & 255) << 16 | (srcData[srcPosition + 2] & 255) << 8 | srcData[srcPosition + 3] & 255;
				break;
			case 1:
				srcPixel = (srcData[srcPosition + 1] & 255) << 24 | (srcData[srcPosition + 2] & 255) << 16 | (srcData[srcPosition + 3] & 255) << 8 | srcData[srcPosition] & 255;
				break;
			}
			if(srcPremultiplied) {
				if((srcPixel & 255) != 0 && (srcPixel & 255) != 255) {
					lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (srcPixel & 255);
					var r;
					var idx = Math.round((srcPixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
					var g;
					var idx1 = Math.round((srcPixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
					var b;
					var idx2 = Math.round((srcPixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
					b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
					srcPixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | srcPixel & 255 & 255;
				}
			}
			pixelMask = srcPixel & mask;
			i = lime_graphics_utils_ImageDataUtil.__ucompare(pixelMask,threshold);
			switch(operation) {
			case 0:
				test = i == 0;
				break;
			case 1:
				test = i == -1;
				break;
			case 2:
				test = i == 1;
				break;
			case 5:
				test = i != 0;
				break;
			case 3:
				test = i == 0 || i == -1;
				break;
			case 4:
				test = i == 0 || i == 1;
				break;
			default:
				test = false;
			}
			if(test) {
				if(srcPremultiplied) {
					if((colorRGBA & 255) == 0) {
						if(colorRGBA != 0) colorRGBA = 0;
					} else if((colorRGBA & 255) != 255) {
						lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[colorRGBA & 255];
						colorRGBA = ((colorRGBA >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((colorRGBA >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((colorRGBA >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | colorRGBA & 255 & 255;
					}
				}
				switch(srcFormat) {
				case 2:
					srcData[srcPosition] = colorRGBA >> 8 & 255;
					srcData[srcPosition + 1] = colorRGBA >> 16 & 255;
					srcData[srcPosition + 2] = colorRGBA >> 24 & 255;
					srcData[srcPosition + 3] = colorRGBA & 255;
					break;
				case 0:
					srcData[srcPosition] = colorRGBA >> 24 & 255;
					srcData[srcPosition + 1] = colorRGBA >> 16 & 255;
					srcData[srcPosition + 2] = colorRGBA >> 8 & 255;
					srcData[srcPosition + 3] = colorRGBA & 255;
					break;
				case 1:
					srcData[srcPosition] = colorRGBA & 255;
					srcData[srcPosition + 1] = colorRGBA >> 24 & 255;
					srcData[srcPosition + 2] = colorRGBA >> 16 & 255;
					srcData[srcPosition + 3] = colorRGBA >> 8 & 255;
					break;
				}
				hits++;
			}
			srcPosition += 4;
		}
	}
	return hits;
};
lime_graphics_utils_ImageDataUtil.unmultiplyAlpha = function(image) {
	var data = image.buffer.data;
	if(data == null) return;
	var format = image.buffer.format;
	var length = data.length / 4 | 0;
	var pixel;
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		var offset = i * 4;
		switch(format) {
		case 2:
			pixel = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 0:
			pixel = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
			break;
		case 1:
			pixel = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
			break;
		}
		if((pixel & 255) != 0 && (pixel & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (pixel & 255);
			var r;
			var idx = Math.round((pixel >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((pixel >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((pixel >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			pixel = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | pixel & 255 & 255;
		}
		var offset1 = i * 4;
		switch(format) {
		case 2:
			data[offset1] = pixel >> 8 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 24 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 0:
			data[offset1] = pixel >> 24 & 255;
			data[offset1 + 1] = pixel >> 16 & 255;
			data[offset1 + 2] = pixel >> 8 & 255;
			data[offset1 + 3] = pixel & 255;
			break;
		case 1:
			data[offset1] = pixel & 255;
			data[offset1 + 1] = pixel >> 24 & 255;
			data[offset1 + 2] = pixel >> 16 & 255;
			data[offset1 + 3] = pixel >> 8 & 255;
			break;
		}
	}
	image.buffer.premultiplied = false;
	image.dirty = true;
};
lime_graphics_utils_ImageDataUtil.__ucompare = function(n1,n2) {
	var tmp1;
	var tmp2;
	tmp1 = n1 >> 24 & 255;
	tmp2 = n2 >> 24 & 255;
	if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
		tmp1 = n1 >> 16 & 255;
		tmp2 = n2 >> 16 & 255;
		if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
			tmp1 = n1 >> 8 & 255;
			tmp2 = n2 >> 8 & 255;
			if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else {
				tmp1 = n1 & 255;
				tmp2 = n2 & 255;
				if(tmp1 != tmp2) if(tmp1 > tmp2) return 1; else return -1; else return 0;
			}
		}
	}
};
var lime_graphics_utils__$ImageDataUtil_ImageDataView = function(image,rect) {
	this.image = image;
	if(rect == null) this.rect = image.get_rect(); else {
		if(rect.x < 0) rect.x = 0;
		if(rect.y < 0) rect.y = 0;
		if(rect.x + rect.width > image.width) rect.width = image.width - rect.x;
		if(rect.y + rect.height > image.height) rect.height = image.height - rect.y;
		if(rect.width < 0) rect.width = 0;
		if(rect.height < 0) rect.height = 0;
		this.rect = rect;
	}
	this.stride = image.buffer.get_stride();
	this.x = Math.ceil(this.rect.x);
	this.y = Math.ceil(this.rect.y);
	this.width = Math.floor(this.rect.width);
	this.height = Math.floor(this.rect.height);
	this.offset = this.stride * (this.y + image.offsetY) + (this.x + image.offsetX) * 4;
};
$hxClasses["lime.graphics.utils._ImageDataUtil.ImageDataView"] = lime_graphics_utils__$ImageDataUtil_ImageDataView;
lime_graphics_utils__$ImageDataUtil_ImageDataView.__name__ = ["lime","graphics","utils","_ImageDataUtil","ImageDataView"];
lime_graphics_utils__$ImageDataUtil_ImageDataView.prototype = {
	clip: function(x,y,width,height) {
		this.rect.__contract(x,y,width,height);
		this.x = Math.ceil(this.rect.x);
		this.y = Math.ceil(this.rect.y);
		this.width = Math.floor(this.rect.width);
		this.height = Math.floor(this.rect.height);
		this.offset = this.stride * (this.y + this.image.offsetY) + (this.x + this.image.offsetX) * 4;
	}
	,row: function(y) {
		return this.offset + this.stride * y;
	}
	,__class__: lime_graphics_utils__$ImageDataUtil_ImageDataView
};
var lime_math__$ColorMatrix_ColorMatrix_$Impl_$ = {};
$hxClasses["lime.math._ColorMatrix.ColorMatrix_Impl_"] = lime_math__$ColorMatrix_ColorMatrix_$Impl_$;
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__name__ = ["lime","math","_ColorMatrix","ColorMatrix_Impl_"];
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__properties__ = {set_redOffset:"set_redOffset",get_redOffset:"get_redOffset",set_redMultiplier:"set_redMultiplier",get_redMultiplier:"get_redMultiplier",set_greenOffset:"set_greenOffset",get_greenOffset:"get_greenOffset",set_greenMultiplier:"set_greenMultiplier",get_greenMultiplier:"get_greenMultiplier",set_color:"set_color",get_color:"get_color",set_blueOffset:"set_blueOffset",get_blueOffset:"get_blueOffset",set_blueMultiplier:"set_blueMultiplier",get_blueMultiplier:"get_blueMultiplier",set_alphaOffset:"set_alphaOffset",get_alphaOffset:"get_alphaOffset",set_alphaMultiplier:"set_alphaMultiplier",get_alphaMultiplier:"get_alphaMultiplier"}
lime_math__$ColorMatrix_ColorMatrix_$Impl_$._new = function(data) {
	var this1;
	if(data != null && data.length == 20) this1 = data; else {
		var array = lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__identity;
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		this1 = this2;
	}
	return this1;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.clone = function(this1) {
	return lime_math__$ColorMatrix_ColorMatrix_$Impl_$._new((function($this) {
		var $r;
		var this2;
		if(this1 != null) this2 = new Float32Array(this1); else this2 = null;
		$r = this2;
		return $r;
	}(this)));
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.concat = function(this1,second) {
	var _g = this1;
	_g[0] = _g[0] + second[0];
	var _g1 = this1;
	_g1[6] = _g1[6] + second[6];
	var _g2 = this1;
	_g2[12] = _g2[12] + second[12];
	var _g3 = this1;
	_g3[18] = _g3[18] + second[18];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.copyFrom = function(this1,other) {
	this1.set(other);
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.identity = function(this1) {
	this1[0] = 1;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 0;
	this1[6] = 1;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 0;
	this1[11] = 0;
	this1[12] = 1;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 0;
	this1[16] = 0;
	this1[17] = 0;
	this1[18] = 1;
	this1[19] = 0;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getAlphaTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[18];
	var offset = this1[19] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getBlueTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[12];
	var offset = this1[14] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getGreenTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[6];
	var offset = this1[9] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.getRedTable = function(this1) {
	var table;
	var this2;
	this2 = new Uint8Array(256);
	table = this2;
	var multiplier = this1[0];
	var offset = this1[4] * 255;
	var value;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		value = Math.floor(i * multiplier + offset);
		if(value > 255) value = 255;
		if(value < 0) value = 0;
		table[i] = value;
	}
	return table;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__toFlashColorTransform = function(this1) {
	return null;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_alphaMultiplier = function(this1) {
	return this1[18];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_alphaMultiplier = function(this1,value) {
	return this1[18] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_alphaOffset = function(this1) {
	return this1[19] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_alphaOffset = function(this1,value) {
	return this1[19] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_blueMultiplier = function(this1) {
	return this1[12];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_blueMultiplier = function(this1,value) {
	return this1[12] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_blueOffset = function(this1) {
	return this1[14] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_blueOffset = function(this1,value) {
	return this1[14] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_color = function(this1) {
	return (this1[4] * 255 | 0) << 16 | (this1[9] * 255 | 0) << 8 | (this1[14] * 255 | 0);
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_color = function(this1,value) {
	this1[4] = (value >> 16 & 255) / 255;
	this1[9] = (value >> 8 & 255) / 255;
	this1[14] = (value & 255) / 255;
	this1[0] = 0;
	this1[6] = 0;
	this1[12] = 0;
	return lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_color(this1);
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_greenMultiplier = function(this1) {
	return this1[6];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_greenMultiplier = function(this1,value) {
	return this1[6] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_greenOffset = function(this1) {
	return this1[9] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_greenOffset = function(this1,value) {
	return this1[9] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_redMultiplier = function(this1) {
	return this1[0];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_redMultiplier = function(this1,value) {
	return this1[0] = value;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get_redOffset = function(this1) {
	return this1[4] * 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set_redOffset = function(this1,value) {
	return this1[4] = value / 255;
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.get = function(this1,index) {
	return this1[index];
};
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
var lime_math_Matrix3 = function(a,b,c,d,tx,ty) {
	if(ty == null) ty = 0;
	if(tx == null) tx = 0;
	if(d == null) d = 1;
	if(c == null) c = 0;
	if(b == null) b = 0;
	if(a == null) a = 1;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.tx = tx;
	this.ty = ty;
};
$hxClasses["lime.math.Matrix3"] = lime_math_Matrix3;
lime_math_Matrix3.__name__ = ["lime","math","Matrix3"];
lime_math_Matrix3.prototype = {
	clone: function() {
		return new lime_math_Matrix3(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
	}
	,copyColumnFrom: function(column,vector4) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			this.a = vector4.x;
			this.c = vector4.y;
		} else if(column == 1) {
			this.b = vector4.x;
			this.d = vector4.y;
		} else {
			this.tx = vector4.x;
			this.ty = vector4.y;
		}
	}
	,copyColumnTo: function(column,vector4) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			vector4.x = this.a;
			vector4.y = this.c;
			vector4.z = 0;
		} else if(column == 1) {
			vector4.x = this.b;
			vector4.y = this.d;
			vector4.z = 0;
		} else {
			vector4.x = this.tx;
			vector4.y = this.ty;
			vector4.z = 1;
		}
	}
	,copyFrom: function(sourceMatrix3) {
		this.a = sourceMatrix3.a;
		this.b = sourceMatrix3.b;
		this.c = sourceMatrix3.c;
		this.d = sourceMatrix3.d;
		this.tx = sourceMatrix3.tx;
		this.ty = sourceMatrix3.ty;
	}
	,copyRowFrom: function(row,vector4) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			this.a = vector4.x;
			this.c = vector4.y;
		} else if(row == 1) {
			this.b = vector4.x;
			this.d = vector4.y;
		} else {
			this.tx = vector4.x;
			this.ty = vector4.y;
		}
	}
	,copyRowTo: function(row,vector4) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			vector4.x = this.a;
			vector4.y = this.b;
			vector4.z = this.tx;
		} else if(row == 1) {
			vector4.x = this.c;
			vector4.y = this.d;
			vector4.z = this.ty;
		} else {
			vector4.x = 0;
			vector4.y = 0;
			vector4.z = 1;
		}
	}
	,createBox: function(scaleX,scaleY,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = scaleX;
		this.d = scaleY;
		this.b = rotation;
		this.tx = tx;
		this.ty = ty;
	}
	,createGradientBox: function(width,height,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = width / 1638.4;
		this.d = height / 1638.4;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		this.tx = tx + width / 2;
		this.ty = ty + height / 2;
	}
	,equals: function(Matrix3) {
		return Matrix3 != null && this.tx == Matrix3.tx && this.ty == Matrix3.ty && this.a == Matrix3.a && this.b == Matrix3.b && this.c == Matrix3.c && this.d == Matrix3.d;
	}
	,deltaTransformVector2: function(Vector2) {
		return new lime_math_Vector2(Vector2.x * this.a + Vector2.y * this.c,Vector2.x * this.b + Vector2.y * this.d);
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		return this;
	}
	,mult: function(m) {
		var result = new lime_math_Matrix3(this.a,this.b,this.c,this.d,this.tx,this.ty);
		result.concat(m);
		return result;
	}
	,rotate: function(theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
	}
	,scale: function(sx,sy) {
		this.a *= sx;
		this.b *= sy;
		this.c *= sx;
		this.d *= sy;
		this.tx *= sx;
		this.ty *= sy;
	}
	,setRotation: function(theta,scale) {
		if(scale == null) scale = 1;
		this.a = Math.cos(theta) * scale;
		this.c = Math.sin(theta) * scale;
		this.b = -this.c;
		this.d = this.a;
	}
	,setTo: function(a,b,c,d,tx,ty) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
		this.tx = tx;
		this.ty = ty;
	}
	,to3DString: function(roundPixels) {
		if(roundPixels == null) roundPixels = false;
		if(roundPixels) return "Matrix33d(" + this.a + ", " + this.b + ", " + "0, 0, " + this.c + ", " + this.d + ", " + "0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) + ", 0, 1)"; else return "Matrix33d(" + this.a + ", " + this.b + ", " + "0, 0, " + this.c + ", " + this.d + ", " + "0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)";
	}
	,toMozString: function() {
		return "Matrix3(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)";
	}
	,toString: function() {
		return "Matrix3(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,transformVector2: function(pos) {
		return new lime_math_Vector2(pos.x * this.a + pos.y * this.c + this.tx,pos.x * this.b + pos.y * this.d + this.ty);
	}
	,translate: function(dx,dy) {
		this.tx += dx;
		this.ty += dy;
	}
	,__cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,__transformX: function(pos) {
		return pos.x * this.a + pos.y * this.c + this.tx;
	}
	,__transformY: function(pos) {
		return pos.x * this.b + pos.y * this.d + this.ty;
	}
	,__translateTransformed: function(pos) {
		this.tx = pos.x * this.a + pos.y * this.c + this.tx;
		this.ty = pos.x * this.b + pos.y * this.d + this.ty;
	}
	,__class__: lime_math_Matrix3
};
var lime_math__$Matrix4_Matrix4_$Impl_$ = {};
$hxClasses["lime.math._Matrix4.Matrix4_Impl_"] = lime_math__$Matrix4_Matrix4_$Impl_$;
lime_math__$Matrix4_Matrix4_$Impl_$.__name__ = ["lime","math","_Matrix4","Matrix4_Impl_"];
lime_math__$Matrix4_Matrix4_$Impl_$.__properties__ = {set_position:"set_position",get_position:"get_position",get_determinant:"get_determinant"}
lime_math__$Matrix4_Matrix4_$Impl_$._new = function(data) {
	var this1;
	if(data != null && data.length == 16) this1 = data; else {
		var array = lime_math__$Matrix4_Matrix4_$Impl_$.__identity;
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		this1 = this2;
	}
	return this1;
};
lime_math__$Matrix4_Matrix4_$Impl_$.append = function(this1,lhs) {
	var m111 = this1[0];
	var m121 = this1[4];
	var m131 = this1[8];
	var m141 = this1[12];
	var m112 = this1[1];
	var m122 = this1[5];
	var m132 = this1[9];
	var m142 = this1[13];
	var m113 = this1[2];
	var m123 = this1[6];
	var m133 = this1[10];
	var m143 = this1[14];
	var m114 = this1[3];
	var m124 = this1[7];
	var m134 = this1[11];
	var m144 = this1[15];
	var m211 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,0);
	var m221 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,4);
	var m231 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,8);
	var m241 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,12);
	var m212 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,1);
	var m222 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,5);
	var m232 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,9);
	var m242 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,13);
	var m213 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,2);
	var m223 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,6);
	var m233 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,10);
	var m243 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,14);
	var m214 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,3);
	var m224 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,7);
	var m234 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,11);
	var m244 = lime_math__$Matrix4_Matrix4_$Impl_$.get(lhs,15);
	this1[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
	this1[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
	this1[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
	this1[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
	this1[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
	this1[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
	this1[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
	this1[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
	this1[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
	this1[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
	this1[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
	this1[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
	this1[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
	this1[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
	this1[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
	this1[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
};
lime_math__$Matrix4_Matrix4_$Impl_$.appendRotation = function(this1,degrees,axis,pivotPoint) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$.getAxisRotation(axis.x,axis.y,axis.z,degrees);
	if(pivotPoint != null) {
		var p = pivotPoint;
		lime_math__$Matrix4_Matrix4_$Impl_$.appendTranslation(m,p.x,p.y,p.z);
	}
	lime_math__$Matrix4_Matrix4_$Impl_$.append(this1,m);
};
lime_math__$Matrix4_Matrix4_$Impl_$.appendScale = function(this1,xScale,yScale,zScale) {
	lime_math__$Matrix4_Matrix4_$Impl_$.append(this1,lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		$r = this2;
		return $r;
	}(this))));
};
lime_math__$Matrix4_Matrix4_$Impl_$.appendTranslation = function(this1,x,y,z) {
	this1[12] = this1[12] + x;
	this1[13] = this1[13] + y;
	this1[14] = this1[14] + z;
};
lime_math__$Matrix4_Matrix4_$Impl_$.clone = function(this1) {
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var this2;
		if(this1 != null) this2 = new Float32Array(this1); else this2 = null;
		$r = this2;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyColumnFrom = function(this1,column,vector) {
	switch(column) {
	case 0:
		this1[0] = vector.x;
		this1[1] = vector.y;
		this1[2] = vector.z;
		this1[3] = vector.w;
		break;
	case 1:
		this1[4] = vector.x;
		this1[5] = vector.y;
		this1[6] = vector.z;
		this1[7] = vector.w;
		break;
	case 2:
		this1[8] = vector.x;
		this1[9] = vector.y;
		this1[10] = vector.z;
		this1[11] = vector.w;
		break;
	case 3:
		this1[12] = vector.x;
		this1[13] = vector.y;
		this1[14] = vector.z;
		this1[15] = vector.w;
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Column " + column + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyColumnTo = function(this1,column,vector) {
	switch(column) {
	case 0:
		vector.x = this1[0];
		vector.y = this1[1];
		vector.z = this1[2];
		vector.w = this1[3];
		break;
	case 1:
		vector.x = this1[4];
		vector.y = this1[5];
		vector.z = this1[6];
		vector.w = this1[7];
		break;
	case 2:
		vector.x = this1[8];
		vector.y = this1[9];
		vector.z = this1[10];
		vector.w = this1[11];
		break;
	case 3:
		vector.x = this1[12];
		vector.y = this1[13];
		vector.z = this1[14];
		vector.w = this1[15];
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Column " + column + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyFrom = function(this1,other) {
	this1.set(other);
};
lime_math__$Matrix4_Matrix4_$Impl_$.copythisFrom = function(this1,array,index,transposeValues) {
	if(transposeValues == null) transposeValues = false;
	if(index == null) index = 0;
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
	var l = array.length - index;
	var _g = 0;
	while(_g < l) {
		var c = _g++;
		this1[c] = array[c + index];
	}
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
};
lime_math__$Matrix4_Matrix4_$Impl_$.copythisTo = function(this1,array,index,transposeValues) {
	if(transposeValues == null) transposeValues = false;
	if(index == null) index = 0;
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
	var l = this1.length;
	var _g = 0;
	while(_g < l) {
		var c = _g++;
		array[c + index] = this1[c];
	}
	if(transposeValues) lime_math__$Matrix4_Matrix4_$Impl_$.transpose(this1);
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyRowFrom = function(this1,row,vector) {
	switch(row) {
	case 0:
		this1[0] = vector.x;
		this1[4] = vector.y;
		this1[8] = vector.z;
		this1[12] = vector.w;
		break;
	case 1:
		this1[1] = vector.x;
		this1[5] = vector.y;
		this1[9] = vector.z;
		this1[13] = vector.w;
		break;
	case 2:
		this1[2] = vector.x;
		this1[6] = vector.y;
		this1[10] = vector.z;
		this1[14] = vector.w;
		break;
	case 3:
		this1[3] = vector.x;
		this1[7] = vector.y;
		this1[11] = vector.z;
		this1[15] = vector.w;
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Row " + Std.string(_$UInt_UInt_$Impl_$.toFloat(row)) + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.create2D = function(x,y,scale,rotation) {
	if(rotation == null) rotation = 0;
	if(scale == null) scale = 1;
	var theta = rotation * Math.PI / 180.0;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [c * scale,-s * scale,0,0,s * scale,c * scale,0,0,0,0,1,0,x,y,0,1];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		$r = this1;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.createABCD = function(a,b,c,d,tx,ty) {
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [a,b,0,0,c,d,0,0,0,0,1,0,tx,ty,0,1];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		$r = this1;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.createOrtho = function(x0,x1,y0,y1,zNear,zFar) {
	var sx = 1.0 / (x1 - x0);
	var sy = 1.0 / (y1 - y0);
	var sz = 1.0 / (zFar - zNear);
	return lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [2.0 * sx,0,0,0,0,2.0 * sy,0,0,0,0,-2. * sz,0,-(x0 + x1) * sx,-(y0 + y1) * sy,-(zNear + zFar) * sz,1];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		$r = this1;
		return $r;
	}(this)));
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyRowTo = function(this1,row,vector) {
	switch(row) {
	case 0:
		vector.x = this1[0];
		vector.y = this1[4];
		vector.z = this1[8];
		vector.w = this1[12];
		break;
	case 1:
		vector.x = this1[1];
		vector.y = this1[5];
		vector.z = this1[9];
		vector.w = this1[13];
		break;
	case 2:
		vector.x = this1[2];
		vector.y = this1[6];
		vector.z = this1[10];
		vector.w = this1[14];
		break;
	case 3:
		vector.x = this1[3];
		vector.y = this1[7];
		vector.z = this1[11];
		vector.w = this1[15];
		break;
	default:
		throw new js__$Boot_HaxeError("Error, Row " + row + " out of bounds [0, ..., 3]");
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.copyToMatrix4 = function(this1,other) {
	(js_Boot.__cast(other , Float32Array)).set(this1);
};
lime_math__$Matrix4_Matrix4_$Impl_$.deltaTransformVector = function(this1,v) {
	var x = v.x;
	var y = v.y;
	var z = v.z;
	return new lime_math_Vector4(x * this1[0] + y * this1[4] + z * this1[8] + this1[3],x * this1[1] + y * this1[5] + z * this1[9] + this1[7],x * this1[2] + y * this1[6] + z * this1[10] + this1[11],0);
};
lime_math__$Matrix4_Matrix4_$Impl_$.identity = function(this1) {
	this1[0] = 1;
	this1[1] = 0;
	this1[2] = 0;
	this1[3] = 0;
	this1[4] = 0;
	this1[5] = 1;
	this1[6] = 0;
	this1[7] = 0;
	this1[8] = 0;
	this1[9] = 0;
	this1[10] = 1;
	this1[11] = 0;
	this1[12] = 0;
	this1[13] = 0;
	this1[14] = 0;
	this1[15] = 1;
};
lime_math__$Matrix4_Matrix4_$Impl_$.interpolate = function(thisMat,toMat,percent) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$._new();
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		lime_math__$Matrix4_Matrix4_$Impl_$.set(m,i,lime_math__$Matrix4_Matrix4_$Impl_$.get(thisMat,i) + (lime_math__$Matrix4_Matrix4_$Impl_$.get(toMat,i) - lime_math__$Matrix4_Matrix4_$Impl_$.get(thisMat,i)) * percent);
	}
	return m;
};
lime_math__$Matrix4_Matrix4_$Impl_$.interpolateTo = function(this1,toMat,percent) {
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		var val = this1[i] + (lime_math__$Matrix4_Matrix4_$Impl_$.get(toMat,i) - this1[i]) * percent;
		this1[i] = val;
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.invert = function(this1) {
	var d = lime_math__$Matrix4_Matrix4_$Impl_$.get_determinant(this1);
	var invertable = Math.abs(d) > 0.00000000001;
	if(invertable) {
		d = 1 / d;
		var m11 = this1[0];
		var m21 = this1[4];
		var m31 = this1[8];
		var m41 = this1[12];
		var m12 = this1[1];
		var m22 = this1[5];
		var m32 = this1[9];
		var m42 = this1[13];
		var m13 = this1[2];
		var m23 = this1[6];
		var m33 = this1[10];
		var m43 = this1[14];
		var m14 = this1[3];
		var m24 = this1[7];
		var m34 = this1[11];
		var m44 = this1[15];
		this1[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));
		this1[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));
		this1[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));
		this1[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));
		this1[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));
		this1[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));
		this1[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));
		this1[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));
		this1[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));
		this1[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));
		this1[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));
		this1[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));
		this1[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));
		this1[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));
		this1[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));
		this1[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));
	}
	return invertable;
};
lime_math__$Matrix4_Matrix4_$Impl_$.pointAt = function(this1,pos,at,up) {
	if(at == null) at = new lime_math_Vector4(0,0,-1);
	if(up == null) up = new lime_math_Vector4(0,-1,0);
	var dir = new lime_math_Vector4(at.x - pos.x,at.y - pos.y,at.z - pos.z);
	var vup = new lime_math_Vector4(up.x,up.y,up.z,up.w);
	var right;
	dir.normalize();
	vup.normalize();
	var dir2 = new lime_math_Vector4(dir.x,dir.y,dir.z,dir.w);
	dir2.scaleBy(vup.x * dir.x + vup.y * dir.y + vup.z * dir.z);
	vup = new lime_math_Vector4(vup.x - dir2.x,vup.y - dir2.y,vup.z - dir2.z);
	if(Math.sqrt(vup.x * vup.x + vup.y * vup.y + vup.z * vup.z) > 0) vup.normalize(); else if(dir.x != 0) vup = new lime_math_Vector4(-dir.y,dir.x,0); else vup = new lime_math_Vector4(1,0,0);
	right = new lime_math_Vector4(vup.y * dir.z - vup.z * dir.y,vup.z * dir.x - vup.x * dir.z,vup.x * dir.y - vup.y * dir.x,1);
	right.normalize();
	this1[0] = right.x;
	this1[4] = right.y;
	this1[8] = right.z;
	this1[12] = 0.0;
	this1[1] = vup.x;
	this1[5] = vup.y;
	this1[9] = vup.z;
	this1[13] = 0.0;
	this1[2] = dir.x;
	this1[6] = dir.y;
	this1[10] = dir.z;
	this1[14] = 0.0;
	this1[3] = pos.x;
	this1[7] = pos.y;
	this1[11] = pos.z;
	this1[15] = 1.0;
};
lime_math__$Matrix4_Matrix4_$Impl_$.prepend = function(this1,rhs) {
	var m111 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,0);
	var m121 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,4);
	var m131 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,8);
	var m141 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,12);
	var m112 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,1);
	var m122 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,5);
	var m132 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,9);
	var m142 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,13);
	var m113 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,2);
	var m123 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,6);
	var m133 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,10);
	var m143 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,14);
	var m114 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,3);
	var m124 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,7);
	var m134 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,11);
	var m144 = lime_math__$Matrix4_Matrix4_$Impl_$.get(rhs,15);
	var m211 = this1[0];
	var m221 = this1[4];
	var m231 = this1[8];
	var m241 = this1[12];
	var m212 = this1[1];
	var m222 = this1[5];
	var m232 = this1[9];
	var m242 = this1[13];
	var m213 = this1[2];
	var m223 = this1[6];
	var m233 = this1[10];
	var m243 = this1[14];
	var m214 = this1[3];
	var m224 = this1[7];
	var m234 = this1[11];
	var m244 = this1[15];
	this1[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
	this1[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
	this1[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
	this1[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
	this1[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
	this1[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
	this1[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
	this1[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
	this1[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
	this1[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
	this1[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
	this1[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
	this1[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
	this1[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
	this1[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
	this1[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
};
lime_math__$Matrix4_Matrix4_$Impl_$.prependRotation = function(this1,degrees,axis,pivotPoint) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$.getAxisRotation(axis.x,axis.y,axis.z,degrees);
	if(pivotPoint != null) {
		var p = pivotPoint;
		lime_math__$Matrix4_Matrix4_$Impl_$.appendTranslation(m,p.x,p.y,p.z);
	}
	lime_math__$Matrix4_Matrix4_$Impl_$.prepend(this1,m);
};
lime_math__$Matrix4_Matrix4_$Impl_$.prependScale = function(this1,xScale,yScale,zScale) {
	lime_math__$Matrix4_Matrix4_$Impl_$.prepend(this1,lime_math__$Matrix4_Matrix4_$Impl_$._new((function($this) {
		var $r;
		var array = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
		var this2;
		if(array != null) this2 = new Float32Array(array); else this2 = null;
		$r = this2;
		return $r;
	}(this))));
};
lime_math__$Matrix4_Matrix4_$Impl_$.prependTranslation = function(this1,x,y,z) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$._new();
	lime_math__$Matrix4_Matrix4_$Impl_$.set_position(m,new lime_math_Vector4(x,y,z));
	lime_math__$Matrix4_Matrix4_$Impl_$.prepend(this1,m);
};
lime_math__$Matrix4_Matrix4_$Impl_$.transformVector = function(this1,v) {
	var x = v.x;
	var y = v.y;
	var z = v.z;
	return new lime_math_Vector4(x * this1[0] + y * this1[4] + z * this1[8] + this1[12],x * this1[1] + y * this1[5] + z * this1[9] + this1[13],x * this1[2] + y * this1[6] + z * this1[10] + this1[14],x * this1[3] + y * this1[7] + z * this1[11] + this1[15]);
};
lime_math__$Matrix4_Matrix4_$Impl_$.transformVectors = function(this1,ain,aout) {
	var i = 0;
	while(i + 3 <= ain.length) {
		var x = ain[i];
		var y = ain[i + 1];
		var z = ain[i + 2];
		aout[i] = x * this1[0] + y * this1[4] + z * this1[8] + this1[12];
		aout[i + 1] = x * this1[1] + y * this1[5] + z * this1[9] + this1[13];
		aout[i + 2] = x * this1[2] + y * this1[6] + z * this1[10] + this1[14];
		i += 3;
	}
};
lime_math__$Matrix4_Matrix4_$Impl_$.transpose = function(this1) {
	var othis;
	var this2;
	if(this1 != null) this2 = new Float32Array(this1); else this2 = null;
	othis = this2;
	this1[1] = othis[4];
	this1[2] = othis[8];
	this1[3] = othis[12];
	this1[4] = othis[1];
	this1[6] = othis[9];
	this1[7] = othis[13];
	this1[8] = othis[2];
	this1[9] = othis[6];
	this1[11] = othis[14];
	this1[12] = othis[3];
	this1[13] = othis[7];
	this1[14] = othis[11];
};
lime_math__$Matrix4_Matrix4_$Impl_$.getAxisRotation = function(x,y,z,degrees) {
	var m = lime_math__$Matrix4_Matrix4_$Impl_$._new();
	var a1 = new lime_math_Vector4(x,y,z);
	var rad = -degrees * (Math.PI / 180);
	var c = Math.cos(rad);
	var s = Math.sin(rad);
	var t = 1.0 - c;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,0,c + a1.x * a1.x * t);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,5,c + a1.y * a1.y * t);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,10,c + a1.z * a1.z * t);
	var tmp1 = a1.x * a1.y * t;
	var tmp2 = a1.z * s;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,4,tmp1 + tmp2);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,1,tmp1 - tmp2);
	tmp1 = a1.x * a1.z * t;
	tmp2 = a1.y * s;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,8,tmp1 - tmp2);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,2,tmp1 + tmp2);
	tmp1 = a1.y * a1.z * t;
	tmp2 = a1.x * s;
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,9,tmp1 + tmp2);
	lime_math__$Matrix4_Matrix4_$Impl_$.set(m,6,tmp1 - tmp2);
	return m;
};
lime_math__$Matrix4_Matrix4_$Impl_$.get_determinant = function(this1) {
	return (this1[0] * this1[5] - this1[4] * this1[1]) * (this1[10] * this1[15] - this1[14] * this1[11]) - (this1[0] * this1[9] - this1[8] * this1[1]) * (this1[6] * this1[15] - this1[14] * this1[7]) + (this1[0] * this1[13] - this1[12] * this1[1]) * (this1[6] * this1[11] - this1[10] * this1[7]) + (this1[4] * this1[9] - this1[8] * this1[5]) * (this1[2] * this1[15] - this1[14] * this1[3]) - (this1[4] * this1[13] - this1[12] * this1[5]) * (this1[2] * this1[11] - this1[10] * this1[3]) + (this1[8] * this1[13] - this1[12] * this1[9]) * (this1[2] * this1[7] - this1[6] * this1[3]);
};
lime_math__$Matrix4_Matrix4_$Impl_$.get_position = function(this1) {
	return new lime_math_Vector4(this1[12],this1[13],this1[14]);
};
lime_math__$Matrix4_Matrix4_$Impl_$.set_position = function(this1,val) {
	this1[12] = val.x;
	this1[13] = val.y;
	this1[14] = val.z;
	return val;
};
lime_math__$Matrix4_Matrix4_$Impl_$.get = function(this1,index) {
	return this1[index];
};
lime_math__$Matrix4_Matrix4_$Impl_$.set = function(this1,index,value) {
	this1[index] = value;
	return value;
};
var lime_math_Rectangle = function(x,y,width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["lime.math.Rectangle"] = lime_math_Rectangle;
lime_math_Rectangle.__name__ = ["lime","math","Rectangle"];
lime_math_Rectangle.prototype = {
	clone: function() {
		return new lime_math_Rectangle(this.x,this.y,this.width,this.height);
	}
	,contains: function(x,y) {
		return x >= this.x && y >= this.y && x < this.get_right() && y < this.get_bottom();
	}
	,containsPoint: function(point) {
		return this.contains(point.x,point.y);
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) return rect.x > this.x && rect.y > this.y && rect.get_right() < this.get_right() && rect.get_bottom() < this.get_bottom(); else return rect.x >= this.x && rect.y >= this.y && rect.get_right() <= this.get_right() && rect.get_bottom() <= this.get_bottom();
	}
	,copyFrom: function(sourceRect) {
		this.x = sourceRect.x;
		this.y = sourceRect.y;
		this.width = sourceRect.width;
		this.height = sourceRect.height;
	}
	,equals: function(toCompare) {
		return toCompare != null && this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
	}
	,inflate: function(dx,dy) {
		this.x -= dx;
		this.width += dx * 2;
		this.y -= dy;
		this.height += dy * 2;
	}
	,inflatePoint: function(point) {
		this.inflate(point.x,point.y);
	}
	,intersection: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return new lime_math_Rectangle();
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		if(y1 <= y0) return new lime_math_Rectangle();
		return new lime_math_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,intersects: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return false;
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		return y1 > y0;
	}
	,isEmpty: function() {
		return this.width <= 0 || this.height <= 0;
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,offsetPoint: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,setEmpty: function() {
		this.x = this.y = this.width = this.height = 0;
	}
	,setTo: function(xa,ya,widtha,heighta) {
		this.x = xa;
		this.y = ya;
		this.width = widtha;
		this.height = heighta;
	}
	,transform: function(m) {
		var tx0 = m.a * this.x + m.c * this.y;
		var tx1 = tx0;
		var ty0 = m.b * this.x + m.d * this.y;
		var ty1 = ty0;
		var tx = m.a * (this.x + this.width) + m.c * this.y;
		var ty = m.b * (this.x + this.width) + m.d * this.y;
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * (this.x + this.width) + m.c * (this.y + this.height);
		ty = m.b * (this.x + this.width) + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * this.x + m.c * (this.y + this.height);
		ty = m.b * this.x + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		return new lime_math_Rectangle(tx0 + m.tx,ty0 + m.ty,tx1 - tx0,ty1 - ty0);
	}
	,union: function(toUnion) {
		if(this.width == 0 || this.height == 0) return toUnion.clone(); else if(toUnion.width == 0 || toUnion.height == 0) return this.clone();
		var x0;
		if(this.x > toUnion.x) x0 = toUnion.x; else x0 = this.x;
		var x1;
		if(this.get_right() < toUnion.get_right()) x1 = toUnion.get_right(); else x1 = this.get_right();
		var y0;
		if(this.y > toUnion.y) y0 = toUnion.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() < toUnion.get_bottom()) y1 = toUnion.get_bottom(); else y1 = this.get_bottom();
		return new lime_math_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,__contract: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) return;
		if(this.x < x) this.x = x;
		if(this.y < y) this.y = y;
		if(this.get_right() > x + width) this.width = x + width - this.x;
		if(this.get_bottom() > y + height) this.height = y + height - this.y;
	}
	,__expand: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) {
			this.x = x;
			this.y = y;
			this.width = width;
			this.height = height;
			return;
		}
		var cacheRight = this.get_right();
		var cacheBottom = this.get_bottom();
		if(this.x > x) this.x = x;
		if(this.y > y) this.y = y;
		if(cacheRight < x + width) this.width = x + width - this.x;
		if(cacheBottom < y + height) this.height = y + height - this.y;
	}
	,__toFlashRectangle: function() {
		return null;
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,set_bottom: function(b) {
		this.height = b - this.y;
		return b;
	}
	,get_bottomRight: function() {
		return new lime_math_Vector2(this.x + this.width,this.y + this.height);
	}
	,set_bottomRight: function(p) {
		this.width = p.x - this.x;
		this.height = p.y - this.y;
		return p.clone();
	}
	,get_left: function() {
		return this.x;
	}
	,set_left: function(l) {
		this.width -= l - this.x;
		this.x = l;
		return l;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,set_right: function(r) {
		this.width = r - this.x;
		return r;
	}
	,get_size: function() {
		return new lime_math_Vector2(this.width,this.height);
	}
	,set_size: function(p) {
		this.width = p.x;
		this.height = p.y;
		return p.clone();
	}
	,get_top: function() {
		return this.y;
	}
	,set_top: function(t) {
		this.height -= t - this.y;
		this.y = t;
		return t;
	}
	,get_topLeft: function() {
		return new lime_math_Vector2(this.x,this.y);
	}
	,set_topLeft: function(p) {
		this.x = p.x;
		this.y = p.y;
		return p.clone();
	}
	,__class__: lime_math_Rectangle
	,__properties__: {set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_top:"set_top",get_top:"get_top",set_size:"set_size",get_size:"get_size",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottom:"set_bottom",get_bottom:"get_bottom"}
};
var lime_math_Vector2 = function(x,y) {
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
};
$hxClasses["lime.math.Vector2"] = lime_math_Vector2;
lime_math_Vector2.__name__ = ["lime","math","Vector2"];
lime_math_Vector2.distance = function(pt1,pt2) {
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	return Math.sqrt(dx * dx + dy * dy);
};
lime_math_Vector2.interpolate = function(pt1,pt2,f) {
	return new lime_math_Vector2(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
};
lime_math_Vector2.polar = function(len,angle) {
	return new lime_math_Vector2(len * Math.cos(angle),len * Math.sin(angle));
};
lime_math_Vector2.prototype = {
	add: function(v) {
		return new lime_math_Vector2(v.x + this.x,v.y + this.y);
	}
	,clone: function() {
		return new lime_math_Vector2(this.x,this.y);
	}
	,equals: function(toCompare) {
		return toCompare != null && toCompare.x == this.x && toCompare.y == this.y;
	}
	,normalize: function(thickness) {
		if(this.x == 0 && this.y == 0) return; else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,setTo: function(xa,ya) {
		this.x = xa;
		this.y = ya;
	}
	,subtract: function(v) {
		return new lime_math_Vector2(this.x - v.x,this.y - v.y);
	}
	,__toFlashPoint: function() {
		return null;
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,__class__: lime_math_Vector2
	,__properties__: {get_length:"get_length"}
};
var lime_math_Vector4 = function(x,y,z,w) {
	if(w == null) w = 0.;
	if(z == null) z = 0.;
	if(y == null) y = 0.;
	if(x == null) x = 0.;
	this.w = w;
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["lime.math.Vector4"] = lime_math_Vector4;
lime_math_Vector4.__name__ = ["lime","math","Vector4"];
lime_math_Vector4.__properties__ = {get_Z_AXIS:"get_Z_AXIS",get_Y_AXIS:"get_Y_AXIS",get_X_AXIS:"get_X_AXIS"}
lime_math_Vector4.X_AXIS = null;
lime_math_Vector4.Y_AXIS = null;
lime_math_Vector4.Z_AXIS = null;
lime_math_Vector4.angleBetween = function(a,b) {
	var a0 = new lime_math_Vector4(a.x,a.y,a.z,a.w);
	a0.normalize();
	var b0 = new lime_math_Vector4(b.x,b.y,b.z,b.w);
	b0.normalize();
	return Math.acos(a0.x * b0.x + a0.y * b0.y + a0.z * b0.z);
};
lime_math_Vector4.distance = function(pt1,pt2) {
	var x = pt2.x - pt1.x;
	var y = pt2.y - pt1.y;
	var z = pt2.z - pt1.z;
	return Math.sqrt(x * x + y * y + z * z);
};
lime_math_Vector4.get_X_AXIS = function() {
	return new lime_math_Vector4(1,0,0);
};
lime_math_Vector4.get_Y_AXIS = function() {
	return new lime_math_Vector4(0,1,0);
};
lime_math_Vector4.get_Z_AXIS = function() {
	return new lime_math_Vector4(0,0,1);
};
lime_math_Vector4.prototype = {
	add: function(a) {
		return new lime_math_Vector4(this.x + a.x,this.y + a.y,this.z + a.z);
	}
	,clone: function() {
		return new lime_math_Vector4(this.x,this.y,this.z,this.w);
	}
	,copyFrom: function(sourceVector4) {
		this.x = sourceVector4.x;
		this.y = sourceVector4.y;
		this.z = sourceVector4.z;
	}
	,crossProduct: function(a) {
		return new lime_math_Vector4(this.y * a.z - this.z * a.y,this.z * a.x - this.x * a.z,this.x * a.y - this.y * a.x,1);
	}
	,decrementBy: function(a) {
		this.x -= a.x;
		this.y -= a.y;
		this.z -= a.z;
	}
	,dotProduct: function(a) {
		return this.x * a.x + this.y * a.y + this.z * a.z;
	}
	,equals: function(toCompare,allFour) {
		if(allFour == null) allFour = false;
		return this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w);
	}
	,incrementBy: function(a) {
		this.x += a.x;
		this.y += a.y;
		this.z += a.z;
	}
	,nearEquals: function(toCompare,tolerance,allFour) {
		if(allFour == null) allFour = false;
		return Math.abs(this.x - toCompare.x) < tolerance && Math.abs(this.y - toCompare.y) < tolerance && Math.abs(this.z - toCompare.z) < tolerance && (!allFour || Math.abs(this.w - toCompare.w) < tolerance);
	}
	,negate: function() {
		this.x *= -1;
		this.y *= -1;
		this.z *= -1;
	}
	,normalize: function() {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(l != 0) {
			this.x /= l;
			this.y /= l;
			this.z /= l;
		}
		return l;
	}
	,project: function() {
		this.x /= this.w;
		this.y /= this.w;
		this.z /= this.w;
	}
	,scaleBy: function(s) {
		this.x *= s;
		this.y *= s;
		this.z *= s;
	}
	,setTo: function(xa,ya,za) {
		this.x = xa;
		this.y = ya;
		this.z = za;
	}
	,subtract: function(a) {
		return new lime_math_Vector4(this.x - a.x,this.y - a.y,this.z - a.z);
	}
	,toString: function() {
		return "Vector4(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,get_lengthSquared: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z;
	}
	,__class__: lime_math_Vector4
	,__properties__: {get_lengthSquared:"get_lengthSquared",get_length:"get_length"}
};
var lime_math_color__$ARGB_ARGB_$Impl_$ = {};
$hxClasses["lime.math.color._ARGB.ARGB_Impl_"] = lime_math_color__$ARGB_ARGB_$Impl_$;
lime_math_color__$ARGB_ARGB_$Impl_$.__name__ = ["lime","math","color","_ARGB","ARGB_Impl_"];
lime_math_color__$ARGB_ARGB_$Impl_$.__properties__ = {set_r:"set_r",get_r:"get_r",set_g:"set_g",get_g:"get_g",set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a"}
lime_math_color__$ARGB_ARGB_$Impl_$.a16 = null;
lime_math_color__$ARGB_ARGB_$Impl_$.unmult = null;
lime_math_color__$ARGB_ARGB_$Impl_$._new = function(argb) {
	if(argb == null) argb = 0;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.create = function(a,r,g,b) {
	var argb = 0;
	argb = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.multiplyAlpha = function(this1) {
	if((this1 >> 24 & 255) == 0) this1 = 0; else if((this1 >> 24 & 255) != 255) {
		lime_math_color__$ARGB_ARGB_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 >> 24 & 255];
		this1 = (this1 >> 24 & 255 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 8 | (this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255;
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.readUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	switch(format) {
	case 2:
		this1 = (data[offset + 1] & 255) << 24 | (data[offset] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset + 2] & 255;
		break;
	case 0:
		this1 = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	case 1:
		this1 = (data[offset + 2] & 255) << 24 | (data[offset + 3] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 1] & 255;
		break;
	}
	if(premultiplied) {
		if((this1 >> 24 & 255) != 0 && (this1 >> 24 & 255) != 255) {
			lime_math_color__$ARGB_ARGB_$Impl_$.unmult = 255.0 / (this1 >> 24 & 255);
			var r;
			var idx = Math.floor((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.floor((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.floor((this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			this1 = (this1 >> 24 & 255 & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
		}
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.set = function(this1,a,r,g,b) {
	this1 = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.unmultiplyAlpha = function(this1) {
	if((this1 >> 24 & 255) != 0 && (this1 >> 24 & 255) != 255) {
		lime_math_color__$ARGB_ARGB_$Impl_$.unmult = 255.0 / (this1 >> 24 & 255);
		var r;
		var idx = Math.floor((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
		r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
		var g;
		var idx1 = Math.floor((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
		g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
		var b;
		var idx2 = Math.floor((this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.unmult);
		b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
		this1 = (this1 >> 24 & 255 & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.writeUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	if(premultiplied) {
		if((this1 >> 24 & 255) == 0) this1 = 0; else if((this1 >> 24 & 255) != 255) {
			lime_math_color__$ARGB_ARGB_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 >> 24 & 255];
			this1 = (this1 >> 24 & 255 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255) << 8 | (this1 & 255) * lime_math_color__$ARGB_ARGB_$Impl_$.a16 >> 16 & 255;
		}
	}
	switch(format) {
	case 2:
		data[offset] = this1 & 255;
		data[offset + 1] = this1 >> 8 & 255;
		data[offset + 2] = this1 >> 16 & 255;
		data[offset + 3] = this1 >> 24 & 255;
		break;
	case 0:
		data[offset] = this1 >> 16 & 255;
		data[offset + 1] = this1 >> 8 & 255;
		data[offset + 2] = this1 & 255;
		data[offset + 3] = this1 >> 24 & 255;
		break;
	case 1:
		data[offset] = this1 >> 24 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 8 & 255;
		data[offset + 3] = this1 & 255;
		break;
	}
};
lime_math_color__$ARGB_ARGB_$Impl_$.__fromBGRA = function(bgra) {
	var argb = 0;
	argb = (bgra & 255 & 255) << 24 | (bgra >> 8 & 255 & 255) << 16 | (bgra >> 16 & 255 & 255) << 8 | bgra >> 24 & 255 & 255;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.__fromRGBA = function(rgba) {
	var argb = 0;
	argb = (rgba & 255 & 255) << 24 | (rgba >> 24 & 255 & 255) << 16 | (rgba >> 16 & 255 & 255) << 8 | rgba >> 8 & 255 & 255;
	return argb;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_a = function(this1) {
	return this1 >> 24 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_a = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_b = function(this1) {
	return this1 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_b = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return value;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_g = function(this1) {
	return this1 >> 8 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$ARGB_ARGB_$Impl_$.get_r = function(this1) {
	return this1 >> 16 & 255;
};
lime_math_color__$ARGB_ARGB_$Impl_$.set_r = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
var lime_math_color__$BGRA_BGRA_$Impl_$ = {};
$hxClasses["lime.math.color._BGRA.BGRA_Impl_"] = lime_math_color__$BGRA_BGRA_$Impl_$;
lime_math_color__$BGRA_BGRA_$Impl_$.__name__ = ["lime","math","color","_BGRA","BGRA_Impl_"];
lime_math_color__$BGRA_BGRA_$Impl_$.__properties__ = {set_r:"set_r",get_r:"get_r",set_g:"set_g",get_g:"get_g",set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a"}
lime_math_color__$BGRA_BGRA_$Impl_$.a16 = null;
lime_math_color__$BGRA_BGRA_$Impl_$.unmult = null;
lime_math_color__$BGRA_BGRA_$Impl_$._new = function(bgra) {
	if(bgra == null) bgra = 0;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.create = function(b,g,r,a) {
	var bgra = 0;
	bgra = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | a & 255;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.multiplyAlpha = function(this1) {
	if((this1 & 255) == 0) this1 = 0; else if((this1 & 255) != 255) {
		lime_math_color__$BGRA_BGRA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
		this1 = ((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.readUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	switch(format) {
	case 2:
		this1 = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		this1 = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		this1 = (data[offset + 3] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 1] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(premultiplied) {
		if((this1 & 255) != 0 && (this1 & 255) != 255) {
			lime_math_color__$BGRA_BGRA_$Impl_$.unmult = 255.0 / (this1 & 255);
			var b;
			var idx = Math.floor((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.floor((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var r;
			var idx2 = Math.floor((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			this1 = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | this1 & 255 & 255;
		}
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.set = function(this1,b,g,r,a) {
	this1 = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | a & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.unmultiplyAlpha = function(this1) {
	if((this1 & 255) != 0 && (this1 & 255) != 255) {
		lime_math_color__$BGRA_BGRA_$Impl_$.unmult = 255.0 / (this1 & 255);
		var b;
		var idx = Math.floor((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
		b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
		var g;
		var idx1 = Math.floor((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
		g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
		var r;
		var idx2 = Math.floor((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.unmult);
		r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
		this1 = (b & 255) << 24 | (g & 255) << 16 | (r & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.writeUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	if(premultiplied) {
		if((this1 & 255) == 0) this1 = 0; else if((this1 & 255) != 255) {
			lime_math_color__$BGRA_BGRA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
			this1 = ((this1 >> 24 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$BGRA_BGRA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
		}
	}
	switch(format) {
	case 2:
		data[offset] = this1 >> 24 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 8 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 0:
		data[offset] = this1 >> 8 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 24 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 1:
		data[offset] = this1 & 255;
		data[offset + 1] = this1 >> 8 & 255;
		data[offset + 2] = this1 >> 16 & 255;
		data[offset + 3] = this1 >> 24 & 255;
		break;
	}
};
lime_math_color__$BGRA_BGRA_$Impl_$.__fromARGB = function(argb) {
	var bgra = 0;
	bgra = (argb & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb >> 16 & 255 & 255) << 8 | argb >> 24 & 255 & 255;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.__fromRGBA = function(rgba) {
	var bgra = 0;
	bgra = (rgba >> 8 & 255 & 255) << 24 | (rgba >> 16 & 255 & 255) << 16 | (rgba >> 24 & 255 & 255) << 8 | rgba & 255 & 255;
	return bgra;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_a = function(this1) {
	return this1 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_a = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return value;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_b = function(this1) {
	return this1 >> 24 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_b = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_g = function(this1) {
	return this1 >> 16 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$BGRA_BGRA_$Impl_$.get_r = function(this1) {
	return this1 >> 8 & 255;
};
lime_math_color__$BGRA_BGRA_$Impl_$.set_r = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return value;
};
var lime_math_color__$RGBA_RGBA_$Impl_$ = {};
$hxClasses["lime.math.color._RGBA.RGBA_Impl_"] = lime_math_color__$RGBA_RGBA_$Impl_$;
lime_math_color__$RGBA_RGBA_$Impl_$.__name__ = ["lime","math","color","_RGBA","RGBA_Impl_"];
lime_math_color__$RGBA_RGBA_$Impl_$.__properties__ = {set_r:"set_r",get_r:"get_r",set_g:"set_g",get_g:"get_g",set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a"}
lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16 = null;
lime_math_color__$RGBA_RGBA_$Impl_$.__clamp = null;
lime_math_color__$RGBA_RGBA_$Impl_$.a16 = null;
lime_math_color__$RGBA_RGBA_$Impl_$.unmult = null;
lime_math_color__$RGBA_RGBA_$Impl_$._new = function(rgba) {
	if(rgba == null) rgba = 0;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.create = function(r,g,b,a) {
	var rgba = 0;
	rgba = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | a & 255;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.multiplyAlpha = function(this1) {
	if((this1 & 255) == 0) {
		if(this1 != 0) this1 = 0;
	} else if((this1 & 255) != 255) {
		lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
		this1 = ((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.readUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	switch(format) {
	case 2:
		this1 = (data[offset + 2] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 0:
		this1 = (data[offset] & 255) << 24 | (data[offset + 1] & 255) << 16 | (data[offset + 2] & 255) << 8 | data[offset + 3] & 255;
		break;
	case 1:
		this1 = (data[offset + 1] & 255) << 24 | (data[offset + 2] & 255) << 16 | (data[offset + 3] & 255) << 8 | data[offset] & 255;
		break;
	}
	if(premultiplied) {
		if((this1 & 255) != 0 && (this1 & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (this1 & 255);
			var r;
			var idx = Math.round((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
			var g;
			var idx1 = Math.round((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
			var b;
			var idx2 = Math.round((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
			b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
			this1 = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | this1 & 255 & 255;
		}
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.set = function(this1,r,g,b,a) {
	this1 = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | a & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.unmultiplyAlpha = function(this1) {
	if((this1 & 255) != 0 && (this1 & 255) != 255) {
		lime_math_color__$RGBA_RGBA_$Impl_$.unmult = 255.0 / (this1 & 255);
		var r;
		var idx = Math.round((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
		r = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx];
		var g;
		var idx1 = Math.round((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
		g = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx1];
		var b;
		var idx2 = Math.round((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.unmult);
		b = lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[idx2];
		this1 = (r & 255) << 24 | (g & 255) << 16 | (b & 255) << 8 | this1 & 255 & 255;
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.writeUInt8 = function(this1,data,offset,format,premultiplied) {
	if(premultiplied == null) premultiplied = false;
	if(format == null) format = 0;
	if(premultiplied) {
		if((this1 & 255) == 0) {
			if(this1 != 0) this1 = 0;
		} else if((this1 & 255) != 255) {
			lime_math_color__$RGBA_RGBA_$Impl_$.a16 = lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[this1 & 255];
			this1 = ((this1 >> 24 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 24 | ((this1 >> 16 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 16 | ((this1 >> 8 & 255) * lime_math_color__$RGBA_RGBA_$Impl_$.a16 >> 16 & 255) << 8 | this1 & 255 & 255;
		}
	}
	switch(format) {
	case 2:
		data[offset] = this1 >> 8 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 24 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 0:
		data[offset] = this1 >> 24 & 255;
		data[offset + 1] = this1 >> 16 & 255;
		data[offset + 2] = this1 >> 8 & 255;
		data[offset + 3] = this1 & 255;
		break;
	case 1:
		data[offset] = this1 & 255;
		data[offset + 1] = this1 >> 24 & 255;
		data[offset + 2] = this1 >> 16 & 255;
		data[offset + 3] = this1 >> 8 & 255;
		break;
	}
};
lime_math_color__$RGBA_RGBA_$Impl_$.__fromARGB = function(argb) {
	var rgba = 0;
	rgba = (argb >> 16 & 255 & 255) << 24 | (argb >> 8 & 255 & 255) << 16 | (argb & 255 & 255) << 8 | argb >> 24 & 255 & 255;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.__fromBGRA = function(bgra) {
	var rgba = 0;
	rgba = (bgra >> 8 & 255 & 255) << 24 | (bgra >> 16 & 255 & 255) << 16 | (bgra >> 24 & 255 & 255) << 8 | bgra & 255 & 255;
	return rgba;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_a = function(this1) {
	return this1 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_a = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return value;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_b = function(this1) {
	return this1 >> 8 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_b = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_g = function(this1) {
	return this1 >> 16 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
lime_math_color__$RGBA_RGBA_$Impl_$.get_r = function(this1) {
	return this1 >> 24 & 255;
};
lime_math_color__$RGBA_RGBA_$Impl_$.set_r = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return value;
};
var lime_net_HTTPRequest = function() {
	this.promise = new lime_app_Promise();
};
$hxClasses["lime.net.HTTPRequest"] = lime_net_HTTPRequest;
lime_net_HTTPRequest.__name__ = ["lime","net","HTTPRequest"];
lime_net_HTTPRequest.prototype = {
	load: function(url) {
		var _g = this;
		this.bytesLoaded = 0;
		this.bytesTotal = 0;
		var request = new XMLHttpRequest();
		request.addEventListener("progress",$bind(this,this.request_onProgress),false);
		request.onreadystatechange = function() {
			if(request.readyState != 4) return;
			if(request.status != null && request.status >= 200 && request.status <= 400) {
				_g.bytes = lime_utils_Bytes.ofData(request.response);
				_g.promise.complete(_g.bytes);
			} else _g.promise.error(request.status);
		};
		request.open("GET",url,true);
		request.responseType = "arraybuffer";
		request.send("");
		return this.promise.future;
	}
	,curl_onProgress: function(dltotal,dlnow,uptotal,upnow) {
		if(upnow > this.bytesLoaded || dlnow > this.bytesLoaded || uptotal > this.bytesTotal || dltotal > this.bytesTotal) {
			if(upnow > this.bytesLoaded) this.bytesLoaded = upnow | 0;
			if(dlnow > this.bytesLoaded) this.bytesLoaded = dlnow | 0;
			if(uptotal > this.bytesTotal) this.bytesTotal = uptotal | 0;
			if(dltotal > this.bytesTotal) this.bytesTotal = dltotal | 0;
			this.promise.progress(this.bytesLoaded / this.bytesTotal);
		}
		return 0;
	}
	,curl_onWrite: function(output,size,nmemb) {
		var cacheBytes = this.bytes;
		this.bytes = lime_utils_Bytes.alloc(this.bytes.length + output.length);
		this.bytes.blit(0,cacheBytes,0,cacheBytes.length);
		this.bytes.blit(cacheBytes.length,output,0,output.length);
		return size * nmemb;
	}
	,request_onProgress: function(event) {
		this.promise.progress(event.loaded / event.total);
	}
	,__class__: lime_net_HTTPRequest
};
var lime_net_curl__$CURL_CURL_$Impl_$ = {};
$hxClasses["lime.net.curl._CURL.CURL_Impl_"] = lime_net_curl__$CURL_CURL_$Impl_$;
lime_net_curl__$CURL_CURL_$Impl_$.__name__ = ["lime","net","curl","_CURL","CURL_Impl_"];
lime_net_curl__$CURL_CURL_$Impl_$.getDate = function(date,now) {
	return 0;
};
lime_net_curl__$CURL_CURL_$Impl_$.globalCleanup = function() {
};
lime_net_curl__$CURL_CURL_$Impl_$.globalInit = function(flags) {
	return 0;
};
lime_net_curl__$CURL_CURL_$Impl_$.version = function() {
	return null;
};
lime_net_curl__$CURL_CURL_$Impl_$.versionInfo = function(type) {
	return null;
};
lime_net_curl__$CURL_CURL_$Impl_$.intGt = function(a,b) {
	return a > b;
};
var lime_net_curl_CURLEasy = function() { };
$hxClasses["lime.net.curl.CURLEasy"] = lime_net_curl_CURLEasy;
lime_net_curl_CURLEasy.__name__ = ["lime","net","curl","CURLEasy"];
lime_net_curl_CURLEasy.cleanup = function(handle) {
};
lime_net_curl_CURLEasy.duphandle = function(handle) {
	return 0;
};
lime_net_curl_CURLEasy.escape = function(handle,url,length) {
	return null;
};
lime_net_curl_CURLEasy.getinfo = function(handle,info) {
	return null;
};
lime_net_curl_CURLEasy.init = function() {
	return 0;
};
lime_net_curl_CURLEasy.pause = function(handle,bitMask) {
	return 0;
};
lime_net_curl_CURLEasy.perform = function(handle) {
	return 0;
};
lime_net_curl_CURLEasy.reset = function(handle) {
};
lime_net_curl_CURLEasy.setopt = function(handle,option,parameter) {
	return 0;
};
lime_net_curl_CURLEasy.strerror = function(code) {
	return null;
};
lime_net_curl_CURLEasy.unescape = function(handle,url,inLength,outLength) {
	return null;
};
lime_net_curl_CURLEasy.__writeCallback = function(callback,output,size,nmemb) {
	return 0;
};
var lime_system_BackgroundWorker = function() {
	this.onProgress = new lime_app_Event_$Dynamic_$Void();
	this.onError = new lime_app_Event_$Dynamic_$Void();
	this.onComplete = new lime_app_Event_$Dynamic_$Void();
	this.doWork = new lime_app_Event_$Dynamic_$Void();
};
$hxClasses["lime.system.BackgroundWorker"] = lime_system_BackgroundWorker;
lime_system_BackgroundWorker.__name__ = ["lime","system","BackgroundWorker"];
lime_system_BackgroundWorker.prototype = {
	cancel: function() {
		this.canceled = true;
	}
	,run: function(message) {
		this.canceled = false;
		this.__runMessage = message;
		this.__doWork();
	}
	,sendComplete: function(message) {
		if(!this.canceled) {
			this.canceled = true;
			this.onComplete.dispatch(message);
		}
	}
	,sendError: function(message) {
		if(!this.canceled) {
			this.canceled = true;
			this.onError.dispatch(message);
		}
	}
	,sendProgress: function(message) {
		if(!this.canceled) this.onProgress.dispatch(message);
	}
	,__doWork: function() {
		this.doWork.dispatch(this.__runMessage);
	}
	,__update: function(deltaTime) {
	}
	,__class__: lime_system_BackgroundWorker
};
var lime_system_CFFI = function() { };
$hxClasses["lime.system.CFFI"] = lime_system_CFFI;
lime_system_CFFI.__name__ = ["lime","system","CFFI"];
lime_system_CFFI.available = null;
lime_system_CFFI.enabled = null;
lime_system_CFFI.load = function(library,method,args,lazy) {
	if(lazy == null) lazy = false;
	if(args == null) args = 0;
	if(!lime_system_CFFI.enabled) return Reflect.makeVarArgs(function(__) {
		return { };
	});
	var result = null;
	return result;
};
lime_system_CFFI.__findHaxelib = function(library) {
	return "";
};
lime_system_CFFI.__loaderTrace = function(message) {
};
lime_system_CFFI.__sysName = function() {
	return null;
};
lime_system_CFFI.__tryLoad = function(name,library,func,args) {
	return null;
};
var lime_system__$CFFIPointer_CFFIPointer_$Impl_$ = {};
$hxClasses["lime.system._CFFIPointer.CFFIPointer_Impl_"] = lime_system__$CFFIPointer_CFFIPointer_$Impl_$;
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.__name__ = ["lime","system","_CFFIPointer","CFFIPointer_Impl_"];
lime_system__$CFFIPointer_CFFIPointer_$Impl_$._new = function(handle) {
	return handle;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get = function(this1) {
	if(this1 != null) {
	}
	return 0;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.equals = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) == b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.equalsPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) == lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThan = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) > b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThanPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) > lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThanOrEqual = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) >= b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.greaterThanOrEqualPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) >= lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThan = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) < b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThanPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) < lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThanOrEqual = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) <= b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.lessThanOrEqualPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) <= lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.notEquals = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) != b;
};
lime_system__$CFFIPointer_CFFIPointer_$Impl_$.notEqualsPointer = function(a,b) {
	return lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(a) != lime_system__$CFFIPointer_CFFIPointer_$Impl_$.get(b);
};
var lime_system_Clipboard = function() { };
$hxClasses["lime.system.Clipboard"] = lime_system_Clipboard;
lime_system_Clipboard.__name__ = ["lime","system","Clipboard"];
lime_system_Clipboard.__properties__ = {set_text:"set_text",get_text:"get_text"}
lime_system_Clipboard.get_text = function() {
	return null;
};
lime_system_Clipboard.set_text = function(value) {
	return null;
};
var lime_system_Display = function() {
};
$hxClasses["lime.system.Display"] = lime_system_Display;
lime_system_Display.__name__ = ["lime","system","Display"];
lime_system_Display.prototype = {
	__class__: lime_system_Display
};
var lime_system_DisplayMode = function(width,height,refreshRate,pixelFormat) {
	this.width = width;
	this.height = height;
	this.refreshRate = refreshRate;
	this.pixelFormat = pixelFormat;
};
$hxClasses["lime.system.DisplayMode"] = lime_system_DisplayMode;
lime_system_DisplayMode.__name__ = ["lime","system","DisplayMode"];
lime_system_DisplayMode.prototype = {
	__class__: lime_system_DisplayMode
};
var lime_system_Endian = $hxClasses["lime.system.Endian"] = { __ename__ : ["lime","system","Endian"], __constructs__ : ["LITTLE_ENDIAN","BIG_ENDIAN"] };
lime_system_Endian.LITTLE_ENDIAN = ["LITTLE_ENDIAN",0];
lime_system_Endian.LITTLE_ENDIAN.toString = $estr;
lime_system_Endian.LITTLE_ENDIAN.__enum__ = lime_system_Endian;
lime_system_Endian.BIG_ENDIAN = ["BIG_ENDIAN",1];
lime_system_Endian.BIG_ENDIAN.toString = $estr;
lime_system_Endian.BIG_ENDIAN.__enum__ = lime_system_Endian;
lime_system_Endian.__empty_constructs__ = [lime_system_Endian.LITTLE_ENDIAN,lime_system_Endian.BIG_ENDIAN];
var lime_system_System = function() { };
$hxClasses["lime.system.System"] = lime_system_System;
lime_system_System.__name__ = ["lime","system","System"];
lime_system_System.__properties__ = {get_userDirectory:"get_userDirectory",get_numDisplays:"get_numDisplays",get_fontsDirectory:"get_fontsDirectory",get_endianness:"get_endianness",get_documentsDirectory:"get_documentsDirectory",get_desktopDirectory:"get_desktopDirectory",get_applicationStorageDirectory:"get_applicationStorageDirectory",get_applicationDirectory:"get_applicationDirectory",set_allowScreenTimeout:"set_allowScreenTimeout",get_allowScreenTimeout:"get_allowScreenTimeout"}
lime_system_System.applicationDirectory = null;
lime_system_System.applicationStorageDirectory = null;
lime_system_System.desktopDirectory = null;
lime_system_System.disableCFFI = null;
lime_system_System.documentsDirectory = null;
lime_system_System.endianness = null;
lime_system_System.fontsDirectory = null;
lime_system_System.numDisplays = null;
lime_system_System.userDirectory = null;
lime_system_System.embed = $hx_exports.lime.embed = function(element,width,height,background,assetsPrefix) {
	var htmlElement = null;
	if(typeof(element) == "string") htmlElement = window.document.getElementById(js_Boot.__cast(element , String)); else if(element == null) htmlElement = window.document.createElement("div"); else htmlElement = element;
	var color = null;
	if(background != null) {
		background = StringTools.replace(background,"#","");
		if(background.indexOf("0x") > -1) color = Std.parseInt(background); else color = Std.parseInt("0x" + background);
	}
	if(width == null) width = 0;
	if(height == null) height = 0;
	ApplicationMain.config.windows[0].background = color;
	ApplicationMain.config.windows[0].element = htmlElement;
	ApplicationMain.config.windows[0].width = width;
	ApplicationMain.config.windows[0].height = height;
	ApplicationMain.config.assetsPrefix = assetsPrefix;
	ApplicationMain.create();
};
lime_system_System.exit = function(code) {
};
lime_system_System.getDisplay = function(id) {
	if(id == 0) {
		var display = new lime_system_Display();
		display.id = 0;
		display.name = "Generic Display";
		display.currentMode = new lime_system_DisplayMode(window.screen.width,window.screen.height,60,1);
		display.supportedModes = [display.currentMode];
		display.bounds = new lime_math_Rectangle(0,0,display.currentMode.width,display.currentMode.height);
		return display;
	}
	return null;
};
lime_system_System.getTimer = function() {
	return new Date().getTime();
};
lime_system_System.load = function(library,method,args,lazy) {
	if(lazy == null) lazy = false;
	if(args == null) args = 0;
	return lime_system_CFFI.load(library,method,args,lazy);
};
lime_system_System.get_allowScreenTimeout = function() {
	return true;
};
lime_system_System.set_allowScreenTimeout = function(value) {
	return true;
};
lime_system_System.get_applicationDirectory = function() {
	return null;
};
lime_system_System.get_applicationStorageDirectory = function() {
	var company = "MyCompany";
	var file = "MyApplication";
	if(lime_app_Application.current != null && lime_app_Application.current.config != null) {
		if(lime_app_Application.current.config.company != null) company = lime_app_Application.current.config.company;
		if(lime_app_Application.current.config.file != null) file = lime_app_Application.current.config.file;
	}
	return null;
};
lime_system_System.get_desktopDirectory = function() {
	return null;
};
lime_system_System.get_documentsDirectory = function() {
	return null;
};
lime_system_System.get_fontsDirectory = function() {
	return null;
};
lime_system_System.get_numDisplays = function() {
	return 1;
};
lime_system_System.get_userDirectory = function() {
	return null;
};
lime_system_System.get_endianness = function() {
	return lime_system_Endian.LITTLE_ENDIAN;
};
var lime_system_ThreadPool = function(minThreads,maxThreads) {
	if(maxThreads == null) maxThreads = 1;
	if(minThreads == null) minThreads = 0;
	this.onProgress = new lime_app_Event_$Dynamic_$Void();
	this.onError = new lime_app_Event_$Dynamic_$Void();
	this.onComplete = new lime_app_Event_$Dynamic_$Void();
	this.doWork = new lime_app_Event_$Dynamic_$Void();
	this.minThreads = minThreads;
	this.maxThreads = maxThreads;
	this.currentThreads = 0;
};
$hxClasses["lime.system.ThreadPool"] = lime_system_ThreadPool;
lime_system_ThreadPool.__name__ = ["lime","system","ThreadPool"];
lime_system_ThreadPool.prototype = {
	queue: function(state) {
		this.doWork.dispatch(state);
	}
	,sendComplete: function(state) {
		this.onComplete.dispatch(state);
	}
	,sendError: function(state) {
		this.onError.dispatch(state);
	}
	,sendProgress: function(state) {
		this.onProgress.dispatch(state);
	}
	,__class__: lime_system_ThreadPool
};
var lime_system__$ThreadPool_ThreadPoolMessageType = $hxClasses["lime.system._ThreadPool.ThreadPoolMessageType"] = { __ename__ : ["lime","system","_ThreadPool","ThreadPoolMessageType"], __constructs__ : ["COMPLETE","ERROR","EXIT","PROGRESS","WORK"] };
lime_system__$ThreadPool_ThreadPoolMessageType.COMPLETE = ["COMPLETE",0];
lime_system__$ThreadPool_ThreadPoolMessageType.COMPLETE.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.COMPLETE.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.ERROR = ["ERROR",1];
lime_system__$ThreadPool_ThreadPoolMessageType.ERROR.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.ERROR.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.EXIT = ["EXIT",2];
lime_system__$ThreadPool_ThreadPoolMessageType.EXIT.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.EXIT.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.PROGRESS = ["PROGRESS",3];
lime_system__$ThreadPool_ThreadPoolMessageType.PROGRESS.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.PROGRESS.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.WORK = ["WORK",4];
lime_system__$ThreadPool_ThreadPoolMessageType.WORK.toString = $estr;
lime_system__$ThreadPool_ThreadPoolMessageType.WORK.__enum__ = lime_system__$ThreadPool_ThreadPoolMessageType;
lime_system__$ThreadPool_ThreadPoolMessageType.__empty_constructs__ = [lime_system__$ThreadPool_ThreadPoolMessageType.COMPLETE,lime_system__$ThreadPool_ThreadPoolMessageType.ERROR,lime_system__$ThreadPool_ThreadPoolMessageType.EXIT,lime_system__$ThreadPool_ThreadPoolMessageType.PROGRESS,lime_system__$ThreadPool_ThreadPoolMessageType.WORK];
var lime_system__$ThreadPool_ThreadPoolMessage = function(type,state) {
	this.type = type;
	this.state = state;
};
$hxClasses["lime.system._ThreadPool.ThreadPoolMessage"] = lime_system__$ThreadPool_ThreadPoolMessage;
lime_system__$ThreadPool_ThreadPoolMessage.__name__ = ["lime","system","_ThreadPool","ThreadPoolMessage"];
lime_system__$ThreadPool_ThreadPoolMessage.prototype = {
	__class__: lime_system__$ThreadPool_ThreadPoolMessage
};
var lime_text_Font = function(name) {
	if(name != null) this.name = name;
	if(this.__fontPath != null) this.__fromFile(this.__fontPath);
};
$hxClasses["lime.text.Font"] = lime_text_Font;
lime_text_Font.__name__ = ["lime","text","Font"];
lime_text_Font.fromBytes = function(bytes) {
	var font = new lime_text_Font();
	font.__fromBytes(bytes);
	return font;
};
lime_text_Font.fromFile = function(path) {
	var font = new lime_text_Font();
	font.__fromFile(path);
	return font;
};
lime_text_Font.prototype = {
	decompose: function() {
		return null;
	}
	,getGlyph: function(character) {
		return -1;
	}
	,getGlyphs: function(characters) {
		if(characters == null) characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\"/\\&*()[]{}<>|:;_-+=?,. ";
		return null;
	}
	,getGlyphMetrics: function(glyph) {
		return null;
	}
	,renderGlyph: function(glyph,fontSize) {
		return null;
	}
	,renderGlyphs: function(glyphs,fontSize) {
		return null;
	}
	,__fromBytes: function(bytes) {
		this.__fontPath = null;
	}
	,__fromFile: function(path) {
		this.__fontPath = path;
	}
	,get_ascender: function() {
		return 0;
	}
	,get_descender: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_numGlyphs: function() {
		return 0;
	}
	,get_underlinePosition: function() {
		return 0;
	}
	,get_underlineThickness: function() {
		return 0;
	}
	,get_unitsPerEM: function() {
		return 0;
	}
	,__class__: lime_text_Font
	,__properties__: {get_unitsPerEM:"get_unitsPerEM",get_underlineThickness:"get_underlineThickness",get_underlinePosition:"get_underlinePosition",get_numGlyphs:"get_numGlyphs",get_height:"get_height",get_descender:"get_descender",get_ascender:"get_ascender"}
};
var lime_text__$Glyph_Glyph_$Impl_$ = {};
$hxClasses["lime.text._Glyph.Glyph_Impl_"] = lime_text__$Glyph_Glyph_$Impl_$;
lime_text__$Glyph_Glyph_$Impl_$.__name__ = ["lime","text","_Glyph","Glyph_Impl_"];
lime_text__$Glyph_Glyph_$Impl_$._new = function(i) {
	return i;
};
var lime_text_GlyphMetrics = function() {
};
$hxClasses["lime.text.GlyphMetrics"] = lime_text_GlyphMetrics;
lime_text_GlyphMetrics.__name__ = ["lime","text","GlyphMetrics"];
lime_text_GlyphMetrics.prototype = {
	__class__: lime_text_GlyphMetrics
};
var lime_text_GlyphPosition = function(glyph,advance,offset) {
	this.glyph = glyph;
	this.advance = advance;
	if(offset != null) this.offset = offset; else this.offset = new lime_math_Vector2();
};
$hxClasses["lime.text.GlyphPosition"] = lime_text_GlyphPosition;
lime_text_GlyphPosition.__name__ = ["lime","text","GlyphPosition"];
lime_text_GlyphPosition.prototype = {
	__class__: lime_text_GlyphPosition
};
var lime_text__$TextDirection_TextDirection_$Impl_$ = {};
$hxClasses["lime.text._TextDirection.TextDirection_Impl_"] = lime_text__$TextDirection_TextDirection_$Impl_$;
lime_text__$TextDirection_TextDirection_$Impl_$.__name__ = ["lime","text","_TextDirection","TextDirection_Impl_"];
lime_text__$TextDirection_TextDirection_$Impl_$.__properties__ = {get_vertical:"get_vertical",get_horizontal:"get_horizontal",get_forward:"get_forward",get_backward:"get_backward"}
lime_text__$TextDirection_TextDirection_$Impl_$.reverse = function(this1) {
	this1 = this1 ^ 1;
};
lime_text__$TextDirection_TextDirection_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 4:
		return "leftToRight";
	case 5:
		return "rightToLeft";
	case 6:
		return "topToBottom";
	case 7:
		return "bottomToTop";
	default:
		return "";
	}
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_backward = function(this1) {
	return (this1 & -3) == 5;
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_forward = function(this1) {
	return (this1 & -3) == 4;
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_horizontal = function(this1) {
	return (this1 & -2) == 4;
};
lime_text__$TextDirection_TextDirection_$Impl_$.get_vertical = function(this1) {
	return (this1 & -2) == 6;
};
var lime_text_TextLayout = function(text,font,size,direction,script,language) {
	if(language == null) language = "en";
	if(script == null) script = "Zyyy";
	if(direction == null) direction = 4;
	if(size == null) size = 12;
	if(text == null) text = "";
	this.set_text(text);
	this.set_font(font);
	this.set_size(size);
	this.__direction = direction;
	this.__script = script;
	this.__language = language;
	this.positions = [];
	this.__dirty = true;
};
$hxClasses["lime.text.TextLayout"] = lime_text_TextLayout;
lime_text_TextLayout.__name__ = ["lime","text","TextLayout"];
lime_text_TextLayout.prototype = {
	__position: function() {
		this.positions = [];
	}
	,get_positions: function() {
		if(this.__dirty) {
			this.__dirty = false;
			this.__position();
		}
		return this.positions;
	}
	,get_direction: function() {
		return this.__direction;
	}
	,set_direction: function(value) {
		if(value == this.__direction) return value;
		this.__direction = value;
		this.__dirty = true;
		return value;
	}
	,set_font: function(value) {
		if(value == this.font) return value;
		this.font = value;
		this.__dirty = true;
		return value;
	}
	,get_glyphs: function() {
		var glyphs = [];
		var _g = 0;
		var _g1 = this.get_positions();
		while(_g < _g1.length) {
			var position = _g1[_g];
			++_g;
			glyphs.push(position.glyph);
		}
		return glyphs;
	}
	,get_language: function() {
		return this.__language;
	}
	,set_language: function(value) {
		if(value == this.__language) return value;
		this.__language = value;
		this.__dirty = true;
		return value;
	}
	,get_script: function() {
		return this.__script;
	}
	,set_script: function(value) {
		if(value == this.__script) return value;
		this.__script = value;
		this.__dirty = true;
		return value;
	}
	,set_size: function(value) {
		if(value == this.size) return value;
		this.size = value;
		this.__dirty = true;
		return value;
	}
	,set_text: function(value) {
		if(value == this.text) return value;
		this.text = value;
		this.__dirty = true;
		return value;
	}
	,__class__: lime_text_TextLayout
	,__properties__: {set_text:"set_text",set_size:"set_size",set_script:"set_script",get_script:"get_script",get_positions:"get_positions",set_language:"set_language",get_language:"get_language",get_glyphs:"get_glyphs",set_font:"set_font",set_direction:"set_direction",get_direction:"get_direction"}
};
var lime_text__$TextScript_TextScript_$Impl_$ = {};
$hxClasses["lime.text._TextScript.TextScript_Impl_"] = lime_text__$TextScript_TextScript_$Impl_$;
lime_text__$TextScript_TextScript_$Impl_$.__name__ = ["lime","text","_TextScript","TextScript_Impl_"];
lime_text__$TextScript_TextScript_$Impl_$.__properties__ = {get_rightToLeft:"get_rightToLeft"}
lime_text__$TextScript_TextScript_$Impl_$.get_rightToLeft = function(this1) {
	switch(this1) {
	case "Hebr":case "Arab":case "Syrc":case "Thaa":case "Nkoo":case "Samr":case "Mand":case "Armi":case "Phnx":case "Lydi":case "Cprt":case "Khar":case "Sarb":case "Avst":case "Phli":case "Phlp":case "Orkh":
		return true;
	default:
		return false;
	}
};
var lime_ui_Gamepad = function(id) {
	this.onDisconnect = new lime_app_Event_$Void_$Void();
	this.onButtonUp = new lime_app_Event_$lime_$ui_$GamepadButton_$Void();
	this.onButtonDown = new lime_app_Event_$lime_$ui_$GamepadButton_$Void();
	this.onAxisMove = new lime_app_Event_$lime_$ui_$GamepadAxis_$Float_$Void();
	this.id = id;
	this.connected = true;
};
$hxClasses["lime.ui.Gamepad"] = lime_ui_Gamepad;
lime_ui_Gamepad.__name__ = ["lime","ui","Gamepad"];
lime_ui_Gamepad.addMappings = function(mappings) {
};
lime_ui_Gamepad.__connect = function(id) {
	if(!lime_ui_Gamepad.devices.h.hasOwnProperty(id)) {
		var gamepad = new lime_ui_Gamepad(id);
		lime_ui_Gamepad.devices.h[id] = gamepad;
		lime_ui_Gamepad.onConnect.dispatch(gamepad);
	}
};
lime_ui_Gamepad.__disconnect = function(id) {
	var gamepad = lime_ui_Gamepad.devices.h[id];
	if(gamepad != null) gamepad.connected = false;
	lime_ui_Gamepad.devices.remove(id);
	if(gamepad != null) gamepad.onDisconnect.dispatch();
};
lime_ui_Gamepad.prototype = {
	get_guid: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,get_name: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,__class__: lime_ui_Gamepad
	,__properties__: {get_name:"get_name",get_guid:"get_guid"}
};
var lime_ui__$GamepadAxis_GamepadAxis_$Impl_$ = {};
$hxClasses["lime.ui._GamepadAxis.GamepadAxis_Impl_"] = lime_ui__$GamepadAxis_GamepadAxis_$Impl_$;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.__name__ = ["lime","ui","_GamepadAxis","GamepadAxis_Impl_"];
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "LEFT_X";
	case 1:
		return "LEFT_Y";
	case 2:
		return "RIGHT_X";
	case 3:
		return "RIGHT_Y";
	case 4:
		return "TRIGGER_LEFT";
	case 5:
		return "TRIGGER_RIGHT";
	default:
		return "UNKNOWN (" + this1 + ")";
	}
};
var lime_ui__$GamepadButton_GamepadButton_$Impl_$ = {};
$hxClasses["lime.ui._GamepadButton.GamepadButton_Impl_"] = lime_ui__$GamepadButton_GamepadButton_$Impl_$;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.__name__ = ["lime","ui","_GamepadButton","GamepadButton_Impl_"];
lime_ui__$GamepadButton_GamepadButton_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "A";
	case 1:
		return "B";
	case 2:
		return "X";
	case 3:
		return "Y";
	case 4:
		return "BACK";
	case 5:
		return "GUIDE";
	case 6:
		return "START";
	case 7:
		return "LEFT_STICK";
	case 8:
		return "RIGHT_STICK";
	case 9:
		return "LEFT_SHOULDER";
	case 10:
		return "RIGHT_SHOULDER";
	case 11:
		return "DPAD_UP";
	case 12:
		return "DPAD_DOWN";
	case 13:
		return "DPAD_LEFT";
	case 14:
		return "DPAD_RIGHT";
	default:
		return "UNKNOWN (" + this1 + ")";
	}
};
var lime_ui_Joystick = function(id) {
	this.onTrackballMove = new lime_app_Event_$Int_$Float_$Void();
	this.onHatMove = new lime_app_Event_$Int_$lime_$ui_$JoystickHatPosition_$Void();
	this.onDisconnect = new lime_app_Event_$Void_$Void();
	this.onButtonUp = new lime_app_Event_$Int_$Void();
	this.onButtonDown = new lime_app_Event_$Int_$Void();
	this.onAxisMove = new lime_app_Event_$Int_$Float_$Void();
	this.id = id;
	this.connected = true;
};
$hxClasses["lime.ui.Joystick"] = lime_ui_Joystick;
lime_ui_Joystick.__name__ = ["lime","ui","Joystick"];
lime_ui_Joystick.__connect = function(id) {
	if(!lime_ui_Joystick.devices.h.hasOwnProperty(id)) {
		var joystick = new lime_ui_Joystick(id);
		lime_ui_Joystick.devices.h[id] = joystick;
		lime_ui_Joystick.onConnect.dispatch(joystick);
	}
};
lime_ui_Joystick.__disconnect = function(id) {
	var joystick = lime_ui_Joystick.devices.h[id];
	if(joystick != null) joystick.connected = false;
	lime_ui_Joystick.devices.remove(id);
	if(joystick != null) joystick.onDisconnect.dispatch();
};
lime_ui_Joystick.__getDeviceData = function() {
	if(navigator.getGamepads) return navigator.getGamepads(); else if(navigator.webkitGetGamepads) return navigator.webkitGetGamepads(); else return null;
};
lime_ui_Joystick.prototype = {
	get_guid: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,get_name: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].id;
	}
	,get_numAxes: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].axes.length;
	}
	,get_numButtons: function() {
		var devices = lime_ui_Joystick.__getDeviceData();
		return devices[this.id].buttons.length;
	}
	,get_numHats: function() {
		return 0;
	}
	,get_numTrackballs: function() {
		return 0;
	}
	,__class__: lime_ui_Joystick
	,__properties__: {get_numTrackballs:"get_numTrackballs",get_numHats:"get_numHats",get_numButtons:"get_numButtons",get_numAxes:"get_numAxes",get_name:"get_name",get_guid:"get_guid"}
};
var lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$ = {};
$hxClasses["lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_"] = lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.__name__ = ["lime","ui","_JoystickHatPosition","JoystickHatPosition_Impl_"];
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.__properties__ = {set_up:"set_up",get_up:"get_up",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_down:"set_down",get_down:"get_down",set_center:"set_center",get_center:"get_center"}
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$._new = function(value) {
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_center = function(this1) {
	return this1 == 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_center = function(this1,value) {
	if(value) this1 = 0;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_down = function(this1) {
	return (this1 & 4) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_down = function(this1,value) {
	if(value) this1 |= 4; else this1 &= 268435455 - 4;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_left = function(this1) {
	return (this1 & 8) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_left = function(this1,value) {
	if(value) this1 |= 8; else this1 &= 268435455 - 8;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_right = function(this1) {
	return (this1 & 2) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_right = function(this1,value) {
	if(value) this1 |= 2; else this1 &= 268435455 - 2;
	return value;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.get_up = function(this1) {
	return (this1 & 1) > 0;
};
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.set_up = function(this1,value) {
	if(value) this1 |= 1; else this1 &= 268435455 - 1;
	return value;
};
var lime_ui__$KeyCode_KeyCode_$Impl_$ = {};
$hxClasses["lime.ui._KeyCode.KeyCode_Impl_"] = lime_ui__$KeyCode_KeyCode_$Impl_$;
lime_ui__$KeyCode_KeyCode_$Impl_$.__name__ = ["lime","ui","_KeyCode","KeyCode_Impl_"];
lime_ui__$KeyCode_KeyCode_$Impl_$.gt = function(a,b) {
	return a > b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.gte = function(a,b) {
	return a >= b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.lt = function(a,b) {
	return a < b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.lte = function(a,b) {
	return a <= b;
};
lime_ui__$KeyCode_KeyCode_$Impl_$.plus = function(a,b) {
	return a + b;
};
var lime_ui__$KeyModifier_KeyModifier_$Impl_$ = {};
$hxClasses["lime.ui._KeyModifier.KeyModifier_Impl_"] = lime_ui__$KeyModifier_KeyModifier_$Impl_$;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.__name__ = ["lime","ui","_KeyModifier","KeyModifier_Impl_"];
lime_ui__$KeyModifier_KeyModifier_$Impl_$.__properties__ = {set_shiftKey:"set_shiftKey",get_shiftKey:"get_shiftKey",set_numLock:"set_numLock",get_numLock:"get_numLock",set_metaKey:"set_metaKey",get_metaKey:"get_metaKey",set_ctrlKey:"set_ctrlKey",get_ctrlKey:"get_ctrlKey",set_capsLock:"set_capsLock",get_capsLock:"get_capsLock",set_altKey:"set_altKey",get_altKey:"get_altKey"}
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey = function(this1) {
	return (this1 & 256) > 0 || (this1 & 512) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_altKey = function(this1,value) {
	if(value) this1 |= 768; else this1 &= 268435455 - 768;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_capsLock = function(this1) {
	return (this1 & 8192) > 0 || (this1 & 8192) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_capsLock = function(this1,value) {
	if(value) this1 |= 8192; else this1 &= 268435455 - 8192;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey = function(this1) {
	return (this1 & 64) > 0 || (this1 & 128) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_ctrlKey = function(this1,value) {
	if(value) this1 |= 192; else this1 &= 268435455 - 192;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey = function(this1) {
	return (this1 & 1024) > 0 || (this1 & 2048) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_metaKey = function(this1,value) {
	if(value) this1 |= 3072; else this1 &= 268435455 - 3072;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_numLock = function(this1) {
	return (this1 & 4096) > 0 || (this1 & 4096) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_numLock = function(this1,value) {
	if(value) this1 |= 4096; else this1 &= 268435455 - 4096;
	return value;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey = function(this1) {
	return (this1 & 1) > 0 || (this1 & 2) > 0;
};
lime_ui__$KeyModifier_KeyModifier_$Impl_$.set_shiftKey = function(this1,value) {
	if(value) this1 |= 3; else this1 &= 268435455 - 3;
	return value;
};
var lime_ui_Mouse = function() { };
$hxClasses["lime.ui.Mouse"] = lime_ui_Mouse;
lime_ui_Mouse.__name__ = ["lime","ui","Mouse"];
lime_ui_Mouse.__properties__ = {set_lock:"set_lock",get_lock:"get_lock",set_cursor:"set_cursor",get_cursor:"get_cursor"}
lime_ui_Mouse.hide = function() {
	lime__$backend_html5_HTML5Mouse.hide();
};
lime_ui_Mouse.show = function() {
	lime__$backend_html5_HTML5Mouse.show();
};
lime_ui_Mouse.warp = function(x,y,window) {
	lime__$backend_html5_HTML5Mouse.warp(x,y,window);
};
lime_ui_Mouse.get_cursor = function() {
	return lime__$backend_html5_HTML5Mouse.get_cursor();
};
lime_ui_Mouse.set_cursor = function(value) {
	return lime__$backend_html5_HTML5Mouse.set_cursor(value);
};
lime_ui_Mouse.get_lock = function() {
	return lime__$backend_html5_HTML5Mouse.get_lock();
};
lime_ui_Mouse.set_lock = function(value) {
	return lime__$backend_html5_HTML5Mouse.set_lock(value);
};
var lime_ui_MouseCursor = $hxClasses["lime.ui.MouseCursor"] = { __ename__ : ["lime","ui","MouseCursor"], __constructs__ : ["ARROW","CROSSHAIR","DEFAULT","MOVE","POINTER","RESIZE_NESW","RESIZE_NS","RESIZE_NWSE","RESIZE_WE","TEXT","WAIT","WAIT_ARROW","CUSTOM"] };
lime_ui_MouseCursor.ARROW = ["ARROW",0];
lime_ui_MouseCursor.ARROW.toString = $estr;
lime_ui_MouseCursor.ARROW.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.CROSSHAIR = ["CROSSHAIR",1];
lime_ui_MouseCursor.CROSSHAIR.toString = $estr;
lime_ui_MouseCursor.CROSSHAIR.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.DEFAULT = ["DEFAULT",2];
lime_ui_MouseCursor.DEFAULT.toString = $estr;
lime_ui_MouseCursor.DEFAULT.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.MOVE = ["MOVE",3];
lime_ui_MouseCursor.MOVE.toString = $estr;
lime_ui_MouseCursor.MOVE.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.POINTER = ["POINTER",4];
lime_ui_MouseCursor.POINTER.toString = $estr;
lime_ui_MouseCursor.POINTER.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_NESW = ["RESIZE_NESW",5];
lime_ui_MouseCursor.RESIZE_NESW.toString = $estr;
lime_ui_MouseCursor.RESIZE_NESW.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_NS = ["RESIZE_NS",6];
lime_ui_MouseCursor.RESIZE_NS.toString = $estr;
lime_ui_MouseCursor.RESIZE_NS.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_NWSE = ["RESIZE_NWSE",7];
lime_ui_MouseCursor.RESIZE_NWSE.toString = $estr;
lime_ui_MouseCursor.RESIZE_NWSE.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.RESIZE_WE = ["RESIZE_WE",8];
lime_ui_MouseCursor.RESIZE_WE.toString = $estr;
lime_ui_MouseCursor.RESIZE_WE.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.TEXT = ["TEXT",9];
lime_ui_MouseCursor.TEXT.toString = $estr;
lime_ui_MouseCursor.TEXT.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.WAIT = ["WAIT",10];
lime_ui_MouseCursor.WAIT.toString = $estr;
lime_ui_MouseCursor.WAIT.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.WAIT_ARROW = ["WAIT_ARROW",11];
lime_ui_MouseCursor.WAIT_ARROW.toString = $estr;
lime_ui_MouseCursor.WAIT_ARROW.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.CUSTOM = ["CUSTOM",12];
lime_ui_MouseCursor.CUSTOM.toString = $estr;
lime_ui_MouseCursor.CUSTOM.__enum__ = lime_ui_MouseCursor;
lime_ui_MouseCursor.__empty_constructs__ = [lime_ui_MouseCursor.ARROW,lime_ui_MouseCursor.CROSSHAIR,lime_ui_MouseCursor.DEFAULT,lime_ui_MouseCursor.MOVE,lime_ui_MouseCursor.POINTER,lime_ui_MouseCursor.RESIZE_NESW,lime_ui_MouseCursor.RESIZE_NS,lime_ui_MouseCursor.RESIZE_NWSE,lime_ui_MouseCursor.RESIZE_WE,lime_ui_MouseCursor.TEXT,lime_ui_MouseCursor.WAIT,lime_ui_MouseCursor.WAIT_ARROW,lime_ui_MouseCursor.CUSTOM];
var lime_ui_Touch = function(x,y,id,dx,dy,pressure,device) {
	this.x = x;
	this.y = y;
	this.id = id;
	this.dx = dx;
	this.dy = dy;
	this.pressure = pressure;
	this.device = device;
};
$hxClasses["lime.ui.Touch"] = lime_ui_Touch;
lime_ui_Touch.__name__ = ["lime","ui","Touch"];
lime_ui_Touch.prototype = {
	__class__: lime_ui_Touch
};
var lime_ui_Window = function(config) {
	this.onTextInput = new lime_app_Event_$String_$Void();
	this.onTextEdit = new lime_app_Event_$String_$Int_$Int_$Void();
	this.onRestore = new lime_app_Event_$Void_$Void();
	this.onResize = new lime_app_Event_$Int_$Int_$Void();
	this.onMove = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseWheel = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseUp = new lime_app_Event_$Float_$Float_$Int_$Void();
	this.onMouseMoveRelative = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseMove = new lime_app_Event_$Float_$Float_$Void();
	this.onMouseDown = new lime_app_Event_$Float_$Float_$Int_$Void();
	this.onMinimize = new lime_app_Event_$Void_$Void();
	this.onLeave = new lime_app_Event_$Void_$Void();
	this.onKeyUp = new lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void();
	this.onKeyDown = new lime_app_Event_$lime_$ui_$KeyCode_$lime_$ui_$KeyModifier_$Void();
	this.onFullscreen = new lime_app_Event_$Void_$Void();
	this.onFocusOut = new lime_app_Event_$Void_$Void();
	this.onFocusIn = new lime_app_Event_$Void_$Void();
	this.onEnter = new lime_app_Event_$Void_$Void();
	this.onDeactivate = new lime_app_Event_$Void_$Void();
	this.onCreate = new lime_app_Event_$Void_$Void();
	this.onClose = new lime_app_Event_$Void_$Void();
	this.onActivate = new lime_app_Event_$Void_$Void();
	this.config = config;
	this.__width = 0;
	this.__height = 0;
	this.__fullscreen = false;
	this.__scale = 1;
	this.__x = 0;
	this.__y = 0;
	this.__title = "";
	this.id = -1;
	if(config != null) {
		if(Object.prototype.hasOwnProperty.call(config,"width")) this.__width = config.width;
		if(Object.prototype.hasOwnProperty.call(config,"height")) this.__height = config.height;
		if(Object.prototype.hasOwnProperty.call(config,"x")) this.__x = config.x;
		if(Object.prototype.hasOwnProperty.call(config,"y")) this.__y = config.y;
		if(Object.prototype.hasOwnProperty.call(config,"fullscreen")) this.__fullscreen = config.fullscreen;
		if(Object.prototype.hasOwnProperty.call(config,"title")) this.__title = config.title;
	}
	this.backend = new lime__$backend_html5_HTML5Window(this);
};
$hxClasses["lime.ui.Window"] = lime_ui_Window;
lime_ui_Window.__name__ = ["lime","ui","Window"];
lime_ui_Window.prototype = {
	alert: function(message,title) {
		this.backend.alert(message,title);
	}
	,close: function() {
		this.backend.close();
	}
	,create: function(application) {
		this.application = application;
		this.backend.create(application);
		if(this.renderer != null) this.renderer.create();
	}
	,focus: function() {
		this.backend.focus();
	}
	,move: function(x,y) {
		this.backend.move(x,y);
		this.__x = x;
		this.__y = y;
	}
	,resize: function(width,height) {
		this.backend.resize(width,height);
		this.__width = width;
		this.__height = height;
	}
	,setIcon: function(image) {
		if(image == null) return;
		this.backend.setIcon(image);
	}
	,toString: function() {
		return "[object Window]";
	}
	,get_display: function() {
		return this.backend.getDisplay();
	}
	,get_enableTextEvents: function() {
		return this.backend.getEnableTextEvents();
	}
	,set_enableTextEvents: function(value) {
		return this.backend.setEnableTextEvents(value);
	}
	,get_fullscreen: function() {
		return this.__fullscreen;
	}
	,set_fullscreen: function(value) {
		return this.__fullscreen = this.backend.setFullscreen(value);
	}
	,get_height: function() {
		return this.__height;
	}
	,set_height: function(value) {
		this.resize(this.__width,value);
		return this.__height;
	}
	,get_minimized: function() {
		return this.__minimized;
	}
	,set_minimized: function(value) {
		return this.__minimized = this.backend.setMinimized(value);
	}
	,get_scale: function() {
		return this.__scale;
	}
	,get_title: function() {
		return this.__title;
	}
	,set_title: function(value) {
		return this.__title = this.backend.setTitle(this.__title);
	}
	,get_width: function() {
		return this.__width;
	}
	,set_width: function(value) {
		this.resize(value,this.__height);
		return this.__width;
	}
	,get_x: function() {
		return this.__x;
	}
	,set_x: function(value) {
		this.move(value,this.__y);
		return this.__x;
	}
	,get_y: function() {
		return this.__y;
	}
	,set_y: function(value) {
		this.move(this.__x,value);
		return this.__y;
	}
	,__class__: lime_ui_Window
	,__properties__: {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_width:"set_width",get_width:"get_width",set_title:"set_title",get_title:"get_title",get_scale:"get_scale",set_minimized:"set_minimized",get_minimized:"get_minimized",set_height:"set_height",get_height:"get_height",set_fullscreen:"set_fullscreen",get_fullscreen:"get_fullscreen",set_enableTextEvents:"set_enableTextEvents",get_enableTextEvents:"get_enableTextEvents",get_display:"get_display"}
};
var lime_utils_TAError = $hxClasses["lime.utils.TAError"] = { __ename__ : ["lime","utils","TAError"], __constructs__ : ["RangeError"] };
lime_utils_TAError.RangeError = ["RangeError",0];
lime_utils_TAError.RangeError.toString = $estr;
lime_utils_TAError.RangeError.__enum__ = lime_utils_TAError;
lime_utils_TAError.__empty_constructs__ = [lime_utils_TAError.RangeError];
var lime_utils_Bytes = function(length,bytesData) {
	haxe_io_Bytes.call(this,bytesData);
};
$hxClasses["lime.utils.Bytes"] = lime_utils_Bytes;
lime_utils_Bytes.__name__ = ["lime","utils","Bytes"];
lime_utils_Bytes.alloc = function(length) {
	var bytes = haxe_io_Bytes.alloc(length);
	return new lime_utils_Bytes(bytes.length,bytes.b.bufferValue);
};
lime_utils_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
lime_utils_Bytes.ofData = function(b) {
	var bytes = haxe_io_Bytes.ofData(b);
	return new lime_utils_Bytes(bytes.length,bytes.b.bufferValue);
};
lime_utils_Bytes.ofString = function(s) {
	var bytes = haxe_io_Bytes.ofString(s);
	return new lime_utils_Bytes(bytes.length,bytes.b.bufferValue);
};
lime_utils_Bytes.readFile = function(path) {
	return null;
};
lime_utils_Bytes.lime_bytes_from_data_pointer = function(data,length) {
	return lime_utils_Bytes.cffi_lime_bytes_from_data_pointer(data,length);
};
lime_utils_Bytes.lime_bytes_get_data_pointer = function(data) {
	return lime_utils_Bytes.cffi_lime_bytes_get_data_pointer(data);
};
lime_utils_Bytes.lime_bytes_read_file = function(path) {
	return lime_utils_Bytes.cffi_lime_bytes_read_file(path);
};
lime_utils_Bytes.__super__ = haxe_io_Bytes;
lime_utils_Bytes.prototype = $extend(haxe_io_Bytes.prototype,{
	__class__: lime_utils_Bytes
});
var lime_utils__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["lime.utils._Float32Array.Float32Array_Impl_"] = lime_utils__$Float32Array_Float32Array_$Impl_$;
lime_utils__$Float32Array_Float32Array_$Impl_$.__name__ = ["lime","utils","_Float32Array","Float32Array_Impl_"];
lime_utils__$Float32Array_Float32Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$Float32Array_Float32Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$Float32Array_Float32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Float32Array(bytes.b.bufferValue);
	if(len == null) return new Float32Array(bytes.b.bufferValue,byteOffset);
	return new Float32Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$Float32Array_Float32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$Float32Array_Float32Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "Float32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils_GLUtils = function() { };
$hxClasses["lime.utils.GLUtils"] = lime_utils_GLUtils;
lime_utils_GLUtils.__name__ = ["lime","utils","GLUtils"];
lime_utils_GLUtils.compileShader = function(source,type) {
	var shader = lime_graphics_opengl_GL.context.createShader(type);
	lime_graphics_opengl_GL.context.shaderSource(shader,source);
	lime_graphics_opengl_GL.context.compileShader(shader);
	if(lime_graphics_opengl_GL.context.getShaderParameter(shader,35713) == 0) switch(type) {
	case 35633:
		throw new js__$Boot_HaxeError("Error compiling vertex shader");
		break;
	case 35632:
		throw new js__$Boot_HaxeError("Error compiling fragment shader");
		break;
	default:
		throw new js__$Boot_HaxeError("Error compiling unknown shader type");
	}
	return shader;
};
lime_utils_GLUtils.createProgram = function(vertexSource,fragmentSource) {
	var vertexShader = lime_utils_GLUtils.compileShader(vertexSource,35633);
	var fragmentShader = lime_utils_GLUtils.compileShader(fragmentSource,35632);
	var program = lime_graphics_opengl_GL.context.createProgram();
	lime_graphics_opengl_GL.context.attachShader(program,vertexShader);
	lime_graphics_opengl_GL.context.attachShader(program,fragmentShader);
	lime_graphics_opengl_GL.context.linkProgram(program);
	if(lime_graphics_opengl_GL.context.getProgramParameter(program,35714) == 0) throw new js__$Boot_HaxeError("Unable to initialize the shader program.");
	return program;
};
var lime_utils__$Int16Array_Int16Array_$Impl_$ = {};
$hxClasses["lime.utils._Int16Array.Int16Array_Impl_"] = lime_utils__$Int16Array_Int16Array_$Impl_$;
lime_utils__$Int16Array_Int16Array_$Impl_$.__name__ = ["lime","utils","_Int16Array","Int16Array_Impl_"];
lime_utils__$Int16Array_Int16Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$Int16Array_Int16Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$Int16Array_Int16Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Int16Array(bytes.b.bufferValue);
	if(len == null) return new Int16Array(bytes.b.bufferValue,byteOffset);
	return new Int16Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$Int16Array_Int16Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$Int16Array_Int16Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "Int16Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils__$Int32Array_Int32Array_$Impl_$ = {};
$hxClasses["lime.utils._Int32Array.Int32Array_Impl_"] = lime_utils__$Int32Array_Int32Array_$Impl_$;
lime_utils__$Int32Array_Int32Array_$Impl_$.__name__ = ["lime","utils","_Int32Array","Int32Array_Impl_"];
lime_utils__$Int32Array_Int32Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$Int32Array_Int32Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$Int32Array_Int32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Int32Array(bytes.b.bufferValue);
	if(len == null) return new Int32Array(bytes.b.bufferValue,byteOffset);
	return new Int32Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$Int32Array_Int32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$Int32Array_Int32Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "Int32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils_LZMA = function() { };
$hxClasses["lime.utils.LZMA"] = lime_utils_LZMA;
lime_utils_LZMA.__name__ = ["lime","utils","LZMA"];
lime_utils_LZMA.decode = function(bytes) {
	return null;
};
lime_utils_LZMA.encode = function(bytes) {
	return null;
};
var lime_utils__$UInt16Array_UInt16Array_$Impl_$ = {};
$hxClasses["lime.utils._UInt16Array.UInt16Array_Impl_"] = lime_utils__$UInt16Array_UInt16Array_$Impl_$;
lime_utils__$UInt16Array_UInt16Array_$Impl_$.__name__ = ["lime","utils","_UInt16Array","UInt16Array_Impl_"];
lime_utils__$UInt16Array_UInt16Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Uint16Array(bytes.b.bufferValue);
	if(len == null) return new Uint16Array(bytes.b.bufferValue,byteOffset);
	return new Uint16Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$UInt16Array_UInt16Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "UInt16Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils__$UInt32Array_UInt32Array_$Impl_$ = {};
$hxClasses["lime.utils._UInt32Array.UInt32Array_Impl_"] = lime_utils__$UInt32Array_UInt32Array_$Impl_$;
lime_utils__$UInt32Array_UInt32Array_$Impl_$.__name__ = ["lime","utils","_UInt32Array","UInt32Array_Impl_"];
lime_utils__$UInt32Array_UInt32Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Uint32Array(bytes.b.bufferValue);
	if(len == null) return new Uint32Array(bytes.b.bufferValue,byteOffset);
	return new Uint32Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$UInt32Array_UInt32Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "UInt32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var lime_utils__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["lime.utils._UInt8Array.UInt8Array_Impl_"] = lime_utils__$UInt8Array_UInt8Array_$Impl_$;
lime_utils__$UInt8Array_UInt8Array_$Impl_$.__name__ = ["lime","utils","_UInt8Array","UInt8Array_Impl_"];
lime_utils__$UInt8Array_UInt8Array_$Impl_$.__set = function(this1,idx,val) {
	return this1[idx] = val;
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.__get = function(this1,idx) {
	return this1[idx];
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) return new Uint8Array(bytes.b.bufferValue);
	if(len == null) return new Uint8Array(bytes.b.bufferValue,byteOffset);
	return new Uint8Array(bytes.b.bufferValue,byteOffset,len);
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
lime_utils__$UInt8Array_UInt8Array_$Impl_$.toString = function(this1) {
	if(this1 != null) return "UInt8Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]"; else return null;
};
var motion_actuators_IGenericActuator = function() { };
$hxClasses["motion.actuators.IGenericActuator"] = motion_actuators_IGenericActuator;
motion_actuators_IGenericActuator.__name__ = ["motion","actuators","IGenericActuator"];
motion_actuators_IGenericActuator.prototype = {
	__class__: motion_actuators_IGenericActuator
};
var motion_actuators_GenericActuator = function(target,duration,properties) {
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = motion_Actuate.defaultEase;
};
$hxClasses["motion.actuators.GenericActuator"] = motion_actuators_GenericActuator;
motion_actuators_GenericActuator.__name__ = ["motion","actuators","GenericActuator"];
motion_actuators_GenericActuator.__interfaces__ = [motion_actuators_IGenericActuator];
motion_actuators_GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) Reflect.setField(this.target,i,Reflect.field(this.properties,i)); else Reflect.setProperty(this.target,i,Reflect.field(this.properties,i));
		}
	}
	,autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) params = [];
		return Reflect.callMethod(method,method,params);
	}
	,change: function() {
		if(this._onUpdate != null) this.callMethod(this._onUpdate,this._onUpdateParams);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) this.callMethod(this._onComplete,this._onCompleteParams);
		}
		motion_Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) this._onCompleteParams = []; else this._onCompleteParams = parameters;
		if(this.duration == 0) this.complete();
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) this._onRepeatParams = []; else this._onRepeatParams = parameters;
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		return this;
	}
	,onPause: function(handler,parameters) {
		this._onPause = handler;
		if(parameters == null) this._onPauseParams = []; else this._onPauseParams = parameters;
		return this;
	}
	,onResume: function(handler,parameters) {
		this._onResume = handler;
		if(parameters == null) this._onResumeParams = []; else this._onResumeParams = parameters;
		return this;
	}
	,pause: function() {
		if(this._onPause != null) this.callMethod(this._onPause,this._onPauseParams);
	}
	,reflect: function(value) {
		if(value == null) value = true;
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) times = -1;
		this._repeat = times;
		return this;
	}
	,resume: function() {
		if(this._onResume != null) this.callMethod(this._onResume,this._onResumeParams);
	}
	,reverse: function(value) {
		if(value == null) value = true;
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) value = true;
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) value = true;
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: motion_actuators_GenericActuator
};
var motion_actuators_SimpleActuator = function(target,duration,properties) {
	this.active = true;
	this.propertyDetails = [];
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = openfl_Lib.getTimer() / 1000;
	motion_actuators_GenericActuator.call(this,target,duration,properties);
	if(!motion_actuators_SimpleActuator.addedEvent) {
		motion_actuators_SimpleActuator.addedEvent = true;
		openfl_Lib.current.stage.addEventListener(openfl_events_Event.ENTER_FRAME,motion_actuators_SimpleActuator.stage_onEnterFrame);
	}
};
$hxClasses["motion.actuators.SimpleActuator"] = motion_actuators_SimpleActuator;
motion_actuators_SimpleActuator.__name__ = ["motion","actuators","SimpleActuator"];
motion_actuators_SimpleActuator.stage_onEnterFrame = function(event) {
	var currentTime = openfl_Lib.getTimer() / 1000;
	var actuator;
	var j = 0;
	var cleanup = false;
	var _g1 = 0;
	var _g = motion_actuators_SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		var i = _g1++;
		actuator = motion_actuators_SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(currentTime >= actuator.timeOffset) actuator.update(currentTime);
			j++;
		} else {
			motion_actuators_SimpleActuator.actuators.splice(j,1);
			--motion_actuators_SimpleActuator.actuatorsLength;
		}
	}
};
motion_actuators_SimpleActuator.__super__ = motion_actuators_GenericActuator;
motion_actuators_SimpleActuator.prototype = $extend(motion_actuators_GenericActuator.prototype,{
	setField_openfl_geom_Transform: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_motion_actuators_TransformActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_motion_actuators_MotionPathActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_openfl_display_DisplayObject: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setField_motion_actuators_SimpleActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) this.setField_motion_actuators_SimpleActuator_T(this.target,"visible",this.cacheVisible);
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) value = Reflect.field(target,propertyName); else value = Reflect.getProperty(target,propertyName);
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i) && !(this.target.__properties__ && this.target.__properties__["set_" + i])) start = Reflect.field(this.target,i); else {
				isField = false;
				start = Reflect.getProperty(this.target,i);
			}
			if(typeof(start) == "number") {
				var value = this.getField(this.properties,i);
				if(start == null) start = 0;
				if(value == null) value = 0;
				details = new motion_actuators_PropertyDetails(this.target,i,start,value - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && js_Boot.__instanceof(this.target,openfl_display_DisplayObject);
		if(this.toggleVisible && this.properties.alpha != 0 && !this.getField(this.target,"visible")) {
			this.setVisible = true;
			this.cacheVisible = this.getField(this.target,"visible");
			this.setField_motion_actuators_SimpleActuator_T(this.target,"visible",true);
		}
		this.timeOffset = this.startTime;
		motion_actuators_SimpleActuator.actuators.push(this);
		++motion_actuators_SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		if(!this.paused) {
			this.paused = true;
			motion_actuators_GenericActuator.prototype.pause.call(this);
			this.pauseTime = openfl_Lib.getTimer();
		}
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += (openfl_Lib.getTimer() - this.pauseTime) / 1000;
			motion_actuators_GenericActuator.prototype.resume.call(this);
		}
	}
	,setProperty: function(details,value) {
		if(details.isField) details.target[details.propertyName] = value; else Reflect.setProperty(details.target,details.propertyName,value);
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) this.apply();
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) this.apply();
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					var i1 = _g1++;
					details = this.propertyDetails[i1];
					this.setProperty(details,details.start + details.change * easing);
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					var i2 = _g11++;
					details = this.propertyDetails[i2];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) rotation -= 360; else if(rotation < -180) rotation += 360;
						endValue = details.start + rotation * easing;
					} else endValue = details.start + details.change * easing;
					if(!this._snapping) {
						if(details.isField) details.target[details.propertyName] = endValue; else Reflect.setProperty(details.target,details.propertyName,endValue);
					} else this.setProperty(details,Math.round(endValue));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField_motion_actuators_SimpleActuator_T(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) this.callMethod(this._onRepeat,this._onRepeatParams);
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: motion_actuators_SimpleActuator
});
var motion_easing_Expo = function() { };
$hxClasses["motion.easing.Expo"] = motion_easing_Expo;
motion_easing_Expo.__name__ = ["motion","easing","Expo"];
motion_easing_Expo.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Expo.get_easeIn = function() {
	return new motion_easing_ExpoEaseIn();
};
motion_easing_Expo.get_easeInOut = function() {
	return new motion_easing_ExpoEaseInOut();
};
motion_easing_Expo.get_easeOut = function() {
	return new motion_easing_ExpoEaseOut();
};
var motion_easing_ExpoEaseOut = function() {
};
$hxClasses["motion.easing.ExpoEaseOut"] = motion_easing_ExpoEaseOut;
motion_easing_ExpoEaseOut.__name__ = ["motion","easing","ExpoEaseOut"];
motion_easing_ExpoEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseOut.prototype = {
	calculate: function(k) {
		if(k == 1) return 1; else return 1 - Math.pow(2,-10 * k);
	}
	,ease: function(t,b,c,d) {
		if(t == d) return b + c; else return c * (1 - Math.pow(2,-10 * t / d)) + b;
	}
	,__class__: motion_easing_ExpoEaseOut
};
var motion_Actuate = function() { };
$hxClasses["motion.Actuate"] = motion_Actuate;
motion_Actuate.__name__ = ["motion","Actuate"];
motion_Actuate.apply = function(target,properties,customActuator) {
	motion_Actuate.stop(target,properties);
	if(customActuator == null) customActuator = motion_Actuate.defaultActuator;
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
motion_Actuate.effects = function(target,duration,overwrite) {
	if(overwrite == null) overwrite = true;
	return new motion__$Actuate_EffectsOptions(target,duration,overwrite);
};
motion_Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) allowCreation = true;
	if(!(motion_Actuate.targetLibraries.h.__keys__[target.__id__] != null) && allowCreation) motion_Actuate.targetLibraries.set(target,[]);
	return motion_Actuate.targetLibraries.h[target.__id__];
};
motion_Actuate.isActive = function() {
	var result = false;
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		result = true;
		break;
	}
	return result;
};
motion_Actuate.motionPath = function(target,duration,properties,overwrite) {
	if(overwrite == null) overwrite = true;
	return motion_Actuate.tween(target,duration,properties,overwrite,motion_actuators_MotionPathActuator);
};
motion_Actuate.pause = function(target) {
	if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
		var actuator = target;
		actuator.pause();
	} else {
		var library = motion_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator1 = library[_g];
				++_g;
				actuator1.pause();
			}
		}
	}
};
motion_Actuate.pauseAll = function() {
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.pause();
		}
	}
};
motion_Actuate.reset = function() {
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var i = library.length - 1;
		while(i >= 0) {
			library[i].stop(null,false,false);
			i--;
		}
	}
	motion_Actuate.targetLibraries = new haxe_ds_ObjectMap();
};
motion_Actuate.resume = function(target) {
	if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
		var actuator = target;
		actuator.resume();
	} else {
		var library = motion_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator1 = library[_g];
				++_g;
				actuator1.resume();
			}
		}
	}
};
motion_Actuate.resumeAll = function() {
	var $it0 = motion_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.resume();
		}
	}
};
motion_Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) sendEvent = true;
	if(complete == null) complete = false;
	if(target != null) {
		if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
			var actuator = target;
			actuator.stop(null,complete,sendEvent);
		} else {
			var library = motion_Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					Reflect.setField(temp,properties,null);
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1;
					_g1 = js_Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						Reflect.setField(temp1,property,null);
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					i--;
				}
			}
		}
	}
};
motion_Actuate.timer = function(duration,customActuator) {
	return motion_Actuate.tween(new motion__$Actuate_TweenTimer(0),duration,new motion__$Actuate_TweenTimer(1),false,customActuator);
};
motion_Actuate.transform = function(target,duration,overwrite) {
	if(overwrite == null) overwrite = true;
	if(duration == null) duration = 0;
	return new motion__$Actuate_TransformOptions(target,duration,overwrite);
};
motion_Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) overwrite = true;
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) customActuator = motion_Actuate.defaultActuator;
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = motion_Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					i--;
				}
				library = motion_Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else return motion_Actuate.apply(target,properties,customActuator);
	}
	return null;
};
motion_Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(motion_Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(motion_Actuate.targetLibraries.h[target.__id__],actuator);
		if(motion_Actuate.targetLibraries.h[target.__id__].length == 0) motion_Actuate.targetLibraries.remove(target);
	}
};
motion_Actuate.update = function(target,duration,start,end,overwrite) {
	if(overwrite == null) overwrite = true;
	var properties = { start : start, end : end};
	return motion_Actuate.tween(target,duration,properties,overwrite,motion_actuators_MethodActuator);
};
var motion__$Actuate_EffectsOptions = function(target,duration,overwrite) {
	this.target = target;
	this.duration = duration;
	this.overwrite = overwrite;
};
$hxClasses["motion._Actuate.EffectsOptions"] = motion__$Actuate_EffectsOptions;
motion__$Actuate_EffectsOptions.__name__ = ["motion","_Actuate","EffectsOptions"];
motion__$Actuate_EffectsOptions.prototype = {
	filter: function(reference,properties) {
		properties.filter = reference;
		return motion_Actuate.tween(this.target,this.duration,properties,this.overwrite,motion_actuators_FilterActuator);
	}
	,__class__: motion__$Actuate_EffectsOptions
};
var motion__$Actuate_TransformOptions = function(target,duration,overwrite) {
	this.target = target;
	this.duration = duration;
	this.overwrite = overwrite;
};
$hxClasses["motion._Actuate.TransformOptions"] = motion__$Actuate_TransformOptions;
motion__$Actuate_TransformOptions.__name__ = ["motion","_Actuate","TransformOptions"];
motion__$Actuate_TransformOptions.prototype = {
	color: function(value,strength,alpha) {
		if(strength == null) strength = 1;
		if(value == null) value = 0;
		var properties = { colorValue : value, colorStrength : strength};
		if(alpha != null) properties.colorAlpha = alpha;
		return motion_Actuate.tween(this.target,this.duration,properties,this.overwrite,motion_actuators_TransformActuator);
	}
	,sound: function(volume,pan) {
		var properties = { };
		if(volume != null) properties.soundVolume = volume;
		if(pan != null) properties.soundPan = pan;
		return motion_Actuate.tween(this.target,this.duration,properties,this.overwrite,motion_actuators_TransformActuator);
	}
	,__class__: motion__$Actuate_TransformOptions
};
var motion__$Actuate_TweenTimer = function(progress) {
	this.progress = progress;
};
$hxClasses["motion._Actuate.TweenTimer"] = motion__$Actuate_TweenTimer;
motion__$Actuate_TweenTimer.__name__ = ["motion","_Actuate","TweenTimer"];
motion__$Actuate_TweenTimer.prototype = {
	__class__: motion__$Actuate_TweenTimer
};
var motion_MotionPath = function() {
	this._x = new motion_ComponentPath();
	this._y = new motion_ComponentPath();
	this._rotation = null;
};
$hxClasses["motion.MotionPath"] = motion_MotionPath;
motion_MotionPath.__name__ = ["motion","MotionPath"];
motion_MotionPath.prototype = {
	bezier: function(x,y,controlX,controlY,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new motion_BezierPath(x,controlX,strength));
		this._y.addPath(new motion_BezierPath(y,controlY,strength));
		return this;
	}
	,line: function(x,y,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new motion_LinearPath(x,strength));
		this._y.addPath(new motion_LinearPath(y,strength));
		return this;
	}
	,get_rotation: function() {
		if(this._rotation == null) this._rotation = new motion_RotationPath(this._x,this._y);
		return this._rotation;
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,__class__: motion_MotionPath
	,__properties__: {get_y:"get_y",get_x:"get_x",get_rotation:"get_rotation"}
};
var motion_IComponentPath = function() { };
$hxClasses["motion.IComponentPath"] = motion_IComponentPath;
motion_IComponentPath.__name__ = ["motion","IComponentPath"];
motion_IComponentPath.prototype = {
	__class__: motion_IComponentPath
	,__properties__: {get_end:"get_end"}
};
var motion_ComponentPath = function() {
	this.paths = [];
	this.start = 0;
	this.totalStrength = 0;
};
$hxClasses["motion.ComponentPath"] = motion_ComponentPath;
motion_ComponentPath.__name__ = ["motion","ComponentPath"];
motion_ComponentPath.__interfaces__ = [motion_IComponentPath];
motion_ComponentPath.prototype = {
	addPath: function(path) {
		this.paths.push(path);
		this.totalStrength += path.strength;
	}
	,calculate: function(k) {
		if(this.paths.length == 1) return this.paths[0].calculate(this.start,k); else {
			var ratio = k * this.totalStrength;
			var lastEnd = this.start;
			var _g = 0;
			var _g1 = this.paths;
			while(_g < _g1.length) {
				var path = _g1[_g];
				++_g;
				if(ratio > path.strength) {
					ratio -= path.strength;
					lastEnd = path.end;
				} else return path.calculate(lastEnd,ratio / path.strength);
			}
		}
		return 0;
	}
	,get_end: function() {
		if(this.paths.length > 0) {
			var path = this.paths[this.paths.length - 1];
			return path.end;
		} else return this.start;
	}
	,__class__: motion_ComponentPath
	,__properties__: {get_end:"get_end"}
};
var motion_BezierPath = function(end,control,strength) {
	this.end = end;
	this.control = control;
	this.strength = strength;
};
$hxClasses["motion.BezierPath"] = motion_BezierPath;
motion_BezierPath.__name__ = ["motion","BezierPath"];
motion_BezierPath.prototype = {
	calculate: function(start,k) {
		return (1 - k) * (1 - k) * start + 2 * (1 - k) * k * this.control + k * k * this.end;
	}
	,__class__: motion_BezierPath
};
var motion_LinearPath = function(end,strength) {
	motion_BezierPath.call(this,end,0,strength);
};
$hxClasses["motion.LinearPath"] = motion_LinearPath;
motion_LinearPath.__name__ = ["motion","LinearPath"];
motion_LinearPath.__super__ = motion_BezierPath;
motion_LinearPath.prototype = $extend(motion_BezierPath.prototype,{
	calculate: function(start,k) {
		return start + k * (this.end - start);
	}
	,__class__: motion_LinearPath
});
var motion_RotationPath = function(x,y) {
	this.step = 0.01;
	this._x = x;
	this._y = y;
	this.offset = 0;
	this.start = this.calculate(0.0);
};
$hxClasses["motion.RotationPath"] = motion_RotationPath;
motion_RotationPath.__name__ = ["motion","RotationPath"];
motion_RotationPath.__interfaces__ = [motion_IComponentPath];
motion_RotationPath.prototype = {
	calculate: function(k) {
		var dX = this._x.calculate(k) - this._x.calculate(k + this.step);
		var dY = this._y.calculate(k) - this._y.calculate(k + this.step);
		var angle = Math.atan2(dY,dX) * (180 / Math.PI);
		angle = (angle + this.offset) % 360;
		return angle;
	}
	,get_end: function() {
		return this.calculate(1.0);
	}
	,__class__: motion_RotationPath
	,__properties__: {get_end:"get_end"}
};
var motion_actuators_FilterActuator = function(target,duration,properties) {
	this.filterIndex = -1;
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
	if(js_Boot.__instanceof(properties.filter,Class)) {
		this.filterClass = properties.filter;
		if(target.get_filters().length == 0) target.set_filters([Type.createInstance(this.filterClass,[])]);
		var _g = 0;
		var _g1 = target.get_filters();
		while(_g < _g1.length) {
			var filter = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(filter,this.filterClass)) this.filter = filter;
		}
	} else {
		this.filterIndex = properties.filter;
		this.filter = target.get_filters()[this.filterIndex];
	}
};
$hxClasses["motion.actuators.FilterActuator"] = motion_actuators_FilterActuator;
motion_actuators_FilterActuator.__name__ = ["motion","actuators","FilterActuator"];
motion_actuators_FilterActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_FilterActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(propertyName != "filter") Reflect.setField(this.filter,propertyName,Reflect.field(this.properties,propertyName));
		}
		var filters = this.getField(this.target,"filters");
		Reflect.setField(filters,this.properties.filter,this.filter);
		this.setField_openfl_display_DisplayObject(this.target,"filters",filters);
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(propertyName != "filter") {
				start = this.getField(this.filter,propertyName);
				details = new motion_actuators_PropertyDetails(this.filter,propertyName,start,Reflect.field(this.properties,propertyName) - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		var filters = this.target.get_filters();
		if(this.filterIndex > -1) Reflect.setField(filters,this.properties.filter,this.filter); else {
			var _g1 = 0;
			var _g = filters.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(js_Boot.__instanceof(filters[i],this.filterClass)) filters[i] = this.filter;
			}
		}
		this.setField_openfl_display_DisplayObject(this.target,"filters",filters);
	}
	,__class__: motion_actuators_FilterActuator
});
var motion_actuators_MethodActuator = function(target,duration,properties) {
	this.currentParameters = [];
	this.tweenProperties = { };
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) this.properties.start = [];
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) this.properties.end = this.properties.start;
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.currentParameters.push(this.properties.start[i]);
	}
};
$hxClasses["motion.actuators.MethodActuator"] = motion_actuators_MethodActuator;
motion_actuators_MethodActuator.__name__ = ["motion","actuators","MethodActuator"];
motion_actuators_MethodActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MethodActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		this.callMethod(this.target,this.properties.end);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		this.callMethod(this.target,this.currentParameters);
		motion_actuators_SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || ((start | 0) === start)) {
				details = new motion_actuators_PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active && !this.paused) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			this.callMethod(this.target,this.currentParameters);
		}
	}
	,__class__: motion_actuators_MethodActuator
});
var motion_actuators_MotionPathActuator = function(target,duration,properties) {
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["motion.actuators.MotionPathActuator"] = motion_actuators_MotionPathActuator;
motion_actuators_MotionPathActuator.__name__ = ["motion","actuators","MotionPathActuator"];
motion_actuators_MotionPathActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MotionPathActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) Reflect.setField(this.target,propertyName,(js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end()); else Reflect.setProperty(this.target,propertyName,(js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end());
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) path.start = Reflect.field(this.target,propertyName); else {
					isField = false;
					path.start = Reflect.getProperty(this.target,propertyName);
				}
				details = new motion_actuators_PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) Reflect.setField(details1.target,details1.propertyName,(js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details1.target,details1.propertyName,(js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) Reflect.setField(details2.target,details2.propertyName,(js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details2.target,details2.propertyName,(js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
					} else if(details2.isField) Reflect.setField(details2.target,details2.propertyName,Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing))); else Reflect.setProperty(details2.target,details2.propertyName,Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing)));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField_motion_actuators_MotionPathActuator_T(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) this.callMethod(this._onRepeat,this._onRepeatParams);
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: motion_actuators_MotionPathActuator
});
var motion_actuators_PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) isField = true;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
$hxClasses["motion.actuators.PropertyDetails"] = motion_actuators_PropertyDetails;
motion_actuators_PropertyDetails.__name__ = ["motion","actuators","PropertyDetails"];
motion_actuators_PropertyDetails.prototype = {
	__class__: motion_actuators_PropertyDetails
};
var motion_actuators_PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) isField = true;
	motion_actuators_PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
$hxClasses["motion.actuators.PropertyPathDetails"] = motion_actuators_PropertyPathDetails;
motion_actuators_PropertyPathDetails.__name__ = ["motion","actuators","PropertyPathDetails"];
motion_actuators_PropertyPathDetails.__super__ = motion_actuators_PropertyDetails;
motion_actuators_PropertyPathDetails.prototype = $extend(motion_actuators_PropertyDetails.prototype,{
	__class__: motion_actuators_PropertyPathDetails
});
var motion_actuators_TransformActuator = function(target,duration,properties) {
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["motion.actuators.TransformActuator"] = motion_actuators_TransformActuator;
motion_actuators_TransformActuator.__name__ = ["motion","actuators","TransformActuator"];
motion_actuators_TransformActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_TransformActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		this.initialize();
		if(this.endColorTransform != null) {
			var transform = this.getField(this.target,"transform");
			this.setField_openfl_geom_Transform(transform,"colorTransform",this.endColorTransform);
		}
		if(this.endSoundTransform != null) this.setField_motion_actuators_TransformActuator_T(this.target,"soundTransform",this.endSoundTransform);
	}
	,initialize: function() {
		if(Object.prototype.hasOwnProperty.call(this.properties,"colorValue") && js_Boot.__instanceof(this.target,openfl_display_DisplayObject)) this.initializeColor();
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundVolume") || Object.prototype.hasOwnProperty.call(this.properties,"soundPan")) this.initializeSound();
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,initializeColor: function() {
		this.endColorTransform = new openfl_geom_ColorTransform();
		var color = this.properties.colorValue;
		var strength = this.properties.colorStrength;
		if(strength < 1) {
			var multiplier;
			var offset;
			if(strength < 0.5) {
				multiplier = 1;
				offset = strength * 2;
			} else {
				multiplier = 1 - (strength - 0.5) * 2;
				offset = 1;
			}
			this.endColorTransform.redMultiplier = multiplier;
			this.endColorTransform.greenMultiplier = multiplier;
			this.endColorTransform.blueMultiplier = multiplier;
			this.endColorTransform.redOffset = offset * (color >> 16 & 255);
			this.endColorTransform.greenOffset = offset * (color >> 8 & 255);
			this.endColorTransform.blueOffset = offset * (color & 255);
		} else {
			this.endColorTransform.redMultiplier = 0;
			this.endColorTransform.greenMultiplier = 0;
			this.endColorTransform.blueMultiplier = 0;
			this.endColorTransform.redOffset = color >> 16 & 255;
			this.endColorTransform.greenOffset = color >> 8 & 255;
			this.endColorTransform.blueOffset = color & 255;
		}
		var propertyNames = ["redMultiplier","greenMultiplier","blueMultiplier","redOffset","greenOffset","blueOffset"];
		if(Object.prototype.hasOwnProperty.call(this.properties,"colorAlpha")) {
			this.endColorTransform.alphaMultiplier = this.properties.colorAlpha;
			propertyNames.push("alphaMultiplier");
		} else this.endColorTransform.alphaMultiplier = this.getField(this.target,"alpha");
		var transform = this.getField(this.target,"transform");
		var begin = this.getField(transform,"colorTransform");
		this.tweenColorTransform = new openfl_geom_ColorTransform();
		var details;
		var start;
		var _g = 0;
		while(_g < propertyNames.length) {
			var propertyName = propertyNames[_g];
			++_g;
			start = this.getField(begin,propertyName);
			details = new motion_actuators_PropertyDetails(this.tweenColorTransform,propertyName,start,this.getField(this.endColorTransform,propertyName) - start);
			this.propertyDetails.push(details);
		}
	}
	,initializeSound: function() {
		if(this.getField(this.target,"soundTransform") == null) this.setField_motion_actuators_TransformActuator_T(this.target,"soundTransform",new openfl_media_SoundTransform());
		var start = this.getField(this.target,"soundTransform");
		this.endSoundTransform = this.getField(this.target,"soundTransform");
		this.tweenSoundTransform = new openfl_media_SoundTransform();
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundVolume")) {
			this.endSoundTransform.volume = this.properties.soundVolume;
			this.propertyDetails.push(new motion_actuators_PropertyDetails(this.tweenSoundTransform,"volume",start.volume,this.endSoundTransform.volume - start.volume));
		}
		if(Object.prototype.hasOwnProperty.call(this.properties,"soundPan")) {
			this.endSoundTransform.pan = this.properties.soundPan;
			this.propertyDetails.push(new motion_actuators_PropertyDetails(this.tweenSoundTransform,"pan",start.pan,this.endSoundTransform.pan - start.pan));
		}
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.endColorTransform != null) {
			var transform = this.getField(this.target,"transform");
			this.setField_openfl_geom_Transform(transform,"colorTransform",this.tweenColorTransform);
		}
		if(this.endSoundTransform != null) this.setField_motion_actuators_TransformActuator_T(this.target,"soundTransform",this.tweenSoundTransform);
	}
	,__class__: motion_actuators_TransformActuator
});
var motion_easing_Elastic = function() { };
$hxClasses["motion.easing.Elastic"] = motion_easing_Elastic;
motion_easing_Elastic.__name__ = ["motion","easing","Elastic"];
motion_easing_Elastic.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Elastic.get_easeIn = function() {
	return new motion_easing_ElasticEaseIn(0.1,0.4);
};
motion_easing_Elastic.get_easeInOut = function() {
	return new motion_easing_ElasticEaseInOut(0.1,0.4);
};
motion_easing_Elastic.get_easeOut = function() {
	return new motion_easing_ElasticEaseOut(0.1,0.4);
};
var motion_easing_ElasticEaseIn = function(a,p) {
	this.a = a;
	this.p = p;
};
$hxClasses["motion.easing.ElasticEaseIn"] = motion_easing_ElasticEaseIn;
motion_easing_ElasticEaseIn.__name__ = ["motion","easing","ElasticEaseIn"];
motion_easing_ElasticEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_ElasticEaseIn.prototype = {
	calculate: function(k) {
		if(k == 0) return 0;
		if(k == 1) return 1;
		var s;
		if(this.a < 1) {
			this.a = 1;
			s = this.p / 4;
		} else s = this.p / (2 * Math.PI) * Math.asin(1 / this.a);
		return -(this.a * Math.pow(2,10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / this.p));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b;
		if((t /= d) == 1) return b + c;
		var s;
		if(this.a < Math.abs(c)) {
			this.a = c;
			s = this.p / 4;
		} else s = this.p / (2 * Math.PI) * Math.asin(c / this.a);
		return -(this.a * Math.pow(2,10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / this.p)) + b;
	}
	,__class__: motion_easing_ElasticEaseIn
};
var motion_easing_ElasticEaseInOut = function(a,p) {
	this.a = a;
	this.p = p;
};
$hxClasses["motion.easing.ElasticEaseInOut"] = motion_easing_ElasticEaseInOut;
motion_easing_ElasticEaseInOut.__name__ = ["motion","easing","ElasticEaseInOut"];
motion_easing_ElasticEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ElasticEaseInOut.prototype = {
	calculate: function(k) {
		if(k == 0) return 0;
		if((k /= 0.5) == 2) return 1;
		var p = 0.449999999999999956;
		var a = 1;
		var s = p / 4;
		if(k < 1) return -0.5 * (Math.pow(2,10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));
		return Math.pow(2,-10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b;
		if((t /= d / 2) == 2) return b + c;
		var s;
		if(this.a < Math.abs(c)) {
			this.a = c;
			s = this.p / 4;
		} else s = this.p / (2 * Math.PI) * Math.asin(c / this.a);
		if(t < 1) return -0.5 * (this.a * Math.pow(2,10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / this.p)) + b;
		return this.a * Math.pow(2,-10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / this.p) * 0.5 + c + b;
	}
	,__class__: motion_easing_ElasticEaseInOut
};
var motion_easing_ElasticEaseOut = function(a,p) {
	this.a = a;
	this.p = p;
};
$hxClasses["motion.easing.ElasticEaseOut"] = motion_easing_ElasticEaseOut;
motion_easing_ElasticEaseOut.__name__ = ["motion","easing","ElasticEaseOut"];
motion_easing_ElasticEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ElasticEaseOut.prototype = {
	calculate: function(k) {
		if(k == 0) return 0;
		if(k == 1) return 1;
		var s;
		if(this.a < 1) {
			this.a = 1;
			s = this.p / 4;
		} else s = this.p / (2 * Math.PI) * Math.asin(1 / this.a);
		return this.a * Math.pow(2,-10 * k) * Math.sin((k - s) * (2 * Math.PI) / this.p) + 1;
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b;
		if((t /= d) == 1) return b + c;
		var s;
		if(this.a < Math.abs(c)) {
			this.a = c;
			s = this.p / 4;
		} else s = this.p / (2 * Math.PI) * Math.asin(c / this.a);
		return this.a * Math.pow(2,-10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / this.p) + c + b;
	}
	,__class__: motion_easing_ElasticEaseOut
};
var motion_easing_ExpoEaseIn = function() {
};
$hxClasses["motion.easing.ExpoEaseIn"] = motion_easing_ExpoEaseIn;
motion_easing_ExpoEaseIn.__name__ = ["motion","easing","ExpoEaseIn"];
motion_easing_ExpoEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseIn.prototype = {
	calculate: function(k) {
		if(k == 0) return 0; else return Math.pow(2,10 * (k - 1));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b; else return c * Math.pow(2,10 * (t / d - 1)) + b;
	}
	,__class__: motion_easing_ExpoEaseIn
};
var motion_easing_ExpoEaseInOut = function() {
};
$hxClasses["motion.easing.ExpoEaseInOut"] = motion_easing_ExpoEaseInOut;
motion_easing_ExpoEaseInOut.__name__ = ["motion","easing","ExpoEaseInOut"];
motion_easing_ExpoEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseInOut.prototype = {
	calculate: function(k) {
		if(k == 0) return 0;
		if(k == 1) return 1;
		if((k /= 0.5) < 1.0) return 0.5 * Math.pow(2,10 * (k - 1));
		return 0.5 * (2 - Math.pow(2,-10 * --k));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) return b;
		if(t == d) return b + c;
		if((t /= d / 2.0) < 1.0) return c / 2 * Math.pow(2,10 * (t - 1)) + b;
		return c / 2 * (2 - Math.pow(2,-10 * --t)) + b;
	}
	,__class__: motion_easing_ExpoEaseInOut
};
var motion_easing_Linear = function() { };
$hxClasses["motion.easing.Linear"] = motion_easing_Linear;
motion_easing_Linear.__name__ = ["motion","easing","Linear"];
motion_easing_Linear.__properties__ = {get_easeNone:"get_easeNone"}
motion_easing_Linear.get_easeNone = function() {
	return new motion_easing_LinearEaseNone();
};
var motion_easing_LinearEaseNone = function() {
};
$hxClasses["motion.easing.LinearEaseNone"] = motion_easing_LinearEaseNone;
motion_easing_LinearEaseNone.__name__ = ["motion","easing","LinearEaseNone"];
motion_easing_LinearEaseNone.__interfaces__ = [motion_easing_IEasing];
motion_easing_LinearEaseNone.prototype = {
	calculate: function(k) {
		return k;
	}
	,ease: function(t,b,c,d) {
		return c * t / d + b;
	}
	,__class__: motion_easing_LinearEaseNone
};
var motion_easing_Quad = function() { };
$hxClasses["motion.easing.Quad"] = motion_easing_Quad;
motion_easing_Quad.__name__ = ["motion","easing","Quad"];
motion_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Quad.get_easeIn = function() {
	return new motion_easing_QuadEaseIn();
};
motion_easing_Quad.get_easeInOut = function() {
	return new motion_easing_QuadEaseInOut();
};
motion_easing_Quad.get_easeOut = function() {
	return new motion_easing_QuadEaseOut();
};
var motion_easing_QuadEaseIn = function() {
};
$hxClasses["motion.easing.QuadEaseIn"] = motion_easing_QuadEaseIn;
motion_easing_QuadEaseIn.__name__ = ["motion","easing","QuadEaseIn"];
motion_easing_QuadEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: motion_easing_QuadEaseIn
};
var motion_easing_QuadEaseInOut = function() {
};
$hxClasses["motion.easing.QuadEaseInOut"] = motion_easing_QuadEaseInOut;
motion_easing_QuadEaseInOut.__name__ = ["motion","easing","QuadEaseInOut"];
motion_easing_QuadEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) return 0.5 * k * k;
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) return c / 2 * t * t + b;
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: motion_easing_QuadEaseInOut
};
var motion_easing_QuadEaseOut = function() {
};
$hxClasses["motion.easing.QuadEaseOut"] = motion_easing_QuadEaseOut;
motion_easing_QuadEaseOut.__name__ = ["motion","easing","QuadEaseOut"];
motion_easing_QuadEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: motion_easing_QuadEaseOut
};
var motion_easing_Sine = function() { };
$hxClasses["motion.easing.Sine"] = motion_easing_Sine;
motion_easing_Sine.__name__ = ["motion","easing","Sine"];
motion_easing_Sine.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Sine.get_easeIn = function() {
	return new motion_easing_SineEaseIn();
};
motion_easing_Sine.get_easeInOut = function() {
	return new motion_easing_SineEaseInOut();
};
motion_easing_Sine.get_easeOut = function() {
	return new motion_easing_SineEaseOut();
};
var motion_easing_SineEaseIn = function() {
};
$hxClasses["motion.easing.SineEaseIn"] = motion_easing_SineEaseIn;
motion_easing_SineEaseIn.__name__ = ["motion","easing","SineEaseIn"];
motion_easing_SineEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_SineEaseIn.prototype = {
	calculate: function(k) {
		return 1 - Math.cos(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
	}
	,__class__: motion_easing_SineEaseIn
};
var motion_easing_SineEaseInOut = function() {
};
$hxClasses["motion.easing.SineEaseInOut"] = motion_easing_SineEaseInOut;
motion_easing_SineEaseInOut.__name__ = ["motion","easing","SineEaseInOut"];
motion_easing_SineEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_SineEaseInOut.prototype = {
	calculate: function(k) {
		return -(Math.cos(Math.PI * k) - 1) / 2;
	}
	,ease: function(t,b,c,d) {
		return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
	}
	,__class__: motion_easing_SineEaseInOut
};
var motion_easing_SineEaseOut = function() {
};
$hxClasses["motion.easing.SineEaseOut"] = motion_easing_SineEaseOut;
motion_easing_SineEaseOut.__name__ = ["motion","easing","SineEaseOut"];
motion_easing_SineEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_SineEaseOut.prototype = {
	calculate: function(k) {
		return Math.sin(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return c * Math.sin(t / d * (Math.PI / 2)) + b;
	}
	,__class__: motion_easing_SineEaseOut
};
var openfl_IAssetCache = function() { };
$hxClasses["openfl.IAssetCache"] = openfl_IAssetCache;
openfl_IAssetCache.__name__ = ["openfl","IAssetCache"];
openfl_IAssetCache.prototype = {
	__class__: openfl_IAssetCache
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var openfl_AssetCache = function() {
	this.__enabled = true;
	this.bitmapData = new haxe_ds_StringMap();
	this.font = new haxe_ds_StringMap();
	this.sound = new haxe_ds_StringMap();
};
$hxClasses["openfl.AssetCache"] = openfl_AssetCache;
openfl_AssetCache.__name__ = ["openfl","AssetCache"];
openfl_AssetCache.__interfaces__ = [openfl_IAssetCache];
openfl_AssetCache.prototype = {
	clear: function(prefix) {
		if(prefix == null) {
			this.bitmapData = new haxe_ds_StringMap();
			this.font = new haxe_ds_StringMap();
			this.sound = new haxe_ds_StringMap();
		} else {
			var keys = this.bitmapData.keys();
			while( keys.hasNext() ) {
				var key = keys.next();
				if(StringTools.startsWith(key,prefix)) this.bitmapData.remove(key);
			}
			var keys1 = this.font.keys();
			while( keys1.hasNext() ) {
				var key1 = keys1.next();
				if(StringTools.startsWith(key1,prefix)) this.font.remove(key1);
			}
			var keys2 = this.sound.keys();
			while( keys2.hasNext() ) {
				var key2 = keys2.next();
				if(StringTools.startsWith(key2,prefix)) this.sound.remove(key2);
			}
		}
	}
	,getBitmapData: function(id) {
		return this.bitmapData.get(id);
	}
	,getFont: function(id) {
		return this.font.get(id);
	}
	,getSound: function(id) {
		return this.sound.get(id);
	}
	,hasBitmapData: function(id) {
		return this.bitmapData.exists(id);
	}
	,hasFont: function(id) {
		return this.font.exists(id);
	}
	,hasSound: function(id) {
		return this.sound.exists(id);
	}
	,removeBitmapData: function(id) {
		return this.bitmapData.remove(id);
	}
	,removeFont: function(id) {
		return this.font.remove(id);
	}
	,removeSound: function(id) {
		return this.sound.remove(id);
	}
	,setBitmapData: function(id,bitmapData) {
		this.bitmapData.set(id,bitmapData);
	}
	,setFont: function(id,font) {
		this.font.set(id,font);
	}
	,setSound: function(id,sound) {
		this.sound.set(id,sound);
	}
	,get_enabled: function() {
		return this.__enabled;
	}
	,set_enabled: function(value) {
		return this.__enabled = value;
	}
	,__class__: openfl_AssetCache
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var openfl_Assets = function() { };
$hxClasses["openfl.Assets"] = openfl_Assets;
openfl_Assets.__name__ = ["openfl","Assets"];
openfl_Assets.addEventListener = function(type,listener,useCapture,priority,useWeakReference) {
	if(useWeakReference == null) useWeakReference = false;
	if(priority == null) priority = 0;
	if(useCapture == null) useCapture = false;
	if(!lime_Assets.onChange.has(openfl_Assets.LimeAssets_onChange)) lime_Assets.onChange.add(openfl_Assets.LimeAssets_onChange);
	openfl_Assets.dispatcher.addEventListener(type,listener,useCapture,priority,useWeakReference);
};
openfl_Assets.dispatchEvent = function(event) {
	return openfl_Assets.dispatcher.dispatchEvent(event);
};
openfl_Assets.exists = function(id,type) {
	return lime_Assets.exists(id,type);
};
openfl_Assets.getBitmapData = function(id,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasBitmapData(id)) {
		var bitmapData = openfl_Assets.cache.getBitmapData(id);
		if(openfl_Assets.isValidBitmapData(bitmapData)) return bitmapData;
	}
	var image = lime_Assets.getImage(id,false);
	if(image != null) {
		var bitmapData1 = openfl_display_BitmapData.fromImage(image);
		if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setBitmapData(id,bitmapData1);
		return bitmapData1;
	}
	return null;
};
openfl_Assets.getBytes = function(id) {
	return openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(lime_Assets.getBytes(id));
};
openfl_Assets.getFont = function(id,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasFont(id)) return openfl_Assets.cache.getFont(id);
	var limeFont = lime_Assets.getFont(id,false);
	if(limeFont != null) {
		var font = openfl_text_Font.__fromLimeFont(limeFont);
		if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setFont(id,font);
		return font;
	}
	return new openfl_text_Font();
};
openfl_Assets.getLibrary = function(name) {
	return lime_Assets.getLibrary(name);
};
openfl_Assets.getMovieClip = function(id) {
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"MOVIE_CLIP")) {
			if(library.isLocal(symbolName,"MOVIE_CLIP")) return library.getMovieClip(symbolName); else null;
		} else null;
	} else null;
	return null;
};
openfl_Assets.getMusic = function(id,useCache) {
	if(useCache == null) useCache = true;
	var path = lime_Assets.getPath(id);
	if(path != null) return new openfl_media_Sound(new openfl_net_URLRequest(path));
	return null;
};
openfl_Assets.getPath = function(id) {
	return lime_Assets.getPath(id);
};
openfl_Assets.getSound = function(id,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasSound(id)) {
		var sound = openfl_Assets.cache.getSound(id);
		if(openfl_Assets.isValidSound(sound)) return sound;
	}
	var path = lime_Assets.getPath(id);
	if(path != null) return new openfl_media_Sound(new openfl_net_URLRequest(path));
	return null;
};
openfl_Assets.getText = function(id) {
	return lime_Assets.getText(id);
};
openfl_Assets.hasEventListener = function(type) {
	return openfl_Assets.dispatcher.hasEventListener(type);
};
openfl_Assets.isLocal = function(id,type,useCache) {
	if(useCache == null) useCache = true;
	if(useCache && openfl_Assets.cache.get_enabled()) {
		if(type == "IMAGE" || type == null) {
			if(openfl_Assets.cache.hasBitmapData(id)) return true;
		}
		if(type == "FONT" || type == null) {
			if(openfl_Assets.cache.hasFont(id)) return true;
		}
		if(type == "SOUND" || type == "MUSIC" || type == null) {
			if(openfl_Assets.cache.hasSound(id)) return true;
		}
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl_Assets.getLibrary(libraryName);
	if(library != null) return library.isLocal(symbolName,type);
	return false;
};
openfl_Assets.isValidBitmapData = function(bitmapData) {
	return bitmapData != null && bitmapData.image != null;
};
openfl_Assets.isValidSound = function(sound) {
	return true;
};
openfl_Assets.list = function(type) {
	return lime_Assets.list(type);
};
openfl_Assets.loadBitmapData = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	var promise = new lime_app_Promise();
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
	}
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasBitmapData(id)) {
		var bitmapData = openfl_Assets.cache.getBitmapData(id);
		if(openfl_Assets.isValidBitmapData(bitmapData)) {
			promise.complete(bitmapData);
			return promise.future;
		}
	}
	lime_Assets.loadImage(id,false).onComplete(function(image) {
		if(image != null) {
			var bitmapData1 = openfl_display_BitmapData.fromImage(image);
			if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setBitmapData(id,bitmapData1);
			promise.complete(bitmapData1);
		} else promise.error("[Assets] Could not load Image \"" + id + "\"");
	}).onError($bind(promise,promise.error)).onProgress($bind(promise,promise.progress));
	return promise.future;
};
openfl_Assets.loadBytes = function(id,handler) {
	var promise = new lime_app_Promise();
	var future = lime_Assets.loadBytes(id);
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
		future.onComplete(function(bytes) {
			promise.complete(openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes(bytes));
		});
		future.onProgress(function(progress) {
			promise.progress(progress);
		});
		future.onError(function(msg) {
			promise.error(msg);
		});
	}
	return promise.future;
};
openfl_Assets.loadFont = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	var promise = new lime_app_Promise();
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
	}
	if(useCache && openfl_Assets.cache.get_enabled() && openfl_Assets.cache.hasFont(id)) {
		promise.complete(openfl_Assets.cache.getFont(id));
		return promise.future;
	}
	lime_Assets.loadFont(id).onComplete(function(limeFont) {
		var font = openfl_text_Font.__fromLimeFont(limeFont);
		if(useCache && openfl_Assets.cache.get_enabled()) openfl_Assets.cache.setFont(id,font);
		promise.complete(font);
	}).onError($bind(promise,promise.error)).onProgress($bind(promise,promise.progress));
	return promise.future;
};
openfl_Assets.loadLibrary = function(name,handler) {
	var future = lime_Assets.loadLibrary(name);
	if(handler != null) {
		future.onComplete(handler);
		future.onError(function(_) {
			handler(null);
		});
	}
	return future;
};
openfl_Assets.loadMusic = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	return new lime_app_Future(function() {
		return openfl_Assets.getMusic(id,useCache);
	});
};
openfl_Assets.loadMovieClip = function(id,handler) {
	var promise = new lime_app_Promise();
	if(handler != null) {
		promise.future.onComplete(handler);
		promise.future.onError(function(_) {
			handler(null);
		});
	}
	var libraryName = id.substring(0,id.indexOf(":"));
	var symbolName;
	var pos = id.indexOf(":") + 1;
	symbolName = HxOverrides.substr(id,pos,null);
	var library = openfl_Assets.getLibrary(libraryName);
	if(library != null) {
		if(library.exists(symbolName,"MOVIE_CLIP")) promise.completeWith(library.loadMovieClip(symbolName)); else promise.error("[Assets] There is no MovieClip asset with an ID of \"" + id + "\"");
	} else promise.error("[Assets] There is no asset library named \"" + libraryName + "\"");
	return promise.future;
};
openfl_Assets.loadSound = function(id,useCache,handler) {
	if(useCache == null) useCache = true;
	if(useCache == null) useCache = true;
	return new lime_app_Future(function() {
		return openfl_Assets.getSound(id,useCache);
	});
};
openfl_Assets.loadText = function(id,handler) {
	var future = lime_Assets.loadText(id);
	if(handler != null) {
		future.onComplete(handler);
		future.onError(function(_) {
			handler(null);
		});
	}
	return future;
};
openfl_Assets.registerLibrary = function(name,library) {
	lime_Assets.registerLibrary(name,library);
};
openfl_Assets.removeEventListener = function(type,listener,capture) {
	if(capture == null) capture = false;
	openfl_Assets.dispatcher.removeEventListener(type,listener,capture);
};
openfl_Assets.resolveClass = function(name) {
	return Type.resolveClass(name);
};
openfl_Assets.resolveEnum = function(name) {
	var value = Type.resolveEnum(name);
	return value;
};
openfl_Assets.unloadLibrary = function(name) {
	lime_Assets.unloadLibrary(name);
};
openfl_Assets.LimeAssets_onChange = function() {
	openfl_Assets.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE));
};
var openfl_AssetLibrary = function() {
	lime_AssetLibrary.call(this);
};
$hxClasses["openfl.AssetLibrary"] = openfl_AssetLibrary;
openfl_AssetLibrary.__name__ = ["openfl","AssetLibrary"];
openfl_AssetLibrary.__super__ = lime_AssetLibrary;
openfl_AssetLibrary.prototype = $extend(lime_AssetLibrary.prototype,{
	getMovieClip: function(id) {
		return null;
	}
	,loadMovieClip: function(id) {
		var _g = this;
		return new lime_app_Future(function() {
			return _g.getMovieClip(id);
		});
	}
	,__class__: openfl_AssetLibrary
});
var openfl_display_MovieClip = function() {
	openfl_display_Sprite.call(this);
	this.__currentFrame = 0;
	this.__currentLabels = [];
	this.__totalFrames = 0;
	this.enabled = true;
};
$hxClasses["openfl.display.MovieClip"] = openfl_display_MovieClip;
openfl_display_MovieClip.__name__ = ["openfl","display","MovieClip"];
openfl_display_MovieClip.__super__ = openfl_display_Sprite;
openfl_display_MovieClip.prototype = $extend(openfl_display_Sprite.prototype,{
	addFrameScript: function(index,method) {
		if(method != null) {
			if(this.__frameScripts == null) this.__frameScripts = new haxe_ds_IntMap();
			this.__frameScripts.h[index] = method;
			null;
		} else if(this.__frameScripts != null) this.__frameScripts.remove(index);
	}
	,gotoAndPlay: function(frame,scene) {
	}
	,gotoAndStop: function(frame,scene) {
	}
	,nextFrame: function() {
	}
	,play: function() {
	}
	,prevFrame: function() {
	}
	,stop: function() {
	}
	,get_currentFrame: function() {
		return this.__currentFrame;
	}
	,get_currentFrameLabel: function() {
		return this.__currentFrameLabel;
	}
	,get_currentLabel: function() {
		return this.__currentLabel;
	}
	,get_currentLabels: function() {
		return this.__currentLabels;
	}
	,get_framesLoaded: function() {
		return this.__totalFrames;
	}
	,get_totalFrames: function() {
		return this.__totalFrames;
	}
	,__class__: openfl_display_MovieClip
	,__properties__: $extend(openfl_display_Sprite.prototype.__properties__,{get_totalFrames:"get_totalFrames",get_framesLoaded:"get_framesLoaded",get_currentLabels:"get_currentLabels",get_currentLabel:"get_currentLabel",get_currentFrameLabel:"get_currentFrameLabel",get_currentFrame:"get_currentFrame"})
});
var openfl_display_LoaderInfo = function() {
	openfl_events_EventDispatcher.call(this);
	this.applicationDomain = openfl_system_ApplicationDomain.currentDomain;
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.childAllowsParent = true;
	this.parameters = { };
};
$hxClasses["openfl.display.LoaderInfo"] = openfl_display_LoaderInfo;
openfl_display_LoaderInfo.__name__ = ["openfl","display","LoaderInfo"];
openfl_display_LoaderInfo.create = function(loader) {
	var loaderInfo = new openfl_display_LoaderInfo();
	loaderInfo.uncaughtErrorEvents = new openfl_events_UncaughtErrorEvents();
	if(loader != null) loaderInfo.loader = loader; else loaderInfo.url = openfl_display_LoaderInfo.__rootURL;
	return loaderInfo;
};
openfl_display_LoaderInfo.__super__ = openfl_events_EventDispatcher;
openfl_display_LoaderInfo.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_display_LoaderInfo
});
var openfl_system_ApplicationDomain = function(parentDomain) {
	if(parentDomain != null) this.parentDomain = parentDomain; else this.parentDomain = openfl_system_ApplicationDomain.currentDomain;
};
$hxClasses["openfl.system.ApplicationDomain"] = openfl_system_ApplicationDomain;
openfl_system_ApplicationDomain.__name__ = ["openfl","system","ApplicationDomain"];
openfl_system_ApplicationDomain.prototype = {
	getDefinition: function(name) {
		return Type.resolveClass(name);
	}
	,hasDefinition: function(name) {
		return Type.resolveClass(name) != null;
	}
	,__class__: openfl_system_ApplicationDomain
};
var openfl_events_UncaughtErrorEvents = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["openfl.events.UncaughtErrorEvents"] = openfl_events_UncaughtErrorEvents;
openfl_events_UncaughtErrorEvents.__name__ = ["openfl","events","UncaughtErrorEvents"];
openfl_events_UncaughtErrorEvents.__super__ = openfl_events_EventDispatcher;
openfl_events_UncaughtErrorEvents.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_events_UncaughtErrorEvents
});
var openfl_geom_Matrix = function(a,b,c,d,tx,ty) {
	if(ty == null) ty = 0;
	if(tx == null) tx = 0;
	if(d == null) d = 1;
	if(c == null) c = 0;
	if(b == null) b = 0;
	if(a == null) a = 1;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.tx = tx;
	this.ty = ty;
};
$hxClasses["openfl.geom.Matrix"] = openfl_geom_Matrix;
openfl_geom_Matrix.__name__ = ["openfl","geom","Matrix"];
openfl_geom_Matrix.prototype = {
	clone: function() {
		return new openfl_geom_Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,concat: function(m) {
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
	}
	,copyColumnFrom: function(column,vector3D) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			this.a = vector3D.x;
			this.c = vector3D.y;
		} else if(column == 1) {
			this.b = vector3D.x;
			this.d = vector3D.y;
		} else {
			this.tx = vector3D.x;
			this.ty = vector3D.y;
		}
	}
	,copyColumnTo: function(column,vector3D) {
		if(column > 2) throw new js__$Boot_HaxeError("Column " + column + " out of bounds (2)"); else if(column == 0) {
			vector3D.x = this.a;
			vector3D.y = this.c;
			vector3D.z = 0;
		} else if(column == 1) {
			vector3D.x = this.b;
			vector3D.y = this.d;
			vector3D.z = 0;
		} else {
			vector3D.x = this.tx;
			vector3D.y = this.ty;
			vector3D.z = 1;
		}
	}
	,copyFrom: function(sourceMatrix) {
		this.a = sourceMatrix.a;
		this.b = sourceMatrix.b;
		this.c = sourceMatrix.c;
		this.d = sourceMatrix.d;
		this.tx = sourceMatrix.tx;
		this.ty = sourceMatrix.ty;
	}
	,copyRowFrom: function(row,vector3D) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			this.a = vector3D.x;
			this.c = vector3D.y;
		} else if(row == 1) {
			this.b = vector3D.x;
			this.d = vector3D.y;
		} else {
			this.tx = vector3D.x;
			this.ty = vector3D.y;
		}
	}
	,copyRowTo: function(row,vector3D) {
		if(row > 2) throw new js__$Boot_HaxeError("Row " + row + " out of bounds (2)"); else if(row == 0) {
			vector3D.x = this.a;
			vector3D.y = this.b;
			vector3D.z = this.tx;
		} else if(row == 1) {
			vector3D.x = this.c;
			vector3D.y = this.d;
			vector3D.z = this.ty;
		} else {
			vector3D.x = 0;
			vector3D.y = 0;
			vector3D.z = 1;
		}
	}
	,createBox: function(scaleX,scaleY,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.a = cos * scaleX;
			this.b = sin * scaleY;
			this.c = -sin * scaleX;
			this.d = cos * scaleY;
		} else {
			this.a = scaleX;
			this.b = 0;
			this.c = 0;
			this.d = scaleY;
		}
		this.tx = tx;
		this.ty = ty;
	}
	,createGradientBox: function(width,height,rotation,tx,ty) {
		if(ty == null) ty = 0;
		if(tx == null) tx = 0;
		if(rotation == null) rotation = 0;
		this.a = width / 1638.4;
		this.d = height / 1638.4;
		if(rotation != 0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else {
			this.b = 0;
			this.c = 0;
		}
		this.tx = tx + width / 2;
		this.ty = ty + height / 2;
	}
	,deltaTransformPoint: function(point) {
		return new openfl_geom_Point(point.x * this.a + point.y * this.c,point.x * this.b + point.y * this.d);
	}
	,equals: function(matrix) {
		return matrix != null && this.tx == matrix.tx && this.ty == matrix.ty && this.a == matrix.a && this.b == matrix.b && this.c == matrix.c && this.d == matrix.d;
	}
	,identity: function() {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
	}
	,invert: function() {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		return this;
	}
	,rotate: function(theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
	}
	,scale: function(sx,sy) {
		this.a *= sx;
		this.b *= sy;
		this.c *= sx;
		this.d *= sy;
		this.tx *= sx;
		this.ty *= sy;
	}
	,setRotation: function(theta,scale) {
		if(scale == null) scale = 1;
		this.a = Math.cos(theta) * scale;
		this.c = Math.sin(theta) * scale;
		this.b = -this.c;
		this.d = this.a;
	}
	,setTo: function(a,b,c,d,tx,ty) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
		this.tx = tx;
		this.ty = ty;
	}
	,to3DString: function(roundPixels) {
		if(roundPixels == null) roundPixels = false;
		if(roundPixels) return "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) + ", 0, 1)"; else return "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)";
	}
	,toMozString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)";
	}
	,toString: function() {
		return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")";
	}
	,transformPoint: function(pos) {
		return new openfl_geom_Point(pos.x * this.a + pos.y * this.c + this.tx,pos.x * this.b + pos.y * this.d + this.ty);
	}
	,translate: function(dx,dy) {
		this.tx += dx;
		this.ty += dy;
	}
	,toArray: function(transpose) {
		if(transpose == null) transpose = false;
		if(this.__array == null) {
			var this1;
			this1 = new Float32Array(9);
			this.__array = this1;
		}
		if(transpose) {
			this.__array[0] = this.a;
			this.__array[1] = this.b;
			this.__array[2] = 0;
			this.__array[3] = this.c;
			this.__array[4] = this.d;
			this.__array[5] = 0;
			this.__array[6] = this.tx;
			this.__array[7] = this.ty;
			this.__array[8] = 1;
		} else {
			this.__array[0] = this.a;
			this.__array[1] = this.c;
			this.__array[2] = this.tx;
			this.__array[3] = this.b;
			this.__array[4] = this.d;
			this.__array[5] = this.ty;
			this.__array[6] = 0;
			this.__array[7] = 0;
			this.__array[8] = 1;
		}
		return this.__array;
	}
	,__cleanValues: function() {
		this.a = Math.round(this.a * 1000) / 1000;
		this.b = Math.round(this.b * 1000) / 1000;
		this.c = Math.round(this.c * 1000) / 1000;
		this.d = Math.round(this.d * 1000) / 1000;
		this.tx = Math.round(this.tx * 10) / 10;
		this.ty = Math.round(this.ty * 10) / 10;
	}
	,__toMatrix3: function() {
		return new lime_math_Matrix3(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,__transformInversePoint: function(point) {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			point.x = -this.tx;
			point.y = -this.ty;
		} else {
			var px = 1.0 / norm * (this.c * (this.ty - point.y) + this.d * (point.x - this.tx));
			point.y = 1.0 / norm * (this.a * (point.y - this.ty) + this.b * (this.tx - point.x));
			point.x = px;
		}
	}
	,__transformInverseX: function(px,py) {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) return -this.tx; else return 1.0 / norm * (this.c * (this.ty - py) + this.d * (px - this.tx));
	}
	,__transformInverseY: function(px,py) {
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) return -this.ty; else return 1.0 / norm * (this.a * (py - this.ty) + this.b * (this.tx - px));
	}
	,__transformPoint: function(point) {
		var px = point.x;
		var py = point.y;
		point.x = px * this.a + py * this.c + this.tx;
		point.y = px * this.b + py * this.d + this.ty;
	}
	,__transformX: function(px,py) {
		return px * this.a + py * this.c + this.tx;
	}
	,__transformY: function(px,py) {
		return px * this.b + py * this.d + this.ty;
	}
	,__translateTransformed: function(px,py) {
		this.tx = px * this.a + py * this.c + this.tx;
		this.ty = px * this.b + py * this.d + this.ty;
	}
	,__class__: openfl_geom_Matrix
};
var openfl_geom_Point = function(x,y) {
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
};
$hxClasses["openfl.geom.Point"] = openfl_geom_Point;
openfl_geom_Point.__name__ = ["openfl","geom","Point"];
openfl_geom_Point.distance = function(pt1,pt2) {
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	return Math.sqrt(dx * dx + dy * dy);
};
openfl_geom_Point.interpolate = function(pt1,pt2,f) {
	return new openfl_geom_Point(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
};
openfl_geom_Point.polar = function(len,angle) {
	return new openfl_geom_Point(len * Math.cos(angle),len * Math.sin(angle));
};
openfl_geom_Point.prototype = {
	add: function(v) {
		return new openfl_geom_Point(v.x + this.x,v.y + this.y);
	}
	,clone: function() {
		return new openfl_geom_Point(this.x,this.y);
	}
	,copyFrom: function(sourcePoint) {
		this.x = sourcePoint.x;
		this.y = sourcePoint.y;
	}
	,equals: function(toCompare) {
		return toCompare != null && toCompare.x == this.x && toCompare.y == this.y;
	}
	,normalize: function(thickness) {
		if(this.x == 0 && this.y == 0) return; else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,setTo: function(xa,ya) {
		this.x = xa;
		this.y = ya;
	}
	,subtract: function(v) {
		return new openfl_geom_Point(this.x - v.x,this.y - v.y);
	}
	,toString: function() {
		return "(x=" + this.x + ", y=" + this.y + ")";
	}
	,__toLimeVector2: function() {
		return new lime_math_Vector2(this.x,this.y);
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,__class__: openfl_geom_Point
	,__properties__: {get_length:"get_length"}
};
var openfl_geom_ColorTransform = function(redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier,redOffset,greenOffset,blueOffset,alphaOffset) {
	if(alphaOffset == null) alphaOffset = 0;
	if(blueOffset == null) blueOffset = 0;
	if(greenOffset == null) greenOffset = 0;
	if(redOffset == null) redOffset = 0;
	if(alphaMultiplier == null) alphaMultiplier = 1;
	if(blueMultiplier == null) blueMultiplier = 1;
	if(greenMultiplier == null) greenMultiplier = 1;
	if(redMultiplier == null) redMultiplier = 1;
	this.redMultiplier = redMultiplier;
	this.greenMultiplier = greenMultiplier;
	this.blueMultiplier = blueMultiplier;
	this.alphaMultiplier = alphaMultiplier;
	this.redOffset = redOffset;
	this.greenOffset = greenOffset;
	this.blueOffset = blueOffset;
	this.alphaOffset = alphaOffset;
};
$hxClasses["openfl.geom.ColorTransform"] = openfl_geom_ColorTransform;
openfl_geom_ColorTransform.__name__ = ["openfl","geom","ColorTransform"];
openfl_geom_ColorTransform.prototype = {
	concat: function(second) {
		this.redMultiplier *= second.redMultiplier;
		this.greenMultiplier *= second.greenMultiplier;
		this.blueMultiplier *= second.blueMultiplier;
		this.alphaMultiplier *= second.alphaMultiplier;
		this.redOffset = second.redMultiplier * this.redOffset + second.redOffset;
		this.greenOffset = second.greenMultiplier * this.greenOffset + second.greenOffset;
		this.blueOffset = second.blueMultiplier * this.blueOffset + second.blueOffset;
		this.alphaOffset = second.alphaMultiplier * this.alphaOffset + second.alphaOffset;
	}
	,toString: function() {
		return "(redMultiplier=" + this.redMultiplier + ", greenMultiplier=" + this.greenMultiplier + ", blueMultiplier=" + this.blueMultiplier + ", alphaMultiplier=" + this.alphaMultiplier + ", redOffset=" + this.redOffset + ", greenOffset=" + this.greenOffset + ", blueOffset=" + this.blueOffset + ", alphaOffset=" + this.alphaOffset + ")";
	}
	,__clone: function() {
		return new openfl_geom_ColorTransform(this.redMultiplier,this.greenMultiplier,this.blueMultiplier,this.alphaMultiplier,this.redOffset,this.greenOffset,this.blueOffset,this.alphaOffset);
	}
	,__combine: function(ct) {
		this.redMultiplier *= ct.redMultiplier;
		this.greenMultiplier *= ct.greenMultiplier;
		this.blueMultiplier *= ct.blueMultiplier;
		this.alphaMultiplier *= ct.alphaMultiplier;
		this.redOffset += ct.redOffset;
		this.greenOffset += ct.greenOffset;
		this.blueOffset += ct.blueOffset;
		this.alphaOffset += ct.alphaOffset;
	}
	,__equals: function(ct,skipAlphaMultiplier) {
		if(skipAlphaMultiplier == null) skipAlphaMultiplier = false;
		return ct != null && this.redMultiplier == ct.redMultiplier && this.greenMultiplier == ct.greenMultiplier && this.blueMultiplier == ct.blueMultiplier && (skipAlphaMultiplier || this.alphaMultiplier == ct.alphaMultiplier) && this.redOffset == ct.redOffset && this.greenOffset == ct.greenOffset && this.blueOffset == ct.blueOffset && this.alphaOffset == ct.alphaOffset;
	}
	,__isDefault: function() {
		return this.redMultiplier == 1 && this.greenMultiplier == 1 && this.blueMultiplier == 1 && this.alphaMultiplier == 1 && this.redOffset == 0 && this.greenOffset == 0 && this.blueOffset == 0 && this.alphaOffset == 0;
	}
	,get_color: function() {
		return (this.redOffset | 0) << 16 | (this.greenOffset | 0) << 8 | (this.blueOffset | 0);
	}
	,set_color: function(value) {
		this.redOffset = value >> 16 & 255;
		this.greenOffset = value >> 8 & 255;
		this.blueOffset = value & 255;
		this.redMultiplier = 0;
		this.greenMultiplier = 0;
		this.blueMultiplier = 0;
		return this.get_color();
	}
	,__toLimeColorMatrix: function() {
		return (function($this) {
			var $r;
			var array = [$this.redMultiplier,0,0,0,$this.redOffset / 255,0,$this.greenMultiplier,0,0,$this.greenOffset / 255,0,0,$this.blueMultiplier,0,$this.blueOffset / 255,0,0,0,$this.alphaMultiplier,$this.alphaOffset / 255];
			var this1;
			if(array != null) this1 = new Float32Array(array); else this1 = null;
			$r = this1;
			return $r;
		}(this));
	}
	,__class__: openfl_geom_ColorTransform
	,__properties__: {set_color:"set_color",get_color:"get_color"}
};
var openfl_Lib = function() { };
$hxClasses["openfl.Lib"] = openfl_Lib;
openfl_Lib.__name__ = ["openfl","Lib"];
openfl_Lib.application = null;
openfl_Lib["as"] = function(v,c) {
	if(js_Boot.__instanceof(v,c)) return v; else return null;
};
openfl_Lib.attach = function(name) {
	return new openfl_display_MovieClip();
};
openfl_Lib.embed = $hx_exports.openfl.embed = function(elementName,width,height,background,assetsPrefix) {
	lime_system_System.embed(elementName,width,height,background,assetsPrefix);
};
openfl_Lib.getTimer = function() {
	return lime_system_System.getTimer();
};
openfl_Lib.getURL = function(request,target) {
	if(target == null) target = "_blank";
	window.open(request.url,target);
};
openfl_Lib.notImplemented = function(api) {
	if(!openfl_Lib.__sentWarnings.exists(api)) {
		openfl_Lib.__sentWarnings.set(api,true);
		null;
	}
};
openfl_Lib.preventDefaultTouchMove = function() {
	window.document.addEventListener("touchmove",function(evt) {
		evt.preventDefault();
	},false);
};
openfl_Lib.trace = function(arg) {
	haxe_Log.trace(arg,{ fileName : "Lib.hx", lineNumber : 144, className : "openfl.Lib", methodName : "trace"});
};
var openfl_Memory = function() { };
$hxClasses["openfl.Memory"] = openfl_Memory;
openfl_Memory.__name__ = ["openfl","Memory"];
openfl_Memory.gcRef = null;
openfl_Memory.len = null;
openfl_Memory._setPositionTemporarily = function(position,action) {
	var oldPosition = openfl_Memory.gcRef.position;
	openfl_Memory.gcRef.position = position;
	var value = action();
	openfl_Memory.gcRef.position = oldPosition;
	return value;
};
openfl_Memory.getByte = function(addr) {
	return openfl_Memory.gcRef.b[addr];
};
openfl_Memory.getDouble = function(addr) {
	return openfl_Memory._setPositionTemporarily(addr,function() {
		return openfl_Memory.gcRef.readDouble();
	});
};
openfl_Memory.getFloat = function(addr) {
	return openfl_Memory._setPositionTemporarily(addr,function() {
		return openfl_Memory.gcRef.readFloat();
	});
};
openfl_Memory.getI32 = function(addr) {
	return openfl_Memory._setPositionTemporarily(addr,function() {
		return openfl_Memory.gcRef.readInt();
	});
};
openfl_Memory.getUI16 = function(addr) {
	return openfl_Memory._setPositionTemporarily(addr,function() {
		return openfl_Memory.gcRef.readUnsignedShort();
	});
};
openfl_Memory.select = function(inBytes) {
	openfl_Memory.gcRef = inBytes;
	if(inBytes != null) openfl_Memory.len = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(inBytes); else openfl_Memory.len = 0;
};
openfl_Memory.setByte = function(addr,v) {
	openfl_Memory.gcRef.b[addr] = v & 255;
	v;
};
openfl_Memory.setDouble = function(addr,v) {
	openfl_Memory._setPositionTemporarily(addr,function() {
		openfl_Memory.gcRef.writeDouble(v);
	});
};
openfl_Memory.setFloat = function(addr,v) {
	openfl_Memory._setPositionTemporarily(addr,function() {
		openfl_Memory.gcRef.writeFloat(v);
	});
};
openfl_Memory.setI16 = function(addr,v) {
	openfl_Memory._setPositionTemporarily(addr,function() {
		openfl_Memory.gcRef.writeShort(v);
	});
};
openfl_Memory.setI32 = function(addr,v) {
	openfl_Memory._setPositionTemporarily(addr,function() {
		openfl_Memory.gcRef.writeInt(v);
	});
};
var openfl__$Vector_Vector_$Impl_$ = {};
$hxClasses["openfl._Vector.Vector_Impl_"] = openfl__$Vector_Vector_$Impl_$;
openfl__$Vector_Vector_$Impl_$.__name__ = ["openfl","_Vector","Vector_Impl_"];
openfl__$Vector_Vector_$Impl_$.__properties__ = {set_fixed:"set_fixed",get_fixed:"get_fixed",set_length:"set_length",get_length:"get_length"}
openfl__$Vector_Vector_$Impl_$._new = function(length,fixed) {
	if(fixed == null) fixed = false;
	if(length == null) length = 0;
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(length);
	this1.data = this2;
	this1.length = length;
	this1.fixed = fixed;
	return this1;
};
openfl__$Vector_Vector_$Impl_$.concat = function(this1,a) {
	var vectorData = new openfl_VectorData();
	if(a != null) vectorData.length = this1.length + a.length; else vectorData.length = this1.length;
	vectorData.fixed = false;
	var this2;
	this2 = new Array(vectorData.length);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
	if(a != null) haxe_ds__$Vector_Vector_$Impl_$.blit(a.data,0,vectorData.data,this1.length,a.length);
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.copy = function(this1) {
	var vectorData = new openfl_VectorData();
	vectorData.length = this1.length;
	vectorData.fixed = this1.fixed;
	var this2;
	this2 = new Array(this1.length);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.iterator = function(this1) {
	return new openfl_VectorDataIterator(this1);
};
openfl__$Vector_Vector_$Impl_$.join = function(this1,sep) {
	var output = "";
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(i > 0) output += sep;
		output += Std.string(this1.data[i]);
	}
	return output;
};
openfl__$Vector_Vector_$Impl_$.pop = function(this1) {
	var value = null;
	if(!this1.fixed) {
		if(this1.length > 0) {
			this1.length--;
			value = this1.data[this1.length];
		}
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.push = function(this1,x) {
	if(!this1.fixed) {
		this1.length++;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.data.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
			this1.data = data;
		}
		this1.data[this1.length - 1] = x;
	}
	return this1.length;
};
openfl__$Vector_Vector_$Impl_$.reverse = function(this1) {
	var data;
	var this2;
	this2 = new Array(this1.length);
	data = this2;
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		data[this1.length - 1 - i] = this1.data[i];
	}
	this1.data = data;
};
openfl__$Vector_Vector_$Impl_$.shift = function(this1) {
	if(!this1.fixed && this1.length > 0) {
		this1.length--;
		var value = this1.data[0];
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,1,this1.data,0,this1.length);
		return value;
	}
	return null;
};
openfl__$Vector_Vector_$Impl_$.unshift = function(this1,x) {
	if(!this1.fixed) {
		this1.length++;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,1,this1.data.length);
			this1.data = data;
		} else haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,this1.data,1,this1.length - 1);
		this1.data[0] = x;
	}
};
openfl__$Vector_Vector_$Impl_$.slice = function(this1,pos,end) {
	if(end == null) end = 0;
	if(pos == null) pos = 0;
	if(pos < 0) pos += this1.length;
	if(end <= 0) end += this1.length;
	if(end > this1.length) end = this1.length;
	var length = end - pos;
	if(length <= 0 || length > this1.length) length = this1.length;
	var vectorData = new openfl_VectorData();
	vectorData.length = end - pos;
	vectorData.fixed = true;
	var this2;
	this2 = new Array(length);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,pos,vectorData.data,0,length);
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.sort = function(this1,f) {
	var array = haxe_ds__$Vector_Vector_$Impl_$.toArray(this1.data);
	array.sort(f);
	var vec;
	var this2;
	this2 = new Array(array.length);
	vec = this2;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	this1.data = vec;
};
openfl__$Vector_Vector_$Impl_$.splice = function(this1,pos,len) {
	if(pos < 0) pos += this1.length;
	if(pos + len > this1.length) len = this1.length - pos;
	if(len < 0) len = 0;
	var vectorData = new openfl_VectorData();
	vectorData.length = len;
	vectorData.fixed = false;
	var this2;
	this2 = new Array(len);
	vectorData.data = this2;
	haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,pos,vectorData.data,0,len);
	if(len > 0) {
		this1.length -= len;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,pos + len,this1.data,pos,this1.length - pos);
	}
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.toString = function(this1) {
	return haxe_ds__$Vector_Vector_$Impl_$.toArray(this1.data).toString();
};
openfl__$Vector_Vector_$Impl_$.indexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var value = -1;
	var _g1 = from;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(this1.data[i] == x) {
			value = i;
			break;
		}
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.lastIndexOf = function(this1,x,from) {
	if(from == null) from = 0;
	var value = -1;
	var i = this1.length - 1;
	while(i >= from) {
		if(this1.data[i] == x) {
			value = i;
			break;
		}
		i--;
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.ofArray = function(a) {
	var vectorData = new openfl_VectorData();
	vectorData.length = a.length;
	vectorData.fixed = true;
	var vec;
	var this1;
	this1 = new Array(a.length);
	vec = this1;
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = a[i];
	}
	vectorData.data = vec;
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.convert = function(v) {
	return v;
};
openfl__$Vector_Vector_$Impl_$.get = function(this1,index) {
	return this1.data[index];
};
openfl__$Vector_Vector_$Impl_$.set = function(this1,key,value) {
	if(!this1.fixed) {
		if(key >= this1.length) this1.length = key + 1;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.data.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
			this1.data = data;
		}
	}
	return this1.data[key] = value;
};
openfl__$Vector_Vector_$Impl_$.fromArray = function(value) {
	var vectorData = new openfl_VectorData();
	vectorData.length = value.length;
	vectorData.fixed = true;
	var vec;
	var this1;
	this1 = new Array(value.length);
	vec = this1;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = value[i];
	}
	vectorData.data = vec;
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.toArray = function(this1) {
	var value = [];
	var _g1 = 0;
	var _g = this1.data.length;
	while(_g1 < _g) {
		var i = _g1++;
		value.push(this1.data[i]);
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.fromHaxeVector = function(value) {
	var vectorData = new openfl_VectorData();
	vectorData.length = value.length;
	vectorData.fixed = true;
	vectorData.data = value;
	return vectorData;
};
openfl__$Vector_Vector_$Impl_$.toHaxeVector = function(this1) {
	return this1.data;
};
openfl__$Vector_Vector_$Impl_$.fromVectorData = function(value) {
	return value;
};
openfl__$Vector_Vector_$Impl_$.toVectorData = function(this1) {
	return this1;
};
openfl__$Vector_Vector_$Impl_$.get_length = function(this1) {
	return this1.length;
};
openfl__$Vector_Vector_$Impl_$.set_length = function(this1,value) {
	if(!this1.fixed) {
		if(value > this1.length) {
			var data;
			var this2;
			this2 = new Array(value);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,Std["int"](Math.min(this1.data.length,value)));
			this1.data = data;
		}
		this1.length = value;
	}
	return value;
};
openfl__$Vector_Vector_$Impl_$.get_fixed = function(this1) {
	return this1.fixed;
};
openfl__$Vector_Vector_$Impl_$.set_fixed = function(this1,value) {
	return this1.fixed = value;
};
var openfl_VectorData = function() {
	this.length = 0;
};
$hxClasses["openfl.VectorData"] = openfl_VectorData;
openfl_VectorData.__name__ = ["openfl","VectorData"];
openfl_VectorData.prototype = {
	__class__: openfl_VectorData
};
var openfl_VectorDataIterator = function(data) {
	this.index = 0;
	this.vectorData = data;
};
$hxClasses["openfl.VectorDataIterator"] = openfl_VectorDataIterator;
openfl_VectorDataIterator.__name__ = ["openfl","VectorDataIterator"];
openfl_VectorDataIterator.prototype = {
	hasNext: function() {
		return this.index < this.vectorData.length;
	}
	,next: function() {
		var index = this.index++;
		return this.vectorData.data[index];
	}
	,__class__: openfl_VectorDataIterator
};
var openfl__$internal_renderer_AbstractMaskManager = function(renderSession) {
	this.renderSession = renderSession;
};
$hxClasses["openfl._internal.renderer.AbstractMaskManager"] = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_AbstractMaskManager.__name__ = ["openfl","_internal","renderer","AbstractMaskManager"];
openfl__$internal_renderer_AbstractMaskManager.prototype = {
	pushMask: function(mask) {
	}
	,pushRect: function(rect,transform) {
	}
	,popMask: function() {
	}
	,popRect: function() {
	}
	,saveState: function() {
	}
	,restoreState: function() {
	}
	,__class__: openfl__$internal_renderer_AbstractMaskManager
};
var openfl__$internal_renderer_AbstractRenderer = function(width,height) {
	this.width = width;
	this.height = height;
};
$hxClasses["openfl._internal.renderer.AbstractRenderer"] = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_AbstractRenderer.__name__ = ["openfl","_internal","renderer","AbstractRenderer"];
openfl__$internal_renderer_AbstractRenderer.prototype = {
	render: function(stage) {
	}
	,renderShape: function(shape) {
	}
	,setViewport: function(x,y,width,height) {
	}
	,resize: function(width,height) {
	}
	,__class__: openfl__$internal_renderer_AbstractRenderer
};
var openfl__$internal_renderer_DrawCommandBuffer = function() {
	this.types = [];
	this.b = [];
	this.i = [];
	this.f = [];
	this.o = [];
	this.ff = [];
	this.ii = [];
	this.ts = [];
};
$hxClasses["openfl._internal.renderer.DrawCommandBuffer"] = openfl__$internal_renderer_DrawCommandBuffer;
openfl__$internal_renderer_DrawCommandBuffer.__name__ = ["openfl","_internal","renderer","DrawCommandBuffer"];
openfl__$internal_renderer_DrawCommandBuffer.prototype = {
	append: function(other) {
		var data = new openfl__$internal_renderer_DrawCommandReader(other);
		var _g = 0;
		var _g1 = other.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 0:
				var c;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
				c = data;
				this.beginBitmapFill(c.buffer.o[c.oPos],c.buffer.o[c.oPos + 1],c.buffer.b[c.bPos],c.buffer.b[c.bPos + 1]);
				break;
			case 1:
				var c1;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
				c1 = data;
				this.beginFill(c1.buffer.i[c1.iPos],c1.buffer.f[c1.fPos]);
				break;
			case 2:
				var c2;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL;
				c2 = data;
				this.beginGradientFill(c2.buffer.o[c2.oPos],c2.buffer.ii[c2.iiPos],c2.buffer.ff[c2.ffPos],c2.buffer.ii[c2.iiPos + 1],c2.buffer.o[c2.oPos + 1],c2.buffer.o[c2.oPos + 2],c2.buffer.o[c2.oPos + 3],c2.buffer.o[c2.oPos + 4]);
				break;
			case 3:
				var c3;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
				c3 = data;
				this.cubicCurveTo(c3.buffer.f[c3.fPos],c3.buffer.f[c3.fPos + 1],c3.buffer.f[c3.fPos + 2],c3.buffer.f[c3.fPos + 3],c3.buffer.f[c3.fPos + 4],c3.buffer.f[c3.fPos + 5]);
				break;
			case 4:
				var c4;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
				c4 = data;
				this.curveTo(c4.buffer.f[c4.fPos],c4.buffer.f[c4.fPos + 1],c4.buffer.f[c4.fPos + 2],c4.buffer.f[c4.fPos + 3]);
				break;
			case 5:
				var c5;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
				c5 = data;
				this.drawCircle(c5.buffer.f[c5.fPos],c5.buffer.f[c5.fPos + 1],c5.buffer.f[c5.fPos + 2]);
				break;
			case 6:
				var c6;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
				c6 = data;
				this.drawEllipse(c6.buffer.f[c6.fPos],c6.buffer.f[c6.fPos + 1],c6.buffer.f[c6.fPos + 2],c6.buffer.f[c6.fPos + 3]);
				break;
			case 7:
				var c7;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_PATH;
				c7 = data;
				this.drawPath(c7.buffer.o[c7.oPos],c7.buffer.o[c7.oPos + 1],c7.buffer.o[c7.oPos + 2]);
				break;
			case 8:
				var c8;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
				c8 = data;
				this.drawRect(c8.buffer.f[c8.fPos],c8.buffer.f[c8.fPos + 1],c8.buffer.f[c8.fPos + 2],c8.buffer.f[c8.fPos + 3]);
				break;
			case 9:
				var c9;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
				c9 = data;
				this.drawRoundRect(c9.buffer.f[c9.fPos],c9.buffer.f[c9.fPos + 1],c9.buffer.f[c9.fPos + 2],c9.buffer.f[c9.fPos + 3],c9.buffer.f[c9.fPos + 4],c9.buffer.f[c9.fPos + 5]);
				break;
			case 10:
				var c10;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TILES;
				c10 = data;
				this.drawTiles(c10.buffer.ts[c10.tsPos],c10.buffer.ff[c10.ffPos],c10.buffer.b[c10.bPos],c10.buffer.i[c10.iPos],c10.buffer.o[c10.oPos],c10.buffer.i[c10.iPos + 1]);
				break;
			case 11:
				var c11;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES;
				c11 = data;
				this.drawTriangles(c11.buffer.o[c11.oPos],c11.buffer.o[c11.oPos + 1],c11.buffer.o[c11.oPos + 2],c11.buffer.o[c11.oPos + 3],c11.buffer.o[c11.oPos + 4],c11.buffer.i[c11.iPos]);
				break;
			case 12:
				var c12;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.END_FILL;
				c12 = data;
				this.endFill();
				break;
			case 13:
				var c13;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE;
				c13 = data;
				this.lineBitmapStyle(c13.buffer.o[c13.oPos],c13.buffer.o[c13.oPos + 1],c13.buffer.b[c13.bPos],c13.buffer.b[c13.bPos + 1]);
				break;
			case 14:
				var c14;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE;
				c14 = data;
				this.lineGradientStyle(c14.buffer.o[c14.oPos],c14.buffer.ii[c14.iiPos],c14.buffer.ff[c14.ffPos],c14.buffer.ii[c14.iiPos + 1],c14.buffer.o[c14.oPos + 1],c14.buffer.o[c14.oPos + 2],c14.buffer.o[c14.oPos + 3],c14.buffer.o[c14.oPos + 4]);
				break;
			case 15:
				var c15;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
				c15 = data;
				this.lineStyle(c15.buffer.o[c15.oPos],c15.buffer.o[c15.oPos + 1],c15.buffer.o[c15.oPos + 2],c15.buffer.o[c15.oPos + 3],c15.buffer.o[c15.oPos + 4],c15.buffer.o[c15.oPos + 5],c15.buffer.o[c15.oPos + 6],c15.buffer.o[c15.oPos + 7]);
				break;
			case 16:
				var c16;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
				c16 = data;
				this.lineTo(c16.buffer.f[c16.fPos],c16.buffer.f[c16.fPos + 1]);
				break;
			case 17:
				var c17;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
				c17 = data;
				this.moveTo(c17.buffer.f[c17.fPos],c17.buffer.f[c17.fPos + 1]);
				break;
			case 18:
				var c18;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX;
				c18 = data;
				this.overrideMatrix(c18.buffer.o[c18.oPos]);
				break;
			default:
			}
		}
		data.destroy();
		return other;
	}
	,beginBitmapFill: function(bitmap,matrix,repeat,smooth) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL);
		this.o.push(bitmap);
		this.o.push(matrix);
		this.b.push(repeat);
		this.b.push(smooth);
	}
	,beginFill: function(color,alpha) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_FILL);
		this.i.push(color);
		this.f.push(alpha);
	}
	,beginGradientFill: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL);
		this.o.push(type);
		this.ii.push(colors);
		this.ff.push(alphas);
		this.ii.push(ratios);
		this.o.push(matrix);
		this.o.push(spreadMethod);
		this.o.push(interpolationMethod);
		this.o.push(focalPointRatio);
	}
	,clear: function() {
		this.types.splice(0,this.types.length);
		this.b.splice(0,this.b.length);
		this.i.splice(0,this.i.length);
		this.f.splice(0,this.f.length);
		this.o.splice(0,this.o.length);
		this.ff.splice(0,this.ff.length);
		this.ii.splice(0,this.ii.length);
		this.ts.splice(0,this.ts.length);
	}
	,copy: function() {
		var copy = new openfl__$internal_renderer_DrawCommandBuffer();
		copy.append(this);
		return copy;
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO);
		this.f.push(controlX1);
		this.f.push(controlY1);
		this.f.push(controlX2);
		this.f.push(controlY2);
		this.f.push(anchorX);
		this.f.push(anchorY);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.CURVE_TO);
		this.f.push(controlX);
		this.f.push(controlY);
		this.f.push(anchorX);
		this.f.push(anchorY);
	}
	,destroy: function() {
		this.clear();
		this.types = null;
		this.b = null;
		this.i = null;
		this.f = null;
		this.o = null;
		this.ff = null;
		this.ii = null;
		this.ts = null;
	}
	,drawCircle: function(x,y,radius) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE);
		this.f.push(x);
		this.f.push(y);
		this.f.push(radius);
	}
	,drawEllipse: function(x,y,width,height) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE);
		this.f.push(x);
		this.f.push(y);
		this.f.push(width);
		this.f.push(height);
	}
	,drawPath: function(commands,data,winding) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_PATH);
		this.o.push(commands);
		this.o.push(data);
		this.o.push(winding);
	}
	,drawRect: function(x,y,width,height) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_RECT);
		this.f.push(x);
		this.f.push(y);
		this.f.push(width);
		this.f.push(height);
	}
	,drawRoundRect: function(x,y,width,height,rx,ry) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT);
		this.f.push(x);
		this.f.push(y);
		this.f.push(width);
		this.f.push(height);
		this.f.push(rx);
		this.f.push(ry);
	}
	,drawTiles: function(sheet,tileData,smooth,flags,shader,count) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_TILES);
		this.ts.push(sheet);
		this.ff.push(tileData);
		this.b.push(smooth);
		this.i.push(flags);
		this.o.push(shader);
		this.i.push(count);
	}
	,drawTriangles: function(vertices,indices,uvtData,culling,colors,blendMode) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES);
		this.o.push(vertices);
		this.o.push(indices);
		this.o.push(uvtData);
		this.o.push(culling);
		this.o.push(colors);
		this.i.push(blendMode);
	}
	,endFill: function() {
		this.types.push(openfl__$internal_renderer_DrawCommandType.END_FILL);
	}
	,lineBitmapStyle: function(bitmap,matrix,repeat,smooth) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE);
		this.o.push(bitmap);
		this.o.push(matrix);
		this.b.push(repeat);
		this.b.push(smooth);
	}
	,lineGradientStyle: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE);
		this.o.push(type);
		this.ii.push(colors);
		this.ff.push(alphas);
		this.ii.push(ratios);
		this.o.push(matrix);
		this.o.push(spreadMethod);
		this.o.push(interpolationMethod);
		this.o.push(focalPointRatio);
	}
	,lineStyle: function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_STYLE);
		this.o.push(thickness);
		this.o.push(color);
		this.o.push(alpha);
		this.o.push(pixelHinting);
		this.o.push(scaleMode);
		this.o.push(caps);
		this.o.push(joints);
		this.o.push(miterLimit);
	}
	,lineTo: function(x,y) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.LINE_TO);
		this.f.push(x);
		this.f.push(y);
	}
	,moveTo: function(x,y) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.MOVE_TO);
		this.f.push(x);
		this.f.push(y);
	}
	,overrideMatrix: function(matrix) {
		this.types.push(openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX);
		this.o.push(matrix);
	}
	,get_length: function() {
		return this.types.length;
	}
	,__class__: openfl__$internal_renderer_DrawCommandBuffer
	,__properties__: {get_length:"get_length"}
};
var openfl__$internal_renderer_DrawCommandReader = function(buffer) {
	this.buffer = buffer;
	this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0;
	this.prev = openfl__$internal_renderer_DrawCommandType.UNKNOWN;
};
$hxClasses["openfl._internal.renderer.DrawCommandReader"] = openfl__$internal_renderer_DrawCommandReader;
openfl__$internal_renderer_DrawCommandReader.__name__ = ["openfl","_internal","renderer","DrawCommandReader"];
openfl__$internal_renderer_DrawCommandReader.prototype = {
	advance: function() {
		var _g = this.prev;
		switch(_g[1]) {
		case 0:
			this.oPos += 2;
			this.bPos += 2;
			break;
		case 1:
			this.iPos += 1;
			this.fPos += 1;
			break;
		case 2:
			this.oPos += 5;
			this.iiPos += 2;
			this.ffPos += 1;
			break;
		case 3:
			this.fPos += 6;
			break;
		case 4:
			this.fPos += 4;
			break;
		case 5:
			this.fPos += 3;
			break;
		case 6:
			this.fPos += 4;
			break;
		case 7:
			this.oPos += 3;
			break;
		case 8:
			this.fPos += 4;
			break;
		case 9:
			this.fPos += 6;
			break;
		case 10:
			this.tsPos += 1;
			this.ffPos += 1;
			this.bPos += 1;
			this.iPos += 2;
			this.oPos += 1;
			break;
		case 11:
			this.oPos += 5;
			this.iPos += 1;
			break;
		case 12:
			break;
		case 13:
			this.oPos += 2;
			this.bPos += 2;
			break;
		case 14:
			this.oPos += 5;
			this.iiPos += 2;
			this.ffPos += 1;
			break;
		case 15:
			this.oPos += 8;
			break;
		case 16:
			this.fPos += 2;
			break;
		case 17:
			this.fPos += 2;
			break;
		case 18:
			this.oPos += 1;
			break;
		default:
		}
	}
	,bool: function(index) {
		return this.buffer.b[this.bPos + index];
	}
	,destroy: function() {
		this.buffer = null;
		this.reset();
	}
	,fArr: function(index) {
		return this.buffer.ff[this.ffPos + index];
	}
	,'float': function(index) {
		return this.buffer.f[this.fPos + index];
	}
	,iArr: function(index) {
		return this.buffer.ii[this.iiPos + index];
	}
	,'int': function(index) {
		return this.buffer.i[this.iPos + index];
	}
	,obj: function(index) {
		return this.buffer.o[this.oPos + index];
	}
	,readBeginBitmapFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
		return this;
	}
	,readBeginFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
		return this;
	}
	,readBeginGradientFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL;
		return this;
	}
	,readCubicCurveTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
		return this;
	}
	,readCurveTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
		return this;
	}
	,readDrawCircle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
		return this;
	}
	,readDrawEllipse: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
		return this;
	}
	,readDrawPath: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_PATH;
		return this;
	}
	,readDrawRect: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
		return this;
	}
	,readDrawRoundRect: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
		return this;
	}
	,readDrawTiles: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TILES;
		return this;
	}
	,readDrawTriangles: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES;
		return this;
	}
	,readEndFill: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.END_FILL;
		return this;
	}
	,readLineBitmapStyle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE;
		return this;
	}
	,readLineGradientStyle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE;
		return this;
	}
	,readLineStyle: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
		return this;
	}
	,readLineTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
		return this;
	}
	,readMoveTo: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
		return this;
	}
	,readOverrideMatrix: function() {
		this.advance();
		this.prev = openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX;
		return this;
	}
	,reset: function() {
		this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0;
	}
	,skip: function(type) {
		this.advance();
		this.prev = type;
	}
	,tileSheet: function(index) {
		return this.buffer.ts[this.tsPos + index];
	}
	,__class__: openfl__$internal_renderer_DrawCommandReader
};
var openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.BeginBitmapFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","BeginBitmapFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.__properties__ = {get_smooth:"get_smooth",get_repeat:"get_repeat",get_matrix:"get_matrix",get_bitmap:"get_bitmap"}
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_bitmap = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_matrix = function(this1) {
	return this1.buffer.o[this1.oPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_repeat = function(this1) {
	return this1.buffer.b[this1.bPos];
};
openfl__$internal_renderer__$DrawCommandReader_BeginBitmapFillView_$Impl_$.get_smooth = function(this1) {
	return this1.buffer.b[this1.bPos + 1];
};
var openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.BeginFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","BeginFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.__properties__ = {get_alpha:"get_alpha",get_color:"get_color"}
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_color = function(this1) {
	return this1.buffer.i[this1.iPos];
};
openfl__$internal_renderer__$DrawCommandReader_BeginFillView_$Impl_$.get_alpha = function(this1) {
	return this1.buffer.f[this1.fPos];
};
var openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.BeginGradientFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","BeginGradientFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.__properties__ = {get_focalPointRatio:"get_focalPointRatio",get_interpolationMethod:"get_interpolationMethod",get_spreadMethod:"get_spreadMethod",get_matrix:"get_matrix",get_ratios:"get_ratios",get_alphas:"get_alphas",get_colors:"get_colors",get_type:"get_type"}
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_type = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_colors = function(this1) {
	return this1.buffer.ii[this1.iiPos];
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_alphas = function(this1) {
	return this1.buffer.ff[this1.ffPos];
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_ratios = function(this1) {
	return this1.buffer.ii[this1.iiPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_matrix = function(this1) {
	return this1.buffer.o[this1.oPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_spreadMethod = function(this1) {
	return this1.buffer.o[this1.oPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_interpolationMethod = function(this1) {
	return this1.buffer.o[this1.oPos + 3];
};
openfl__$internal_renderer__$DrawCommandReader_BeginGradientFillView_$Impl_$.get_focalPointRatio = function(this1) {
	return this1.buffer.o[this1.oPos + 4];
};
var openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.CubicCurveToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","CubicCurveToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.__properties__ = {get_anchorY:"get_anchorY",get_anchorX:"get_anchorX",get_controlY2:"get_controlY2",get_controlX2:"get_controlX2",get_controlY1:"get_controlY1",get_controlX1:"get_controlX1"}
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX1 = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY1 = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlX2 = function(this1) {
	return this1.buffer.f[this1.fPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_controlY2 = function(this1) {
	return this1.buffer.f[this1.fPos + 3];
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorX = function(this1) {
	return this1.buffer.f[this1.fPos + 4];
};
openfl__$internal_renderer__$DrawCommandReader_CubicCurveToView_$Impl_$.get_anchorY = function(this1) {
	return this1.buffer.f[this1.fPos + 5];
};
var openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","CurveToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.__properties__ = {get_anchorY:"get_anchorY",get_anchorX:"get_anchorX",get_controlY:"get_controlY",get_controlX:"get_controlX"}
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlX = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_controlY = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorX = function(this1) {
	return this1.buffer.f[this1.fPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_CurveToView_$Impl_$.get_anchorY = function(this1) {
	return this1.buffer.f[this1.fPos + 3];
};
var openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawCircleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawCircleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.__properties__ = {get_radius:"get_radius",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_x = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_y = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_DrawCircleView_$Impl_$.get_radius = function(this1) {
	return this1.buffer.f[this1.fPos + 2];
};
var openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawEllipseView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawEllipseView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.__properties__ = {get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_x = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_y = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_width = function(this1) {
	return this1.buffer.f[this1.fPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_DrawEllipseView_$Impl_$.get_height = function(this1) {
	return this1.buffer.f[this1.fPos + 3];
};
var openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawPathView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawPathView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.__properties__ = {get_winding:"get_winding",get_data:"get_data",get_commands:"get_commands"}
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_commands = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_data = function(this1) {
	return this1.buffer.o[this1.oPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_DrawPathView_$Impl_$.get_winding = function(this1) {
	return this1.buffer.o[this1.oPos + 2];
};
var openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawRectView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawRectView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.__properties__ = {get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_x = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_y = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_width = function(this1) {
	return this1.buffer.f[this1.fPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRectView_$Impl_$.get_height = function(this1) {
	return this1.buffer.f[this1.fPos + 3];
};
var openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawRoundRectView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawRoundRectView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.__properties__ = {get_ry:"get_ry",get_rx:"get_rx",get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_x = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_y = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_width = function(this1) {
	return this1.buffer.f[this1.fPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_height = function(this1) {
	return this1.buffer.f[this1.fPos + 3];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_rx = function(this1) {
	return this1.buffer.f[this1.fPos + 4];
};
openfl__$internal_renderer__$DrawCommandReader_DrawRoundRectView_$Impl_$.get_ry = function(this1) {
	return this1.buffer.f[this1.fPos + 5];
};
var openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawTilesView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawTilesView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.__properties__ = {get_count:"get_count",get_shader:"get_shader",get_flags:"get_flags",get_smooth:"get_smooth",get_tileData:"get_tileData",get_sheet:"get_sheet"}
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_sheet = function(this1) {
	return this1.buffer.ts[this1.tsPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_tileData = function(this1) {
	return this1.buffer.ff[this1.ffPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_smooth = function(this1) {
	return this1.buffer.b[this1.bPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_flags = function(this1) {
	return this1.buffer.i[this1.iPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_shader = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTilesView_$Impl_$.get_count = function(this1) {
	return this1.buffer.i[this1.iPos + 1];
};
var openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.DrawTrianglesView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","DrawTrianglesView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.__properties__ = {get_blendMode:"get_blendMode",get_colors:"get_colors",get_culling:"get_culling",get_uvtData:"get_uvtData",get_indices:"get_indices",get_vertices:"get_vertices"}
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_vertices = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_indices = function(this1) {
	return this1.buffer.o[this1.oPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_uvtData = function(this1) {
	return this1.buffer.o[this1.oPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_culling = function(this1) {
	return this1.buffer.o[this1.oPos + 3];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_colors = function(this1) {
	return this1.buffer.o[this1.oPos + 4];
};
openfl__$internal_renderer__$DrawCommandReader_DrawTrianglesView_$Impl_$.get_blendMode = function(this1) {
	return this1.buffer.i[this1.iPos];
};
var openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.EndFillView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","EndFillView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_EndFillView_$Impl_$._new = function(d) {
	return d;
};
var openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineBitmapStyleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineBitmapStyleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.__properties__ = {get_smooth:"get_smooth",get_repeat:"get_repeat",get_matrix:"get_matrix",get_bitmap:"get_bitmap"}
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_bitmap = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_matrix = function(this1) {
	return this1.buffer.o[this1.oPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_repeat = function(this1) {
	return this1.buffer.b[this1.bPos];
};
openfl__$internal_renderer__$DrawCommandReader_LineBitmapStyleView_$Impl_$.get_smooth = function(this1) {
	return this1.buffer.b[this1.bPos + 1];
};
var openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineGradientStyleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineGradientStyleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.__properties__ = {get_focalPointRatio:"get_focalPointRatio",get_interpolationMethod:"get_interpolationMethod",get_spreadMethod:"get_spreadMethod",get_matrix:"get_matrix",get_ratios:"get_ratios",get_alphas:"get_alphas",get_colors:"get_colors",get_type:"get_type"}
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_type = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_colors = function(this1) {
	return this1.buffer.ii[this1.iiPos];
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_alphas = function(this1) {
	return this1.buffer.ff[this1.ffPos];
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_ratios = function(this1) {
	return this1.buffer.ii[this1.iiPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_matrix = function(this1) {
	return this1.buffer.o[this1.oPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_spreadMethod = function(this1) {
	return this1.buffer.o[this1.oPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_interpolationMethod = function(this1) {
	return this1.buffer.o[this1.oPos + 3];
};
openfl__$internal_renderer__$DrawCommandReader_LineGradientStyleView_$Impl_$.get_focalPointRatio = function(this1) {
	return this1.buffer.o[this1.oPos + 4];
};
var openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineStyleView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineStyleView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.__properties__ = {get_miterLimit:"get_miterLimit",get_joints:"get_joints",get_caps:"get_caps",get_scaleMode:"get_scaleMode",get_pixelHinting:"get_pixelHinting",get_alpha:"get_alpha",get_color:"get_color",get_thickness:"get_thickness"}
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_thickness = function(this1) {
	return this1.buffer.o[this1.oPos];
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_color = function(this1) {
	return this1.buffer.o[this1.oPos + 1];
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_alpha = function(this1) {
	return this1.buffer.o[this1.oPos + 2];
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_pixelHinting = function(this1) {
	return this1.buffer.o[this1.oPos + 3];
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_scaleMode = function(this1) {
	return this1.buffer.o[this1.oPos + 4];
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_caps = function(this1) {
	return this1.buffer.o[this1.oPos + 5];
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_joints = function(this1) {
	return this1.buffer.o[this1.oPos + 6];
};
openfl__$internal_renderer__$DrawCommandReader_LineStyleView_$Impl_$.get_miterLimit = function(this1) {
	return this1.buffer.o[this1.oPos + 7];
};
var openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.LineToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","LineToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.__properties__ = {get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_x = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_LineToView_$Impl_$.get_y = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
var openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.MoveToView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","MoveToView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.__properties__ = {get_y:"get_y",get_x:"get_x"}
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_x = function(this1) {
	return this1.buffer.f[this1.fPos];
};
openfl__$internal_renderer__$DrawCommandReader_MoveToView_$Impl_$.get_y = function(this1) {
	return this1.buffer.f[this1.fPos + 1];
};
var openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$ = {};
$hxClasses["openfl._internal.renderer._DrawCommandReader.OverrideMatrixView_Impl_"] = openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$;
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.__name__ = ["openfl","_internal","renderer","_DrawCommandReader","OverrideMatrixView_Impl_"];
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.__properties__ = {get_matrix:"get_matrix"}
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$._new = function(d) {
	return d;
};
openfl__$internal_renderer__$DrawCommandReader_OverrideMatrixView_$Impl_$.get_matrix = function(this1) {
	return this1.buffer.o[this1.oPos];
};
var openfl__$internal_renderer_DrawCommandType = $hxClasses["openfl._internal.renderer.DrawCommandType"] = { __ename__ : ["openfl","_internal","renderer","DrawCommandType"], __constructs__ : ["BEGIN_BITMAP_FILL","BEGIN_FILL","BEGIN_GRADIENT_FILL","CUBIC_CURVE_TO","CURVE_TO","DRAW_CIRCLE","DRAW_ELLIPSE","DRAW_PATH","DRAW_RECT","DRAW_ROUND_RECT","DRAW_TILES","DRAW_TRIANGLES","END_FILL","LINE_BITMAP_STYLE","LINE_GRADIENT_STYLE","LINE_STYLE","LINE_TO","MOVE_TO","OVERRIDE_MATRIX","UNKNOWN"] };
openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL = ["BEGIN_BITMAP_FILL",0];
openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.BEGIN_FILL = ["BEGIN_FILL",1];
openfl__$internal_renderer_DrawCommandType.BEGIN_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.BEGIN_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL = ["BEGIN_GRADIENT_FILL",2];
openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO = ["CUBIC_CURVE_TO",3];
openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.CURVE_TO = ["CURVE_TO",4];
openfl__$internal_renderer_DrawCommandType.CURVE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.CURVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE = ["DRAW_CIRCLE",5];
openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE = ["DRAW_ELLIPSE",6];
openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_PATH = ["DRAW_PATH",7];
openfl__$internal_renderer_DrawCommandType.DRAW_PATH.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_PATH.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_RECT = ["DRAW_RECT",8];
openfl__$internal_renderer_DrawCommandType.DRAW_RECT.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_RECT.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT = ["DRAW_ROUND_RECT",9];
openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_TILES = ["DRAW_TILES",10];
openfl__$internal_renderer_DrawCommandType.DRAW_TILES.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_TILES.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES = ["DRAW_TRIANGLES",11];
openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES.toString = $estr;
openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.END_FILL = ["END_FILL",12];
openfl__$internal_renderer_DrawCommandType.END_FILL.toString = $estr;
openfl__$internal_renderer_DrawCommandType.END_FILL.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE = ["LINE_BITMAP_STYLE",13];
openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE = ["LINE_GRADIENT_STYLE",14];
openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_STYLE = ["LINE_STYLE",15];
openfl__$internal_renderer_DrawCommandType.LINE_STYLE.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_STYLE.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.LINE_TO = ["LINE_TO",16];
openfl__$internal_renderer_DrawCommandType.LINE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.LINE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.MOVE_TO = ["MOVE_TO",17];
openfl__$internal_renderer_DrawCommandType.MOVE_TO.toString = $estr;
openfl__$internal_renderer_DrawCommandType.MOVE_TO.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX = ["OVERRIDE_MATRIX",18];
openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX.toString = $estr;
openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.UNKNOWN = ["UNKNOWN",19];
openfl__$internal_renderer_DrawCommandType.UNKNOWN.toString = $estr;
openfl__$internal_renderer_DrawCommandType.UNKNOWN.__enum__ = openfl__$internal_renderer_DrawCommandType;
openfl__$internal_renderer_DrawCommandType.__empty_constructs__ = [openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL,openfl__$internal_renderer_DrawCommandType.BEGIN_FILL,openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL,openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO,openfl__$internal_renderer_DrawCommandType.CURVE_TO,openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE,openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE,openfl__$internal_renderer_DrawCommandType.DRAW_PATH,openfl__$internal_renderer_DrawCommandType.DRAW_RECT,openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT,openfl__$internal_renderer_DrawCommandType.DRAW_TILES,openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES,openfl__$internal_renderer_DrawCommandType.END_FILL,openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE,openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE,openfl__$internal_renderer_DrawCommandType.LINE_STYLE,openfl__$internal_renderer_DrawCommandType.LINE_TO,openfl__$internal_renderer_DrawCommandType.MOVE_TO,openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX,openfl__$internal_renderer_DrawCommandType.UNKNOWN];
var openfl__$internal_renderer_GraphicsPaths = function() { };
$hxClasses["openfl._internal.renderer.GraphicsPaths"] = openfl__$internal_renderer_GraphicsPaths;
openfl__$internal_renderer_GraphicsPaths.__name__ = ["openfl","_internal","renderer","GraphicsPaths"];
openfl__$internal_renderer_GraphicsPaths.ellipse = function(points,x,y,rx,ry,segmentCount) {
	var seg = Math.PI * 2 / segmentCount;
	var _g1 = 0;
	var _g = segmentCount + 1;
	while(_g1 < _g) {
		var i = _g1++;
		points.push(x + Math.sin(seg * i) * rx);
		points.push(y + Math.cos(seg * i) * ry);
	}
};
openfl__$internal_renderer_GraphicsPaths.cubicCurveTo = function(points,cx,cy,cx2,cy2,x,y) {
	var n = 20;
	var dt = 0;
	var dt2 = 0;
	var dt3 = 0;
	var t2 = 0;
	var t3 = 0;
	var fromX = points[points.length - 2];
	var fromY = points[points.length - 1];
	var px = 0;
	var py = 0;
	var tmp = 0;
	var _g1 = 1;
	var _g = n + 1;
	while(_g1 < _g) {
		var i = _g1++;
		tmp = i / n;
		dt = 1 - tmp;
		dt2 = dt * dt;
		dt3 = dt2 * dt;
		t2 = tmp * tmp;
		t3 = t2 * tmp;
		px = dt3 * fromX + 3 * dt2 * tmp * cx + 3 * dt * t2 * cx2 + t3 * x;
		py = dt3 * fromY + 3 * dt2 * tmp * cy + 3 * dt * t2 * cy2 + t3 * y;
		points.push(px);
		points.push(py);
	}
};
openfl__$internal_renderer_GraphicsPaths.curveTo = function(points,cx,cy,x,y) {
	var xa = 0;
	var ya = 0;
	var n = 20;
	var fromX = points[points.length - 2];
	var fromY = points[points.length - 1];
	var px = 0;
	var py = 0;
	var tmp = 0;
	var _g1 = 1;
	var _g = n + 1;
	while(_g1 < _g) {
		var i = _g1++;
		tmp = i / n;
		xa = fromX + (cx - fromX) * tmp;
		ya = fromY + (cy - fromY) * tmp;
		px = xa + (cx + (x - cx) * tmp - xa) * tmp;
		py = ya + (cy + (y - cy) * tmp - ya) * tmp;
		points.push(px);
		points.push(py);
	}
};
openfl__$internal_renderer_GraphicsPaths.roundRectangle = function(points,x,y,width,height,rx,ry) {
	var xe = x + width;
	var ye = y + height;
	var cx1 = -rx + rx * openfl__$internal_renderer_GraphicsPaths.SIN45;
	var cx2 = -rx + rx * openfl__$internal_renderer_GraphicsPaths.TAN22;
	var cy1 = -ry + ry * openfl__$internal_renderer_GraphicsPaths.SIN45;
	var cy2 = -ry + ry * openfl__$internal_renderer_GraphicsPaths.TAN22;
	points.push(xe);
	points.push(ye - ry);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe,ye + cy2,xe + cx1,ye + cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe + cx2,ye,xe - rx,ye);
	points.push(x + rx);
	points.push(ye);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x - cx2,ye,x - cx1,ye + cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x,ye + cy2,x,ye - ry);
	points.push(x);
	points.push(y + ry);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x,y - cy2,x - cx1,y - cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,x - cx2,y,x + rx,y);
	points.push(xe - rx);
	points.push(y);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe + cx2,y,xe + cx1,y - cy1);
	openfl__$internal_renderer_GraphicsPaths.curveTo(points,xe,y - cy2,xe,y + ry);
	points.push(xe);
	points.push(ye - ry);
};
var openfl__$internal_renderer_PolyK = function() { };
$hxClasses["openfl._internal.renderer.PolyK"] = openfl__$internal_renderer_PolyK;
openfl__$internal_renderer_PolyK.__name__ = ["openfl","_internal","renderer","PolyK"];
openfl__$internal_renderer_PolyK.triangulate = function(tgs,p) {
	var sign = true;
	var n = p.length >> 1;
	if(n < 3) return [];
	var avl;
	var _g = [];
	var _g1 = 0;
	while(_g1 < n) {
		var i1 = _g1++;
		_g.push(i1);
	}
	avl = _g;
	var i = 0;
	var al = n;
	var earFound = false;
	while(al > 3) {
		var i0 = avl[i % al];
		var i11 = avl[(i + 1) % al];
		var i2 = avl[(i + 2) % al];
		var ax = p[2 * i0];
		var ay = p[2 * i0 + 1];
		var bx = p[2 * i11];
		var by = p[2 * i11 + 1];
		var cx = p[2 * i2];
		var cy = p[2 * i2 + 1];
		earFound = false;
		if(openfl__$internal_renderer_PolyK._convex(ax,ay,bx,by,cx,cy,sign)) {
			earFound = true;
			var _g11 = 0;
			while(_g11 < al) {
				var j = _g11++;
				var vi = avl[j];
				if(vi == i0 || vi == i11 || vi == i2) continue;
				if(openfl__$internal_renderer_PolyK._PointInTriangle(p[2 * vi],p[2 * vi + 1],ax,ay,bx,by,cx,cy)) {
					earFound = false;
					break;
				}
			}
		}
		if(earFound) {
			tgs.push(i0);
			tgs.push(i11);
			tgs.push(i2);
			avl.splice((i + 1) % al,1);
			al--;
			i = 0;
		} else if(i++ > 3 * al) {
			if(sign) {
				tgs = [];
				var _g12 = [];
				var _g2 = 0;
				while(_g2 < n) {
					var k = _g2++;
					_g12.push(k);
				}
				avl = _g12;
				i = 0;
				al = n;
				sign = false;
			} else return [];
		}
	}
	tgs.push(avl[0]);
	tgs.push(avl[1]);
	tgs.push(avl[2]);
	return tgs;
};
openfl__$internal_renderer_PolyK._PointInTriangle = function(px,py,ax,ay,bx,by,cx,cy) {
	var v0x = cx - ax | 0;
	var v0y = cy - ay | 0;
	var v1x = bx - ax | 0;
	var v1y = by - ay | 0;
	var v2x = px - ax | 0;
	var v2y = py - ay | 0;
	var dot00 = v0x * v0x + v0y * v0y;
	var dot01 = v0x * v1x + v0y * v1y;
	var dot02 = v0x * v2x + v0y * v2y;
	var dot11 = v1x * v1x + v1y * v1y;
	var dot12 = v1x * v2x + v1y * v2y;
	var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
	var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
	var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
	return u >= 0 && v >= 0 && u + v < 1;
};
openfl__$internal_renderer_PolyK._convex = function(ax,ay,bx,by,cx,cy,sign) {
	return (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0 == sign;
};
var openfl__$internal_renderer_RenderSession = function() {
	this.activeTextures = 0;
};
$hxClasses["openfl._internal.renderer.RenderSession"] = openfl__$internal_renderer_RenderSession;
openfl__$internal_renderer_RenderSession.__name__ = ["openfl","_internal","renderer","RenderSession"];
openfl__$internal_renderer_RenderSession.prototype = {
	__class__: openfl__$internal_renderer_RenderSession
};
var openfl__$internal_renderer_cairo_CairoBitmap = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoBitmap"] = openfl__$internal_renderer_cairo_CairoBitmap;
openfl__$internal_renderer_cairo_CairoBitmap.__name__ = ["openfl","_internal","renderer","cairo","CairoBitmap"];
openfl__$internal_renderer_cairo_CairoBitmap.render = function(bitmap,renderSession) {
	if(!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;
	var cairo = renderSession.cairo;
	if(bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {
		if(bitmap.__mask != null) renderSession.maskManager.pushMask(bitmap.__mask);
		var transform = bitmap.__renderTransform;
		var scrollRect = bitmap.get_scrollRect();
		if(renderSession.roundPixels) {
			var matrix = transform.__toMatrix3();
			matrix.tx = Math.round(matrix.tx);
			matrix.ty = Math.round(matrix.ty);
			cairo.set_matrix(matrix);
		} else cairo.set_matrix(transform.__toMatrix3());
		var surface = bitmap.bitmapData.getSurface();
		if(surface != null) {
			var pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface(surface);
			lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_filter(pattern,bitmap.smoothing?1:3);
			if(scrollRect != null) {
				cairo.pushGroup();
				cairo.set_source(pattern);
				cairo.newPath();
				cairo.rectangle(scrollRect.x,scrollRect.y,scrollRect.width,scrollRect.height);
				cairo.fill();
				cairo.popGroupToSource();
			} else cairo.set_source(pattern);
			if(bitmap.__worldAlpha == 1) cairo.paint(); else cairo.paintWithAlpha(bitmap.__worldAlpha);
		}
		if(bitmap.__mask != null) renderSession.maskManager.popMask();
	}
};
var openfl__$internal_renderer_cairo_CairoGraphics = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoGraphics"] = openfl__$internal_renderer_cairo_CairoGraphics;
openfl__$internal_renderer_cairo_CairoGraphics.__name__ = ["openfl","_internal","renderer","cairo","CairoGraphics"];
openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = null;
openfl__$internal_renderer_cairo_CairoGraphics.bitmapRepeat = null;
openfl__$internal_renderer_cairo_CairoGraphics.bounds = null;
openfl__$internal_renderer_cairo_CairoGraphics.cairo = null;
openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = null;
openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = null;
openfl__$internal_renderer_cairo_CairoGraphics.graphics = null;
openfl__$internal_renderer_cairo_CairoGraphics.hasFill = null;
openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = null;
openfl__$internal_renderer_cairo_CairoGraphics.hitTesting = null;
openfl__$internal_renderer_cairo_CairoGraphics.inversePendingMatrix = null;
openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix = null;
openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = null;
openfl__$internal_renderer_cairo_CairoGraphics.closePath = function() {
	if(openfl__$internal_renderer_cairo_CairoGraphics.strokePattern == null) return;
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.strokePattern);
	if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.strokePreserve();
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
};
openfl__$internal_renderer_cairo_CairoGraphics.createGradientPattern = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	var pattern = null;
	switch(type[1]) {
	case 0:
		if(matrix == null) matrix = new openfl_geom_Matrix();
		var point = matrix.transformPoint(new openfl_geom_Point(1638.4,0));
		var x = matrix.tx + openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.x;
		var y = matrix.ty + openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.y;
		pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRadial(x,y,0,x,y,(point.x - matrix.tx) / 2);
		break;
	case 1:
		if(matrix == null) matrix = new openfl_geom_Matrix();
		var point1 = matrix.transformPoint(new openfl_geom_Point(-819.2,0));
		var point2 = matrix.transformPoint(new openfl_geom_Point(819.2,0));
		point1.x += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.x;
		point2.x += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.x;
		point1.y += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.y;
		point2.y += openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds.y;
		pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createLinear(point1.x,point1.y,point2.x,point2.y);
		break;
	}
	var _g1 = 0;
	var _g = colors.length;
	while(_g1 < _g) {
		var i = _g1++;
		var rgb = colors[i];
		var alpha = alphas[i];
		var r = ((rgb & 16711680) >>> 16) / 255;
		var g = ((rgb & 65280) >>> 8) / 255;
		var b = (rgb & 255) / 255;
		var ratio = ratios[i] / 255;
		if(ratio < 0) ratio = 0;
		if(ratio > 1) ratio = 1;
		lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.addColorStopRGBA(pattern,ratio,r,g,b,alpha);
	}
	var mat = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.get_matrix(pattern);
	mat.tx = openfl__$internal_renderer_cairo_CairoGraphics.bounds.x;
	mat.ty = openfl__$internal_renderer_cairo_CairoGraphics.bounds.y;
	lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_matrix(pattern,mat);
	return pattern;
};
openfl__$internal_renderer_cairo_CairoGraphics.createImagePattern = function(bitmapFill,matrix,bitmapRepeat) {
	var pattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createForSurface(bitmapFill.getSurface());
	if(bitmapRepeat) lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_extend(pattern,1);
	openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = matrix;
	return pattern;
};
openfl__$internal_renderer_cairo_CairoGraphics.drawRoundRect = function(x,y,width,height,rx,ry) {
	if(ry == -1) ry = rx;
	rx *= 0.5;
	ry *= 0.5;
	if(rx > width / 2) rx = width / 2;
	if(ry > height / 2) ry = height / 2;
	var xe = x + width;
	var ye = y + height;
	var cx1 = -rx + rx * openfl__$internal_renderer_cairo_CairoGraphics.SIN45;
	var cx2 = -rx + rx * openfl__$internal_renderer_cairo_CairoGraphics.TAN22;
	var cy1 = -ry + ry * openfl__$internal_renderer_cairo_CairoGraphics.SIN45;
	var cy2 = -ry + ry * openfl__$internal_renderer_cairo_CairoGraphics.TAN22;
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(xe,ye - ry);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe,ye + cy2,xe + cx1,ye + cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe + cx2,ye,xe - rx,ye);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x + rx,ye);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x - cx2,ye,x - cx1,ye + cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x,ye + cy2,x,ye - ry);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x,y + ry);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x,y - cy2,x - cx1,y - cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(x - cx2,y,x + rx,y);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(xe - rx,y);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe + cx2,y,xe + cx1,y - cy1);
	openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(xe,y - cy2,xe,y + ry);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(xe,ye - ry);
};
openfl__$internal_renderer_cairo_CairoGraphics.endFill = function() {
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
	openfl__$internal_renderer_cairo_CairoGraphics.playCommands(openfl__$internal_renderer_cairo_CairoGraphics.fillCommands,false);
	openfl__$internal_renderer_cairo_CairoGraphics.fillCommands.clear();
};
openfl__$internal_renderer_cairo_CairoGraphics.endStroke = function() {
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
	openfl__$internal_renderer_cairo_CairoGraphics.playCommands(openfl__$internal_renderer_cairo_CairoGraphics.strokeCommands,true);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
	openfl__$internal_renderer_cairo_CairoGraphics.strokeCommands.clear();
};
openfl__$internal_renderer_cairo_CairoGraphics.hitTest = function(graphics,x,y) {
	return false;
};
openfl__$internal_renderer_cairo_CairoGraphics.isCCW = function(x1,y1,x2,y2,x3,y3) {
	return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0;
};
openfl__$internal_renderer_cairo_CairoGraphics.normalizeUVT = function(uvt,skipT) {
	if(skipT == null) skipT = false;
	var max = -Infinity;
	var tmp = -Infinity;
	var len = uvt.length;
	var _g1 = 1;
	var _g = len + 1;
	while(_g1 < _g) {
		var t = _g1++;
		if(skipT && t % 3 == 0) continue;
		tmp = uvt.data[t - 1];
		if(max < tmp) max = tmp;
	}
	var result;
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(0);
	this1.data = this2;
	this1.length = 0;
	this1.fixed = false;
	result = this1;
	var _g11 = 1;
	var _g2 = len + 1;
	while(_g11 < _g2) {
		var t1 = _g11++;
		if(skipT && t1 % 3 == 0) continue;
		if(!result.fixed) {
			result.length++;
			if(result.data.length < result.length) {
				var data;
				var this3;
				this3 = new Array(result.data.length + 10);
				data = this3;
				haxe_ds__$Vector_Vector_$Impl_$.blit(result.data,0,data,0,result.data.length);
				result.data = data;
			}
			result.data[result.length - 1] = uvt.data[t1 - 1] / max;
		}
		result.length;
	}
	return { max : max, uvt : result};
};
openfl__$internal_renderer_cairo_CairoGraphics.playCommands = function(commands,stroke) {
	if(stroke == null) stroke = false;
	if(commands.get_length() == 0) return;
	openfl__$internal_renderer_cairo_CairoGraphics.bounds = openfl__$internal_renderer_cairo_CairoGraphics.graphics.__bounds;
	var offsetX = openfl__$internal_renderer_cairo_CairoGraphics.bounds.x;
	var offsetY = openfl__$internal_renderer_cairo_CairoGraphics.bounds.y;
	var positionX = 0.0;
	var positionY = 0.0;
	var closeGap = false;
	var startX = 0.0;
	var startY = 0.0;
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_fillRule(1);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_antialias(3);
	var hasPath = false;
	var data = new openfl__$internal_renderer_DrawCommandReader(commands);
	var _g = 0;
	var _g1 = commands.types;
	try {
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
				c = data;
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(c.buffer.f[c.fPos] - offsetX,c.buffer.f[c.fPos + 1] - offsetY,c.buffer.f[c.fPos + 2] - offsetX,c.buffer.f[c.fPos + 3] - offsetY,c.buffer.f[c.fPos + 4] - offsetX,c.buffer.f[c.fPos + 5] - offsetY);
				break;
			case 4:
				var c1;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
				c1 = data;
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(c1.buffer.f[c1.fPos] - offsetX,c1.buffer.f[c1.fPos + 1] - offsetY,c1.buffer.f[c1.fPos + 2] - offsetX,c1.buffer.f[c1.fPos + 3] - offsetY);
				break;
			case 5:
				var c2;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
				c2 = data;
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(c2.buffer.f[c2.fPos] - offsetX + c2.buffer.f[c2.fPos + 2],c2.buffer.f[c2.fPos + 1] - offsetY);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.arc(c2.buffer.f[c2.fPos] - offsetX,c2.buffer.f[c2.fPos + 1] - offsetY,c2.buffer.f[c2.fPos + 2],0,Math.PI * 2);
				break;
			case 8:
				var c3;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
				c3 = data;
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.rectangle(c3.buffer.f[c3.fPos] - offsetX,c3.buffer.f[c3.fPos + 1] - offsetY,c3.buffer.f[c3.fPos + 2],c3.buffer.f[c3.fPos + 3]);
				break;
			case 6:
				var c4;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
				c4 = data;
				hasPath = true;
				var x = c4.buffer.f[c4.fPos];
				var y = c4.buffer.f[c4.fPos + 1];
				var width = c4.buffer.f[c4.fPos + 2];
				var height = c4.buffer.f[c4.fPos + 3];
				x -= offsetX;
				y -= offsetY;
				var kappa = .5522848;
				var ox = width / 2 * kappa;
				var oy = height / 2 * kappa;
				var xe = x + width;
				var ye = y + height;
				var xm = x + width / 2;
				var ym = y + height / 2;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(x,ym);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(x,ym - oy,xm - ox,y,xm,y);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(xm + ox,y,xe,ym - oy,xe,ym);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(xe,ym + oy,xm + ox,ye,xm,ye);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(xm - ox,ye,x,ym + oy,x,ym);
				break;
			case 9:
				var c5;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
				c5 = data;
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.drawRoundRect(c5.buffer.f[c5.fPos] - offsetX,c5.buffer.f[c5.fPos + 1] - offsetY,c5.buffer.f[c5.fPos + 2],c5.buffer.f[c5.fPos + 3],c5.buffer.f[c5.fPos + 4],c5.buffer.f[c5.fPos + 5]);
				break;
			case 16:
				var c6;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
				c6 = data;
				hasPath = true;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(c6.buffer.f[c6.fPos] - offsetX,c6.buffer.f[c6.fPos + 1] - offsetY);
				positionX = c6.buffer.f[c6.fPos];
				positionY = c6.buffer.f[c6.fPos + 1];
				break;
			case 17:
				var c7;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
				c7 = data;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(c7.buffer.f[c7.fPos] - offsetX,c7.buffer.f[c7.fPos + 1] - offsetY);
				positionX = c7.buffer.f[c7.fPos];
				positionY = c7.buffer.f[c7.fPos + 1];
				closeGap = true;
				startX = c7.buffer.f[c7.fPos];
				startY = c7.buffer.f[c7.fPos + 1];
				break;
			case 15:
				var c8;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
				c8 = data;
				if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) openfl__$internal_renderer_cairo_CairoGraphics.closePath();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(positionX - offsetX,positionY - offsetY);
				if(c8.buffer.o[c8.oPos] == null) openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = false; else {
					openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = true;
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineWidth(c8.buffer.o[c8.oPos] > 0?c8.buffer.o[c8.oPos]:1);
					if(c8.buffer.o[c8.oPos + 6] == null) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineJoin(1); else openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineJoin((function($this) {
						var $r;
						var _g2 = c8.buffer.o[c8.oPos + 6];
						$r = (function($this) {
							var $r;
							switch(_g2[1]) {
							case 0:
								$r = 0;
								break;
							case 2:
								$r = 2;
								break;
							default:
								$r = 1;
							}
							return $r;
						}($this));
						return $r;
					}(this)));
					if(c8.buffer.o[c8.oPos + 5] == null) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineCap(1); else openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_lineCap((function($this) {
						var $r;
						var _g21 = c8.buffer.o[c8.oPos + 5];
						$r = (function($this) {
							var $r;
							switch(_g21[1]) {
							case 0:
								$r = 0;
								break;
							case 2:
								$r = 2;
								break;
							default:
								$r = 1;
							}
							return $r;
						}($this));
						return $r;
					}(this)));
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_miterLimit(c8.buffer.o[c8.oPos + 7] == null?3:c8.buffer.o[c8.oPos + 7]);
					if(c8.buffer.o[c8.oPos + 1] != null) {
						var r = ((c8.buffer.o[c8.oPos + 1] & 16711680) >>> 16) / 255;
						var g = ((c8.buffer.o[c8.oPos + 1] & 65280) >>> 8) / 255;
						var b = (c8.buffer.o[c8.oPos + 1] & 255) / 255;
						if(c8.buffer.o[c8.oPos + 2] == 1 || c8.buffer.o[c8.oPos + 2] == null) openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGB(r,g,b); else openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGBA(r,g,b,c8.buffer.o[c8.oPos + 2]);
					}
				}
				break;
			case 14:
				var c9;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE;
				c9 = data;
				if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) openfl__$internal_renderer_cairo_CairoGraphics.closePath();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(positionX - offsetX,positionY - offsetY);
				openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = openfl__$internal_renderer_cairo_CairoGraphics.createGradientPattern(c9.buffer.o[c9.oPos],c9.buffer.ii[c9.iiPos],c9.buffer.ff[c9.ffPos],c9.buffer.ii[c9.iiPos + 1],c9.buffer.o[c9.oPos + 1],c9.buffer.o[c9.oPos + 2],c9.buffer.o[c9.oPos + 3],c9.buffer.o[c9.oPos + 4]);
				openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = true;
				break;
			case 13:
				var c10;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE;
				c10 = data;
				if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) openfl__$internal_renderer_cairo_CairoGraphics.closePath();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(positionX - offsetX,positionY - offsetY);
				openfl__$internal_renderer_cairo_CairoGraphics.strokePattern = openfl__$internal_renderer_cairo_CairoGraphics.createImagePattern(c10.buffer.o[c10.oPos],c10.buffer.o[c10.oPos + 1],c10.buffer.b[c10.bPos]);
				openfl__$internal_renderer_cairo_CairoGraphics.hasStroke = true;
				break;
			case 0:
				var c11;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
				c11 = data;
				openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = openfl__$internal_renderer_cairo_CairoGraphics.createImagePattern(c11.buffer.o[c11.oPos],c11.buffer.o[c11.oPos + 1],c11.buffer.b[c11.bPos]);
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = c11.buffer.o[c11.oPos];
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapRepeat = c11.buffer.b[c11.bPos];
				openfl__$internal_renderer_cairo_CairoGraphics.hasFill = true;
				break;
			case 1:
				var c12;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
				c12 = data;
				if(c12.buffer.f[c12.fPos] < 0.005) openfl__$internal_renderer_cairo_CairoGraphics.hasFill = false; else {
					if(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern != null) openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = null;
					openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.createRGBA(((c12.buffer.i[c12.iPos] & 16711680) >>> 16) / 255,((c12.buffer.i[c12.iPos] & 65280) >>> 8) / 255,(c12.buffer.i[c12.iPos] & 255) / 255,c12.buffer.f[c12.fPos]);
					openfl__$internal_renderer_cairo_CairoGraphics.hasFill = true;
				}
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = null;
				break;
			case 2:
				var c13;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL;
				c13 = data;
				if(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern != null) openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix = null;
				openfl__$internal_renderer_cairo_CairoGraphics.fillPattern = openfl__$internal_renderer_cairo_CairoGraphics.createGradientPattern(c13.buffer.o[c13.oPos],c13.buffer.ii[c13.iiPos],c13.buffer.ff[c13.ffPos],c13.buffer.ii[c13.iiPos + 1],c13.buffer.o[c13.oPos + 1],c13.buffer.o[c13.oPos + 2],c13.buffer.o[c13.oPos + 3],c13.buffer.o[c13.oPos + 4]);
				openfl__$internal_renderer_cairo_CairoGraphics.hasFill = true;
				openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill = null;
				break;
			case 11:
				var c14;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES;
				c14 = data;
				var v = c14.buffer.o[c14.oPos];
				var ind = c14.buffer.o[c14.oPos + 1];
				var uvt = c14.buffer.o[c14.oPos + 2];
				var colorFill = openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill == null;
				if(colorFill && uvt != null) throw "__break__";
				var width1 = 0;
				var height1 = 0;
				if(!colorFill) {
					if(uvt == null) {
						var this1;
						this1 = new openfl_VectorData();
						var this2;
						this2 = new Array(0);
						this1.data = this2;
						this1.length = 0;
						this1.fixed = false;
						uvt = this1;
						var _g3 = 0;
						var _g22 = v.length / 2 | 0;
						while(_g3 < _g22) {
							var i1 = _g3++;
							if(!uvt.fixed) {
								uvt.length++;
								if(uvt.data.length < uvt.length) {
									var data1;
									var this3;
									this3 = new Array(uvt.data.length + 10);
									data1 = this3;
									haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data1,0,uvt.data.length);
									uvt.data = data1;
								}
								uvt.data[uvt.length - 1] = v.data[i1 * 2] / openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.width;
							}
							uvt.length;
							if(!uvt.fixed) {
								uvt.length++;
								if(uvt.data.length < uvt.length) {
									var data2;
									var this4;
									this4 = new Array(uvt.data.length + 10);
									data2 = this4;
									haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data2,0,uvt.data.length);
									uvt.data = data2;
								}
								uvt.data[uvt.length - 1] = v.data[i1 * 2 + 1] / openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.height;
							}
							uvt.length;
						}
					}
					var skipT = c14.buffer.o[c14.oPos + 2].length != v.length;
					var normalizedUVT = openfl__$internal_renderer_cairo_CairoGraphics.normalizeUVT(uvt,skipT);
					var maxUVT = normalizedUVT.max;
					uvt = normalizedUVT.uvt;
					if(maxUVT > 1) {
						width1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.width | 0;
						height1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.height | 0;
					} else {
						width1 = openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.width;
						height1 = openfl__$internal_renderer_cairo_CairoGraphics.bitmapFill.height;
					}
				}
				var i = 0;
				var l = ind.length;
				var a_;
				var b_;
				var c_;
				var iax;
				var iay;
				var ibx;
				var iby;
				var icx;
				var icy;
				var x1;
				var y1;
				var x2;
				var y2;
				var x3;
				var y3;
				var uvx1;
				var uvy1;
				var uvx2;
				var uvy2;
				var uvx3;
				var uvy3;
				var denom;
				var t1;
				var t2;
				var t3;
				var t4;
				var dx;
				var dy;
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_antialias(1);
				while(i < l) {
					a_ = i;
					b_ = i + 1;
					c_ = i + 2;
					iax = ind.data[a_] * 2;
					iay = ind.data[a_] * 2 + 1;
					ibx = ind.data[b_] * 2;
					iby = ind.data[b_] * 2 + 1;
					icx = ind.data[c_] * 2;
					icy = ind.data[c_] * 2 + 1;
					x1 = v.data[iax];
					y1 = v.data[iay];
					x2 = v.data[ibx];
					y2 = v.data[iby];
					x3 = v.data[icx];
					y3 = v.data[icy];
					var _g23 = c14.buffer.o[c14.oPos + 3];
					switch(_g23[1]) {
					case 2:
						if(!((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0)) {
							i += 3;
							continue;
						}
						break;
					case 0:
						if((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0) {
							i += 3;
							continue;
						}
						break;
					default:
					}
					if(colorFill) {
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(x1,y1);
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x2,y2);
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x3,y3);
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
						if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fillPreserve();
						i += 3;
						continue;
					}
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.identityMatrix();
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.newPath();
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(x1,y1);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x2,y2);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(x3,y3);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
					uvx1 = uvt.data[iax] * width1;
					uvx2 = uvt.data[ibx] * width1;
					uvx3 = uvt.data[icx] * width1;
					uvy1 = uvt.data[iay] * height1;
					uvy2 = uvt.data[iby] * height1;
					uvy3 = uvt.data[icy] * height1;
					denom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;
					if(denom == 0) {
						i += 3;
						continue;
					}
					t1 = -(uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;
					t2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;
					t3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;
					t4 = -(uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;
					dx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;
					dy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;
					var matrix = new lime_math_Matrix3(t1,t2,t3,t4,dx,dy);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_matrix(matrix);
					openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern);
					if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fill();
					i += 3;
				}
				break;
			case 10:
				var c15;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TILES;
				c15 = data;
				var useScale = (c15.buffer.i[c15.iPos] & 1) > 0;
				var useRotation = (c15.buffer.i[c15.iPos] & 2) > 0;
				var offsetX1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.x;
				var offsetY1 = openfl__$internal_renderer_cairo_CairoGraphics.bounds.y;
				var useTransform = (c15.buffer.i[c15.iPos] & 16) > 0;
				var useRGB = (c15.buffer.i[c15.iPos] & 4) > 0;
				var useAlpha = (c15.buffer.i[c15.iPos] & 8) > 0;
				var useRect = (c15.buffer.i[c15.iPos] & 32) > 0;
				var useOrigin = (c15.buffer.i[c15.iPos] & 64) > 0;
				var useBlendAdd = (c15.buffer.i[c15.iPos] & 65536) > 0;
				var useBlendOverlay = (c15.buffer.i[c15.iPos] & 4194304) > 0;
				if(useTransform) {
					useScale = false;
					useRotation = false;
				}
				var scaleIndex = 0;
				var rotationIndex = 0;
				var rgbIndex = 0;
				var alphaIndex = 0;
				var transformIndex = 0;
				var numValues = 3;
				if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
				if(useScale) {
					scaleIndex = numValues;
					numValues++;
				}
				if(useRotation) {
					rotationIndex = numValues;
					numValues++;
				}
				if(useTransform) {
					transformIndex = numValues;
					numValues += 4;
				}
				if(useRGB) {
					rgbIndex = numValues;
					numValues += 3;
				}
				if(useAlpha) {
					alphaIndex = numValues;
					numValues++;
				}
				var totalCount = c15.buffer.ff[c15.ffPos].length;
				if(c15.buffer.i[c15.iPos + 1] >= 0 && totalCount > c15.buffer.i[c15.iPos + 1]) totalCount = c15.buffer.i[c15.iPos + 1];
				var itemCount = totalCount / numValues | 0;
				var index = 0;
				var rect = null;
				var center = null;
				var previousTileID = -1;
				var surface;
				c15.buffer.ts[c15.tsPos].__bitmap.__sync();
				surface = c15.buffer.ts[c15.tsPos].__bitmap.getSurface();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.save();
				if(useBlendAdd) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_operator(12);
				if(useBlendOverlay) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_operator(16);
				while(index < totalCount) {
					var i2 = c15.buffer.ff[c15.ffPos][index + 2] | 0;
					var tileID;
					if(!useRect) tileID = i2; else tileID = -1;
					if(!useRect && tileID != previousTileID) {
						rect = c15.buffer.ts[c15.tsPos].__tileRects[tileID];
						center = c15.buffer.ts[c15.tsPos].__centerPoints[tileID];
						previousTileID = tileID;
					} else if(useRect) {
						rect = c15.buffer.ts[c15.tsPos].__rectTile;
						rect.setTo(c15.buffer.ff[c15.ffPos][index + 2],c15.buffer.ff[c15.ffPos][index + 3],c15.buffer.ff[c15.ffPos][index + 4],c15.buffer.ff[c15.ffPos][index + 5]);
						center = c15.buffer.ts[c15.tsPos].__point;
						if(useOrigin) {
							center.x = c15.buffer.ff[c15.ffPos][index + 6];
							center.y = c15.buffer.ff[c15.ffPos][index + 7];
						} else {
							center.x = 0;
							center.y = 0;
						}
					}
					if(rect != null && rect.width > 0 && rect.height > 0 && center != null) {
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.identityMatrix();
						if(useTransform) {
							var matrix1 = new lime_math_Matrix3(c15.buffer.ff[c15.ffPos][index + transformIndex],c15.buffer.ff[c15.ffPos][index + transformIndex + 1],c15.buffer.ff[c15.ffPos][index + transformIndex + 2],c15.buffer.ff[c15.ffPos][index + transformIndex + 3],0,0);
							openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_matrix(matrix1);
						}
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.translate(c15.buffer.ff[c15.ffPos][index] - offsetX1,c15.buffer.ff[c15.ffPos][index + 1] - offsetY1);
						if(useRotation) openfl__$internal_renderer_cairo_CairoGraphics.cairo.rotate(c15.buffer.ff[c15.ffPos][index + rotationIndex]);
						if(useScale) {
							var scale = c15.buffer.ff[c15.ffPos][index + scaleIndex];
							openfl__$internal_renderer_cairo_CairoGraphics.cairo.scale(scale,scale);
						}
						openfl__$internal_renderer_cairo_CairoGraphics.cairo.setSourceSurface(surface,0,0);
						if(useAlpha) {
							if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.paintWithAlpha(c15.buffer.ff[c15.ffPos][index + alphaIndex]);
						} else if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.paint();
					}
					index += numValues;
				}
				if(useBlendAdd || useBlendOverlay) openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_operator(2);
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.restore();
				break;
			default:
				data.advance();
				data.prev = type;
			}
		}
	} catch( e ) { if( e != "__break__" ) throw e; }
	data.destroy();
	if(hasPath) {
		if(stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasStroke) {
			if(openfl__$internal_renderer_cairo_CairoGraphics.hasFill && closeGap) openfl__$internal_renderer_cairo_CairoGraphics.cairo.lineTo(startX - offsetX,startY - offsetY); else if(closeGap && positionX == startX && positionY == startY) openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.strokePattern);
			if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.strokePreserve();
		}
		if(!stroke && openfl__$internal_renderer_cairo_CairoGraphics.hasFill) {
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.translate(-openfl__$internal_renderer_cairo_CairoGraphics.bounds.x,-openfl__$internal_renderer_cairo_CairoGraphics.bounds.y);
			if(openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix != null) {
				var matrix2 = openfl__$internal_renderer_cairo_CairoGraphics.fillPatternMatrix.clone();
				matrix2.invert();
				if(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix != null) matrix2.concat(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix);
				lime_graphics_cairo__$CairoPattern_CairoPattern_$Impl_$.set_matrix(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern,matrix2.__toMatrix3());
			}
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.set_source(openfl__$internal_renderer_cairo_CairoGraphics.fillPattern);
			if(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix != null) {
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.transform(openfl__$internal_renderer_cairo_CairoGraphics.pendingMatrix.__toMatrix3());
				if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fillPreserve();
				openfl__$internal_renderer_cairo_CairoGraphics.cairo.transform(openfl__$internal_renderer_cairo_CairoGraphics.inversePendingMatrix.__toMatrix3());
			} else if(!openfl__$internal_renderer_cairo_CairoGraphics.hitTesting) openfl__$internal_renderer_cairo_CairoGraphics.cairo.fillPreserve();
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.translate(openfl__$internal_renderer_cairo_CairoGraphics.bounds.x,openfl__$internal_renderer_cairo_CairoGraphics.bounds.y);
			openfl__$internal_renderer_cairo_CairoGraphics.cairo.closePath();
		}
	}
};
openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo = function(cx,cy,x,y) {
	var current = null;
	if(!openfl__$internal_renderer_cairo_CairoGraphics.cairo.get_hasCurrentPoint()) {
		openfl__$internal_renderer_cairo_CairoGraphics.cairo.moveTo(cx,cy);
		current = new lime_math_Vector2(cx,cy);
	} else current = openfl__$internal_renderer_cairo_CairoGraphics.cairo.get_currentPoint();
	var cx1 = current.x + 0.66666666666666663 * (cx - current.x);
	var cy1 = current.y + 0.66666666666666663 * (cy - current.y);
	var cx2 = x + 0.66666666666666663 * (cx - x);
	var cy2 = y + 0.66666666666666663 * (cy - y);
	openfl__$internal_renderer_cairo_CairoGraphics.cairo.curveTo(cx1,cy1,cx2,cy2,x,y);
};
openfl__$internal_renderer_cairo_CairoGraphics.render = function(graphics,renderSession) {
};
openfl__$internal_renderer_cairo_CairoGraphics.renderMask = function(graphics,renderSession) {
	if(graphics.__commands.get_length() != 0) {
		var cairo = renderSession.cairo;
		var positionX = 0.0;
		var positionY = 0.0;
		var offsetX = 0;
		var offsetY = 0;
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
				c = data;
				cairo.curveTo(c.buffer.f[c.fPos] - offsetX,c.buffer.f[c.fPos + 1] - offsetY,c.buffer.f[c.fPos + 2] - offsetX,c.buffer.f[c.fPos + 3] - offsetY,c.buffer.f[c.fPos + 4] - offsetX,c.buffer.f[c.fPos + 5] - offsetY);
				positionX = c.buffer.f[c.fPos + 4];
				positionY = c.buffer.f[c.fPos + 4];
				break;
			case 4:
				var c1;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
				c1 = data;
				openfl__$internal_renderer_cairo_CairoGraphics.quadraticCurveTo(c1.buffer.f[c1.fPos] - offsetX,c1.buffer.f[c1.fPos + 1] - offsetY,c1.buffer.f[c1.fPos + 2] - offsetX,c1.buffer.f[c1.fPos + 3] - offsetY);
				positionX = c1.buffer.f[c1.fPos + 2];
				positionY = c1.buffer.f[c1.fPos + 3];
				break;
			case 5:
				var c2;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
				c2 = data;
				cairo.arc(c2.buffer.f[c2.fPos] - offsetX,c2.buffer.f[c2.fPos + 1] - offsetY,c2.buffer.f[c2.fPos + 2],0,Math.PI * 2);
				break;
			case 6:
				var c3;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
				c3 = data;
				var x = c3.buffer.f[c3.fPos];
				var y = c3.buffer.f[c3.fPos + 1];
				var width = c3.buffer.f[c3.fPos + 2];
				var height = c3.buffer.f[c3.fPos + 3];
				x -= offsetX;
				y -= offsetY;
				var kappa = .5522848;
				var ox = width / 2 * kappa;
				var oy = height / 2 * kappa;
				var xe = x + width;
				var ye = y + height;
				var xm = x + width / 2;
				var ym = y + height / 2;
				cairo.moveTo(x,ym);
				cairo.curveTo(x,ym - oy,xm - ox,y,xm,y);
				cairo.curveTo(xm + ox,y,xe,ym - oy,xe,ym);
				cairo.curveTo(xe,ym + oy,xm + ox,ye,xm,ye);
				cairo.curveTo(xm - ox,ye,x,ym + oy,x,ym);
				break;
			case 8:
				var c4;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
				c4 = data;
				cairo.rectangle(c4.buffer.f[c4.fPos] - offsetX,c4.buffer.f[c4.fPos + 1] - offsetY,c4.buffer.f[c4.fPos + 2],c4.buffer.f[c4.fPos + 3]);
				break;
			case 9:
				var c5;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
				c5 = data;
				openfl__$internal_renderer_cairo_CairoGraphics.drawRoundRect(c5.buffer.f[c5.fPos] - offsetX,c5.buffer.f[c5.fPos + 1] - offsetY,c5.buffer.f[c5.fPos + 2],c5.buffer.f[c5.fPos + 3],c5.buffer.f[c5.fPos + 4],c5.buffer.f[c5.fPos + 5]);
				break;
			case 16:
				var c6;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
				c6 = data;
				cairo.lineTo(c6.buffer.f[c6.fPos] - offsetX,c6.buffer.f[c6.fPos + 1] - offsetY);
				positionX = c6.buffer.f[c6.fPos];
				positionY = c6.buffer.f[c6.fPos + 1];
				break;
			case 17:
				var c7;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
				c7 = data;
				cairo.moveTo(c7.buffer.f[c7.fPos] - offsetX,c7.buffer.f[c7.fPos + 1] - offsetY);
				positionX = c7.buffer.f[c7.fPos];
				positionY = c7.buffer.f[c7.fPos + 1];
				break;
			default:
				data.advance();
				data.prev = type;
			}
		}
		data.destroy();
	}
};
var openfl__$internal_renderer_cairo_CairoMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
};
$hxClasses["openfl._internal.renderer.cairo.CairoMaskManager"] = openfl__$internal_renderer_cairo_CairoMaskManager;
openfl__$internal_renderer_cairo_CairoMaskManager.__name__ = ["openfl","_internal","renderer","cairo","CairoMaskManager"];
openfl__$internal_renderer_cairo_CairoMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_cairo_CairoMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	pushMask: function(mask) {
		var cairo = this.renderSession.cairo;
		cairo.save();
		var transform = mask.__getWorldTransform();
		cairo.set_matrix(transform.__toMatrix3());
		cairo.newPath();
		mask.__renderCairoMask(this.renderSession);
		cairo.clip();
	}
	,pushRect: function(rect,transform) {
		var cairo = this.renderSession.cairo;
		cairo.save();
		cairo.set_matrix(new lime_math_Matrix3(transform.a,transform.c,transform.b,transform.d,transform.tx,transform.ty));
		cairo.newPath();
		cairo.rectangle(rect.x,rect.y,rect.width,rect.height);
		cairo.clip();
	}
	,popMask: function() {
		this.renderSession.cairo.restore();
	}
	,popRect: function() {
		this.renderSession.cairo.restore();
	}
	,__class__: openfl__$internal_renderer_cairo_CairoMaskManager
});
var openfl__$internal_renderer_cairo_CairoRenderer = function(width,height,cairo) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.cairo = cairo;
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.cairo = cairo;
	this.renderSession.roundPixels = true;
	this.renderSession.renderer = this;
	this.renderSession.maskManager = new openfl__$internal_renderer_cairo_CairoMaskManager(this.renderSession);
};
$hxClasses["openfl._internal.renderer.cairo.CairoRenderer"] = openfl__$internal_renderer_cairo_CairoRenderer;
openfl__$internal_renderer_cairo_CairoRenderer.__name__ = ["openfl","_internal","renderer","cairo","CairoRenderer"];
openfl__$internal_renderer_cairo_CairoRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_cairo_CairoRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
		this.cairo.identityMatrix();
		if(stage.__clearBeforeRender) {
			this.cairo.setSourceRGB(stage.__colorSplit[0],stage.__colorSplit[1],stage.__colorSplit[2]);
			this.cairo.paint();
		}
		stage.__renderCairo(this.renderSession);
	}
	,renderDisplayObject: function(object) {
		this.cairo.identityMatrix();
		object.__renderCairo(this.renderSession);
	}
	,__class__: openfl__$internal_renderer_cairo_CairoRenderer
});
var openfl__$internal_renderer_cairo_CairoShape = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoShape"] = openfl__$internal_renderer_cairo_CairoShape;
openfl__$internal_renderer_cairo_CairoShape.__name__ = ["openfl","_internal","renderer","cairo","CairoShape"];
openfl__$internal_renderer_cairo_CairoShape.render = function(shape,renderSession) {
};
var openfl__$internal_renderer_cairo_CairoTextField = function() { };
$hxClasses["openfl._internal.renderer.cairo.CairoTextField"] = openfl__$internal_renderer_cairo_CairoTextField;
openfl__$internal_renderer_cairo_CairoTextField.__name__ = ["openfl","_internal","renderer","cairo","CairoTextField"];
openfl__$internal_renderer_cairo_CairoTextField.render = function(textField,renderSession) {
};
var openfl__$internal_renderer_canvas_CanvasBitmap = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasBitmap"] = openfl__$internal_renderer_canvas_CanvasBitmap;
openfl__$internal_renderer_canvas_CanvasBitmap.__name__ = ["openfl","_internal","renderer","canvas","CanvasBitmap"];
openfl__$internal_renderer_canvas_CanvasBitmap.render = function(bitmap,renderSession) {
	if(!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;
	var context = renderSession.context;
	if(bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {
		if(bitmap.__mask != null) renderSession.maskManager.pushMask(bitmap.__mask);
		bitmap.bitmapData.__sync();
		context.globalAlpha = bitmap.__worldAlpha;
		var transform = bitmap.__renderTransform;
		var scrollRect = bitmap.get_scrollRect();
		if(renderSession.roundPixels) context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx | 0,transform.ty | 0); else context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		if(!bitmap.smoothing) {
			context.mozImageSmoothingEnabled = false;
			context.msImageSmoothingEnabled = false;
			context.imageSmoothingEnabled = false;
		}
		if(scrollRect == null) context.drawImage(bitmap.bitmapData.image.get_src(),0,0); else context.drawImage(bitmap.bitmapData.image.get_src(),scrollRect.x,scrollRect.y,scrollRect.width,scrollRect.height,scrollRect.x,scrollRect.y,scrollRect.width,scrollRect.height);
		if(!bitmap.smoothing) {
			context.mozImageSmoothingEnabled = true;
			context.msImageSmoothingEnabled = true;
			context.imageSmoothingEnabled = true;
		}
		if(bitmap.__mask != null) renderSession.maskManager.popMask();
	}
};
var openfl__$internal_renderer_canvas_CanvasGraphics = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasGraphics"] = openfl__$internal_renderer_canvas_CanvasGraphics;
openfl__$internal_renderer_canvas_CanvasGraphics.__name__ = ["openfl","_internal","renderer","canvas","CanvasGraphics"];
openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
openfl__$internal_renderer_canvas_CanvasGraphics.bitmapStroke = null;
openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = null;
openfl__$internal_renderer_canvas_CanvasGraphics.bounds = null;
openfl__$internal_renderer_canvas_CanvasGraphics.graphics = null;
openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = null;
openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = null;
openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = null;
openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = null;
openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = null;
openfl__$internal_renderer_canvas_CanvasGraphics.context = null;
openfl__$internal_renderer_canvas_CanvasGraphics.closePath = function() {
	if(openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle == null) return;
	openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
	openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke();
	openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
};
openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill = function(bitmap,bitmapRepeat) {
	bitmap.__sync();
	return openfl__$internal_renderer_canvas_CanvasGraphics.context.createPattern(bitmap.image.get_src(),bitmapRepeat?"repeat":"no-repeat");
};
openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	var gradientFill = null;
	switch(type[1]) {
	case 0:
		if(matrix == null) matrix = new openfl_geom_Matrix();
		var point = matrix.transformPoint(new openfl_geom_Point(1638.4,0));
		gradientFill = openfl__$internal_renderer_canvas_CanvasGraphics.context.createRadialGradient(matrix.tx,matrix.ty,0,matrix.tx,matrix.ty,(point.x - matrix.tx) / 2);
		break;
	case 1:
		var matrix1;
		if(matrix != null) matrix1 = matrix; else matrix1 = new openfl_geom_Matrix();
		var point1 = matrix1.transformPoint(new openfl_geom_Point(-819.2,0));
		var point2 = matrix1.transformPoint(new openfl_geom_Point(819.2,0));
		gradientFill = openfl__$internal_renderer_canvas_CanvasGraphics.context.createLinearGradient(point1.x,point1.y,point2.x,point2.y);
		break;
	}
	var _g1 = 0;
	var _g = colors.length;
	while(_g1 < _g) {
		var i = _g1++;
		var rgb = colors[i];
		var alpha = alphas[i];
		var r = (rgb & 16711680) >>> 16;
		var g = (rgb & 65280) >>> 8;
		var b = rgb & 255;
		var ratio = ratios[i] / 255;
		if(ratio < 0) ratio = 0;
		if(ratio > 1) ratio = 1;
		gradientFill.addColorStop(ratio,"rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")");
	}
	return gradientFill;
};
openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas = function(bitmap,repeat,width,height) {
	var canvas = window.document.createElement("canvas");
	var context = canvas.getContext("2d");
	canvas.width = width;
	canvas.height = height;
	context.fillStyle = context.createPattern(bitmap.image.get_src(),repeat?"repeat":"no-repeat");
	context.beginPath();
	context.moveTo(0,0);
	context.lineTo(0,height);
	context.lineTo(width,height);
	context.lineTo(width,0);
	context.lineTo(0,0);
	context.closePath();
	if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) context.fill();
	return canvas;
};
openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect = function(x,y,width,height,rx,ry) {
	if(ry == -1) ry = rx;
	rx *= 0.5;
	ry *= 0.5;
	if(rx > width / 2) rx = width / 2;
	if(ry > height / 2) ry = height / 2;
	var xe = x + width;
	var ye = y + height;
	var cx1 = -rx + rx * openfl__$internal_renderer_canvas_CanvasGraphics.SIN45;
	var cx2 = -rx + rx * openfl__$internal_renderer_canvas_CanvasGraphics.TAN22;
	var cy1 = -ry + ry * openfl__$internal_renderer_canvas_CanvasGraphics.SIN45;
	var cy2 = -ry + ry * openfl__$internal_renderer_canvas_CanvasGraphics.TAN22;
	openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(xe,ye - ry);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe,ye + cy2,xe + cx1,ye + cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe + cx2,ye,xe - rx,ye);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x + rx,ye);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x - cx2,ye,x - cx1,ye + cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x,ye + cy2,x,ye - ry);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x,y + ry);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x,y - cy2,x - cx1,y - cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(x - cx2,y,x + rx,y);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(xe - rx,y);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe + cx2,y,xe + cx1,y - cy1);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(xe,y - cy2,xe,y + ry);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(xe,ye - ry);
};
openfl__$internal_renderer_canvas_CanvasGraphics.endFill = function() {
	openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
	openfl__$internal_renderer_canvas_CanvasGraphics.playCommands(openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands,false);
	openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear();
};
openfl__$internal_renderer_canvas_CanvasGraphics.endStroke = function() {
	openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
	openfl__$internal_renderer_canvas_CanvasGraphics.playCommands(openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands,true);
	openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
	openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear();
};
openfl__$internal_renderer_canvas_CanvasGraphics.hitTest = function(graphics,x,y) {
	if(graphics.__commands.get_length() == 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds == null || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width <= 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height <= 0) return false; else {
		openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = true;
		x -= openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x;
		y -= openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y;
		if(graphics.__canvas == null) {
			graphics.__canvas = window.document.createElement("canvas");
			graphics.__context = graphics.__canvas.getContext("2d");
		}
		openfl__$internal_renderer_canvas_CanvasGraphics.context = graphics.__context;
		openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear();
		openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear();
		openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
		openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
				c = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.cubicCurveTo(c.buffer.f[c.fPos],c.buffer.f[c.fPos + 1],c.buffer.f[c.fPos + 2],c.buffer.f[c.fPos + 3],c.buffer.f[c.fPos + 4],c.buffer.f[c.fPos + 5]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.cubicCurveTo(c.buffer.f[c.fPos],c.buffer.f[c.fPos + 1],c.buffer.f[c.fPos + 2],c.buffer.f[c.fPos + 3],c.buffer.f[c.fPos + 4],c.buffer.f[c.fPos + 5]);
				break;
			case 4:
				var c1;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
				c1 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.curveTo(c1.buffer.f[c1.fPos],c1.buffer.f[c1.fPos + 1],c1.buffer.f[c1.fPos + 2],c1.buffer.f[c1.fPos + 3]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.curveTo(c1.buffer.f[c1.fPos],c1.buffer.f[c1.fPos + 1],c1.buffer.f[c1.fPos + 2],c1.buffer.f[c1.fPos + 3]);
				break;
			case 16:
				var c2;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
				c2 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.lineTo(c2.buffer.f[c2.fPos],c2.buffer.f[c2.fPos + 1]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineTo(c2.buffer.f[c2.fPos],c2.buffer.f[c2.fPos + 1]);
				break;
			case 17:
				var c3;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
				c3 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.moveTo(c3.buffer.f[c3.fPos],c3.buffer.f[c3.fPos + 1]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.moveTo(c3.buffer.f[c3.fPos],c3.buffer.f[c3.fPos + 1]);
				break;
			case 14:
				var c4;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE;
				c4 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineGradientStyle(c4.buffer.o[c4.oPos],c4.buffer.ii[c4.iiPos],c4.buffer.ff[c4.ffPos],c4.buffer.ii[c4.iiPos + 1],c4.buffer.o[c4.oPos + 1],c4.buffer.o[c4.oPos + 2],c4.buffer.o[c4.oPos + 3],c4.buffer.o[c4.oPos + 4]);
				break;
			case 13:
				var c5;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE;
				c5 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineBitmapStyle(c5.buffer.o[c5.oPos],c5.buffer.o[c5.oPos + 1],c5.buffer.b[c5.bPos],c5.buffer.b[c5.bPos + 1]);
				break;
			case 15:
				var c6;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
				c6 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineStyle(c6.buffer.o[c6.oPos],c6.buffer.o[c6.oPos + 1],1,c6.buffer.o[c6.oPos + 3],c6.buffer.o[c6.oPos + 4],c6.buffer.o[c6.oPos + 5],c6.buffer.o[c6.oPos + 6],c6.buffer.o[c6.oPos + 7]);
				break;
			case 12:
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.END_FILL;
				data;
				openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
				openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(x,y)) {
					data.destroy();
					return true;
				}
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(x,y)) {
					data.destroy();
					return true;
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
				openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
				break;
			case 0:case 1:case 2:
				openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
				openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(x,y)) {
					data.destroy();
					return true;
				}
				if(openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(x,y)) {
					data.destroy();
					return true;
				}
				if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL) {
					var c7;
					data.advance();
					data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
					c7 = data;
					openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginBitmapFill(c7.buffer.o[c7.oPos],c7.buffer.o[c7.oPos + 1],c7.buffer.b[c7.bPos],c7.buffer.b[c7.bPos + 1]);
					openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginBitmapFill(c7.buffer.o[c7.oPos],c7.buffer.o[c7.oPos + 1],c7.buffer.b[c7.bPos],c7.buffer.b[c7.bPos + 1]);
				} else if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL) {
					var c8;
					data.advance();
					data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL;
					c8 = data;
					openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginGradientFill(c8.buffer.o[c8.oPos],c8.buffer.ii[c8.iiPos],c8.buffer.ff[c8.ffPos],c8.buffer.ii[c8.iiPos + 1],c8.buffer.o[c8.oPos + 1],c8.buffer.o[c8.oPos + 2],c8.buffer.o[c8.oPos + 3],c8.buffer.o[c8.oPos + 4]);
					openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginGradientFill(c8.buffer.o[c8.oPos],c8.buffer.ii[c8.iiPos],c8.buffer.ff[c8.ffPos],c8.buffer.ii[c8.iiPos + 1],c8.buffer.o[c8.oPos + 1],c8.buffer.o[c8.oPos + 2],c8.buffer.o[c8.oPos + 3],c8.buffer.o[c8.oPos + 4]);
				} else {
					var c9;
					data.advance();
					data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
					c9 = data;
					openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginFill(c9.buffer.i[c9.iPos],1);
					openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginFill(c9.buffer.i[c9.iPos],1);
				}
				break;
			case 5:
				var c10;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
				c10 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawCircle(c10.buffer.f[c10.fPos],c10.buffer.f[c10.fPos + 1],c10.buffer.f[c10.fPos + 2]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawCircle(c10.buffer.f[c10.fPos],c10.buffer.f[c10.fPos + 1],c10.buffer.f[c10.fPos + 2]);
				break;
			case 6:
				var c11;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
				c11 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawEllipse(c11.buffer.f[c11.fPos],c11.buffer.f[c11.fPos + 1],c11.buffer.f[c11.fPos + 2],c11.buffer.f[c11.fPos + 3]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawEllipse(c11.buffer.f[c11.fPos],c11.buffer.f[c11.fPos + 1],c11.buffer.f[c11.fPos + 2],c11.buffer.f[c11.fPos + 3]);
				break;
			case 8:
				var c12;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
				c12 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRect(c12.buffer.f[c12.fPos],c12.buffer.f[c12.fPos + 1],c12.buffer.f[c12.fPos + 2],c12.buffer.f[c12.fPos + 3]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRect(c12.buffer.f[c12.fPos],c12.buffer.f[c12.fPos + 1],c12.buffer.f[c12.fPos + 2],c12.buffer.f[c12.fPos + 3]);
				break;
			case 9:
				var c13;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
				c13 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRoundRect(c13.buffer.f[c13.fPos],c13.buffer.f[c13.fPos + 1],c13.buffer.f[c13.fPos + 2],c13.buffer.f[c13.fPos + 3],c13.buffer.f[c13.fPos + 4],c13.buffer.f[c13.fPos + 5]);
				openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRoundRect(c13.buffer.f[c13.fPos],c13.buffer.f[c13.fPos + 1],c13.buffer.f[c13.fPos + 2],c13.buffer.f[c13.fPos + 3],c13.buffer.f[c13.fPos + 4],c13.buffer.f[c13.fPos + 5]);
				break;
			default:
				data.advance();
				data.prev = type;
			}
		}
		if(openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
		if(openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
		data.destroy();
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInPath(x,y)) return true;
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke && openfl__$internal_renderer_canvas_CanvasGraphics.context.isPointInStroke(x,y)) return true;
	}
	return false;
};
openfl__$internal_renderer_canvas_CanvasGraphics.isCCW = function(x1,y1,x2,y2,x3,y3) {
	return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0;
};
openfl__$internal_renderer_canvas_CanvasGraphics.normalizeUVT = function(uvt,skipT) {
	if(skipT == null) skipT = false;
	var max = -Infinity;
	var tmp = -Infinity;
	var len = uvt.length;
	var _g1 = 1;
	var _g = len + 1;
	while(_g1 < _g) {
		var t = _g1++;
		if(skipT && t % 3 == 0) continue;
		tmp = uvt.data[t - 1];
		if(max < tmp) max = tmp;
	}
	var result;
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(0);
	this1.data = this2;
	this1.length = 0;
	this1.fixed = false;
	result = this1;
	var _g11 = 1;
	var _g2 = len + 1;
	while(_g11 < _g2) {
		var t1 = _g11++;
		if(skipT && t1 % 3 == 0) continue;
		if(!result.fixed) {
			result.length++;
			if(result.data.length < result.length) {
				var data;
				var this3;
				this3 = new Array(result.data.length + 10);
				data = this3;
				haxe_ds__$Vector_Vector_$Impl_$.blit(result.data,0,data,0,result.data.length);
				result.data = data;
			}
			result.data[result.length - 1] = uvt.data[t1 - 1] / max;
		}
		result.length;
	}
	return { max : max, uvt : result};
};
openfl__$internal_renderer_canvas_CanvasGraphics.playCommands = function(commands,stroke) {
	if(stroke == null) stroke = false;
	openfl__$internal_renderer_canvas_CanvasGraphics.bounds = openfl__$internal_renderer_canvas_CanvasGraphics.graphics.__bounds;
	var offsetX = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x;
	var offsetY = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y;
	var positionX = 0.0;
	var positionY = 0.0;
	var closeGap = false;
	var startX = 0.0;
	var startY = 0.0;
	var data = new openfl__$internal_renderer_DrawCommandReader(commands);
	var _g = 0;
	var _g1 = commands.types;
	while(_g < _g1.length) {
		var type = _g1[_g];
		++_g;
		switch(type[1]) {
		case 3:
			var c;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
			c = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(c.buffer.f[c.fPos] - offsetX,c.buffer.f[c.fPos + 1] - offsetY,c.buffer.f[c.fPos + 2] - offsetX,c.buffer.f[c.fPos + 3] - offsetY,c.buffer.f[c.fPos + 4] - offsetX,c.buffer.f[c.fPos + 5] - offsetY);
			break;
		case 4:
			var c1;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
			c1 = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(c1.buffer.f[c1.fPos] - offsetX,c1.buffer.f[c1.fPos + 1] - offsetY,c1.buffer.f[c1.fPos + 2] - offsetX,c1.buffer.f[c1.fPos + 3] - offsetY);
			break;
		case 5:
			var c2;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
			c2 = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(c2.buffer.f[c2.fPos] - offsetX + c2.buffer.f[c2.fPos + 2],c2.buffer.f[c2.fPos + 1] - offsetY);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.arc(c2.buffer.f[c2.fPos] - offsetX,c2.buffer.f[c2.fPos + 1] - offsetY,c2.buffer.f[c2.fPos + 2],0,Math.PI * 2,true);
			break;
		case 6:
			var c3;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
			c3 = data;
			var x = c3.buffer.f[c3.fPos];
			var y = c3.buffer.f[c3.fPos + 1];
			var width = c3.buffer.f[c3.fPos + 2];
			var height = c3.buffer.f[c3.fPos + 3];
			x -= offsetX;
			y -= offsetY;
			var kappa = .5522848;
			var ox = width / 2 * kappa;
			var oy = height / 2 * kappa;
			var xe = x + width;
			var ye = y + height;
			var xm = x + width / 2;
			var ym = y + height / 2;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x,ym);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(x,ym - oy,xm - ox,y,xm,y);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm + ox,y,xe,ym - oy,xe,ym);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xe,ym + oy,xm + ox,ye,xm,ye);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm - ox,ye,x,ym + oy,x,ym);
			break;
		case 9:
			var c4;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
			c4 = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect(c4.buffer.f[c4.fPos] - offsetX,c4.buffer.f[c4.fPos + 1] - offsetY,c4.buffer.f[c4.fPos + 2],c4.buffer.f[c4.fPos + 3],c4.buffer.f[c4.fPos + 4],c4.buffer.f[c4.fPos + 5]);
			break;
		case 16:
			var c5;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
			c5 = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(c5.buffer.f[c5.fPos] - offsetX,c5.buffer.f[c5.fPos + 1] - offsetY);
			positionX = c5.buffer.f[c5.fPos];
			positionY = c5.buffer.f[c5.fPos + 1];
			break;
		case 17:
			var c6;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
			c6 = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(c6.buffer.f[c6.fPos] - offsetX,c6.buffer.f[c6.fPos + 1] - offsetY);
			positionX = c6.buffer.f[c6.fPos];
			positionY = c6.buffer.f[c6.fPos + 1];
			closeGap = true;
			startX = c6.buffer.f[c6.fPos];
			startY = c6.buffer.f[c6.fPos + 1];
			break;
		case 15:
			var c7;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
			c7 = data;
			if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) {
				openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
				if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
			}
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(positionX - offsetX,positionY - offsetY);
			if(c7.buffer.o[c7.oPos] == null) openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = false; else {
				if(c7.buffer.o[c7.oPos] > 0) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineWidth = c7.buffer.o[c7.oPos]; else openfl__$internal_renderer_canvas_CanvasGraphics.context.lineWidth = 1;
				if(c7.buffer.o[c7.oPos + 6] == null) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineJoin = "round"; else openfl__$internal_renderer_canvas_CanvasGraphics.context.lineJoin = Std.string(c7.buffer.o[c7.oPos + 6]).toLowerCase();
				if(c7.buffer.o[c7.oPos + 5] == null) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = "round"; else {
					var _g2 = c7.buffer.o[c7.oPos + 5];
					switch(_g2[1]) {
					case 0:
						openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = "butt";
						break;
					default:
						openfl__$internal_renderer_canvas_CanvasGraphics.context.lineCap = Std.string(c7.buffer.o[c7.oPos + 5]).toLowerCase();
					}
				}
				if(c7.buffer.o[c7.oPos + 7] == null) openfl__$internal_renderer_canvas_CanvasGraphics.context.miterLimit = 3; else openfl__$internal_renderer_canvas_CanvasGraphics.context.miterLimit = c7.buffer.o[c7.oPos + 7];
				if(c7.buffer.o[c7.oPos + 2] == 1 || c7.buffer.o[c7.oPos + 2] == null) if(c7.buffer.o[c7.oPos + 1] == null) openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "#000000"; else openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "#" + StringTools.hex(c7.buffer.o[c7.oPos + 1] & 16777215,6); else {
					var r = (c7.buffer.o[c7.oPos + 1] & 16711680) >>> 16;
					var g = (c7.buffer.o[c7.oPos + 1] & 65280) >>> 8;
					var b = c7.buffer.o[c7.oPos + 1] & 255;
					if(c7.buffer.o[c7.oPos + 1] == null) openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "#000000"; else openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = "rgba(" + r + ", " + g + ", " + b + ", " + c7.buffer.o[c7.oPos + 2] + ")";
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = true;
			}
			break;
		case 14:
			var c8;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE;
			c8 = data;
			if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) openfl__$internal_renderer_canvas_CanvasGraphics.closePath();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(positionX - offsetX,positionY - offsetY);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern(c8.buffer.o[c8.oPos],c8.buffer.ii[c8.iiPos],c8.buffer.ff[c8.ffPos],c8.buffer.ii[c8.iiPos + 1],c8.buffer.o[c8.oPos + 1],c8.buffer.o[c8.oPos + 2],c8.buffer.o[c8.oPos + 3],c8.buffer.o[c8.oPos + 4]);
			openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = true;
			break;
		case 13:
			var c9;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE;
			c9 = data;
			if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) openfl__$internal_renderer_canvas_CanvasGraphics.closePath();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(positionX - offsetX,positionY - offsetY);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.strokeStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill(c9.buffer.o[c9.oPos],c9.buffer.b[c9.bPos]);
			openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = true;
			break;
		case 0:
			var c10;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
			c10 = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createBitmapFill(c10.buffer.o[c10.oPos],true);
			openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = true;
			if(c10.buffer.o[c10.oPos + 1] != null) {
				openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = c10.buffer.o[c10.oPos + 1];
				openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = c10.buffer.o[c10.oPos + 1].clone();
				openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.invert();
			} else {
				openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix = null;
				openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix = null;
			}
			break;
		case 1:
			var c11;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
			c11 = data;
			if(c11.buffer.f[c11.fPos] < 0.005) openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false; else {
				if(c11.buffer.f[c11.fPos] == 1) openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = "#" + StringTools.hex(c11.buffer.i[c11.iPos],6); else {
					var r1 = (c11.buffer.i[c11.iPos] & 16711680) >>> 16;
					var g1 = (c11.buffer.i[c11.iPos] & 65280) >>> 8;
					var b1 = c11.buffer.i[c11.iPos] & 255;
					openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = "rgba(" + r1 + ", " + g1 + ", " + b1 + ", " + c11.buffer.f[c11.fPos] + ")";
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
				openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = true;
			}
			break;
		case 2:
			var c12;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL;
			c12 = data;
			openfl__$internal_renderer_canvas_CanvasGraphics.context.fillStyle = openfl__$internal_renderer_canvas_CanvasGraphics.createGradientPattern(c12.buffer.o[c12.oPos],c12.buffer.ii[c12.iiPos],c12.buffer.ff[c12.ffPos],c12.buffer.ii[c12.iiPos + 1],c12.buffer.o[c12.oPos + 1],c12.buffer.o[c12.oPos + 2],c12.buffer.o[c12.oPos + 3],c12.buffer.o[c12.oPos + 4]);
			openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
			openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = true;
			break;
		case 8:
			var c13;
			data.advance();
			data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
			c13 = data;
			var optimizationUsed = false;
			if(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill != null) {
				var st = 0;
				var sr = 0;
				var sb = 0;
				var sl = 0;
				var canOptimizeMatrix = true;
				if(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix != null) {
					if(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.b != 0 || openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.c != 0) canOptimizeMatrix = false; else {
						var stl = openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.transformPoint(new openfl_geom_Point(c13.buffer.f[c13.fPos],c13.buffer.f[c13.fPos + 1]));
						var sbr = openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.transformPoint(new openfl_geom_Point(c13.buffer.f[c13.fPos] + c13.buffer.f[c13.fPos + 2],c13.buffer.f[c13.fPos + 1] + c13.buffer.f[c13.fPos + 3]));
						st = stl.y;
						sl = stl.x;
						sb = sbr.y;
						sr = sbr.x;
					}
				} else {
					st = c13.buffer.f[c13.fPos + 1];
					sl = c13.buffer.f[c13.fPos];
					sb = c13.buffer.f[c13.fPos + 1] + c13.buffer.f[c13.fPos + 3];
					sr = c13.buffer.f[c13.fPos] + c13.buffer.f[c13.fPos + 2];
				}
				if(canOptimizeMatrix && st >= 0 && sl >= 0 && sr <= openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width && sb <= openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height) {
					optimizationUsed = true;
					if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.image.get_src(),sl,st,sr - sl,sb - st,c13.buffer.f[c13.fPos] - offsetX,c13.buffer.f[c13.fPos + 1] - offsetY,c13.buffer.f[c13.fPos + 2],c13.buffer.f[c13.fPos + 3]);
				}
			}
			if(!optimizationUsed) openfl__$internal_renderer_canvas_CanvasGraphics.context.rect(c13.buffer.f[c13.fPos] - offsetX,c13.buffer.f[c13.fPos + 1] - offsetY,c13.buffer.f[c13.fPos + 2],c13.buffer.f[c13.fPos + 3]);
			break;
		default:
			data.advance();
			data.prev = type;
		}
	}
	data.destroy();
	if(stroke && openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke) {
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill && closeGap) openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(startX - offsetX,startY - offsetY); else if(closeGap && positionX == startX && positionY == startY) openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
		if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.stroke();
	}
	if(!stroke) {
		if(openfl__$internal_renderer_canvas_CanvasGraphics.hasFill || openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill != null) {
			openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(-openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x,-openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y);
			if(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix != null) {
				openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.a,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.b,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.c,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.d,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.tx,openfl__$internal_renderer_canvas_CanvasGraphics.pendingMatrix.ty);
				if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.fill();
				openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.a,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.b,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.c,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.d,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.tx,openfl__$internal_renderer_canvas_CanvasGraphics.inversePendingMatrix.ty);
			} else if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.fill();
			openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x,openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y);
			openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
		}
	}
};
openfl__$internal_renderer_canvas_CanvasGraphics.render = function(graphics,renderSession) {
	var directRender = false;
	if(graphics.__dirty || directRender) {
		openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting = false;
		openfl__$internal_renderer_canvas_CanvasGraphics.graphics = graphics;
		openfl__$internal_renderer_canvas_CanvasGraphics.bounds = graphics.__bounds;
		if(!graphics.__visible || graphics.__commands.get_length() == 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds == null || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width <= 0 || openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height <= 0) {
			graphics.__canvas = null;
			graphics.__context = null;
			graphics.__bitmap = null;
		} else {
			if(directRender) {
				openfl__$internal_renderer_canvas_CanvasGraphics.context = renderSession.context;
				openfl__$internal_renderer_canvas_CanvasGraphics.bounds.setTo(0,0,openfl__$internal_renderer_canvas_CanvasGraphics.context.canvas.width,openfl__$internal_renderer_canvas_CanvasGraphics.context.canvas.width);
			} else {
				if(graphics.__canvas == null) {
					graphics.__canvas = window.document.createElement("canvas");
					graphics.__context = graphics.__canvas.getContext("2d");
				}
				openfl__$internal_renderer_canvas_CanvasGraphics.context = graphics.__context;
				graphics.__canvas.width = Math.ceil(openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width);
				graphics.__canvas.height = Math.ceil(openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height);
			}
			openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.clear();
			openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.clear();
			openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
			openfl__$internal_renderer_canvas_CanvasGraphics.hasStroke = false;
			openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
			openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat = false;
			var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
			var _g = 0;
			var _g1 = graphics.__commands.types;
			try {
				while(_g < _g1.length) {
					var type = _g1[_g];
					++_g;
					switch(type[1]) {
					case 3:
						var c;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
						c = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.cubicCurveTo(c.buffer.f[c.fPos],c.buffer.f[c.fPos + 1],c.buffer.f[c.fPos + 2],c.buffer.f[c.fPos + 3],c.buffer.f[c.fPos + 4],c.buffer.f[c.fPos + 5]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.cubicCurveTo(c.buffer.f[c.fPos],c.buffer.f[c.fPos + 1],c.buffer.f[c.fPos + 2],c.buffer.f[c.fPos + 3],c.buffer.f[c.fPos + 4],c.buffer.f[c.fPos + 5]);
						break;
					case 4:
						var c1;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
						c1 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.curveTo(c1.buffer.f[c1.fPos],c1.buffer.f[c1.fPos + 1],c1.buffer.f[c1.fPos + 2],c1.buffer.f[c1.fPos + 3]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.curveTo(c1.buffer.f[c1.fPos],c1.buffer.f[c1.fPos + 1],c1.buffer.f[c1.fPos + 2],c1.buffer.f[c1.fPos + 3]);
						break;
					case 16:
						var c2;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
						c2 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.lineTo(c2.buffer.f[c2.fPos],c2.buffer.f[c2.fPos + 1]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineTo(c2.buffer.f[c2.fPos],c2.buffer.f[c2.fPos + 1]);
						break;
					case 17:
						var c3;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
						c3 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.moveTo(c3.buffer.f[c3.fPos],c3.buffer.f[c3.fPos + 1]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.moveTo(c3.buffer.f[c3.fPos],c3.buffer.f[c3.fPos + 1]);
						break;
					case 12:
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.END_FILL;
						data;
						openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
						openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
						openfl__$internal_renderer_canvas_CanvasGraphics.hasFill = false;
						openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill = null;
						break;
					case 15:
						var c4;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
						c4 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineStyle(c4.buffer.o[c4.oPos],c4.buffer.o[c4.oPos + 1],c4.buffer.o[c4.oPos + 2],c4.buffer.o[c4.oPos + 3],c4.buffer.o[c4.oPos + 4],c4.buffer.o[c4.oPos + 5],c4.buffer.o[c4.oPos + 6],c4.buffer.o[c4.oPos + 7]);
						break;
					case 14:
						var c5;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.LINE_GRADIENT_STYLE;
						c5 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineGradientStyle(c5.buffer.o[c5.oPos],c5.buffer.ii[c5.iiPos],c5.buffer.ff[c5.ffPos],c5.buffer.ii[c5.iiPos + 1],c5.buffer.o[c5.oPos + 1],c5.buffer.o[c5.oPos + 2],c5.buffer.o[c5.oPos + 3],c5.buffer.o[c5.oPos + 4]);
						break;
					case 13:
						var c6;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.LINE_BITMAP_STYLE;
						c6 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.lineBitmapStyle(c6.buffer.o[c6.oPos],c6.buffer.o[c6.oPos + 1],c6.buffer.b[c6.bPos],c6.buffer.b[c6.bPos + 1]);
						break;
					case 0:case 1:case 2:
						openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
						openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
						if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL) {
							var c7;
							data.advance();
							data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
							c7 = data;
							openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginBitmapFill(c7.buffer.o[c7.oPos],c7.buffer.o[c7.oPos + 1],c7.buffer.b[c7.bPos],c7.buffer.b[c7.bPos + 1]);
							openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginBitmapFill(c7.buffer.o[c7.oPos],c7.buffer.o[c7.oPos + 1],c7.buffer.b[c7.bPos],c7.buffer.b[c7.bPos + 1]);
						} else if(type == openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL) {
							var c8;
							data.advance();
							data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_GRADIENT_FILL;
							c8 = data;
							openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginGradientFill(c8.buffer.o[c8.oPos],c8.buffer.ii[c8.iiPos],c8.buffer.ff[c8.ffPos],c8.buffer.ii[c8.iiPos + 1],c8.buffer.o[c8.oPos + 1],c8.buffer.o[c8.oPos + 2],c8.buffer.o[c8.oPos + 3],c8.buffer.o[c8.oPos + 4]);
							openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginGradientFill(c8.buffer.o[c8.oPos],c8.buffer.ii[c8.iiPos],c8.buffer.ff[c8.ffPos],c8.buffer.ii[c8.iiPos + 1],c8.buffer.o[c8.oPos + 1],c8.buffer.o[c8.oPos + 2],c8.buffer.o[c8.oPos + 3],c8.buffer.o[c8.oPos + 4]);
						} else {
							var c9;
							data.advance();
							data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
							c9 = data;
							openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.beginFill(c9.buffer.i[c9.iPos],c9.buffer.f[c9.fPos]);
							openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.beginFill(c9.buffer.i[c9.iPos],c9.buffer.f[c9.fPos]);
						}
						break;
					case 5:
						var c10;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
						c10 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawCircle(c10.buffer.f[c10.fPos],c10.buffer.f[c10.fPos + 1],c10.buffer.f[c10.fPos + 2]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawCircle(c10.buffer.f[c10.fPos],c10.buffer.f[c10.fPos + 1],c10.buffer.f[c10.fPos + 2]);
						break;
					case 6:
						var c11;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
						c11 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawEllipse(c11.buffer.f[c11.fPos],c11.buffer.f[c11.fPos + 1],c11.buffer.f[c11.fPos + 2],c11.buffer.f[c11.fPos + 3]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawEllipse(c11.buffer.f[c11.fPos],c11.buffer.f[c11.fPos + 1],c11.buffer.f[c11.fPos + 2],c11.buffer.f[c11.fPos + 3]);
						break;
					case 8:
						var c12;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
						c12 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRect(c12.buffer.f[c12.fPos],c12.buffer.f[c12.fPos + 1],c12.buffer.f[c12.fPos + 2],c12.buffer.f[c12.fPos + 3]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRect(c12.buffer.f[c12.fPos],c12.buffer.f[c12.fPos + 1],c12.buffer.f[c12.fPos + 2],c12.buffer.f[c12.fPos + 3]);
						break;
					case 9:
						var c13;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
						c13 = data;
						openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.drawRoundRect(c13.buffer.f[c13.fPos],c13.buffer.f[c13.fPos + 1],c13.buffer.f[c13.fPos + 2],c13.buffer.f[c13.fPos + 3],c13.buffer.f[c13.fPos + 4],c13.buffer.f[c13.fPos + 5]);
						openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.drawRoundRect(c13.buffer.f[c13.fPos],c13.buffer.f[c13.fPos + 1],c13.buffer.f[c13.fPos + 2],c13.buffer.f[c13.fPos + 3],c13.buffer.f[c13.fPos + 4],c13.buffer.f[c13.fPos + 5]);
						break;
					case 11:
						openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
						openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
						var c14;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES;
						c14 = data;
						var v = c14.buffer.o[c14.oPos];
						var ind = c14.buffer.o[c14.oPos + 1];
						var uvt = c14.buffer.o[c14.oPos + 2];
						var pattern = null;
						var colorFill = openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill == null;
						if(colorFill && uvt != null) throw "__break__";
						if(!colorFill) {
							if(uvt == null) {
								var this1;
								this1 = new openfl_VectorData();
								var this2;
								this2 = new Array(0);
								this1.data = this2;
								this1.length = 0;
								this1.fixed = false;
								uvt = this1;
								var _g3 = 0;
								var _g2 = v.length / 2 | 0;
								while(_g3 < _g2) {
									var i1 = _g3++;
									if(!uvt.fixed) {
										uvt.length++;
										if(uvt.data.length < uvt.length) {
											var data1;
											var this3;
											this3 = new Array(uvt.data.length + 10);
											data1 = this3;
											haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data1,0,uvt.data.length);
											uvt.data = data1;
										}
										uvt.data[uvt.length - 1] = v.data[i1 * 2] / openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width;
									}
									uvt.length;
									if(!uvt.fixed) {
										uvt.length++;
										if(uvt.data.length < uvt.length) {
											var data2;
											var this4;
											this4 = new Array(uvt.data.length + 10);
											data2 = this4;
											haxe_ds__$Vector_Vector_$Impl_$.blit(uvt.data,0,data2,0,uvt.data.length);
											uvt.data = data2;
										}
										uvt.data[uvt.length - 1] = v.data[i1 * 2 + 1] / openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height;
									}
									uvt.length;
								}
							}
							var skipT = uvt.length != v.length;
							var normalizedUVT = openfl__$internal_renderer_canvas_CanvasGraphics.normalizeUVT(uvt,skipT);
							var maxUVT = normalizedUVT.max;
							uvt = normalizedUVT.uvt;
							if(maxUVT > 1) pattern = openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat,openfl__$internal_renderer_canvas_CanvasGraphics.bounds.width | 0,openfl__$internal_renderer_canvas_CanvasGraphics.bounds.height | 0); else pattern = openfl__$internal_renderer_canvas_CanvasGraphics.createTempPatternCanvas(openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapRepeat,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.width,openfl__$internal_renderer_canvas_CanvasGraphics.bitmapFill.height);
						}
						var i = 0;
						var l = ind.length;
						var a_;
						var b_;
						var c_;
						var iax;
						var iay;
						var ibx;
						var iby;
						var icx;
						var icy;
						var x1;
						var y1;
						var x2;
						var y2;
						var x3;
						var y3;
						var uvx1;
						var uvy1;
						var uvx2;
						var uvy2;
						var uvx3;
						var uvy3;
						var denom;
						var t1;
						var t2;
						var t3;
						var t4;
						var dx;
						var dy;
						while(i < l) {
							a_ = i;
							b_ = i + 1;
							c_ = i + 2;
							iax = ind.data[a_] * 2;
							iay = ind.data[a_] * 2 + 1;
							ibx = ind.data[b_] * 2;
							iby = ind.data[b_] * 2 + 1;
							icx = ind.data[c_] * 2;
							icy = ind.data[c_] * 2 + 1;
							x1 = v.data[iax];
							y1 = v.data[iay];
							x2 = v.data[ibx];
							y2 = v.data[iby];
							x3 = v.data[icx];
							y3 = v.data[icy];
							var _g21 = c14.buffer.o[c14.oPos + 3];
							switch(_g21[1]) {
							case 2:
								if(!((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0)) {
									i += 3;
									continue;
								}
								break;
							case 0:
								if((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0) {
									i += 3;
									continue;
								}
								break;
							default:
							}
							if(colorFill) {
								openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
								openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x1,y1);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x2,y2);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x3,y3);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
								if(!openfl__$internal_renderer_canvas_CanvasGraphics.hitTesting) openfl__$internal_renderer_canvas_CanvasGraphics.context.fill();
								i += 3;
								continue;
							}
							openfl__$internal_renderer_canvas_CanvasGraphics.context.save();
							openfl__$internal_renderer_canvas_CanvasGraphics.context.beginPath();
							openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x1,y1);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x2,y2);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(x3,y3);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.closePath();
							openfl__$internal_renderer_canvas_CanvasGraphics.context.clip();
							uvx1 = uvt.data[iax] * pattern.width;
							uvx2 = uvt.data[ibx] * pattern.width;
							uvx3 = uvt.data[icx] * pattern.width;
							uvy1 = uvt.data[iay] * pattern.height;
							uvy2 = uvt.data[iby] * pattern.height;
							uvy3 = uvt.data[icy] * pattern.height;
							denom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;
							if(denom == 0) {
								i += 3;
								continue;
							}
							t1 = -(uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;
							t2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;
							t3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;
							t4 = -(uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;
							dx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;
							dy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;
							openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(t1,t2,t3,t4,dx,dy);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(pattern,0,0);
							openfl__$internal_renderer_canvas_CanvasGraphics.context.restore();
							i += 3;
						}
						break;
					case 10:
						var c15;
						data.advance();
						data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TILES;
						c15 = data;
						var useScale = (c15.buffer.i[c15.iPos] & 1) > 0;
						var offsetX = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.x;
						var offsetY = openfl__$internal_renderer_canvas_CanvasGraphics.bounds.y;
						var useRotation = (c15.buffer.i[c15.iPos] & 2) > 0;
						var useTransform = (c15.buffer.i[c15.iPos] & 16) > 0;
						var useRGB = (c15.buffer.i[c15.iPos] & 4) > 0;
						var useAlpha = (c15.buffer.i[c15.iPos] & 8) > 0;
						var useRect = (c15.buffer.i[c15.iPos] & 32) > 0;
						var useOrigin = (c15.buffer.i[c15.iPos] & 64) > 0;
						var useBlendAdd = (c15.buffer.i[c15.iPos] & 65536) > 0;
						if(useTransform) {
							useScale = false;
							useRotation = false;
						}
						var scaleIndex = 0;
						var rotationIndex = 0;
						var rgbIndex = 0;
						var alphaIndex = 0;
						var transformIndex = 0;
						var numValues = 3;
						if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
						if(useScale) {
							scaleIndex = numValues;
							numValues++;
						}
						if(useRotation) {
							rotationIndex = numValues;
							numValues++;
						}
						if(useTransform) {
							transformIndex = numValues;
							numValues += 4;
						}
						if(useRGB) {
							rgbIndex = numValues;
							numValues += 3;
						}
						if(useAlpha) {
							alphaIndex = numValues;
							numValues++;
						}
						var totalCount = c15.buffer.ff[c15.ffPos].length;
						if(c15.buffer.i[c15.iPos + 1] >= 0 && totalCount > c15.buffer.i[c15.iPos + 1]) totalCount = c15.buffer.i[c15.iPos + 1];
						var itemCount = totalCount / numValues | 0;
						var index = 0;
						var rect = null;
						var center = null;
						var previousTileID = -1;
						var surface;
						c15.buffer.ts[c15.tsPos].__bitmap.__sync();
						surface = c15.buffer.ts[c15.tsPos].__bitmap.image.get_src();
						if(useBlendAdd) openfl__$internal_renderer_canvas_CanvasGraphics.context.globalCompositeOperation = "lighter";
						while(index < totalCount) {
							var tileID;
							if(!useRect) tileID = c15.buffer.ff[c15.ffPos][index + 2] | 0; else tileID = -1;
							if(!useRect && tileID != previousTileID) {
								rect = c15.buffer.ts[c15.tsPos].__tileRects[tileID];
								center = c15.buffer.ts[c15.tsPos].__centerPoints[tileID];
								previousTileID = tileID;
							} else if(useRect) {
								rect = c15.buffer.ts[c15.tsPos].__rectTile;
								rect.setTo(c15.buffer.ff[c15.ffPos][index + 2],c15.buffer.ff[c15.ffPos][index + 3],c15.buffer.ff[c15.ffPos][index + 4],c15.buffer.ff[c15.ffPos][index + 5]);
								center = c15.buffer.ts[c15.tsPos].__point;
								if(useOrigin) {
									center.x = c15.buffer.ff[c15.ffPos][index + 6];
									center.y = c15.buffer.ff[c15.ffPos][index + 7];
								} else {
									center.x = 0;
									center.y = 0;
								}
							}
							if(rect != null && rect.width > 0 && rect.height > 0 && center != null) {
								openfl__$internal_renderer_canvas_CanvasGraphics.context.save();
								openfl__$internal_renderer_canvas_CanvasGraphics.context.translate(c15.buffer.ff[c15.ffPos][index] - offsetX,c15.buffer.ff[c15.ffPos][index + 1] - offsetY);
								if(useRotation) openfl__$internal_renderer_canvas_CanvasGraphics.context.rotate(c15.buffer.ff[c15.ffPos][index + rotationIndex]);
								var scale = 1.0;
								if(useScale) scale = c15.buffer.ff[c15.ffPos][index + scaleIndex];
								if(useTransform) openfl__$internal_renderer_canvas_CanvasGraphics.context.transform(c15.buffer.ff[c15.ffPos][index + transformIndex],c15.buffer.ff[c15.ffPos][index + transformIndex + 1],c15.buffer.ff[c15.ffPos][index + transformIndex + 2],c15.buffer.ff[c15.ffPos][index + transformIndex + 3],0,0);
								if(useAlpha) openfl__$internal_renderer_canvas_CanvasGraphics.context.globalAlpha = c15.buffer.ff[c15.ffPos][index + alphaIndex];
								openfl__$internal_renderer_canvas_CanvasGraphics.context.imageSmoothingEnabled = c15.buffer.b[c15.bPos];
								openfl__$internal_renderer_canvas_CanvasGraphics.context.drawImage(surface,rect.x,rect.y,rect.width,rect.height,-center.x * scale,-center.y * scale,rect.width * scale,rect.height * scale);
								openfl__$internal_renderer_canvas_CanvasGraphics.context.restore();
							}
							index += numValues;
						}
						if(useBlendAdd) openfl__$internal_renderer_canvas_CanvasGraphics.context.globalCompositeOperation = "source-over";
						break;
					default:
						data.advance();
						data.prev = type;
					}
				}
			} catch( e ) { if( e != "__break__" ) throw e; }
			if(openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endFill();
			if(openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands.get_length() > 0) openfl__$internal_renderer_canvas_CanvasGraphics.endStroke();
			data.destroy();
			graphics.__bitmap = openfl_display_BitmapData.fromCanvas(graphics.__canvas);
		}
		graphics.set___dirty(false);
	}
};
openfl__$internal_renderer_canvas_CanvasGraphics.renderMask = function(graphics,renderSession) {
	if(graphics.__commands.get_length() != 0) {
		openfl__$internal_renderer_canvas_CanvasGraphics.context = renderSession.context;
		var positionX = 0.0;
		var positionY = 0.0;
		var offsetX = 0;
		var offsetY = 0;
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 3:
				var c;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
				c = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(c.buffer.f[c.fPos] - offsetX,c.buffer.f[c.fPos + 1] - offsetY,c.buffer.f[c.fPos + 2] - offsetX,c.buffer.f[c.fPos + 3] - offsetY,c.buffer.f[c.fPos + 4] - offsetX,c.buffer.f[c.fPos + 5] - offsetY);
				positionX = c.buffer.f[c.fPos + 4];
				positionY = c.buffer.f[c.fPos + 5];
				break;
			case 4:
				var c1;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
				c1 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.quadraticCurveTo(c1.buffer.f[c1.fPos] - offsetX,c1.buffer.f[c1.fPos + 1] - offsetY,c1.buffer.f[c1.fPos + 2] - offsetX,c1.buffer.f[c1.fPos + 3] - offsetY);
				positionX = c1.buffer.f[c1.fPos + 2];
				positionY = c1.buffer.f[c1.fPos + 3];
				break;
			case 5:
				var c2;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
				c2 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.arc(c2.buffer.f[c2.fPos] - offsetX,c2.buffer.f[c2.fPos + 1] - offsetY,c2.buffer.f[c2.fPos + 2],0,Math.PI * 2,true);
				break;
			case 6:
				var c3;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
				c3 = data;
				var x = c3.buffer.f[c3.fPos];
				var y = c3.buffer.f[c3.fPos + 1];
				var width = c3.buffer.f[c3.fPos + 2];
				var height = c3.buffer.f[c3.fPos + 3];
				x -= offsetX;
				y -= offsetY;
				var kappa = .5522848;
				var ox = width / 2 * kappa;
				var oy = height / 2 * kappa;
				var xe = x + width;
				var ye = y + height;
				var xm = x + width / 2;
				var ym = y + height / 2;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(x,ym);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(x,ym - oy,xm - ox,y,xm,y);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm + ox,y,xe,ym - oy,xe,ym);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xe,ym + oy,xm + ox,ye,xm,ye);
				openfl__$internal_renderer_canvas_CanvasGraphics.context.bezierCurveTo(xm - ox,ye,x,ym + oy,x,ym);
				break;
			case 8:
				var c4;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
				c4 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.rect(c4.buffer.f[c4.fPos] - offsetX,c4.buffer.f[c4.fPos + 1] - offsetY,c4.buffer.f[c4.fPos + 2],c4.buffer.f[c4.fPos + 3]);
				break;
			case 9:
				var c5;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
				c5 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.drawRoundRect(c5.buffer.f[c5.fPos] - offsetX,c5.buffer.f[c5.fPos + 1] - offsetY,c5.buffer.f[c5.fPos + 2],c5.buffer.f[c5.fPos + 3],c5.buffer.f[c5.fPos + 4],c5.buffer.f[c5.fPos + 5]);
				break;
			case 16:
				var c6;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
				c6 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.lineTo(c6.buffer.f[c6.fPos] - offsetX,c6.buffer.f[c6.fPos + 1] - offsetY);
				positionX = c6.buffer.f[c6.fPos];
				positionY = c6.buffer.f[c6.fPos + 1];
				break;
			case 17:
				var c7;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
				c7 = data;
				openfl__$internal_renderer_canvas_CanvasGraphics.context.moveTo(c7.buffer.f[c7.fPos] - offsetX,c7.buffer.f[c7.fPos + 1] - offsetY);
				positionX = c7.buffer.f[c7.fPos];
				positionY = c7.buffer.f[c7.fPos + 1];
				break;
			default:
				data.advance();
				data.prev = type;
			}
		}
		data.destroy();
	}
};
var openfl__$internal_renderer_canvas_CanvasMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
};
$hxClasses["openfl._internal.renderer.canvas.CanvasMaskManager"] = openfl__$internal_renderer_canvas_CanvasMaskManager;
openfl__$internal_renderer_canvas_CanvasMaskManager.__name__ = ["openfl","_internal","renderer","canvas","CanvasMaskManager"];
openfl__$internal_renderer_canvas_CanvasMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_canvas_CanvasMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	pushMask: function(mask) {
		var context = this.renderSession.context;
		context.save();
		var transform = mask.__getWorldTransform();
		context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.beginPath();
		mask.__renderCanvasMask(this.renderSession);
		context.clip();
	}
	,pushRect: function(rect,transform) {
		var context = this.renderSession.context;
		context.save();
		context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		context.beginPath();
		context.rect(rect.x,rect.y,rect.width,rect.height);
		context.clip();
	}
	,popMask: function() {
		this.renderSession.context.restore();
	}
	,popRect: function() {
		this.renderSession.context.restore();
	}
	,__class__: openfl__$internal_renderer_canvas_CanvasMaskManager
});
var openfl__$internal_renderer_canvas_CanvasRenderer = function(width,height,context) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.context = context;
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.context = context;
	this.renderSession.roundPixels = true;
	this.renderSession.renderer = this;
	this.renderSession.maskManager = new openfl__$internal_renderer_canvas_CanvasMaskManager(this.renderSession);
};
$hxClasses["openfl._internal.renderer.canvas.CanvasRenderer"] = openfl__$internal_renderer_canvas_CanvasRenderer;
openfl__$internal_renderer_canvas_CanvasRenderer.__name__ = ["openfl","_internal","renderer","canvas","CanvasRenderer"];
openfl__$internal_renderer_canvas_CanvasRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_canvas_CanvasRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
		this.context.setTransform(1,0,0,1,0,0);
		this.context.globalAlpha = 1;
		if(!stage.__transparent && stage.__clearBeforeRender) {
			this.context.fillStyle = stage.__colorString;
			this.context.fillRect(0,0,stage.stageWidth,stage.stageHeight);
		} else if(stage.__transparent && stage.__clearBeforeRender) this.context.clearRect(0,0,stage.stageWidth,stage.stageHeight);
		stage.__renderCanvas(this.renderSession);
	}
	,__class__: openfl__$internal_renderer_canvas_CanvasRenderer
});
var openfl__$internal_renderer_canvas_CanvasShape = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasShape"] = openfl__$internal_renderer_canvas_CanvasShape;
openfl__$internal_renderer_canvas_CanvasShape.__name__ = ["openfl","_internal","renderer","canvas","CanvasShape"];
openfl__$internal_renderer_canvas_CanvasShape.render = function(shape,renderSession) {
	if(!shape.__renderable || shape.__worldAlpha <= 0) return;
	var graphics = shape.__graphics;
	if(graphics != null) {
		openfl__$internal_renderer_canvas_CanvasGraphics.render(graphics,renderSession);
		if(graphics.__canvas != null) {
			var context = renderSession.context;
			var scrollRect = shape.get_scrollRect();
			if(graphics.__bounds.width > 0 && graphics.__bounds.height > 0 && (scrollRect == null || scrollRect.width > 0 && scrollRect.height > 0)) {
				if(shape.__mask != null) renderSession.maskManager.pushMask(shape.__mask);
				context.globalAlpha = shape.__worldAlpha;
				var transform = shape.__renderTransform;
				if(renderSession.roundPixels) context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx | 0,transform.ty | 0); else context.setTransform(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
				if(scrollRect == null) context.drawImage(graphics.__canvas,graphics.__bounds.x,graphics.__bounds.y); else context.drawImage(graphics.__canvas,Math.ceil(graphics.__bounds.x + scrollRect.x),Math.ceil(graphics.__bounds.y + scrollRect.y),scrollRect.width,scrollRect.height,Math.ceil(graphics.__bounds.x + scrollRect.x),Math.ceil(graphics.__bounds.y + scrollRect.y),scrollRect.width,scrollRect.height);
				if(shape.__mask != null) renderSession.maskManager.popMask();
			}
		}
	}
};
var openfl__$internal_renderer_canvas_CanvasTextField = function() { };
$hxClasses["openfl._internal.renderer.canvas.CanvasTextField"] = openfl__$internal_renderer_canvas_CanvasTextField;
openfl__$internal_renderer_canvas_CanvasTextField.__name__ = ["openfl","_internal","renderer","canvas","CanvasTextField"];
openfl__$internal_renderer_canvas_CanvasTextField.context = null;
openfl__$internal_renderer_canvas_CanvasTextField.disableInputMode = function(textEngine) {
};
openfl__$internal_renderer_canvas_CanvasTextField.enableInputMode = function(textEngine) {
	textEngine.__cursorPosition = -1;
	if(textEngine.__hiddenInput == null) {
		textEngine.__hiddenInput = window.document.createElement("input");
		var hiddenInput = textEngine.__hiddenInput;
		hiddenInput.type = "text";
		hiddenInput.style.position = "absolute";
		hiddenInput.style.opacity = "0";
		hiddenInput.style.color = "transparent";
		hiddenInput.style.left = "0px";
		hiddenInput.style.top = "50%";
		if(new EReg("(iPad|iPhone|iPod).*OS 8_","gi").match(window.navigator.userAgent)) {
			hiddenInput.style.fontSize = "0px";
			hiddenInput.style.width = "0px";
			hiddenInput.style.height = "0px";
		} else {
			hiddenInput.style.width = "1px";
			hiddenInput.style.height = "1px";
		}
		hiddenInput.style.pointerEvents = "none";
		hiddenInput.style.zIndex = "-10000000";
		if(textEngine.maxChars > 0) hiddenInput.maxLength = textEngine.maxChars;
		window.document.body.appendChild(hiddenInput);
		hiddenInput.value = textEngine.text;
	}
};
openfl__$internal_renderer_canvas_CanvasTextField.render = function(textField,renderSession) {
	if(textField.__dirty) {
		var textEngine = textField.__textEngine;
		textField.__updateLayout();
		if((textEngine.text == null || textEngine.text == "") && !textEngine.background && !textEngine.border && !textEngine.__hasFocus || (textEngine.width <= 0 || textEngine.height <= 0) && textEngine.autoSize != openfl_text_TextFieldAutoSize.NONE) {
			textField.__graphics.__canvas = null;
			textField.__graphics.__context = null;
			textField.__graphics.set___dirty(false);
			textField.__dirty = false;
		} else {
			var bounds = textEngine.bounds;
			if(textField.__graphics == null || textField.__graphics.__canvas == null) {
				if(textField.__graphics == null) textField.__graphics = new openfl_display_Graphics();
				textField.__graphics.__canvas = window.document.createElement("canvas");
				textField.__graphics.__context = textField.__graphics.__canvas.getContext("2d");
				textField.__graphics.__bounds = new openfl_geom_Rectangle(0,0,bounds.width,bounds.height);
			}
			var graphics = textField.__graphics;
			openfl__$internal_renderer_canvas_CanvasTextField.context = graphics.__context;
			if(textEngine.text != null && textEngine.text != "" || textEngine.__hasFocus) {
				var text = textEngine.text;
				if(textEngine.displayAsPassword) {
					var length = text.length;
					var mask = "";
					var _g = 0;
					while(_g < length) {
						var i = _g++;
						mask += "*";
					}
					text = mask;
				}
				graphics.__canvas.width = Math.ceil(bounds.width);
				graphics.__canvas.height = Math.ceil(bounds.height);
				if(textEngine.antiAliasType != openfl_text_AntiAliasType.ADVANCED || textEngine.gridFitType != openfl_text_GridFitType.PIXEL) {
					graphics.__context.mozImageSmoothingEnabled = true;
					graphics.__context.msImageSmoothingEnabled = true;
					graphics.__context.imageSmoothingEnabled = true;
				} else {
					graphics.__context.mozImageSmoothingEnabled = false;
					graphics.__context.msImageSmoothingEnabled = false;
					graphics.__context.imageSmoothingEnabled = false;
				}
				if(textEngine.border || textEngine.background) {
					openfl__$internal_renderer_canvas_CanvasTextField.context.rect(0.5,0.5,bounds.width - 1,bounds.height - 1);
					if(textEngine.background) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(textEngine.backgroundColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.fill();
					}
					if(textEngine.border) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.lineWidth = 1;
						openfl__$internal_renderer_canvas_CanvasTextField.context.strokeStyle = "#" + StringTools.hex(textEngine.borderColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.stroke();
					}
				}
				openfl__$internal_renderer_canvas_CanvasTextField.context.textBaseline = "top";
				openfl__$internal_renderer_canvas_CanvasTextField.context.textAlign = "start";
				var scrollX = -textField.get_scrollH();
				var scrollY = 0.0;
				var _g1 = 0;
				var _g2 = textField.get_scrollV() - 1;
				while(_g1 < _g2) {
					var i1 = _g1++;
					scrollY -= textEngine.lineHeights[i1];
				}
				var advance;
				var offsetY = 0.0;
				var applyHack = new EReg("(iPad|iPhone|iPod|Firefox)","g").match(window.navigator.userAgent);
				var _g3 = 0;
				var _g11 = textEngine.layoutGroups;
				while(_g3 < _g11.length) {
					var group = _g11[_g3];
					++_g3;
					if(group.lineIndex < textField.get_scrollV() - 1) continue;
					if(group.lineIndex > textField.get_scrollV() + textEngine.bottomScrollV - 2) break;
					openfl__$internal_renderer_canvas_CanvasTextField.context.font = openfl__$internal_text_TextEngine.getFont(group.format);
					openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(group.format.color,6);
					if(applyHack) offsetY = group.format.size * 0.185;
					openfl__$internal_renderer_canvas_CanvasTextField.context.fillText(text.substring(group.startIndex,group.endIndex),group.offsetX + scrollX,group.offsetY + offsetY + scrollY);
					if(textField.__caretIndex > -1 && textEngine.selectable) {
						if(textField.__selectionIndex == textField.__caretIndex) {
							if(textField.__showCursor && group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) {
								advance = 0.0;
								var _g31 = 0;
								var _g21 = textField.__caretIndex - group.startIndex;
								while(_g31 < _g21) {
									var i2 = _g31++;
									if(group.advances.length <= i2) break;
									advance += group.advances[i2];
								}
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillRect(group.offsetX + advance,group.offsetY,1,group.height);
							}
						} else if(group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex || group.startIndex <= textField.__selectionIndex && group.endIndex >= textField.__selectionIndex) {
							var selectionStart = Std["int"](Math.min(textField.__selectionIndex,textField.__caretIndex));
							var selectionEnd = Std["int"](Math.max(textField.__selectionIndex,textField.__caretIndex));
							if(group.startIndex > selectionStart) selectionStart = group.startIndex;
							if(group.endIndex < selectionEnd) selectionEnd = group.endIndex;
							var start;
							var end;
							start = textField.getCharBoundaries(selectionStart);
							if(selectionEnd >= textEngine.text.length) {
								end = textField.getCharBoundaries(textEngine.text.length - 1);
								end.x += end.width + 2;
							} else end = textField.getCharBoundaries(selectionEnd);
							if(start != null && end != null) {
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#000000";
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillRect(start.x,start.y,end.x - start.x,group.height);
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#FFFFFF";
								openfl__$internal_renderer_canvas_CanvasTextField.context.fillText(text.substring(selectionStart,selectionEnd),scrollX + start.x,group.offsetY + offsetY + scrollY);
							}
						}
					}
				}
			} else {
				graphics.__canvas.width = Math.ceil(bounds.width);
				graphics.__canvas.height = Math.ceil(bounds.height);
				if(textEngine.border || textEngine.background) {
					if(textEngine.border) openfl__$internal_renderer_canvas_CanvasTextField.context.rect(0.5,0.5,bounds.width - 1,bounds.height - 1); else openfl__$internal_renderer_canvas_CanvasTextField.context.rect(0,0,bounds.width,bounds.height);
					if(textEngine.background) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.fillStyle = "#" + StringTools.hex(textEngine.backgroundColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.fill();
					}
					if(textEngine.border) {
						openfl__$internal_renderer_canvas_CanvasTextField.context.lineWidth = 1;
						openfl__$internal_renderer_canvas_CanvasTextField.context.lineCap = "square";
						openfl__$internal_renderer_canvas_CanvasTextField.context.strokeStyle = "#" + StringTools.hex(textEngine.borderColor,6);
						openfl__$internal_renderer_canvas_CanvasTextField.context.stroke();
					}
				}
			}
			graphics.__bitmap = openfl_display_BitmapData.fromCanvas(textField.__graphics.__canvas);
			textField.__dirty = false;
			graphics.set___dirty(false);
		}
	}
};
var openfl__$internal_renderer_console_ConsoleRenderer = function(width,height,ctx) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	throw new js__$Boot_HaxeError("ConsoleRenderer not supported");
};
$hxClasses["openfl._internal.renderer.console.ConsoleRenderer"] = openfl__$internal_renderer_console_ConsoleRenderer;
openfl__$internal_renderer_console_ConsoleRenderer.__name__ = ["openfl","_internal","renderer","console","ConsoleRenderer"];
openfl__$internal_renderer_console_ConsoleRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_console_ConsoleRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
	}
	,__class__: openfl__$internal_renderer_console_ConsoleRenderer
});
var openfl__$internal_renderer_dom_DOMBitmap = function() { };
$hxClasses["openfl._internal.renderer.dom.DOMBitmap"] = openfl__$internal_renderer_dom_DOMBitmap;
openfl__$internal_renderer_dom_DOMBitmap.__name__ = ["openfl","_internal","renderer","dom","DOMBitmap"];
openfl__$internal_renderer_dom_DOMBitmap.render = function(bitmap,renderSession) {
	if(bitmap.stage != null && bitmap.__worldVisible && bitmap.__renderable && bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {
		if(bitmap.bitmapData.image.buffer.__srcImage != null) openfl__$internal_renderer_dom_DOMBitmap.renderImage(bitmap,renderSession); else openfl__$internal_renderer_dom_DOMBitmap.renderCanvas(bitmap,renderSession);
	} else {
		if(bitmap.__image != null) {
			renderSession.element.removeChild(bitmap.__image);
			bitmap.__image = null;
			bitmap.__style = null;
		}
		if(bitmap.__canvas != null) {
			renderSession.element.removeChild(bitmap.__canvas);
			bitmap.__canvas = null;
			bitmap.__style = null;
		}
	}
};
openfl__$internal_renderer_dom_DOMBitmap.renderCanvas = function(bitmap,renderSession) {
	if(bitmap.__image != null) {
		renderSession.element.removeChild(bitmap.__image);
		bitmap.__image = null;
	}
	if(bitmap.__canvas == null) {
		bitmap.__canvas = window.document.createElement("canvas");
		bitmap.__context = bitmap.__canvas.getContext("2d");
		if(!bitmap.smoothing) {
			bitmap.__context.mozImageSmoothingEnabled = false;
			bitmap.__context.msImageSmoothingEnabled = false;
			bitmap.__context.imageSmoothingEnabled = false;
		}
		openfl__$internal_renderer_dom_DOMRenderer.initializeElement(bitmap,bitmap.__canvas,renderSession);
	}
	bitmap.bitmapData.__sync();
	bitmap.__canvas.width = bitmap.bitmapData.width;
	bitmap.__canvas.height = bitmap.bitmapData.height;
	bitmap.__context.globalAlpha = bitmap.__worldAlpha;
	bitmap.__context.drawImage(bitmap.bitmapData.image.buffer.__srcCanvas,0,0);
	openfl__$internal_renderer_dom_DOMRenderer.applyStyle(bitmap,renderSession,true,false,true);
};
openfl__$internal_renderer_dom_DOMBitmap.renderImage = function(bitmap,renderSession) {
	if(bitmap.__canvas != null) {
		renderSession.element.removeChild(bitmap.__canvas);
		bitmap.__canvas = null;
	}
	if(bitmap.__image == null) {
		bitmap.__image = window.document.createElement("img");
		bitmap.__image.src = bitmap.bitmapData.image.buffer.__srcImage.src;
		openfl__$internal_renderer_dom_DOMRenderer.initializeElement(bitmap,bitmap.__image,renderSession);
	}
	openfl__$internal_renderer_dom_DOMRenderer.applyStyle(bitmap,renderSession,true,true,true);
};
var openfl__$internal_renderer_dom_DOMMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
};
$hxClasses["openfl._internal.renderer.dom.DOMMaskManager"] = openfl__$internal_renderer_dom_DOMMaskManager;
openfl__$internal_renderer_dom_DOMMaskManager.__name__ = ["openfl","_internal","renderer","dom","DOMMaskManager"];
openfl__$internal_renderer_dom_DOMMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_dom_DOMMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	pushMask: function(mask) {
	}
	,pushRect: function(rect,transform) {
	}
	,popMask: function() {
	}
	,__class__: openfl__$internal_renderer_dom_DOMMaskManager
});
var openfl__$internal_renderer_dom_DOMRenderer = function(width,height,element) {
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.element = element;
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.element = element;
	this.renderSession.roundPixels = true;
	var prefix = (function () {
		  var styles = window.getComputedStyle(document.documentElement, ''),
			pre = (Array.prototype.slice
			  .call(styles)
			  .join('') 
			  .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])
			)[1],
			dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];
		  return {
			dom: dom,
			lowercase: pre,
			css: '-' + pre + '-',
			js: pre[0].toUpperCase() + pre.substr(1)
		  };
		})();
	this.renderSession.vendorPrefix = prefix.lowercase;
	if(prefix.lowercase == "webkit") this.renderSession.transformProperty = "-webkit-transform"; else this.renderSession.transformProperty = "transform";
	if(prefix.lowercase == "webkit") this.renderSession.transformOriginProperty = "-webkit-transform-origin"; else this.renderSession.transformOriginProperty = "transform-origin";
	this.renderSession.maskManager = new openfl__$internal_renderer_dom_DOMMaskManager(this.renderSession);
	this.renderSession.renderer = this;
};
$hxClasses["openfl._internal.renderer.dom.DOMRenderer"] = openfl__$internal_renderer_dom_DOMRenderer;
openfl__$internal_renderer_dom_DOMRenderer.__name__ = ["openfl","_internal","renderer","dom","DOMRenderer"];
openfl__$internal_renderer_dom_DOMRenderer.applyStyle = function(displayObject,renderSession,setTransform,setAlpha,setClip) {
	var style = displayObject.__style;
	if(setTransform && displayObject.__worldTransformChanged) style.setProperty(renderSession.transformProperty,displayObject.__worldTransform.to3DString(renderSession.roundPixels),null);
	if(displayObject.__worldZ != ++renderSession.z) {
		displayObject.__worldZ = renderSession.z;
		style.setProperty("z-index",displayObject.__worldZ == null?"null":"" + displayObject.__worldZ,null);
	}
	if(setAlpha && displayObject.__worldAlphaChanged) {
		if(displayObject.__worldAlpha < 1) style.setProperty("opacity",displayObject.__worldAlpha == null?"null":"" + displayObject.__worldAlpha,null); else style.removeProperty("opacity");
	}
	if(setClip && displayObject.__worldClipChanged) {
		if(displayObject.__worldClip == null) style.removeProperty("clip"); else {
			var clip = openfl_geom_Rectangle.__temp;
			var matrix = openfl_geom_Matrix.__temp;
			matrix.copyFrom(displayObject.__worldTransform);
			matrix.invert();
			displayObject.__worldClip.__transform(clip,matrix);
			style.setProperty("clip","rect(" + clip.y + "px, " + clip.get_right() + "px, " + clip.get_bottom() + "px, " + clip.x + "px)",null);
		}
	}
};
openfl__$internal_renderer_dom_DOMRenderer.initializeElement = function(displayObject,element,renderSession) {
	var style = displayObject.__style = element.style;
	style.setProperty("position","absolute",null);
	style.setProperty("top","0",null);
	style.setProperty("left","0",null);
	style.setProperty(renderSession.transformOriginProperty,"0 0 0",null);
	renderSession.element.appendChild(element);
	displayObject.__worldAlphaChanged = true;
	displayObject.__worldClipChanged = true;
	displayObject.__worldTransformChanged = true;
	displayObject.__worldVisibleChanged = true;
	displayObject.__worldZ = -1;
};
openfl__$internal_renderer_dom_DOMRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_dom_DOMRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	render: function(stage) {
		this.element.style.background = stage.__colorString;
		this.renderSession.z = 1;
		stage.__renderDOM(this.renderSession);
	}
	,__class__: openfl__$internal_renderer_dom_DOMRenderer
});
var openfl__$internal_renderer_dom_DOMShape = function() { };
$hxClasses["openfl._internal.renderer.dom.DOMShape"] = openfl__$internal_renderer_dom_DOMShape;
openfl__$internal_renderer_dom_DOMShape.__name__ = ["openfl","_internal","renderer","dom","DOMShape"];
openfl__$internal_renderer_dom_DOMShape.render = function(shape,renderSession) {
	var graphics = shape.__graphics;
	if(shape.stage != null && shape.__worldVisible && shape.__renderable && graphics != null) {
		if(graphics.__dirty || shape.__worldAlphaChanged || shape.__canvas == null && graphics.__canvas != null) {
			openfl__$internal_renderer_canvas_CanvasGraphics.render(graphics,renderSession);
			if(graphics.__canvas != null) {
				if(shape.__canvas == null) {
					shape.__canvas = window.document.createElement("canvas");
					shape.__context = shape.__canvas.getContext("2d");
					openfl__$internal_renderer_dom_DOMRenderer.initializeElement(shape,shape.__canvas,renderSession);
				}
				shape.__canvas.width = graphics.__canvas.width;
				shape.__canvas.height = graphics.__canvas.height;
				shape.__context.globalAlpha = shape.__worldAlpha;
				shape.__context.drawImage(graphics.__canvas,0,0);
			} else if(shape.__canvas != null) {
				renderSession.element.removeChild(shape.__canvas);
				shape.__canvas = null;
				shape.__style = null;
			}
		}
		if(shape.__canvas != null) {
			if(shape.__worldTransformChanged || graphics.__transformDirty) {
				graphics.__transformDirty = false;
				var transform = openfl_geom_Matrix.__temp;
				transform.identity();
				transform.translate(graphics.__bounds.x,graphics.__bounds.y);
				transform.concat(shape.__worldTransform);
				shape.__style.setProperty(renderSession.transformProperty,renderSession.roundPixels?"matrix3d(" + transform.a + ", " + transform.b + ", 0, 0, " + transform.c + ", " + transform.d + ", 0, 0, 0, 0, 1, 0, " + (transform.tx | 0) + ", " + (transform.ty | 0) + ", 0, 1)":"matrix3d(" + transform.a + ", " + transform.b + ", 0, 0, " + transform.c + ", " + transform.d + ", 0, 0, 0, 0, 1, 0, " + transform.tx + ", " + transform.ty + ", 0, 1)",null);
			}
			openfl__$internal_renderer_dom_DOMRenderer.applyStyle(shape,renderSession,false,false,true);
		}
	} else if(shape.__canvas != null) {
		renderSession.element.removeChild(shape.__canvas);
		shape.__canvas = null;
		shape.__style = null;
	}
};
var openfl__$internal_renderer_dom_DOMTextField = function() { };
$hxClasses["openfl._internal.renderer.dom.DOMTextField"] = openfl__$internal_renderer_dom_DOMTextField;
openfl__$internal_renderer_dom_DOMTextField.__name__ = ["openfl","_internal","renderer","dom","DOMTextField"];
openfl__$internal_renderer_dom_DOMTextField.measureText = function(textField) {
	var textEngine = textField.__textEngine;
	var div = textField.__div;
	if(div == null) {
		div = window.document.createElement("div");
		div.innerHTML = new EReg("\n","g").replace(textEngine.text,"<br>");
		div.style.setProperty("font",openfl__$internal_text_TextEngine.getFont(textField.__textFormat),null);
		div.style.setProperty("pointer-events","none",null);
		div.style.position = "absolute";
		div.style.top = "110%";
		window.document.body.appendChild(div);
	}
	textEngine.__measuredWidth = div.clientWidth;
	if(textField.__div == null) div.style.width = Std.string(textEngine.width - 4) + "px";
	textEngine.__measuredHeight = div.clientHeight;
	if(textField.__div == null) window.document.body.removeChild(div);
};
openfl__$internal_renderer_dom_DOMTextField.render = function(textField,renderSession) {
	var textEngine = textField.__textEngine;
	if(textField.stage != null && textField.__worldVisible && textField.__renderable) {
		if(textField.__dirty || textField.__div == null) {
			if(textEngine.text != "" || textEngine.background || textEngine.border || textEngine.type == openfl_text_TextFieldType.INPUT) {
				if(textField.__div == null) {
					textField.__div = window.document.createElement("div");
					openfl__$internal_renderer_dom_DOMRenderer.initializeElement(textField,textField.__div,renderSession);
					textField.__style.setProperty("outline","none",null);
					textField.__div.addEventListener("input",function(event) {
						event.preventDefault();
						if(textField.get_htmlText() != textField.__div.innerHTML) {
							textField.set_htmlText(textField.__div.innerHTML);
							textField.__dirty = false;
						}
					},true);
				}
				if(textEngine.selectable) textField.__style.setProperty("cursor","text",null); else textField.__style.setProperty("cursor","inherit",null);
				textField.__div.contentEditable = textEngine.type == openfl_text_TextFieldType.INPUT;
				var style = textField.__style;
				textField.__div.innerHTML = textEngine.text;
				if(textEngine.background) style.setProperty("background-color","#" + StringTools.hex(textEngine.backgroundColor,6),null); else style.removeProperty("background-color");
				if(textEngine.border) style.setProperty("border","solid 1px #" + StringTools.hex(textEngine.borderColor,6),null); else style.removeProperty("border");
				style.setProperty("font",openfl__$internal_text_TextEngine.getFont(textField.__textFormat),null);
				style.setProperty("color","#" + StringTools.hex(textField.__textFormat.color,6),null);
				if(textEngine.autoSize != openfl_text_TextFieldAutoSize.NONE) style.setProperty("width","auto",null); else style.setProperty("width",textEngine.width + "px",null);
				style.setProperty("height",textEngine.height + "px",null);
				var _g = textField.__textFormat.align;
				switch(_g[1]) {
				case 3:
					style.setProperty("text-align","center",null);
					break;
				case 1:
					style.setProperty("text-align","right",null);
					break;
				default:
					style.setProperty("text-align","left",null);
				}
				textField.__dirty = false;
			} else if(textField.__div != null) {
				renderSession.element.removeChild(textField.__div);
				textField.__div = null;
			}
		}
		if(textField.__div != null) openfl__$internal_renderer_dom_DOMRenderer.applyStyle(textField,renderSession,true,true,false);
	} else if(textField.__div != null) {
		renderSession.element.removeChild(textField.__div);
		textField.__div = null;
		textField.__style = null;
	}
};
var openfl__$internal_renderer_opengl_GLBitmap = function() { };
$hxClasses["openfl._internal.renderer.opengl.GLBitmap"] = openfl__$internal_renderer_opengl_GLBitmap;
openfl__$internal_renderer_opengl_GLBitmap.__name__ = ["openfl","_internal","renderer","opengl","GLBitmap"];
openfl__$internal_renderer_opengl_GLBitmap.render = function(bitmap,renderSession) {
	if(!bitmap.__renderable || bitmap.__worldAlpha <= 0 || bitmap.bitmapData == null || !bitmap.bitmapData.__isValid) return;
	renderSession.spriteBatch.renderBitmapData(bitmap.bitmapData,bitmap.smoothing,bitmap.__renderTransform,bitmap.__worldColorTransform,bitmap.__worldAlpha,bitmap.__blendMode,bitmap.__shader,bitmap.pixelSnapping);
};
openfl__$internal_renderer_opengl_GLBitmap.pushFramebuffer = function(renderSession,texture,viewPort,smoothing,transparent,clearBuffer,powerOfTwo) {
	if(powerOfTwo == null) powerOfTwo = true;
	if(clearBuffer == null) clearBuffer = false;
	if(transparent == null) transparent = true;
	var gl = renderSession.gl;
	if(gl == null) return null;
	var renderer = renderSession.renderer;
	var spritebatch = renderSession.spriteBatch;
	var x = viewPort.x | 0;
	var y = viewPort.y | 0;
	var width = viewPort.width | 0;
	var height = viewPort.height | 0;
	spritebatch.finish();
	if(openfl__$internal_renderer_opengl_GLBitmap.fbData.length <= 0) openfl__$internal_renderer_opengl_GLBitmap.fbData.push({ texture : null, viewPort : null, transparent : renderer.transparent});
	if(texture == null) texture = new openfl__$internal_renderer_opengl_utils_PingPongTexture(gl,width,height,smoothing,powerOfTwo);
	texture.resize(width,height);
	renderer.transparent = transparent;
	renderSession.maskManager.saveState();
	gl.bindFramebuffer(gl.FRAMEBUFFER,(texture.__swapped?texture.__texture1:texture.__texture0).frameBuffer);
	renderer.setViewport(x,y,width,height);
	gl.colorMask(true,true,true,true);
	renderSession.blendModeManager.setBlendMode(openfl_display_BlendMode.NORMAL);
	if(clearBuffer) (texture.__swapped?texture.__texture1:texture.__texture0).clear(0,0,0,0,null);
	openfl__$internal_renderer_opengl_GLBitmap.fbData.push({ texture : texture, viewPort : viewPort, transparent : transparent});
	return texture;
};
openfl__$internal_renderer_opengl_GLBitmap.drawBitmapDrawable = function(renderSession,target,source,matrix,colorTransform,blendMode,clipRect) {
	var data = openfl__$internal_renderer_opengl_GLBitmap.fbData[openfl__$internal_renderer_opengl_GLBitmap.fbData.length - 1];
	if(data == null) throw new js__$Boot_HaxeError("No data to draw to");
	var gl = renderSession.gl;
	if(gl == null) return;
	var viewPort = data.viewPort;
	var renderer = renderSession.renderer;
	var spritebatch = renderSession.spriteBatch;
	var drawTarget = target != null;
	var tmpRect;
	if(clipRect == null) tmpRect = new openfl_geom_Rectangle(viewPort.x,viewPort.y,viewPort.width,viewPort.height); else tmpRect = clipRect.clone();
	spritebatch.begin(renderSession,drawTarget?null:tmpRect);
	if(drawTarget) {
		target.__worldTransform.identity();
		openfl__$internal_renderer_opengl_GLBitmap.flipMatrix(target.__worldTransform,viewPort.height);
		target.__renderGL(renderSession);
		spritebatch.stop();
		if(target.__texture != null) gl.deleteTexture(target.__texture);
		target.__texture = null;
		spritebatch.start(tmpRect);
	}
	var ctCache = source.__worldColorTransform;
	var blendModeCache = source.__blendMode;
	var cached = source.__cacheAsBitmap;
	var m;
	if(matrix != null) m = new openfl_geom_Matrix(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty); else m = new openfl_geom_Matrix();
	openfl__$internal_renderer_opengl_GLBitmap.flipMatrix(m,viewPort.height);
	if(colorTransform != null) source.__worldColorTransform = colorTransform; else source.__worldColorTransform = new openfl_geom_ColorTransform();
	source.__blendMode = blendMode;
	openfl_display_DisplayObject.__cacheAsBitmapMode = true;
	source.__updateTransforms(m);
	source.__updateChildren(false);
	source.__cacheAsBitmap = false;
	source.__renderGL(renderSession);
	source.__cacheAsBitmap = cached;
	source.__worldColorTransform = ctCache;
	source.__blendMode = blendModeCache;
	openfl_display_DisplayObject.__cacheAsBitmapMode = false;
	source.__updateTransforms();
	source.__updateChildren(false);
};
openfl__$internal_renderer_opengl_GLBitmap.popFramebuffer = function(renderSession,image) {
	var gl = renderSession.gl;
	if(gl == null) return;
	renderSession.spriteBatch.finish();
	openfl__$internal_renderer_opengl_GLBitmap.fbData.pop();
	var data = openfl__$internal_renderer_opengl_GLBitmap.fbData[openfl__$internal_renderer_opengl_GLBitmap.fbData.length - 1];
	if(data == null) throw new js__$Boot_HaxeError("oh");
	var x;
	var y;
	var width;
	var height;
	if(data.viewPort == null) {
		x = y = 0;
		width = renderSession.renderer.width;
		height = renderSession.renderer.height;
	} else {
		x = Math.floor(data.viewPort.x);
		y = Math.floor(data.viewPort.y);
		width = Math.ceil(data.viewPort.width);
		height = Math.ceil(data.viewPort.height);
	}
	if(image != null) {
		if(image.width != width || image.height != height) image.resize(width,height);
		gl.readPixels(x,y,width,height,gl.RGBA,gl.UNSIGNED_BYTE,image.buffer.data);
		image.dirty = false;
		image.set_premultiplied(true);
	}
	gl.bindFramebuffer(gl.FRAMEBUFFER,data.texture == null?renderSession.defaultFramebuffer:data.texture.get_framebuffer());
	renderSession.renderer.setViewport(x,y,width,height);
	renderSession.renderer.transparent = data.transparent;
	renderSession.maskManager.restoreState();
};
openfl__$internal_renderer_opengl_GLBitmap.flipMatrix = function(m,height) {
	var tx = m.tx;
	var ty = m.ty;
	m.tx = 0;
	m.ty = 0;
	m.scale(1,-1);
	m.translate(0,height);
	m.tx += tx;
	m.ty -= ty;
};
var openfl__$internal_renderer_opengl_GLRenderer = function(width,height,gl,transparent,antialias,preserveDrawingBuffer) {
	if(preserveDrawingBuffer == null) preserveDrawingBuffer = false;
	if(antialias == null) antialias = false;
	if(transparent == null) transparent = false;
	if(height == null) height = 600;
	if(width == null) width = 800;
	this.vpHeight = 0;
	this.vpWidth = 0;
	this.vpY = 0;
	this.vpX = 0;
	openfl__$internal_renderer_AbstractRenderer.call(this,width,height);
	this.transparent = transparent;
	this.preserveDrawingBuffer = preserveDrawingBuffer;
	this.width = width;
	this.height = height;
	this.viewport = new openfl_geom_Rectangle();
	this.options = { alpha : transparent, antialias : antialias, premultipliedAlpha : transparent, stencil : true, preserveDrawingBuffer : preserveDrawingBuffer};
	this._glContextId = openfl__$internal_renderer_opengl_GLRenderer.glContextId++;
	this.gl = gl;
	this.defaultFramebuffer = null;
	openfl__$internal_renderer_opengl_GLRenderer.glContexts[this._glContextId] = gl;
	this.projectionMatrix = new openfl_geom_Matrix();
	this.projection = new openfl_geom_Point();
	this.projection.x = this.width / 2;
	this.projection.y = -this.height / 2;
	this.offset = new openfl_geom_Point(0,0);
	this.resize(this.width,this.height);
	this.contextLost = false;
	this.shaderManager = new openfl__$internal_renderer_opengl_utils_ShaderManager(gl);
	this.spriteBatch = new openfl__$internal_renderer_opengl_utils_SpriteBatch(gl);
	this.filterManager = new openfl__$internal_renderer_opengl_utils_FilterManager(gl,this.transparent);
	this.stencilManager = new openfl__$internal_renderer_opengl_utils_StencilManager(gl);
	this.blendModeManager = new openfl__$internal_renderer_opengl_utils_BlendModeManager(gl);
	this.renderSession = new openfl__$internal_renderer_RenderSession();
	this.renderSession.gl = this.gl;
	this.renderSession.drawCount = 0;
	this.renderSession.shaderManager = this.shaderManager;
	this.renderSession.filterManager = this.filterManager;
	this.renderSession.blendModeManager = this.blendModeManager;
	this.renderSession.spriteBatch = this.spriteBatch;
	this.renderSession.stencilManager = this.stencilManager;
	this.renderSession.renderer = this;
	this.renderSession.defaultFramebuffer = this.defaultFramebuffer;
	this.renderSession.projectionMatrix = this.projectionMatrix;
	this.maskManager = new openfl__$internal_renderer_opengl_utils_GLMaskManager(this.renderSession);
	this.renderSession.maskManager = this.maskManager;
	this.shaderManager.setShader(this.shaderManager.defaultShader);
	gl.disable(gl.DEPTH_TEST);
	gl.disable(gl.CULL_FACE);
	gl.enable(gl.BLEND);
	gl.colorMask(true,true,true,this.transparent);
};
$hxClasses["openfl._internal.renderer.opengl.GLRenderer"] = openfl__$internal_renderer_opengl_GLRenderer;
openfl__$internal_renderer_opengl_GLRenderer.__name__ = ["openfl","_internal","renderer","opengl","GLRenderer"];
openfl__$internal_renderer_opengl_GLRenderer.renderBitmap = function(shape,renderSession,smooth) {
	if(smooth == null) smooth = true;
	if(!shape.__renderable || shape.__worldAlpha <= 0) return;
	if(shape.__graphics == null || shape.__graphics.__bitmap == null) return;
	var rect = openfl_geom_Rectangle.__temp;
	var matrix = openfl_geom_Matrix.__temp;
	rect.setEmpty();
	matrix.identity();
	shape.__getBounds(rect,matrix);
	var bitmap = shape.__graphics.__bitmap;
	matrix.translate(shape.__graphics.__bounds.x,shape.__graphics.__bounds.y);
	matrix.concat(shape.__renderTransform);
	renderSession.spriteBatch.renderBitmapData(bitmap,smooth,matrix,shape.__worldColorTransform,shape.__worldAlpha,shape.__blendMode,null,openfl_display_PixelSnapping.ALWAYS);
};
openfl__$internal_renderer_opengl_GLRenderer.__super__ = openfl__$internal_renderer_AbstractRenderer;
openfl__$internal_renderer_opengl_GLRenderer.prototype = $extend(openfl__$internal_renderer_AbstractRenderer.prototype,{
	destroy: function() {
		openfl__$internal_renderer_opengl_GLRenderer.glContexts[this._glContextId] = null;
		this.projection = null;
		this.offset = null;
		this.shaderManager.destroy();
		this.spriteBatch.destroy();
		this.maskManager.destroy();
		this.filterManager.destroy();
		this.shaderManager = null;
		this.spriteBatch = null;
		this.maskManager = null;
		this.filterManager = null;
		this.gl = null;
		this.renderSession = null;
	}
	,setViewport: function(x,y,width,height) {
		if(!(this.vpX == x && this.vpY == y && this.vpWidth == width && this.vpHeight == height)) {
			this.vpX = x;
			this.vpY = y;
			this.vpWidth = width;
			this.vpHeight = height;
			this.gl.viewport(x,y,width,height);
			this.setOrtho(x,y,width,height);
			this.viewport.setTo(x,y,width,height);
		}
	}
	,setOrtho: function(x,y,width,height) {
		var o = this.projectionMatrix;
		o.identity();
		o.a = 1 / width * 2;
		o.d = -1 / height * 2;
		o.tx = -1 - x * o.a;
		o.ty = 1 - y * o.d;
	}
	,handleContextLost: function(event) {
		event.preventDefault();
		this.contextLost = true;
	}
	,handleContextRestored: function() {
		var gl = this.gl;
		openfl__$internal_renderer_opengl_GLRenderer.glContextId++;
		this.shaderManager.setContext(gl);
		this.spriteBatch.setContext(gl);
		this.maskManager.setContext(gl);
		this.filterManager.setContext(gl);
		this.renderSession.gl = gl;
		this.defaultFramebuffer = null;
		gl.disable(gl.DEPTH_TEST);
		gl.disable(gl.CULL_FACE);
		gl.enable(gl.BLEND);
		gl.colorMask(true,true,true,this.transparent);
		this.setViewport(0,0,this.width,this.height);
		this.contextLost = false;
	}
	,render: function(stage) {
		if(this.contextLost) return;
		var gl = this.gl;
		this.setViewport(0,0,this.width,this.height);
		gl.bindFramebuffer(gl.FRAMEBUFFER,this.defaultFramebuffer);
		if(this.transparent) gl.clearColor(0,0,0,0); else gl.clearColor(stage.__colorSplit[0],stage.__colorSplit[1],stage.__colorSplit[2],1);
		gl.clear(gl.COLOR_BUFFER_BIT);
		this.renderDisplayObject(stage,this.projection);
	}
	,renderDisplayObject: function(displayObject,projection,buffer) {
		this.renderSession.blendModeManager.setBlendMode(openfl_display_BlendMode.NORMAL);
		this.renderSession.drawCount = 0;
		this.renderSession.currentBlendMode = null;
		this.spriteBatch.begin(this.renderSession);
		this.filterManager.begin(this.renderSession,buffer);
		displayObject.__renderGL(this.renderSession);
		this.spriteBatch.finish();
	}
	,resize: function(width,height) {
		this.width = width;
		this.height = height;
		openfl__$internal_renderer_AbstractRenderer.prototype.resize.call(this,width,height);
		this.setViewport(0,0,width,height);
		this.projection.x = width / 2;
		this.projection.y = -height / 2;
	}
	,__class__: openfl__$internal_renderer_opengl_GLRenderer
});
var openfl__$internal_renderer_opengl_shaders2_Shader = function(gl) {
	this.wrapT = 33071;
	this.wrapS = 33071;
	this.compiled = false;
	this.uniforms = new haxe_ds_StringMap();
	this.attributes = new haxe_ds_StringMap();
	this.ID = openfl__$internal_renderer_opengl_shaders2_Shader.UID++;
	this.gl = gl;
	this.program = null;
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.Shader"] = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_Shader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","Shader"];
openfl__$internal_renderer_opengl_shaders2_Shader.compileProgram = function(gl,vertexSrc,fragmentSrc) {
	var cache = openfl__$internal_renderer_opengl_utils_ShaderManager.compiledShadersCache;
	var key = haxe_crypto_Md5.encode(vertexSrc + fragmentSrc);
	if(__map_reserved[key] != null?cache.existsReserved(key):cache.h.hasOwnProperty(key)) return __map_reserved[key] != null?cache.getReserved(key):cache.h[key];
	var vertexShader = openfl__$internal_renderer_opengl_shaders2_Shader.compileShader(gl,vertexSrc,gl.VERTEX_SHADER);
	var fragmentShader = openfl__$internal_renderer_opengl_shaders2_Shader.compileShader(gl,fragmentSrc,gl.FRAGMENT_SHADER);
	var program = gl.createProgram();
	if(vertexShader != null && fragmentShader != null) {
		gl.attachShader(program,vertexShader);
		gl.attachShader(program,fragmentShader);
		gl.linkProgram(program);
		gl.deleteShader(vertexShader);
		gl.deleteShader(fragmentShader);
		if(gl.getProgramParameter(program,gl.LINK_STATUS) == 0) return null;
	}
	if(__map_reserved[key] != null) cache.setReserved(key,program); else cache.h[key] = program;
	return program;
};
openfl__$internal_renderer_opengl_shaders2_Shader.compileShader = function(gl,shaderSrc,type) {
	var src = shaderSrc;
	var shader = gl.createShader(type);
	gl.shaderSource(shader,src);
	gl.compileShader(shader);
	if(gl.getShaderParameter(shader,gl.COMPILE_STATUS) == 0) return null;
	return shader;
};
openfl__$internal_renderer_opengl_shaders2_Shader.prototype = {
	init: function(force) {
		if(force == null) force = false;
		if(this.compiled && !force) return;
		if(this.vertexSrc != null) this.vertexString = this.vertexSrc.join("\n");
		if(this.fragmentSrc != null) this.fragmentString = this.fragmentSrc.join("\n");
		if(this.vertexString == null || this.fragmentString == null) throw new js__$Boot_HaxeError("No vertex or fragment source provided");
		this.program = openfl__$internal_renderer_opengl_shaders2_Shader.compileProgram(this.gl,this.vertexString,this.fragmentString);
		if(this.program != null) this.compiled = true;
	}
	,destroy: function() {
		if(this.program != null) this.gl.deleteProgram(this.program);
		this.compiled = false;
		this.attributes = null;
	}
	,applyData: function(shaderData,renderSession) {
		if(shaderData == null) return;
		var param;
		var u;
		var v;
		var bd;
		var $it0 = shaderData.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			u = this.getUniformLocation(key);
			param = __map_reserved[key] != null?shaderData.getReserved(key):shaderData.h[key];
			if(param == null) continue;
			v = param.value;
			bd = param.bitmap;
			if(v == null && bd == null) continue;
			var _g = param.internalType;
			switch(_g) {
			case 1:
				var _g1 = param.size;
				switch(_g1) {
				case 1:
					this.gl.uniform1i(u,v[0] | 0);
					break;
				case 2:
					this.gl.uniform2i(u,v[0] | 0,v[1] | 0);
					break;
				case 3:
					this.gl.uniform3i(u,v[0] | 0,v[1] | 0,v[2] | 0);
					break;
				case 4:
					this.gl.uniform4i(u,v[0] | 0,v[1] | 0,v[2] | 0,v[3] | 0);
					break;
				}
				break;
			case 2:
				var _g11 = param.size;
				switch(_g11) {
				case 1:
					this.gl.uniform1f(u,v[0]);
					break;
				case 2:
					this.gl.uniform2f(u,v[0],v[1]);
					break;
				case 3:
					this.gl.uniform3f(u,v[0],v[1],v[2]);
					break;
				case 4:
					this.gl.uniform4f(u,v[0],v[1],v[2],v[3]);
					break;
				}
				break;
			case 3:
				var _g12 = param.size;
				switch(_g12) {
				case 2:
					this.gl.uniformMatrix2fv(u,param.transpose,(function($this) {
						var $r;
						var array = param.value;
						var this1;
						if(array != null) this1 = new Float32Array(array); else this1 = null;
						$r = this1;
						return $r;
					}(this)));
					break;
				case 3:
					this.gl.uniformMatrix3fv(u,param.transpose,(function($this) {
						var $r;
						var array1 = param.value;
						var this2;
						if(array1 != null) this2 = new Float32Array(array1); else this2 = null;
						$r = this2;
						return $r;
					}(this)));
					break;
				case 4:
					this.gl.uniformMatrix4fv(u,param.transpose,(function($this) {
						var $r;
						var array2 = param.value;
						var this3;
						if(array2 != null) this3 = new Float32Array(array2); else this3 = null;
						$r = this3;
						return $r;
					}(this)));
					break;
				}
				break;
			case 4:
				if(bd == null || !bd.__isValid) continue;
				this.gl.activeTexture(this.gl.TEXTURE0 + renderSession.activeTextures);
				this.gl.bindTexture(this.gl.TEXTURE_2D,bd.getTexture(this.gl));
				this.gl.uniform1i(u,renderSession.activeTextures);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,param.smooth?this.gl.LINEAR:this.gl.NEAREST);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,param.smooth?this.gl.LINEAR:this.gl.NEAREST);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,param.repeatX);
				this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,param.repeatY);
				renderSession.activeTextures++;
				break;
			default:
			}
		}
	}
	,getAttribLocation: function(attribute) {
		if(this.program == null) throw new js__$Boot_HaxeError("Shader isn't initialized");
		if(this.attributes.exists(attribute)) return this.attributes.get(attribute); else {
			var location = this.gl.getAttribLocation(this.program,attribute);
			this.attributes.set(attribute,location);
			return location;
		}
	}
	,getUniformLocation: function(uniform) {
		if(this.program == null) throw new js__$Boot_HaxeError("Shader isn't initialized");
		if(this.uniforms.exists(uniform)) return this.uniforms.get(uniform); else {
			var location = this.gl.getUniformLocation(this.program,uniform);
			this.uniforms.set(uniform,location);
			return location;
		}
	}
	,enableVertexAttribute: function(attribute,stride,offset) {
		var location = this.getAttribLocation(attribute.name);
		this.gl.enableVertexAttribArray(location);
		this.gl.vertexAttribPointer(location,attribute.components,attribute.type,attribute.normalized,stride,offset * 4);
	}
	,disableVertexAttribute: function(attribute,setDefault) {
		if(setDefault == null) setDefault = true;
		var location = this.getAttribLocation(attribute.name);
		this.gl.disableVertexAttribArray(location);
		if(setDefault) {
			var _g = attribute.components;
			switch(_g) {
			case 1:
				this.gl.vertexAttrib1fv(location,attribute.defaultValue.subarray(0,1));
				break;
			case 2:
				this.gl.vertexAttrib2fv(location,attribute.defaultValue.subarray(0,2));
				break;
			case 3:
				this.gl.vertexAttrib3fv(location,attribute.defaultValue.subarray(0,3));
				break;
			default:
				this.gl.vertexAttrib4fv(location,attribute.defaultValue.subarray(0,4));
			}
		}
	}
	,bindVertexArray: function(va) {
		var offset = 0;
		var stride = va.get_stride();
		var _g = 0;
		var _g1 = va.attributes;
		while(_g < _g1.length) {
			var attribute = _g1[_g];
			++_g;
			if(attribute.enabled) {
				this.enableVertexAttribute(attribute,stride,offset);
				offset += Math.floor(attribute.components * attribute.getElementsBytes() / 4);
			} else this.disableVertexAttribute(attribute,true);
		}
	}
	,unbindVertexArray: function(va) {
		var _g = 0;
		var _g1 = va.attributes;
		while(_g < _g1.length) {
			var attribute = _g1[_g];
			++_g;
			this.disableVertexAttribute(attribute,false);
		}
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_Shader
};
var openfl__$internal_renderer_opengl_shaders2_DefaultShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = openfl__$internal_renderer_opengl_shaders2_DefaultShader.VERTEX_SRC;
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","uniform sampler2D " + "openfl_uSampler0" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","uniform bool " + "openfl_uUseColorTransform" + ";","varying vec2 " + "openfl_vTexCoord" + ";","varying vec4 " + "openfl_vColor" + ";","vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {","\tif(!" + "openfl_uUseColorTransform" + ") {","\t\treturn color * tint;","\t}","\tvec4 unmultiply;","\tif (color.a == 0.0) {","\t\tunmultiply = vec4(0.0, 0.0, 0.0, 0.0);","\t} else {","   \tunmultiply = vec4(color.rgb / color.a, color.a);","\t}","   vec4 result = unmultiply * tint * multiplier;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   vec4 tc = texture2D(" + "openfl_uSampler0" + ", " + "openfl_vTexCoord" + ");","   gl_FragColor = colorTransform(tc, " + "openfl_vColor" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.DefaultShader"] = openfl__$internal_renderer_opengl_shaders2_DefaultShader;
openfl__$internal_renderer_opengl_shaders2_DefaultShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","DefaultShader"];
openfl__$internal_renderer_opengl_shaders2_DefaultShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_DefaultShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getAttribLocation("openfl_aTexCoord0");
		this.getAttribLocation("openfl_aColor");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uSampler0");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
		this.getUniformLocation("openfl_uUseColorTransform");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_DefaultShader
});
var openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","attribute vec2 " + "openfl_aTexCoord0" + ";","attribute vec4 " + "openfl_aColor" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","varying vec2 vTexCoord;","varying vec4 vColor;","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vTexCoord = " + "openfl_aTexCoord0" + ";","   vColor = " + "openfl_aColor" + ".bgra;","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","uniform sampler2D " + "openfl_uSampler0" + ";","uniform vec3 " + "openfl_uColor" + ";","uniform bool " + "openfl_uUseTexture" + ";","uniform float " + "openfl_uAlpha" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","varying vec2 vTexCoord;","varying vec4 vColor;","vec4 tmp;","vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {","   vec4 unmultiply = vec4(color.rgb / color.a, color.a);","   vec4 result = unmultiply * tint * multiplier;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   if(" + "openfl_uUseTexture" + ") {","       tmp = texture2D(" + "openfl_uSampler0" + ", vTexCoord);","   } else {","       tmp = vec4(" + "openfl_uColor" + ", 1.);","   }","   gl_FragColor = colorTransform(tmp, vColor, " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.DrawTrianglesShader"] = openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader;
openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","DrawTrianglesShader"];
openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getAttribLocation("openfl_aTexCoord0");
		this.getAttribLocation("openfl_aColor");
		this.getUniformLocation("openfl_uSampler0");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uColor");
		this.getUniformLocation("openfl_uAlpha");
		this.getUniformLocation("openfl_uUseTexture");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader
});
var openfl__$internal_renderer_opengl_shaders2_FillShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","uniform mat3 " + "openfl_uTranslationMatrix" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform vec4 " + "openfl_uColor" + ";","uniform float " + "openfl_uAlpha" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","varying vec4 vColor;","vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {","   vec4 result = color * multiplier;","   result.a *= alpha;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * " + "openfl_uTranslationMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vColor = colorTransform(" + "openfl_uColor" + ", " + "openfl_uAlpha" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","varying vec4 vColor;","void main(void) {","   gl_FragColor = vColor;","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.FillShader"] = openfl__$internal_renderer_opengl_shaders2_FillShader;
openfl__$internal_renderer_opengl_shaders2_FillShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","FillShader"];
openfl__$internal_renderer_opengl_shaders2_FillShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_FillShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getUniformLocation("openfl_uTranslationMatrix");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uColor");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_FillShader
});
var openfl__$internal_renderer_opengl_shaders2_PatternFillShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","uniform mat3 " + "openfl_uTranslationMatrix" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform mat3 " + "openfl_uPatternMatrix" + ";","varying vec2 vPosition;","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * " + "openfl_uTranslationMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vPosition = (" + "openfl_uPatternMatrix" + " * vec3(" + "openfl_aPosition" + ", 1)).xy;","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","uniform float " + "openfl_uAlpha" + ";","uniform vec2 " + "openfl_uPatternTL" + ";","uniform vec2 " + "openfl_uPatternBR" + ";","uniform sampler2D " + "openfl_uSampler0" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","varying vec2 vPosition;","vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {","   vec4 unmultiply = vec4(color.rgb / color.a, color.a);","   vec4 result = unmultiply * multiplier;","   result.a *= alpha;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   vec2 pos = mix(" + "openfl_uPatternTL" + ", " + "openfl_uPatternBR" + ", vPosition);","   vec4 tcol = texture2D(" + "openfl_uSampler0" + ", pos);","   gl_FragColor = colorTransform(tcol, " + "openfl_uAlpha" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.PatternFillShader"] = openfl__$internal_renderer_opengl_shaders2_PatternFillShader;
openfl__$internal_renderer_opengl_shaders2_PatternFillShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","PatternFillShader"];
openfl__$internal_renderer_opengl_shaders2_PatternFillShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_PatternFillShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getUniformLocation("openfl_uTranslationMatrix");
		this.getUniformLocation("openfl_uPatternMatrix");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uSampler0");
		this.getUniformLocation("openfl_uPatternTL");
		this.getUniformLocation("openfl_uPatternBR");
		this.getUniformLocation("openfl_uAlpha");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_PatternFillShader
});
var openfl__$internal_renderer_opengl_shaders2_PrimitiveShader = function(gl) {
	openfl__$internal_renderer_opengl_shaders2_Shader.call(this,gl);
	this.vertexSrc = ["attribute vec2 " + "openfl_aPosition" + ";","attribute vec4 " + "openfl_aColor" + ";","uniform mat3 " + "openfl_uTranslationMatrix" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform vec4 " + "openfl_uColorMultiplier" + ";","uniform vec4 " + "openfl_uColorOffset" + ";","uniform float " + "openfl_uAlpha" + ";","varying vec4 vColor;","vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {","   vec4 result = color * multiplier;","   result.a *= alpha;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * " + "openfl_uTranslationMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   vColor = colorTransform(" + "openfl_aColor" + ", " + "openfl_uAlpha" + ", " + "openfl_uColorMultiplier" + ", " + "openfl_uColorOffset" + ");","}"];
	this.fragmentSrc = ["#ifdef GL_ES","precision lowp float;","#endif","varying vec4 vColor;","void main(void) {","   gl_FragColor = vColor;","}"];
	this.init();
};
$hxClasses["openfl._internal.renderer.opengl.shaders2.PrimitiveShader"] = openfl__$internal_renderer_opengl_shaders2_PrimitiveShader;
openfl__$internal_renderer_opengl_shaders2_PrimitiveShader.__name__ = ["openfl","_internal","renderer","opengl","shaders2","PrimitiveShader"];
openfl__$internal_renderer_opengl_shaders2_PrimitiveShader.__super__ = openfl__$internal_renderer_opengl_shaders2_Shader;
openfl__$internal_renderer_opengl_shaders2_PrimitiveShader.prototype = $extend(openfl__$internal_renderer_opengl_shaders2_Shader.prototype,{
	init: function(force) {
		if(force == null) force = false;
		openfl__$internal_renderer_opengl_shaders2_Shader.prototype.init.call(this,force);
		this.getAttribLocation("openfl_aPosition");
		this.getAttribLocation("openfl_aColor");
		this.getUniformLocation("openfl_uTranslationMatrix");
		this.getUniformLocation("openfl_uProjectionMatrix");
		this.getUniformLocation("openfl_uAlpha");
		this.getUniformLocation("openfl_uColorMultiplier");
		this.getUniformLocation("openfl_uColorOffset");
	}
	,__class__: openfl__$internal_renderer_opengl_shaders2_PrimitiveShader
});
var openfl__$internal_renderer_opengl_utils_BlendModeManager = function(gl) {
	this.gl = gl;
	this.currentBlendMode = null;
};
$hxClasses["openfl._internal.renderer.opengl.utils.BlendModeManager"] = openfl__$internal_renderer_opengl_utils_BlendModeManager;
openfl__$internal_renderer_opengl_utils_BlendModeManager.__name__ = ["openfl","_internal","renderer","opengl","utils","BlendModeManager"];
openfl__$internal_renderer_opengl_utils_BlendModeManager.prototype = {
	destroy: function() {
		this.gl = null;
	}
	,setBlendMode: function(blendMode,force) {
		if(force == null) force = false;
		if(blendMode == null) {
			blendMode = openfl_display_BlendMode.NORMAL;
			force = true;
		}
		if(!force && this.currentBlendMode == blendMode) return false;
		this.currentBlendMode = blendMode;
		switch(blendMode[1]) {
		case 0:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(1,1);
			break;
		case 9:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(774,771);
			break;
		case 12:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(1,769);
			break;
		case 14:
			this.gl.blendEquation(32779);
			this.gl.blendFunc(1,1);
			break;
		default:
			this.gl.blendEquation(32774);
			this.gl.blendFunc(1,771);
		}
		return true;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_BlendModeManager
};
var openfl__$internal_renderer_opengl_utils_DrawPath = function(makeArray) {
	if(makeArray == null) makeArray = true;
	this.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
	this.points = null;
	this.winding = 0;
	this.isRemovable = true;
	this.fillIndex = 0;
	this.line = new openfl__$internal_renderer_opengl_utils_LineStyle();
	this.fill = openfl__$internal_renderer_opengl_utils_FillType.None;
	if(makeArray) this.points = [];
};
$hxClasses["openfl._internal.renderer.opengl.utils.DrawPath"] = openfl__$internal_renderer_opengl_utils_DrawPath;
openfl__$internal_renderer_opengl_utils_DrawPath.__name__ = ["openfl","_internal","renderer","opengl","utils","DrawPath"];
openfl__$internal_renderer_opengl_utils_DrawPath.getStack = function(graphics,gl) {
	return openfl__$internal_renderer_opengl_utils_PathBuiler.build(graphics,gl);
};
openfl__$internal_renderer_opengl_utils_DrawPath.prototype = {
	update: function(line,fill,fillIndex,winding) {
		this.updateLine(line);
		this.fill = fill;
		this.fillIndex = fillIndex;
		this.winding = winding;
	}
	,updateLine: function(line) {
		this.line.width = line.width;
		this.line.color = line.color;
		if(line.alpha == null) this.line.alpha = 1; else this.line.alpha = line.alpha;
		if(line.scaleMode == null) this.line.scaleMode = openfl_display_LineScaleMode.NORMAL; else this.line.scaleMode = line.scaleMode;
		if(line.caps == null) this.line.caps = openfl_display_CapsStyle.ROUND; else this.line.caps = line.caps;
		if(line.joints == null) this.line.joints = openfl_display_JointStyle.ROUND; else this.line.joints = line.joints;
		this.line.miterLimit = line.miterLimit;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_DrawPath
};
var openfl__$internal_renderer_opengl_utils_PathBuiler = function() { };
$hxClasses["openfl._internal.renderer.opengl.utils.PathBuiler"] = openfl__$internal_renderer_opengl_utils_PathBuiler;
openfl__$internal_renderer_opengl_utils_PathBuiler.__name__ = ["openfl","_internal","renderer","opengl","utils","PathBuiler"];
openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.__line = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = null;
openfl__$internal_renderer_opengl_utils_PathBuiler.closePath = function() {
	var l;
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null) l = 0; else l = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length;
	if(l <= 0) return;
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type == openfl__$internal_renderer_opengl_utils_GraphicType.Polygon && openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.fill != openfl__$internal_renderer_opengl_utils_FillType.None) {
		var sx = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[0];
		var sy = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[1];
		var ex = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[l - 2];
		var ey = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points[l - 1];
		if(!(sx == ex && sy == ey)) openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(sx,sy);
	}
};
openfl__$internal_renderer_opengl_utils_PathBuiler.endFill = function() {
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex++;
};
openfl__$internal_renderer_opengl_utils_PathBuiler.moveTo = function(x,y) {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(x);
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(y);
	openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
};
openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo = function(x,y) {
	var points = openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points;
	var push_point = true;
	if(points.length > 1) {
		var lastX = points[points.length - 2];
		var lastY = points[points.length - 1];
		if(lastX == x && lastY == y) push_point = false;
	}
	if(push_point == true) {
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(x);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(y);
	}
};
openfl__$internal_renderer_opengl_utils_PathBuiler.curveTo = function(cx,cy,x,y) {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
		if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
	}
	openfl__$internal_renderer_GraphicsPaths.curveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,x,y);
};
openfl__$internal_renderer_opengl_utils_PathBuiler.cubicCurveTo = function(cx,cy,cx2,cy2,x,y) {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
		if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
		openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
	}
	openfl__$internal_renderer_GraphicsPaths.cubicCurveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,cx2,cy2,x,y);
};
openfl__$internal_renderer_opengl_utils_PathBuiler.graphicDataPop = function() {
	if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
};
openfl__$internal_renderer_opengl_utils_PathBuiler.build = function(graphics,gl) {
	var glStack = null;
	var bounds = graphics.__bounds;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths = [];
	openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__line = new openfl__$internal_renderer_opengl_utils_LineStyle();
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
	openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex = 0;
	glStack = graphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId];
	if(glStack == null) glStack = graphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId] = new openfl__$internal_renderer_opengl_utils_GLStack(gl);
	if(!graphics.__visible || graphics.__commands.get_length() == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {
	} else {
		var data = new openfl__$internal_renderer_DrawCommandReader(graphics.__commands);
		var _g = 0;
		var _g1 = graphics.__commands.types;
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			switch(type[1]) {
			case 0:
				var c;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_BITMAP_FILL;
				c = data;
				openfl__$internal_renderer_opengl_utils_PathBuiler.endFill();
				if(c.buffer.o[c.oPos] != null) openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.Texture(c.buffer.o[c.oPos],c.buffer.o[c.oPos + 1],c.buffer.b[c.bPos],c.buffer.b[c.bPos + 1]); else openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
					if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [];
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
					openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				}
				break;
			case 1:
				var c1;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.BEGIN_FILL;
				c1 = data;
				openfl__$internal_renderer_opengl_utils_PathBuiler.endFill();
				if(c1.buffer.f[c1.fPos] > 0) openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.Color(c1.buffer.i[c1.iPos] & 16777215,c1.buffer.f[c1.fPos]); else openfl__$internal_renderer_opengl_utils_PathBuiler.__fill = openfl__$internal_renderer_opengl_utils_FillType.None;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
					if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [];
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
					openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				}
				break;
			case 3:
				var c2;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CUBIC_CURVE_TO;
				c2 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
					if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				}
				openfl__$internal_renderer_GraphicsPaths.cubicCurveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,c2.buffer.f[c2.fPos],c2.buffer.f[c2.fPos + 1],c2.buffer.f[c2.fPos + 2],c2.buffer.f[c2.fPos + 3],c2.buffer.f[c2.fPos + 4],c2.buffer.f[c2.fPos + 5]);
				break;
			case 4:
				var c3;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.CURVE_TO;
				c3 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
					if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
					openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				}
				openfl__$internal_renderer_GraphicsPaths.curveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,c3.buffer.f[c3.fPos],c3.buffer.f[c3.fPos + 1],c3.buffer.f[c3.fPos + 2],c3.buffer.f[c3.fPos + 3]);
				break;
			case 5:
				var c4;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_CIRCLE;
				c4 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Circle;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [c4.buffer.f[c4.fPos],c4.buffer.f[c4.fPos + 1],c4.buffer.f[c4.fPos + 2]];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 6:
				var c5;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ELLIPSE;
				c5 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [c5.buffer.f[c5.fPos],c5.buffer.f[c5.fPos + 1],c5.buffer.f[c5.fPos + 2],c5.buffer.f[c5.fPos + 3]];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 8:
				var c6;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_RECT;
				c6 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Rectangle(false);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [c6.buffer.f[c6.fPos],c6.buffer.f[c6.fPos + 1],c6.buffer.f[c6.fPos + 2],c6.buffer.f[c6.fPos + 3]];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 9:
				var c7;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_ROUND_RECT;
				c7 = data;
				var x = c7.buffer.f[c7.fPos];
				var y = c7.buffer.f[c7.fPos + 1];
				var width = c7.buffer.f[c7.fPos + 2];
				var height = c7.buffer.f[c7.fPos + 3];
				var rx = c7.buffer.f[c7.fPos + 4];
				var ry = c7.buffer.f[c7.fPos + 5];
				if(ry == -1) ry = rx;
				rx *= 0.5;
				ry *= 0.5;
				if(rx > width / 2) rx = width / 2;
				if(ry > height / 2) ry = height / 2;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Rectangle(true);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [x,y,width,height,rx,ry];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 12:
				var c8;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.END_FILL;
				c8 = data;
				openfl__$internal_renderer_opengl_utils_PathBuiler.endFill();
				break;
			case 15:
				var c9;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_STYLE;
				c9 = data;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line = new openfl__$internal_renderer_opengl_utils_LineStyle();
				if(c9.buffer.o[c9.oPos] == null || isNaN(c9.buffer.o[c9.oPos]) || c9.buffer.o[c9.oPos] < 0) openfl__$internal_renderer_opengl_utils_PathBuiler.__line.width = 0; else if(c9.buffer.o[c9.oPos] == 0) openfl__$internal_renderer_opengl_utils_PathBuiler.__line.width = 1; else openfl__$internal_renderer_opengl_utils_PathBuiler.__line.width = c9.buffer.o[c9.oPos];
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				if(c9.buffer.o[c9.oPos + 1] == null) openfl__$internal_renderer_opengl_utils_PathBuiler.__line.color = 0; else openfl__$internal_renderer_opengl_utils_PathBuiler.__line.color = c9.buffer.o[c9.oPos + 1];
				if(c9.buffer.o[c9.oPos + 2] == null) openfl__$internal_renderer_opengl_utils_PathBuiler.__line.alpha = 1; else openfl__$internal_renderer_opengl_utils_PathBuiler.__line.alpha = c9.buffer.o[c9.oPos + 2];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.scaleMode = c9.buffer.o[c9.oPos + 4];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.caps = c9.buffer.o[c9.oPos + 5];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.joints = c9.buffer.o[c9.oPos + 6];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__line.miterLimit = c9.buffer.o[c9.oPos + 7];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points = [];
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 16:
				var c10;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.LINE_TO;
				c10 = data;
				openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(c10.buffer.f[c10.fPos],c10.buffer.f[c10.fPos + 1]);
				break;
			case 17:
				var c11;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.MOVE_TO;
				c11 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(c11.buffer.f[c11.fPos]);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(c11.buffer.f[c11.fPos + 1]);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 11:
				var c12;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TRIANGLES;
				c12 = data;
				var uvtData = c12.buffer.o[c12.oPos + 2];
				var vertices = c12.buffer.o[c12.oPos];
				var indices = c12.buffer.o[c12.oPos + 1];
				var culling = c12.buffer.o[c12.oPos + 3];
				var colors = c12.buffer.o[c12.oPos + 4];
				var blendMode = c12.buffer.i[c12.iPos];
				var isColor;
				{
					var _g2 = openfl__$internal_renderer_opengl_utils_PathBuiler.__fill;
					switch(_g2[1]) {
					case 1:
						isColor = true;
						break;
					default:
						isColor = false;
					}
				}
				if(isColor && uvtData != null) continue;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				if(uvtData == null) {
					var this1;
					this1 = new openfl_VectorData();
					var this2;
					this2 = new Array(0);
					this1.data = this2;
					this1.length = 0;
					this1.fixed = false;
					uvtData = this1;
					{
						var _g21 = openfl__$internal_renderer_opengl_utils_PathBuiler.__fill;
						switch(_g21[1]) {
						case 2:
							var b = _g21[2];
							var _g4 = 0;
							var _g3 = vertices.length / 2 | 0;
							while(_g4 < _g3) {
								var i = _g4++;
								if(!uvtData.fixed) {
									uvtData.length++;
									if(uvtData.data.length < uvtData.length) {
										var data1;
										var this3;
										this3 = new Array(uvtData.data.length + 10);
										data1 = this3;
										haxe_ds__$Vector_Vector_$Impl_$.blit(uvtData.data,0,data1,0,uvtData.data.length);
										uvtData.data = data1;
									}
									uvtData.data[uvtData.length - 1] = vertices.data[i * 2] / b.width;
								}
								uvtData.length;
								if(!uvtData.fixed) {
									uvtData.length++;
									if(uvtData.data.length < uvtData.length) {
										var data2;
										var this4;
										this4 = new Array(uvtData.data.length + 10);
										data2 = this4;
										haxe_ds__$Vector_Vector_$Impl_$.blit(uvtData.data,0,data2,0,uvtData.data.length);
										uvtData.data = data2;
									}
									uvtData.data[uvtData.length - 1] = vertices.data[i * 2 + 1] / b.height;
								}
								uvtData.length;
							}
							break;
						default:
						}
					}
				}
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.DrawTriangles(vertices,indices,uvtData,culling,colors,blendMode);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable = false;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 10:
				var c13;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_TILES;
				c13 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex++;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath(false);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.DrawTiles(c13.buffer.ts[c13.tsPos],c13.buffer.ff[c13.ffPos],c13.buffer.b[c13.bPos],c13.buffer.i[c13.iPos],c13.buffer.o[c13.oPos],c13.buffer.i[c13.iPos + 1]);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable = false;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			case 7:
				var c14;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.DRAW_PATH;
				c14 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				switch(c14.buffer.o[c14.oPos + 2]) {
				case openfl_display_GraphicsPathWinding.EVEN_ODD:
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
					break;
				case openfl_display_GraphicsPathWinding.NON_ZERO:
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 1;
					break;
				default:
					openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
				}
				var command;
				var cx;
				var cy;
				var cx2;
				var cy2;
				var ax;
				var ay;
				var idx = 0;
				var _g31 = 0;
				var _g22 = c14.buffer.o[c14.oPos].length;
				while(_g31 < _g22) {
					var i1 = _g31++;
					command = c14.buffer.o[c14.oPos].data[i1];
					switch(command) {
					case 1:
						ax = c14.buffer.o[c14.oPos + 1].data[idx];
						ay = c14.buffer.o[c14.oPos + 1].data[idx + 1];
						idx += 2;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ax);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ay);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						break;
					case 4:
						ax = c14.buffer.o[c14.oPos + 1].data[idx + 2];
						ay = c14.buffer.o[c14.oPos + 1].data[idx + 3];
						idx += 4;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ax);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(ay);
						openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						break;
					case 2:
						ax = c14.buffer.o[c14.oPos + 1].data[idx];
						ay = c14.buffer.o[c14.oPos + 1].data[idx + 1];
						idx += 2;
						openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(ax,ay);
						break;
					case 5:
						ax = c14.buffer.o[c14.oPos + 1].data[idx + 2];
						ay = c14.buffer.o[c14.oPos + 1].data[idx + 3];
						idx += 4;
						openfl__$internal_renderer_opengl_utils_PathBuiler.lineTo(ax,ay);
						break;
					case 3:
						cx = c14.buffer.o[c14.oPos + 1].data[idx];
						cy = c14.buffer.o[c14.oPos + 1].data[idx + 1];
						ax = c14.buffer.o[c14.oPos + 1].data[idx + 2];
						ay = c14.buffer.o[c14.oPos + 1].data[idx + 3];
						idx += 4;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
							if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						}
						openfl__$internal_renderer_GraphicsPaths.curveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,ax,ay);
						break;
					case 6:
						cx = c14.buffer.o[c14.oPos + 1].data[idx];
						cy = c14.buffer.o[c14.oPos + 1].data[idx + 1];
						cx2 = c14.buffer.o[c14.oPos + 1].data[idx + 2];
						cy2 = c14.buffer.o[c14.oPos + 1].data[idx + 3];
						ax = c14.buffer.o[c14.oPos + 1].data[idx + 4];
						ay = c14.buffer.o[c14.oPos + 1].data[idx + 5];
						idx += 6;
						if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0) {
							if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.push(0);
							openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
						}
						openfl__$internal_renderer_GraphicsPaths.cubicCurveTo(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points,cx,cy,cx2,cy2,ax,ay);
						break;
					default:
					}
				}
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
				break;
			case 18:
				var c15;
				data.advance();
				data.prev = openfl__$internal_renderer_DrawCommandType.OVERRIDE_MATRIX;
				c15 = data;
				if(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable && (openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points == null || openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.points.length == 0)) openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.pop(); else openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath = new openfl__$internal_renderer_opengl_utils_DrawPath();
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.update(openfl__$internal_renderer_opengl_utils_PathBuiler.__line,openfl__$internal_renderer_opengl_utils_PathBuiler.__fill,openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex,openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.type = openfl__$internal_renderer_opengl_utils_GraphicType.OverrideMatrix(c15.buffer.o[c15.oPos]);
				openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath.isRemovable = false;
				openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths.push(openfl__$internal_renderer_opengl_utils_PathBuiler.__currentPath);
				break;
			default:
				data.advance();
				data.prev = type;
			}
		}
		openfl__$internal_renderer_opengl_utils_PathBuiler.closePath();
		data.destroy();
	}
	graphics.__drawPaths = openfl__$internal_renderer_opengl_utils_PathBuiler.__drawPaths;
	return glStack;
};
var openfl__$internal_renderer_opengl_utils_LineStyle = function() {
	this.width = 0;
	this.color = 0;
	this.alpha = 1;
	this.scaleMode = openfl_display_LineScaleMode.NORMAL;
	this.caps = openfl_display_CapsStyle.ROUND;
	this.joints = openfl_display_JointStyle.ROUND;
	this.miterLimit = 3;
};
$hxClasses["openfl._internal.renderer.opengl.utils.LineStyle"] = openfl__$internal_renderer_opengl_utils_LineStyle;
openfl__$internal_renderer_opengl_utils_LineStyle.__name__ = ["openfl","_internal","renderer","opengl","utils","LineStyle"];
openfl__$internal_renderer_opengl_utils_LineStyle.prototype = {
	__class__: openfl__$internal_renderer_opengl_utils_LineStyle
};
var openfl__$internal_renderer_opengl_utils_FillType = $hxClasses["openfl._internal.renderer.opengl.utils.FillType"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","FillType"], __constructs__ : ["None","Color","Texture","Gradient"] };
openfl__$internal_renderer_opengl_utils_FillType.None = ["None",0];
openfl__$internal_renderer_opengl_utils_FillType.None.toString = $estr;
openfl__$internal_renderer_opengl_utils_FillType.None.__enum__ = openfl__$internal_renderer_opengl_utils_FillType;
openfl__$internal_renderer_opengl_utils_FillType.Color = function(color,alpha) { var $x = ["Color",1,color,alpha]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_FillType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_FillType.Texture = function(bitmap,matrix,repeat,smooth) { var $x = ["Texture",2,bitmap,matrix,repeat,smooth]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_FillType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_FillType.Gradient = ["Gradient",3];
openfl__$internal_renderer_opengl_utils_FillType.Gradient.toString = $estr;
openfl__$internal_renderer_opengl_utils_FillType.Gradient.__enum__ = openfl__$internal_renderer_opengl_utils_FillType;
openfl__$internal_renderer_opengl_utils_FillType.__empty_constructs__ = [openfl__$internal_renderer_opengl_utils_FillType.None,openfl__$internal_renderer_opengl_utils_FillType.Gradient];
var openfl__$internal_renderer_opengl_utils_FilterManager = function(gl,transparent) {
	this.transparent = transparent;
	this.filterStack = [];
	this.offsetX = 0;
	this.offsetY = 0;
	this.setContext(gl);
};
$hxClasses["openfl._internal.renderer.opengl.utils.FilterManager"] = openfl__$internal_renderer_opengl_utils_FilterManager;
openfl__$internal_renderer_opengl_utils_FilterManager.__name__ = ["openfl","_internal","renderer","opengl","utils","FilterManager"];
openfl__$internal_renderer_opengl_utils_FilterManager.prototype = {
	applyFilterPass: function(filter,filterArea,width,height) {
	}
	,begin: function(renderSession,buffer) {
		this.renderSession = renderSession;
		this.defaultShader = renderSession.shaderManager.defaultShader;
		this.width = 0;
		this.height = 0;
		this.buffer = buffer;
	}
	,destroy: function() {
		var gl = this.gl;
		this.filterStack = null;
		this.offsetX = 0;
		this.offsetY = 0;
		var _g = 0;
		var _g1 = this.texturePool;
		while(_g < _g1.length) {
			var texture = _g1[_g];
			++_g;
			texture.destroy();
		}
		this.texturePool = null;
		gl.deleteBuffer(this.vertexBuffer);
		gl.deleteBuffer(this.uvBuffer);
		gl.deleteBuffer(this.colorBuffer);
		gl.deleteBuffer(this.indexBuffer);
	}
	,initShaderBuffers: function() {
		var gl = this.gl;
		this.vertexBuffer = gl.createBuffer();
		this.uvBuffer = gl.createBuffer();
		this.colorBuffer = gl.createBuffer();
		this.indexBuffer = gl.createBuffer();
		var array = [0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0];
		var this1;
		if(array != null) this1 = new Float32Array(array); else this1 = null;
		this.vertexArray = this1;
		gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,this.vertexArray,gl.STATIC_DRAW);
		var array1 = [0.0,0.0,1.0,0.0,0.0,1.0,1.0,1.0];
		var this2;
		if(array1 != null) this2 = new Float32Array(array1); else this2 = null;
		this.uvArray = this2;
		gl.bindBuffer(gl.ARRAY_BUFFER,this.uvBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,this.uvArray,gl.STATIC_DRAW);
		var array2 = [1.0,16777215,1.0,16777215,1.0,16777215,1.0,16777215];
		var this3;
		if(array2 != null) this3 = new Float32Array(array2); else this3 = null;
		this.colorArray = this3;
		gl.bindBuffer(gl.ARRAY_BUFFER,this.colorBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,this.colorArray,gl.STATIC_DRAW);
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,(function($this) {
			var $r;
			var array3 = [0,1,2,1,3,2];
			var this4;
			if(array3 != null) this4 = new Uint16Array(array3); else this4 = null;
			$r = this4;
			return $r;
		}(this)),gl.STATIC_DRAW);
	}
	,popFilter: function() {
	}
	,pushFilter: function(filterBlock) {
	}
	,setContext: function(gl) {
		this.gl = gl;
		this.texturePool = [];
		this.initShaderBuffers();
	}
	,__class__: openfl__$internal_renderer_opengl_utils_FilterManager
};
var openfl__$internal_renderer_opengl_utils_GLMaskManager = function(renderSession) {
	openfl__$internal_renderer_AbstractMaskManager.call(this,renderSession);
	this.setContext(renderSession.gl);
	this.clips = [];
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLMaskManager"] = openfl__$internal_renderer_opengl_utils_GLMaskManager;
openfl__$internal_renderer_opengl_utils_GLMaskManager.__name__ = ["openfl","_internal","renderer","opengl","utils","GLMaskManager"];
openfl__$internal_renderer_opengl_utils_GLMaskManager.__super__ = openfl__$internal_renderer_AbstractMaskManager;
openfl__$internal_renderer_opengl_utils_GLMaskManager.prototype = $extend(openfl__$internal_renderer_AbstractMaskManager.prototype,{
	destroy: function() {
		this.gl = null;
	}
	,pushRect: function(rect,transform) {
		if(rect == null) return;
		var m = new openfl_geom_Matrix(transform.a,transform.b,transform.c,transform.d,transform.tx,transform.ty);
		openfl__$internal_renderer_opengl_GLBitmap.flipMatrix(m,this.renderSession.renderer.viewport.height);
		var clip = rect.clone();
		clip.__transform(clip,m);
		if(this.currentClip != null) clip = this.currentClip.intersection(clip);
		var restartBatch = this.currentClip == null || clip.isEmpty() || this.currentClip.containsRect(clip);
		this.clips.push(clip);
		this.currentClip = clip;
		if(restartBatch) {
			this.renderSession.spriteBatch.stop();
			this.renderSession.spriteBatch.start(this.currentClip);
		}
	}
	,pushMask: function(mask) {
		this.renderSession.spriteBatch.stop();
		this.renderSession.stencilManager.pushMask(mask,this.renderSession);
		this.renderSession.spriteBatch.start(this.currentClip);
	}
	,popMask: function() {
		this.renderSession.spriteBatch.stop();
		this.renderSession.stencilManager.popMask(null,this.renderSession);
		this.renderSession.spriteBatch.start(this.currentClip);
	}
	,popRect: function() {
		this.renderSession.spriteBatch.stop();
		this.clips.pop();
		this.currentClip = this.clips[this.clips.length - 1];
		this.renderSession.spriteBatch.start(this.currentClip);
	}
	,saveState: function() {
		this.savedClip = this.currentClip;
		this.currentClip = null;
	}
	,restoreState: function() {
		this.currentClip = this.savedClip;
		this.savedClip = null;
	}
	,setContext: function(gl) {
		if(this.renderSession != null) this.renderSession.gl = gl;
		this.gl = gl;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLMaskManager
});
var openfl__$internal_renderer_opengl_utils_VertexAttribute = function(components,type,normalized,name,defaultValue) {
	if(normalized == null) normalized = false;
	this.enabled = true;
	this.normalized = false;
	this.components = components;
	this.type = type;
	this.normalized = normalized;
	this.name = name;
	if(defaultValue == null) {
		var this1;
		if(components != null) this1 = new Float32Array(components); else this1 = null;
		this.defaultValue = this1;
	} else this.defaultValue = defaultValue;
};
$hxClasses["openfl._internal.renderer.opengl.utils.VertexAttribute"] = openfl__$internal_renderer_opengl_utils_VertexAttribute;
openfl__$internal_renderer_opengl_utils_VertexAttribute.__name__ = ["openfl","_internal","renderer","opengl","utils","VertexAttribute"];
openfl__$internal_renderer_opengl_utils_VertexAttribute.prototype = {
	copy: function() {
		return new openfl__$internal_renderer_opengl_utils_VertexAttribute(this.components,this.type,this.normalized,this.name,this.defaultValue);
	}
	,getElementsBytes: function() {
		var _g = this.type;
		switch(_g) {
		case 5120:case 5121:
			return 1;
		case 5122:case 5123:
			return 2;
		default:
			return 4;
		}
	}
	,get_elements: function() {
		return Math.floor(this.components * this.getElementsBytes() / 4);
	}
	,__class__: openfl__$internal_renderer_opengl_utils_VertexAttribute
	,__properties__: {get_elements:"get_elements"}
};
var openfl_geom_Rectangle = function(x,y,width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["openfl.geom.Rectangle"] = openfl_geom_Rectangle;
openfl_geom_Rectangle.__name__ = ["openfl","geom","Rectangle"];
openfl_geom_Rectangle.prototype = {
	clone: function() {
		return new openfl_geom_Rectangle(this.x,this.y,this.width,this.height);
	}
	,contains: function(x,y) {
		return x >= this.x && y >= this.y && x < this.get_right() && y < this.get_bottom();
	}
	,containsPoint: function(point) {
		return this.contains(point.x,point.y);
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) return rect.x > this.x && rect.y > this.y && rect.get_right() < this.get_right() && rect.get_bottom() < this.get_bottom(); else return rect.x >= this.x && rect.y >= this.y && rect.get_right() <= this.get_right() && rect.get_bottom() <= this.get_bottom();
	}
	,copyFrom: function(sourceRect) {
		this.x = sourceRect.x;
		this.y = sourceRect.y;
		this.width = sourceRect.width;
		this.height = sourceRect.height;
	}
	,equals: function(toCompare) {
		return toCompare != null && this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
	}
	,inflate: function(dx,dy) {
		this.x -= dx;
		this.width += dx * 2;
		this.y -= dy;
		this.height += dy * 2;
	}
	,inflatePoint: function(point) {
		this.inflate(point.x,point.y);
	}
	,intersection: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return new openfl_geom_Rectangle();
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		if(y1 <= y0) return new openfl_geom_Rectangle();
		return new openfl_geom_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,intersects: function(toIntersect) {
		var x0;
		if(this.x < toIntersect.x) x0 = toIntersect.x; else x0 = this.x;
		var x1;
		if(this.get_right() > toIntersect.get_right()) x1 = toIntersect.get_right(); else x1 = this.get_right();
		if(x1 <= x0) return false;
		var y0;
		if(this.y < toIntersect.y) y0 = toIntersect.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() > toIntersect.get_bottom()) y1 = toIntersect.get_bottom(); else y1 = this.get_bottom();
		return y1 > y0;
	}
	,isEmpty: function() {
		return this.width <= 0 || this.height <= 0;
	}
	,offset: function(dx,dy) {
		this.x += dx;
		this.y += dy;
	}
	,offsetPoint: function(point) {
		this.x += point.x;
		this.y += point.y;
	}
	,setEmpty: function() {
		this.x = this.y = this.width = this.height = 0;
	}
	,setTo: function(xa,ya,widtha,heighta) {
		this.x = xa;
		this.y = ya;
		this.width = widtha;
		this.height = heighta;
	}
	,toString: function() {
		return "(x=" + this.x + ", y=" + this.y + ", width=" + this.width + ", height=" + this.height + ")";
	}
	,union: function(toUnion) {
		if(this.width == 0 || this.height == 0) return toUnion.clone(); else if(toUnion.width == 0 || toUnion.height == 0) return this.clone();
		var x0;
		if(this.x > toUnion.x) x0 = toUnion.x; else x0 = this.x;
		var x1;
		if(this.get_right() < toUnion.get_right()) x1 = toUnion.get_right(); else x1 = this.get_right();
		var y0;
		if(this.y > toUnion.y) y0 = toUnion.y; else y0 = this.y;
		var y1;
		if(this.get_bottom() < toUnion.get_bottom()) y1 = toUnion.get_bottom(); else y1 = this.get_bottom();
		return new openfl_geom_Rectangle(x0,y0,x1 - x0,y1 - y0);
	}
	,__contract: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) return;
		var cacheRight = this.get_right();
		var cacheBottom = this.get_bottom();
		if(this.x < x) this.x = x;
		if(this.y < y) this.y = y;
		if(this.get_right() > x + width) this.width = x + width - this.x;
		if(this.get_bottom() > y + height) this.height = y + height - this.y;
	}
	,__expand: function(x,y,width,height) {
		if(this.width == 0 && this.height == 0) {
			this.x = x;
			this.y = y;
			this.width = width;
			this.height = height;
			return;
		}
		var cacheRight = this.get_right();
		var cacheBottom = this.get_bottom();
		if(this.x > x) {
			this.x = x;
			this.width = cacheRight - x;
		}
		if(this.y > y) {
			this.y = y;
			this.height = cacheBottom - y;
		}
		if(cacheRight < x + width) this.width = x + width - this.x;
		if(cacheBottom < y + height) this.height = y + height - this.y;
	}
	,__toLimeRectangle: function() {
		return new lime_math_Rectangle(this.x,this.y,this.width,this.height);
	}
	,__transform: function(rect,m) {
		var tx0 = m.a * this.x + m.c * this.y;
		var tx1 = tx0;
		var ty0 = m.b * this.x + m.d * this.y;
		var ty1 = ty0;
		var tx = m.a * (this.x + this.width) + m.c * this.y;
		var ty = m.b * (this.x + this.width) + m.d * this.y;
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * (this.x + this.width) + m.c * (this.y + this.height);
		ty = m.b * (this.x + this.width) + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * this.x + m.c * (this.y + this.height);
		ty = m.b * this.x + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		rect.setTo(tx0 + m.tx,ty0 + m.ty,tx1 - tx0,ty1 - ty0);
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,set_bottom: function(b) {
		this.height = b - this.y;
		return b;
	}
	,get_bottomRight: function() {
		return new openfl_geom_Point(this.x + this.width,this.y + this.height);
	}
	,set_bottomRight: function(p) {
		this.width = p.x - this.x;
		this.height = p.y - this.y;
		return p.clone();
	}
	,get_left: function() {
		return this.x;
	}
	,set_left: function(l) {
		this.width -= l - this.x;
		this.x = l;
		return l;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,set_right: function(r) {
		this.width = r - this.x;
		return r;
	}
	,get_size: function() {
		return new openfl_geom_Point(this.width,this.height);
	}
	,set_size: function(p) {
		this.width = p.x;
		this.height = p.y;
		return p.clone();
	}
	,get_top: function() {
		return this.y;
	}
	,set_top: function(t) {
		this.height -= t - this.y;
		this.y = t;
		return t;
	}
	,get_topLeft: function() {
		return new openfl_geom_Point(this.x,this.y);
	}
	,set_topLeft: function(p) {
		this.x = p.x;
		this.y = p.y;
		return p.clone();
	}
	,__class__: openfl_geom_Rectangle
	,__properties__: {set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_top:"set_top",get_top:"get_top",set_size:"set_size",get_size:"get_size",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left",set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_bottom:"set_bottom",get_bottom:"get_bottom"}
};
var openfl__$internal_renderer_opengl_utils_GraphicsRenderer = function() { };
$hxClasses["openfl._internal.renderer.opengl.utils.GraphicsRenderer"] = openfl__$internal_renderer_opengl_utils_GraphicsRenderer;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.__name__ = ["openfl","_internal","renderer","opengl","utils","GraphicsRenderer"];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastVertsBuffer = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastBucketMode = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastTexture = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastTextureRepeat = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.lastTextureSmooth = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.overrideMatrix = null;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildCircle = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var rectData = path.points;
	var x = rectData[0];
	var y = rectData[1];
	var rx = rectData[2];
	var ry;
	if(rectData.length == 3) ry = rx; else ry = rectData[3];
	if(path.type == openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse) {
		rx /= 2;
		ry /= 2;
		x += rx;
		y += ry;
	}
	if(localCoords) {
		x -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
		y -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
	}
	var totalSegs = 40;
	var seg = Math.PI * 2 / totalSegs;
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	if(fill != null) {
		var verts = fill.verts;
		var indices = fill.indices;
		var vertPos = verts.length / 2 | 0;
		indices.push(vertPos);
		var _g1 = 0;
		var _g = totalSegs + 1;
		while(_g1 < _g) {
			var i = _g1++;
			verts.push(x);
			verts.push(y);
			verts.push(x + Math.sin(seg * i) * rx);
			verts.push(y + Math.cos(seg * i) * ry);
			indices.push(vertPos++);
			indices.push(vertPos++);
		}
		indices.push(vertPos - 1);
	}
	if(path.line.width > 0) {
		var tempPoints = path.points;
		path.points = [];
		openfl__$internal_renderer_GraphicsPaths.ellipse(path.points,x,y,rx,ry,totalSegs);
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
		path.points = tempPoints;
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildComplexPoly = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var bucket = null;
	if(path.points.length >= 6) {
		var points = path.points.slice();
		if(localCoords) {
			var _g1 = 0;
			var _g = points.length / 2 | 0;
			while(_g1 < _g) {
				var i = _g1++;
				points[i * 2] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
				points[i * 2 + 1] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
			}
		}
		bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
		var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
		fill.drawMode = glStack.gl.TRIANGLE_FAN;
		fill.verts = points;
		var indices = fill.indices;
		var length = points.length / 2 | 0;
		var _g2 = 0;
		while(_g2 < length) {
			var i1 = _g2++;
			indices.push(i1);
		}
	}
	if(path.line.width > 0) {
		if(bucket == null) bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket,localCoords);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine = function(path,bucket,localCoords) {
	if(localCoords == null) localCoords = false;
	var points = path.points;
	if(points.length == 0) return;
	var line = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Line);
	if(localCoords) {
		var _g1 = 0;
		var _g = points.length / 2 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			points[i * 2] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			points[i * 2 + 1] -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
		}
	}
	var firstPoint = new openfl_geom_Point(points[0],points[1]);
	var lastPoint = new openfl_geom_Point(points[points.length - 2 | 0],points[points.length - 1 | 0]);
	if(firstPoint.x == lastPoint.x && firstPoint.y == lastPoint.y) {
		points = points.slice();
		points.pop();
		points.pop();
		lastPoint = new openfl_geom_Point(points[points.length - 2 | 0],points[points.length - 1 | 0]);
		var midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * 0.5;
		var midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * 0.5;
		points.unshift(midPointY);
		points.unshift(midPointX);
		points.push(midPointX);
		points.push(midPointY);
	}
	var verts = line.verts;
	var indices = line.indices;
	var length = points.length / 2 | 0;
	var indexCount = points.length;
	var indexStart = verts.length / 6 | 0;
	var width = path.line.width / 2;
	var color = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.hex2rgb(path.line.color);
	var alpha = path.line.alpha;
	var r = color[0];
	var g = color[1];
	var b = color[2];
	var px;
	var py;
	var p1x;
	var p1y;
	var p2x;
	var p2y;
	var p3x;
	var p3y;
	var perpx;
	var perpy;
	var perp2x;
	var perp2y;
	var perp3x;
	var perp3y;
	var a1;
	var b1;
	var c1;
	var a2;
	var b2;
	var c2;
	var denom;
	var pdist;
	var dist;
	p1x = points[0];
	p1y = points[1];
	p2x = points[2];
	p2y = points[3];
	perpx = -(p1y - p2y);
	perpy = p1x - p2x;
	dist = Math.sqrt(Math.abs(perpx * perpx + perpy * perpy));
	perpx = perpx / dist;
	perpy = perpy / dist;
	perpx = perpx * width;
	perpy = perpy * width;
	verts.push(p1x - perpx);
	verts.push(p1y - perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	verts.push(p1x + perpx);
	verts.push(p1y + perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	var _g11 = 1;
	var _g2 = length - 1;
	while(_g11 < _g2) {
		var i1 = _g11++;
		p1x = points[(i1 - 1) * 2];
		p1y = points[(i1 - 1) * 2 + 1];
		p2x = points[i1 * 2];
		p2y = points[i1 * 2 + 1];
		p3x = points[(i1 + 1) * 2];
		p3y = points[(i1 + 1) * 2 + 1];
		perpx = -(p1y - p2y);
		perpy = p1x - p2x;
		dist = Math.sqrt(Math.abs(perpx * perpx + perpy * perpy));
		perpx = perpx / dist;
		perpy = perpy / dist;
		perpx = perpx * width;
		perpy = perpy * width;
		perp2x = -(p2y - p3y);
		perp2y = p2x - p3x;
		dist = Math.sqrt(Math.abs(perp2x * perp2x + perp2y * perp2y));
		perp2x = perp2x / dist;
		perp2y = perp2y / dist;
		perp2x = perp2x * width;
		perp2y = perp2y * width;
		a1 = -perpy + p1y - (-perpy + p2y);
		b1 = -perpx + p2x - (-perpx + p1x);
		c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);
		a2 = -perp2y + p3y - (-perp2y + p2y);
		b2 = -perp2x + p2x - (-perp2x + p3x);
		c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);
		denom = a1 * b2 - a2 * b1;
		if(Math.abs(denom) < 0.1) {
			denom += 10.1;
			verts.push(p2x - perpx);
			verts.push(p2y - perpy);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x + perpx);
			verts.push(p2y + perpy);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			continue;
		}
		px = (b1 * c2 - b2 * c1) / denom;
		py = (a2 * c1 - a1 * c2) / denom;
		pdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);
		if(pdist > 19600) {
			perp3x = perpx - perp2x;
			perp3y = perpy - perp2y;
			dist = Math.sqrt(Math.abs(perp3x * perp3x + perp3y * perp3y));
			perp3x = perp3x / dist;
			perp3y = perp3y / dist;
			perp3x = perp3x * width;
			perp3y = perp3y * width;
			verts.push(p2x - perp3x);
			verts.push(p2y - perp3y);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x + perp3x);
			verts.push(p2y + perp3y);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x - perp3x);
			verts.push(p2y - perp3y);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			indexCount++;
		} else {
			verts.push(px);
			verts.push(py);
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
			verts.push(p2x - (px - p2x));
			verts.push(p2y - (py - p2y));
			verts.push(r);
			verts.push(g);
			verts.push(b);
			verts.push(alpha);
		}
	}
	p1x = points[(length - 2) * 2];
	p1y = points[(length - 2) * 2 + 1];
	p2x = points[(length - 1) * 2];
	p2y = points[(length - 1) * 2 + 1];
	perpx = -(p1y - p2y);
	perpy = p1x - p2x;
	dist = Math.sqrt(Math.abs(perpx * perpx + perpy * perpy));
	if(!isFinite(dist)) null;
	perpx = perpx / dist;
	perpy = perpy / dist;
	perpx = perpx * width;
	perpy = perpy * width;
	verts.push(p2x - perpx);
	verts.push(p2y - perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	verts.push(p2x + perpx);
	verts.push(p2y + perpy);
	verts.push(r);
	verts.push(g);
	verts.push(b);
	verts.push(alpha);
	indices.push(indexStart);
	var _g3 = 0;
	while(_g3 < indexCount) {
		var i2 = _g3++;
		indices.push(indexStart++);
	}
	indices.push(indexStart - 1);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildPoly = function(path,glStack) {
	if(path.points.length < 6) return;
	var points = path.points;
	var l = points.length;
	var sx = points[0];
	var sy = points[1];
	var ex = points[l - 2];
	var ey = points[l - 1];
	if(sx != ex || sy != ey) {
		points.push(sx);
		points.push(sy);
	}
	var length = points.length / 2 | 0;
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	var verts = fill.verts;
	var indices = fill.indices;
	if(fill != null) {
		var triangles = [];
		openfl__$internal_renderer_PolyK.triangulate(triangles,points);
		var vertPos = verts.length / 2;
		var i = 0;
		while(i < triangles.length) {
			indices.push(triangles[i] + vertPos | 0);
			indices.push(triangles[i] + vertPos | 0);
			indices.push(triangles[i + 1] + vertPos | 0);
			indices.push(triangles[i + 2] + vertPos | 0);
			indices.push(triangles[i + 2] + vertPos | 0);
			i += 3;
		}
		var _g = 0;
		while(_g < length) {
			var i1 = _g++;
			verts.push(points[i1 * 2]);
			verts.push(points[i1 * 2 + 1]);
		}
	}
	if(path.line.width > 0) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRectangle = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var rectData = path.points;
	var x = rectData[0];
	var y = rectData[1];
	var width = rectData[2];
	var height = rectData[3];
	if(localCoords) {
		x -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
		y -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
	}
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	if(fill != null) {
		var verts = fill.verts;
		var indices = fill.indices;
		var vertPos = verts.length / 2 | 0;
		verts.push(x);
		verts.push(y);
		verts.push(x + width);
		verts.push(y);
		verts.push(x);
		verts.push(y + height);
		verts.push(x + width);
		verts.push(y + height);
		indices.push(vertPos);
		indices.push(vertPos);
		indices.push(vertPos + 1);
		indices.push(vertPos + 2);
		indices.push(vertPos + 3);
		indices.push(vertPos + 3);
	}
	if(path.line.width > 0) {
		var tempPoints = path.points;
		path.points = [x,y,x + width,y,x + width,y + height,x,y + height,x,y];
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
		path.points = tempPoints;
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRoundedRectangle = function(path,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var points = path.points.slice();
	var x = points[0];
	var y = points[1];
	var width = points[2];
	var height = points[3];
	var rx = points[4];
	var ry = points[5];
	if(localCoords) {
		x -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
		y -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
	}
	var recPoints = [];
	openfl__$internal_renderer_GraphicsPaths.roundRectangle(recPoints,x,y,width,height,rx,ry);
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	if(fill != null) {
		var verts = fill.verts;
		var indices = fill.indices;
		var vecPos = verts.length / 2;
		var triangles = [];
		openfl__$internal_renderer_PolyK.triangulate(triangles,recPoints);
		var i = 0;
		while(i < triangles.length) {
			indices.push(triangles[i] + vecPos | 0);
			indices.push(triangles[i] + vecPos | 0);
			indices.push(triangles[i + 1] + vecPos | 0);
			indices.push(triangles[i + 2] + vecPos | 0);
			indices.push(triangles[i + 2] + vecPos | 0);
			i += 3;
		}
		i = 0;
		while(i < recPoints.length) {
			verts.push(recPoints[i]);
			verts.push(recPoints[++i]);
			i++;
		}
	}
	if(path.line.width > 0) {
		var tempPoints = path.points;
		path.points = recPoints;
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildLine(path,bucket);
		path.points = tempPoints;
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildDrawTriangles = function(path,object,glStack,localCoords) {
	if(localCoords == null) localCoords = false;
	var args = path.type.slice(2);
	var vertices = args[0];
	var indices = args[1];
	var uvtData = args[2];
	var culling = args[3];
	var colors = args[4];
	var blendMode = args[5];
	var a;
	var b;
	var c;
	var d;
	var tx;
	var ty;
	if(localCoords) {
		a = 1.0;
		b = 0.0;
		c = 0.0;
		d = 1.0;
		tx = 0.0;
		ty = 0.0;
	} else {
		a = object.__worldTransform.a;
		b = object.__worldTransform.b;
		c = object.__worldTransform.c;
		d = object.__worldTransform.d;
		tx = object.__worldTransform.tx;
		ty = object.__worldTransform.ty;
	}
	var hasColors = colors != null && colors.length > 0;
	var bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
	var fill = bucket.getData(openfl__$internal_renderer_opengl_utils_BucketDataType.Fill);
	var colorAttrib = fill.vertexArray.attributes[2];
	colorAttrib.enabled = hasColors;
	var array = [1,1,1,1];
	var this1;
	if(array != null) this1 = new Float32Array(array); else this1 = null;
	colorAttrib.defaultValue = this1;
	fill.rawVerts = true;
	fill.glLength = indices.length;
	fill.stride = Std["int"](fill.vertexArray.get_stride() / 4);
	var vertsLength = fill.glLength * fill.stride;
	var verts;
	if(fill.glVerts == null || fill.glVerts.length < vertsLength) {
		var this2;
		if(vertsLength != null) this2 = new Float32Array(vertsLength); else this2 = null;
		verts = this2;
		fill.glVerts = verts;
	} else verts = fill.glVerts;
	var glColors;
	var buffer = verts.buffer;
	var this3;
	if(buffer != null) this3 = new Uint32Array(buffer,0); else this3 = null;
	glColors = this3;
	var v0 = 0;
	var v1 = 0;
	var v2 = 0;
	var i0 = 0;
	var i1 = 0;
	var i2 = 0;
	var x0 = 0.0;
	var y0 = 0.0;
	var x1 = 0.0;
	var y1 = 0.0;
	var x2 = 0.0;
	var y2 = 0.0;
	var idx = 0;
	var _g1 = 0;
	var _g = indices.length / 3 | 0;
	while(_g1 < _g) {
		var i = _g1++;
		i0 = indices.data[i * 3];
		i1 = indices.data[i * 3 + 1];
		i2 = indices.data[i * 3 + 2];
		v0 = i0 * 2;
		v1 = i1 * 2;
		v2 = i2 * 2;
		x0 = vertices.data[v0];
		y0 = vertices.data[v0 + 1];
		x1 = vertices.data[v1];
		y1 = vertices.data[v1 + 1];
		x2 = vertices.data[v2];
		y2 = vertices.data[v2 + 1];
		if(localCoords) {
			x0 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			y0 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
			x1 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			y1 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
			x2 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.x;
			y2 -= openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.y;
		}
		switch(culling[1]) {
		case 2:
			if(!((x1 - x0) * (y2 - y0) - (y1 - y0) * (x2 - x0) < 0)) continue;
			break;
		case 0:
			if((x1 - x0) * (y2 - y0) - (y1 - y0) * (x2 - x0) < 0) continue;
			break;
		default:
		}
		var idx1 = idx++;
		verts[idx1] = a * x0 + c * y0 + tx;
		var idx2 = idx++;
		verts[idx2] = b * x0 + d * y0 + ty;
		var idx3 = idx++;
		verts[idx3] = uvtData.data[v0];
		var idx4 = idx++;
		verts[idx4] = uvtData.data[v0 + 1];
		if(hasColors) {
			var idx5 = idx++;
			glColors[idx5] = colors.data[i0];
		}
		var idx6 = idx++;
		verts[idx6] = a * x1 + c * y1 + tx;
		var idx7 = idx++;
		verts[idx7] = b * x1 + d * y1 + ty;
		var idx8 = idx++;
		verts[idx8] = uvtData.data[v1];
		var idx9 = idx++;
		verts[idx9] = uvtData.data[v1 + 1];
		if(hasColors) {
			var idx10 = idx++;
			glColors[idx10] = colors.data[i1];
		}
		var idx11 = idx++;
		verts[idx11] = a * x2 + c * y2 + tx;
		var idx12 = idx++;
		verts[idx12] = b * x2 + d * y2 + ty;
		var idx13 = idx++;
		verts[idx13] = uvtData.data[v2];
		var idx14 = idx++;
		verts[idx14] = uvtData.data[v2 + 1];
		if(hasColors) {
			var idx15 = idx++;
			glColors[idx15] = colors.data[i2];
		}
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildDrawTiles = function(path,glStack) {
	openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.quadraticBezierCurve = function(fromX,fromY,cpX,cpY,toX,toY) {
	var xa;
	var ya;
	var xb;
	var yb;
	var x;
	var y;
	var n = 20;
	var points = [];
	var getPt = function(n1,n2,perc) {
		var diff = n2 - n1;
		return n1 + diff * perc;
	};
	var j = 0.0;
	var _g1 = 0;
	var _g = n + 1;
	while(_g1 < _g) {
		var i = _g1++;
		j = i / n;
		xa = getPt(fromX,cpX,j);
		ya = getPt(fromY,cpY,j);
		xb = getPt(cpX,toX,j);
		yb = getPt(cpY,toY,j);
		x = getPt(xa,xb,j);
		y = getPt(ya,yb,j);
		points.push(x);
		points.push(y);
	}
	return points;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.render = function(object,renderSession) {
	var graphics = object.__graphics;
	var bounds = graphics.__bounds;
	var spritebatch = renderSession.spriteBatch;
	var dirty = graphics.__dirty;
	if(!graphics.__visible || graphics.__commands.get_length() == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {
		graphics.__glStack.splice(0,graphics.__glStack.length);
		return;
	}
	if(dirty) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.updateGraphics(object,object.__graphics,renderSession.gl,object.get_cacheAsBitmap());
	openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderGraphics(object,renderSession,false);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderGraphics = function(object,renderSession,localCoords) {
	if(localCoords == null) localCoords = false;
	var graphics = object.__graphics;
	var gl = renderSession.gl;
	var glStack = graphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId];
	if(glStack == null) return;
	var bucket;
	var translationMatrix;
	if(localCoords) translationMatrix = openfl_geom_Matrix.__identity; else translationMatrix = object.__worldTransform;
	var clipRect = renderSession.spriteBatch.clipRect;
	var batchDrawing = renderSession.spriteBatch.drawing;
	batchDrawing = renderSession.spriteBatch.drawing;
	var _g1 = 0;
	var _g = glStack.buckets.length;
	while(_g1 < _g) {
		var i = _g1++;
		batchDrawing = renderSession.spriteBatch.drawing;
		if(batchDrawing && !localCoords) renderSession.spriteBatch.finish();
		renderSession.blendModeManager.setBlendMode(object.__blendMode);
		if(clipRect != null) {
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(Math.floor(clipRect.x),Math.floor(clipRect.y),Math.floor(clipRect.width),Math.floor(clipRect.height));
		}
		bucket = glStack.buckets[i];
		var _g2 = bucket.mode;
		switch(_g2[1]) {
		case 1:case 2:
			renderSession.stencilManager.pushBucket(bucket,renderSession,translationMatrix.toArray(true));
			var shader = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareShader(bucket,renderSession,object,translationMatrix.toArray(true));
			openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderFill(bucket,shader,renderSession);
			renderSession.stencilManager.popBucket(object,bucket,renderSession);
			break;
		case 5:
			var shader1 = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareShader(bucket,renderSession,object,null);
			openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderDrawTriangles(bucket,shader1,renderSession);
			break;
		case 6:
			if(!batchDrawing) renderSession.spriteBatch.begin(renderSession,clipRect);
			var args = bucket.graphicType.slice(2);
			renderSession.spriteBatch.renderTiles(object,args[0],args[1],args[2],args[3],args[4],args[5]);
			renderSession.spriteBatch.finish();
			break;
		default:
		}
		var ct = object.__worldColorTransform;
		var _g21 = 0;
		var _g3 = bucket.lines;
		while(_g21 < _g3.length) {
			var line = _g3[_g21];
			++_g21;
			if(line != null && line.verts.length > 0) {
				var shader2 = renderSession.shaderManager.primitiveShader;
				renderSession.shaderManager.setShader(shader2);
				gl.uniformMatrix3fv(shader2.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix.toArray(true));
				gl.uniformMatrix3fv(shader2.getUniformLocation("openfl_uProjectionMatrix"),false,renderSession.projectionMatrix.toArray(true));
				gl.uniform1f(shader2.getUniformLocation("openfl_uAlpha"),1);
				gl.uniform4f(shader2.getUniformLocation("openfl_uColorMultiplier"),ct.redMultiplier,ct.greenMultiplier,ct.blueMultiplier,ct.alphaMultiplier);
				gl.uniform4f(shader2.getUniformLocation("openfl_uColorOffset"),ct.redOffset / 255,ct.greenOffset / 255,ct.blueOffset / 255,ct.alphaOffset / 255);
				line.vertexArray.bind();
				shader2.bindVertexArray(line.vertexArray);
				gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,line.indexBuffer);
				gl.drawElements(gl.TRIANGLE_STRIP,line.indices.length,gl.UNSIGNED_SHORT,0);
			}
		}
		if(clipRect != null) gl.disable(gl.SCISSOR_TEST);
		batchDrawing = renderSession.spriteBatch.drawing;
		if(!batchDrawing && !localCoords) renderSession.spriteBatch.begin(renderSession,clipRect);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.updateGraphics = function(object,graphics,gl,localCoords) {
	if(localCoords == null) localCoords = false;
	openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectPosition.setTo(object.get_x(),object.get_y());
	if(graphics.__bounds == null) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds = new openfl_geom_Rectangle(); else openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.copyFrom(graphics.__bounds);
	var glStack = null;
	if(graphics.__dirty) glStack = openfl__$internal_renderer_opengl_utils_DrawPath.getStack(graphics,gl);
	graphics.set___dirty(false);
	var _g = 0;
	var _g1 = glStack.buckets;
	while(_g < _g1.length) {
		var data = _g1[_g];
		++_g;
		data.reset();
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bucketPool.push(data);
	}
	glStack.reset();
	var _g11 = glStack.lastIndex;
	var _g2 = graphics.__drawPaths.length;
	while(_g11 < _g2) {
		var i = _g11++;
		var path = graphics.__drawPaths[i];
		{
			var _g21 = path.type;
			switch(_g21[1]) {
			case 0:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildComplexPoly(path,glStack,localCoords);
				break;
			case 1:
				var rounded = _g21[2];
				if(rounded) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRoundedRectangle(path,glStack,localCoords); else openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildRectangle(path,glStack,localCoords);
				break;
			case 2:case 3:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildCircle(path,glStack,localCoords);
				break;
			case 4:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.buildDrawTriangles(path,object,glStack,localCoords);
				break;
			case 5:
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket(path,glStack);
				break;
			case 6:
				var m = _g21[2];
				openfl__$internal_renderer_opengl_utils_GraphicsRenderer.overrideMatrix = m;
				break;
			}
		}
		glStack.lastIndex++;
	}
	var _g3 = 0;
	var _g12 = glStack.buckets;
	while(_g3 < _g12.length) {
		var bucket = _g12[_g3];
		++_g3;
		if(bucket.uploadTileBuffer) bucket.uploadTile(Math.ceil(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_left()),Math.ceil(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_top()),Math.floor(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_right()),Math.floor(openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds.get_bottom()));
		bucket.optimize();
	}
	glStack.upload();
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareBucket = function(path,glStack) {
	var bucket = null;
	{
		var _g = path.fill;
		switch(_g[1]) {
		case 1:
			var a = _g[3];
			var c = _g[2];
			bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket(path.fillIndex,glStack,openfl__$internal_renderer_opengl_utils_BucketMode.Fill);
			if(c == null) bucket.color = [1,1,1]; else bucket.color = [(c >> 16 & 255) / 255,(c >> 8 & 255) / 255,(c & 255) / 255];
			bucket.color[3] = a;
			bucket.uploadTileBuffer = true;
			break;
		case 2:
			var s = _g[5];
			var r = _g[4];
			var m = _g[3];
			var b = _g[2];
			bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket(path.fillIndex,glStack,openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill);
			bucket.bitmap = b;
			bucket.textureRepeat = r;
			bucket.textureSmooth = s;
			bucket.texture = b.getTexture(glStack.gl);
			bucket.uploadTileBuffer = true;
			var pMatrix;
			if(m == null) pMatrix = new openfl_geom_Matrix(); else pMatrix = new openfl_geom_Matrix(m.a,m.b,m.c,m.d,m.tx,m.ty);
			pMatrix.invert();
			pMatrix.scale(1 / b.width,1 / b.height);
			var tx = pMatrix.tx;
			var ty = pMatrix.ty;
			pMatrix.tx = 0;
			pMatrix.ty = 0;
			bucket.textureTL.x = tx;
			bucket.textureTL.y = ty;
			bucket.textureBR.x = tx + 1;
			bucket.textureBR.y = ty + 1;
			bucket.textureMatrix = pMatrix;
			break;
		default:
			bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket(path.fillIndex,glStack,openfl__$internal_renderer_opengl_utils_BucketMode.Line);
			bucket.uploadTileBuffer = false;
		}
	}
	{
		var _g1 = path.type;
		switch(_g1[1]) {
		case 4:
			bucket.mode = openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles;
			bucket.uploadTileBuffer = false;
			break;
		case 5:
			bucket.mode = openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles;
			bucket.uploadTileBuffer = false;
			break;
		default:
		}
	}
	bucket.graphicType = path.type;
	bucket.overrideMatrix = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.overrideMatrix;
	return bucket;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.getBucket = function(glStack,mode) {
	var b = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bucketPool.pop();
	if(b == null) b = new openfl__$internal_renderer_opengl_utils_GLBucket(glStack.gl);
	b.mode = mode;
	glStack.buckets.push(b);
	return b;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.switchBucket = function(fillIndex,glStack,mode) {
	var bucket = null;
	var _g = 0;
	var _g1 = glStack.buckets;
	while(_g < _g1.length) {
		var b = _g1[_g];
		++_g;
		if(b.fillIndex == fillIndex) {
			bucket = b;
			break;
		}
	}
	if(bucket == null) bucket = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.getBucket(glStack,mode);
	bucket.dirty = true;
	bucket.fillIndex = fillIndex;
	return bucket;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.prepareShader = function(bucket,renderSession,object,translationMatrix) {
	var gl = renderSession.gl;
	var shader = null;
	var _g = bucket.mode;
	switch(_g[1]) {
	case 1:
		shader = renderSession.shaderManager.fillShader;
		break;
	case 2:
		shader = renderSession.shaderManager.patternFillShader;
		break;
	case 5:
		shader = renderSession.shaderManager.drawTrianglesShader;
		break;
	default:
		shader = null;
	}
	if(shader == null) return null;
	var newShader = renderSession.shaderManager.setShader(shader);
	gl.uniform1f(shader.getUniformLocation("openfl_uAlpha"),object.__worldAlpha);
	gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uProjectionMatrix"),false,renderSession.projectionMatrix.toArray(true));
	var ct = object.__worldColorTransform;
	gl.uniform4f(shader.getUniformLocation("openfl_uColorMultiplier"),ct.redMultiplier,ct.greenMultiplier,ct.blueMultiplier,ct.alphaMultiplier);
	gl.uniform4f(shader.getUniformLocation("openfl_uColorOffset"),ct.redOffset / 255,ct.greenOffset / 255,ct.blueOffset / 255,ct.alphaOffset / 255);
	var _g1 = bucket.mode;
	switch(_g1[1]) {
	case 1:
		gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix);
		gl.uniform4fv(shader.getUniformLocation("openfl_uColor"),(function($this) {
			var $r;
			var array = bucket.color;
			var this1;
			if(array != null) this1 = new Float32Array(array); else this1 = null;
			$r = this1;
			return $r;
		}(this)));
		break;
	case 2:
		gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix);
		gl.uniform2f(shader.getUniformLocation("openfl_uPatternTL"),bucket.textureTL.x,bucket.textureTL.y);
		gl.uniform2f(shader.getUniformLocation("openfl_uPatternBR"),bucket.textureBR.x,bucket.textureBR.y);
		gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uPatternMatrix"),false,bucket.textureMatrix.toArray(true));
		break;
	case 5:
		if(bucket.texture != null) gl.uniform1i(shader.getUniformLocation("openfl_uUseTexture"),1); else {
			gl.uniform1i(shader.getUniformLocation("openfl_uUseTexture"),0);
			gl.uniform4fv(shader.getUniformLocation("openfl_uColor"),(function($this) {
				var $r;
				var array1 = bucket.color;
				var this2;
				if(array1 != null) this2 = new Float32Array(array1); else this2 = null;
				$r = this2;
				return $r;
			}(this)));
		}
		break;
	default:
	}
	return shader;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderFill = function(bucket,shader,renderSession) {
	var gl = renderSession.gl;
	if(bucket.mode == openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill && bucket.texture != null) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bindTexture(gl,bucket);
	gl.bindBuffer(gl.ARRAY_BUFFER,bucket.tileBuffer);
	gl.vertexAttribPointer(shader.getAttribLocation("openfl_aPosition"),4,gl.SHORT,false,0,0);
	gl.drawArrays(gl.TRIANGLE_STRIP,0,4);
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.renderDrawTriangles = function(bucket,shader,renderSession) {
	var gl = renderSession.gl;
	var _g = 0;
	var _g1 = bucket.fills;
	while(_g < _g1.length) {
		var fill = _g1[_g];
		++_g;
		if(fill.available) continue;
		openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bindTexture(gl,bucket);
		fill.vertexArray.bind();
		shader.bindVertexArray(fill.vertexArray);
		gl.drawArrays(gl.TRIANGLES,fill.glStart,fill.glLength);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bindTexture = function(gl,bucket) {
	gl.bindTexture(gl.TEXTURE_2D,bucket.texture);
	if(bucket.textureRepeat && bucket.bitmap.image.get_powerOfTwo()) {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT);
	} else {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);
	}
	if(bucket.textureSmooth) {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);
	} else {
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);
	}
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.isCCW = function(x1,y1,x2,y2,x3,y3) {
	return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1) < 0;
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.hex2rgb = function(hex) {
	if(hex == null) return [1,1,1]; else return [(hex >> 16 & 255) / 255,(hex >> 8 & 255) / 255,(hex & 255) / 255];
};
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.hex2rgba = function(hex) {
	if(hex == null) return [1,1,1,1]; else return [(hex >> 16 & 255) / 255,(hex >> 8 & 255) / 255,(hex & 255) / 255,(hex >> 24 & 255) / 255];
};
var openfl__$internal_renderer_opengl_utils_GLStack = function(gl) {
	this.lastIndex = 0;
	this.gl = gl;
	this.buckets = [];
	this.lastIndex = 0;
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLStack"] = openfl__$internal_renderer_opengl_utils_GLStack;
openfl__$internal_renderer_opengl_utils_GLStack.__name__ = ["openfl","_internal","renderer","opengl","utils","GLStack"];
openfl__$internal_renderer_opengl_utils_GLStack.prototype = {
	reset: function() {
		this.buckets = [];
		this.lastIndex = 0;
	}
	,upload: function() {
		var _g = 0;
		var _g1 = this.buckets;
		while(_g < _g1.length) {
			var bucket = _g1[_g];
			++_g;
			if(bucket.dirty) bucket.upload();
		}
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLStack
};
var openfl__$internal_renderer_opengl_utils_GLBucket = function(gl) {
	this.uploadTileBuffer = true;
	this.textureSmooth = true;
	this.textureRepeat = false;
	this.lines = [];
	this.fills = [];
	this.fillIndex = -1;
	this.gl = gl;
	this.color = [0,0,0];
	this.lastIndex = 0;
	this.alpha = 1;
	this.dirty = true;
	this.mode = openfl__$internal_renderer_opengl_utils_BucketMode.Fill;
	this.textureMatrix = new openfl_geom_Matrix();
	this.textureTL = new openfl_geom_Point();
	this.textureBR = new openfl_geom_Point(1,1);
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLBucket"] = openfl__$internal_renderer_opengl_utils_GLBucket;
openfl__$internal_renderer_opengl_utils_GLBucket.__name__ = ["openfl","_internal","renderer","opengl","utils","GLBucket"];
openfl__$internal_renderer_opengl_utils_GLBucket.prototype = {
	getData: function(type) {
		var data;
		switch(type[1]) {
		case 1:
			data = this.fills;
			break;
		default:
			data = this.lines;
		}
		var result = null;
		var remove = false;
		var _g = 0;
		while(_g < data.length) {
			var d = data[_g];
			++_g;
			if(d.available) {
				result = d;
				remove = true;
				break;
			}
		}
		if(result == null) result = new openfl__$internal_renderer_opengl_utils_GLBucketData(this.gl);
		result.available = false;
		result.parent = this;
		result.type = type;
		if(remove) HxOverrides.remove(data,result);
		data.push(result);
		switch(type[1]) {
		case 1:
			var _g1 = this.mode;
			switch(_g1[1]) {
			case 1:case 2:
				result.vertexArray.attributes = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.fillVertexAttributes;
				break;
			case 5:
				result.vertexArray.attributes = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.drawTrianglesVertexAttributes.slice();
				result.vertexArray.attributes[2] = result.vertexArray.attributes[2].copy();
				break;
			default:
			}
			break;
		case 0:
			result.vertexArray.attributes = openfl__$internal_renderer_opengl_utils_GraphicsRenderer.primitiveVertexAttributes;
			break;
		}
		return result;
	}
	,optimize: function() {
		var _g = this;
		var data = this.lines;
		if(data.length > 1) {
			var result = [];
			var tmp = null;
			var last = null;
			var idx = 0;
			var vi = 0;
			var ii = 0;
			var before = data.length;
			var _g1 = 0;
			while(_g1 < data.length) {
				var d = data[_g1];
				++_g1;
				if(d.available || d.rawVerts || d.rawIndices) {
					if(tmp != null) {
						result.push(tmp);
						tmp = null;
					}
					result.push(d);
					last = d;
					continue;
				}
				if(last == null || last.drawMode == d.drawMode) {
					if(tmp == null) tmp = d; else {
						vi = tmp.verts.length;
						ii = tmp.indices.length;
						var _g2 = 0;
						var _g11 = d.verts.length;
						while(_g2 < _g11) {
							var j = _g2++;
							tmp.verts[j + vi] = d.verts[j];
						}
						var _g21 = 0;
						var _g12 = d.indices.length;
						while(_g21 < _g12) {
							var j1 = _g21++;
							tmp.indices[j1 + ii] = d.indices[j1] + idx;
						}
					}
					idx = tmp.indices[tmp.indices.length - 1] + 1;
					last = d;
				} else {
					if(tmp != null) {
						result.push(tmp);
						tmp = null;
					}
					result.push(d);
					last = d;
					continue;
				}
			}
			if(result.length == 0 && tmp != null) result.push(tmp);
			if(result.length > 0) switch(openfl__$internal_renderer_opengl_utils_BucketDataType.Line[1]) {
			case 1:
				_g.fills = result;
				break;
			default:
				_g.lines = result;
			}
		}
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.fills;
		while(_g < _g1.length) {
			var fill = _g1[_g];
			++_g;
			fill.reset();
		}
		var _g2 = 0;
		var _g11 = this.lines;
		while(_g2 < _g11.length) {
			var line = _g11[_g2];
			++_g2;
			line.reset();
		}
		this.fillIndex = -1;
		this.uploadTileBuffer = true;
		this.graphicType = openfl__$internal_renderer_opengl_utils_GraphicType.Polygon;
	}
	,uploadTile: function(x,y,w,h) {
		if(this.tileBuffer == null) this.tileBuffer = this.gl.createBuffer();
		this.tile = [x,y,0,0,w,y,1,0,x,h,0,1,w,h,1,1];
		var array = this.tile;
		var this1;
		if(array != null) this1 = new Int16Array(array); else this1 = null;
		this.glTile = this1;
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.tileBuffer);
		this.gl.bufferData(this.gl.ARRAY_BUFFER,this.glTile,this.gl.STATIC_DRAW);
	}
	,upload: function() {
		if(this.mode != openfl__$internal_renderer_opengl_utils_BucketMode.Line) {
			var _g = 0;
			var _g1 = this.fills;
			while(_g < _g1.length) {
				var fill = _g1[_g];
				++_g;
				if(!fill.available) fill.upload();
			}
		}
		var _g2 = 0;
		var _g11 = this.lines;
		while(_g2 < _g11.length) {
			var line = _g11[_g2];
			++_g2;
			if(!line.available) line.upload();
		}
		this.dirty = false;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLBucket
};
var openfl__$internal_renderer_opengl_utils_GLBucketData = function(gl) {
	this.available = false;
	this.rawIndices = false;
	this.stride = 0;
	this.rawVerts = false;
	this.lastVertsSize = 0;
	this.glStart = 0;
	this.glLength = 0;
	this.gl = gl;
	this.drawMode = gl.TRIANGLE_STRIP;
	this.verts = [];
	this.indices = [];
	this.vertexArray = new openfl__$internal_renderer_opengl_utils_VertexArray([]);
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLBucketData"] = openfl__$internal_renderer_opengl_utils_GLBucketData;
openfl__$internal_renderer_opengl_utils_GLBucketData.__name__ = ["openfl","_internal","renderer","opengl","utils","GLBucketData"];
openfl__$internal_renderer_opengl_utils_GLBucketData.prototype = {
	reset: function() {
		this.available = true;
		this.verts = [];
		this.indices = [];
		this.glLength = 0;
		this.glStart = 0;
		this.stride = 0;
		this.rawVerts = false;
		this.rawIndices = false;
		this.drawMode = this.gl.TRIANGLE_STRIP;
	}
	,upload: function() {
		if(this.rawVerts && this.glVerts != null && this.glVerts.length > 0 || this.verts.length > 0) {
			if(!this.rawVerts) {
				var array = this.verts;
				var this1;
				if(array != null) this1 = new Float32Array(array); else this1 = null;
				this.glVerts = this1;
			}
			this.vertexArray.buffer = this.glVerts.buffer;
			if(this.glVerts.length <= this.lastVertsSize) {
				this.vertexArray.bind();
				var end = this.glLength * this.stride;
				if(this.glLength > 0 && this.lastVertsSize > end) {
					var view = this.glVerts.subarray(0,end);
					this.vertexArray.upload(view);
				} else this.vertexArray.upload(this.glVerts);
			} else {
				this.vertexArray.setContext(this.gl,this.glVerts);
				this.lastVertsSize = this.glVerts.length;
			}
		}
		if(this.glLength == 0 && (this.rawIndices && this.glIndices != null && this.glIndices.length > 0 || this.indices.length > 0)) {
			if(this.indexBuffer == null) this.indexBuffer = this.gl.createBuffer();
			if(!this.rawIndices) {
				var array1 = this.indices;
				var this2;
				if(array1 != null) this2 = new Uint16Array(array1); else this2 = null;
				this.glIndices = this2;
			}
			this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
			this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.glIndices,this.gl.STREAM_DRAW);
		}
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLBucketData
};
var openfl__$internal_renderer_opengl_utils_BucketMode = $hxClasses["openfl._internal.renderer.opengl.utils.BucketMode"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","BucketMode"], __constructs__ : ["None","Fill","PatternFill","Line","PatternLine","DrawTriangles","DrawTiles"] };
openfl__$internal_renderer_opengl_utils_BucketMode.None = ["None",0];
openfl__$internal_renderer_opengl_utils_BucketMode.None.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.None.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.Fill = ["Fill",1];
openfl__$internal_renderer_opengl_utils_BucketMode.Fill.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.Fill.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill = ["PatternFill",2];
openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.Line = ["Line",3];
openfl__$internal_renderer_opengl_utils_BucketMode.Line.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.Line.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternLine = ["PatternLine",4];
openfl__$internal_renderer_opengl_utils_BucketMode.PatternLine.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.PatternLine.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles = ["DrawTriangles",5];
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles = ["DrawTiles",6];
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles.__enum__ = openfl__$internal_renderer_opengl_utils_BucketMode;
openfl__$internal_renderer_opengl_utils_BucketMode.__empty_constructs__ = [openfl__$internal_renderer_opengl_utils_BucketMode.None,openfl__$internal_renderer_opengl_utils_BucketMode.Fill,openfl__$internal_renderer_opengl_utils_BucketMode.PatternFill,openfl__$internal_renderer_opengl_utils_BucketMode.Line,openfl__$internal_renderer_opengl_utils_BucketMode.PatternLine,openfl__$internal_renderer_opengl_utils_BucketMode.DrawTriangles,openfl__$internal_renderer_opengl_utils_BucketMode.DrawTiles];
var openfl__$internal_renderer_opengl_utils_BucketDataType = $hxClasses["openfl._internal.renderer.opengl.utils.BucketDataType"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","BucketDataType"], __constructs__ : ["Line","Fill"] };
openfl__$internal_renderer_opengl_utils_BucketDataType.Line = ["Line",0];
openfl__$internal_renderer_opengl_utils_BucketDataType.Line.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketDataType.Line.__enum__ = openfl__$internal_renderer_opengl_utils_BucketDataType;
openfl__$internal_renderer_opengl_utils_BucketDataType.Fill = ["Fill",1];
openfl__$internal_renderer_opengl_utils_BucketDataType.Fill.toString = $estr;
openfl__$internal_renderer_opengl_utils_BucketDataType.Fill.__enum__ = openfl__$internal_renderer_opengl_utils_BucketDataType;
openfl__$internal_renderer_opengl_utils_BucketDataType.__empty_constructs__ = [openfl__$internal_renderer_opengl_utils_BucketDataType.Line,openfl__$internal_renderer_opengl_utils_BucketDataType.Fill];
var openfl__$internal_renderer_opengl_utils_GLGraphicsData = function(gl) {
	this.indices = [];
	this.data = [];
	this.lastIndex = 0;
	this.mode = 0;
	this.dirty = true;
	this.alpha = 1.0;
	this.tint = [1.0,1.0,1.0];
	this.gl = gl;
	this.dataBuffer = gl.createBuffer();
	this.indexBuffer = gl.createBuffer();
};
$hxClasses["openfl._internal.renderer.opengl.utils.GLGraphicsData"] = openfl__$internal_renderer_opengl_utils_GLGraphicsData;
openfl__$internal_renderer_opengl_utils_GLGraphicsData.__name__ = ["openfl","_internal","renderer","opengl","utils","GLGraphicsData"];
openfl__$internal_renderer_opengl_utils_GLGraphicsData.prototype = {
	reset: function() {
		this.data = [];
		this.indices = [];
		this.lastIndex = 0;
	}
	,upload: function() {
		var elements = this.data;
		var this1;
		if(elements != null) this1 = new Float32Array(elements); else this1 = null;
		this.glData = this1;
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.dataBuffer);
		this.gl.bufferData(this.gl.ARRAY_BUFFER,this.glData,this.gl.STATIC_DRAW);
		var elements1 = this.indices;
		var this2;
		if(elements1 != null) this2 = new Uint16Array(elements1); else this2 = null;
		this.glIndices = this2;
		this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,this.glIndices,this.gl.STATIC_DRAW);
		this.dirty = false;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_GLGraphicsData
};
var openfl__$internal_renderer_opengl_utils_GraphicType = $hxClasses["openfl._internal.renderer.opengl.utils.GraphicType"] = { __ename__ : ["openfl","_internal","renderer","opengl","utils","GraphicType"], __constructs__ : ["Polygon","Rectangle","Circle","Ellipse","DrawTriangles","DrawTiles","OverrideMatrix"] };
openfl__$internal_renderer_opengl_utils_GraphicType.Polygon = ["Polygon",0];
openfl__$internal_renderer_opengl_utils_GraphicType.Polygon.toString = $estr;
openfl__$internal_renderer_opengl_utils_GraphicType.Polygon.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType;
openfl__$internal_renderer_opengl_utils_GraphicType.Rectangle = function(rounded) { var $x = ["Rectangle",1,rounded]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_GraphicType.Circle = ["Circle",2];
openfl__$internal_renderer_opengl_utils_GraphicType.Circle.toString = $estr;
openfl__$internal_renderer_opengl_utils_GraphicType.Circle.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType;
openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse = ["Ellipse",3];
openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse.toString = $estr;
openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType;
openfl__$internal_renderer_opengl_utils_GraphicType.DrawTriangles = function(vertices,indices,uvtData,culling,colors,blendMode) { var $x = ["DrawTriangles",4,vertices,indices,uvtData,culling,colors,blendMode]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_GraphicType.DrawTiles = function(sheet,tileData,smooth,flags,shader,count) { var $x = ["DrawTiles",5,sheet,tileData,smooth,flags,shader,count]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_GraphicType.OverrideMatrix = function(matrix) { var $x = ["OverrideMatrix",6,matrix]; $x.__enum__ = openfl__$internal_renderer_opengl_utils_GraphicType; $x.toString = $estr; return $x; };
openfl__$internal_renderer_opengl_utils_GraphicType.__empty_constructs__ = [openfl__$internal_renderer_opengl_utils_GraphicType.Polygon,openfl__$internal_renderer_opengl_utils_GraphicType.Circle,openfl__$internal_renderer_opengl_utils_GraphicType.Ellipse];
var openfl__$internal_renderer_opengl_utils_PingPongTexture = function(gl,width,height,smoothing,powerOfTwo) {
	if(powerOfTwo == null) powerOfTwo = true;
	if(smoothing == null) smoothing = true;
	this.__swapped = false;
	this.powerOfTwo = true;
	this.useOldTexture = false;
	this.gl = gl;
	this.width = width;
	this.height = height;
	this.smoothing = smoothing;
	this.powerOfTwo = powerOfTwo;
	this.set_renderTexture(new openfl__$internal_renderer_opengl_utils_RenderTexture(gl,width,height,smoothing,powerOfTwo));
};
$hxClasses["openfl._internal.renderer.opengl.utils.PingPongTexture"] = openfl__$internal_renderer_opengl_utils_PingPongTexture;
openfl__$internal_renderer_opengl_utils_PingPongTexture.__name__ = ["openfl","_internal","renderer","opengl","utils","PingPongTexture"];
openfl__$internal_renderer_opengl_utils_PingPongTexture.prototype = {
	swap: function() {
		this.__swapped = !this.__swapped;
		if((this.__swapped?this.__texture1:this.__texture0) == null) this.set_renderTexture(new openfl__$internal_renderer_opengl_utils_RenderTexture(this.gl,this.width,this.height,this.smoothing,this.powerOfTwo));
	}
	,clear: function(r,g,b,a,mask) {
		if(a == null) a = 0;
		if(b == null) b = 0;
		if(g == null) g = 0;
		if(r == null) r = 0;
		(this.__swapped?this.__texture1:this.__texture0).clear(r,g,b,a,mask);
	}
	,resize: function(width,height) {
		this.width = width;
		this.height = height;
		(this.__swapped?this.__texture1:this.__texture0).resize(width,height);
	}
	,destroy: function() {
		if(this.__texture0 != null) {
			this.__texture0.destroy();
			this.__texture0 = null;
		}
		if(this.__texture1 != null) {
			this.__texture1.destroy();
			this.__texture1 = null;
		}
		this.__swapped = false;
	}
	,get_renderTexture: function() {
		if(this.__swapped) return this.__texture1; else return this.__texture0;
	}
	,set_renderTexture: function(v) {
		if(this.__swapped) return this.__texture1 = v; else return this.__texture0 = v;
	}
	,get_oldRenderTexture: function() {
		if(this.__swapped) return this.__texture0; else return this.__texture1;
	}
	,set_oldRenderTexture: function(v) {
		if(this.__swapped) return this.__texture0 = v; else return this.__texture1 = v;
	}
	,get_framebuffer: function() {
		return (this.__swapped?this.__texture1:this.__texture0).frameBuffer;
	}
	,get_texture: function() {
		if(this.useOldTexture) return (this.__swapped?this.__texture0:this.__texture1).texture; else return (this.__swapped?this.__texture1:this.__texture0).texture;
	}
	,get___otherTexture: function() {
		if(this.__swapped) return this.__texture0; else return this.__texture1;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_PingPongTexture
	,__properties__: {get___otherTexture:"get___otherTexture",get_texture:"get_texture",get_framebuffer:"get_framebuffer",set_oldRenderTexture:"set_oldRenderTexture",get_oldRenderTexture:"get_oldRenderTexture",set_renderTexture:"set_renderTexture",get_renderTexture:"get_renderTexture"}
};
var openfl__$internal_renderer_opengl_utils_RenderTexture = function(gl,width,height,smoothing,powerOfTwo) {
	if(powerOfTwo == null) powerOfTwo = true;
	if(smoothing == null) smoothing = true;
	this.powerOfTwo = true;
	this.gl = gl;
	this.powerOfTwo = powerOfTwo;
	this.frameBuffer = gl.createFramebuffer();
	this.texture = gl.createTexture();
	gl.bindTexture(gl.TEXTURE_2D,this.texture);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,smoothing?gl.LINEAR:gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,smoothing?gl.LINEAR:gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);
	gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);
	gl.bindFramebuffer(gl.FRAMEBUFFER,this.frameBuffer);
	gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,this.texture,0);
	this.renderBuffer = gl.createRenderbuffer();
	gl.bindRenderbuffer(gl.RENDERBUFFER,this.renderBuffer);
	gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_STENCIL_ATTACHMENT,gl.RENDERBUFFER,this.renderBuffer);
	this.resize(width,height);
};
$hxClasses["openfl._internal.renderer.opengl.utils.RenderTexture"] = openfl__$internal_renderer_opengl_utils_RenderTexture;
openfl__$internal_renderer_opengl_utils_RenderTexture.__name__ = ["openfl","_internal","renderer","opengl","utils","RenderTexture"];
openfl__$internal_renderer_opengl_utils_RenderTexture.prototype = {
	clear: function(r,g,b,a,mask) {
		if(a == null) a = 0;
		if(b == null) b = 0;
		if(g == null) g = 0;
		if(r == null) r = 0;
		this.gl.clearColor(r,g,b,a);
		this.gl.clear(mask == null?this.gl.COLOR_BUFFER_BIT:mask);
	}
	,destroy: function() {
		if(this.frameBuffer != null) this.gl.deleteFramebuffer(this.frameBuffer);
		if(this.texture != null) this.gl.deleteTexture(this.texture);
		this.frameBuffer = null;
		this.texture = null;
	}
	,resize: function(width,height) {
		if(this.width == width && this.height == height) return;
		this.width = width;
		this.height = height;
		var pow2W = width;
		var pow2H = height;
		if(this.powerOfTwo) {
			pow2W = this.powOfTwo(width);
			pow2H = this.powOfTwo(height);
		}
		var lastW = this.__width;
		var lastH = this.__height;
		this.__width = pow2W;
		this.__height = pow2H;
		this.createUVs();
		if(lastW == pow2W && lastH == pow2H) return;
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture);
		this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.__width,this.__height,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);
		this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,this.renderBuffer);
		this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_STENCIL,this.__width,this.__height);
	}
	,createUVs: function() {
		if(this.__uvData == null) this.__uvData = new openfl_display_TextureUvs();
		var w = this.width / this.__width;
		var h = this.height / this.__height;
		this.__uvData.x0 = 0;
		this.__uvData.y0 = 0;
		this.__uvData.x1 = w;
		this.__uvData.y1 = 0;
		this.__uvData.x2 = w;
		this.__uvData.y2 = h;
		this.__uvData.x3 = 0;
		this.__uvData.y3 = h;
	}
	,powOfTwo: function(value) {
		var n = 1;
		while(n < value) n <<= 1;
		return n;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_RenderTexture
};
var openfl__$internal_renderer_opengl_utils_ShaderManager = function(gl) {
	this.setContext(gl);
};
$hxClasses["openfl._internal.renderer.opengl.utils.ShaderManager"] = openfl__$internal_renderer_opengl_utils_ShaderManager;
openfl__$internal_renderer_opengl_utils_ShaderManager.__name__ = ["openfl","_internal","renderer","opengl","utils","ShaderManager"];
openfl__$internal_renderer_opengl_utils_ShaderManager.prototype = {
	setContext: function(gl) {
		this.gl = gl;
		this.defaultShader = new openfl__$internal_renderer_opengl_shaders2_DefaultShader(gl);
		this.fillShader = new openfl__$internal_renderer_opengl_shaders2_FillShader(gl);
		this.patternFillShader = new openfl__$internal_renderer_opengl_shaders2_PatternFillShader(gl);
		this.drawTrianglesShader = new openfl__$internal_renderer_opengl_shaders2_DrawTrianglesShader(gl);
		this.primitiveShader = new openfl__$internal_renderer_opengl_shaders2_PrimitiveShader(gl);
		this.setShader(this.defaultShader,true);
	}
	,destroy: function() {
		this.defaultShader.destroy();
		this.fillShader.destroy();
		this.patternFillShader.destroy();
		this.drawTrianglesShader.destroy();
		this.primitiveShader.destroy();
		this.gl = null;
	}
	,setShader: function(shader,force) {
		if(force == null) force = false;
		if(shader == null) {
			this.currentShader = null;
			this.gl.useProgram(null);
			return true;
		}
		if(this.currentShader != null && !force && this.currentShader.ID == shader.ID) return false;
		this.currentShader = shader;
		this.gl.useProgram(shader.program);
		return true;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_ShaderManager
};
var openfl__$internal_renderer_opengl_utils_SpriteBatch = function(gl,maxSprites) {
	if(maxSprites == null) maxSprites = 2000;
	this.uvs = new openfl_display_TextureUvs();
	this.matrix = new openfl_geom_Matrix();
	this.lastEnableColor = true;
	this.enableColor = true;
	this.attributes = [];
	this.writtenVertexBytes = 0;
	this.drawing = false;
	this.dirty = true;
	this.states = [];
	this.maxSprites = maxSprites;
	this.attributes.push(new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition"));
	this.attributes.push(new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aTexCoord0"));
	this.attributes.push(new openfl__$internal_renderer_opengl_utils_VertexAttribute(4,5121,true,"openfl_aColor"));
	var array = [1,1,1,1];
	var this1;
	if(array != null) this1 = new Float32Array(array); else this1 = null;
	this.attributes[2].defaultValue = this1;
	this.maxElementsPerVertex = 0;
	var _g = 0;
	var _g1 = this.attributes;
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		this.maxElementsPerVertex += Math.floor(a.components * a.getElementsBytes() / 4);
	}
	this.vertexArraySize = maxSprites * this.maxElementsPerVertex * 4 * 4;
	this.indexArraySize = maxSprites * 6;
	this.vertexArray = new openfl__$internal_renderer_opengl_utils_VertexArray(this.attributes,this.vertexArraySize,false);
	var buffer = this.vertexArray.buffer;
	var this2;
	if(buffer != null) this2 = new Float32Array(buffer,0); else this2 = null;
	this.positions = this2;
	var buffer1 = this.vertexArray.buffer;
	var this3;
	if(buffer1 != null) this3 = new Uint32Array(buffer1,0); else this3 = null;
	this.colors = this3;
	var elements = this.indexArraySize;
	var this4;
	if(elements != null) this4 = new Uint16Array(elements); else this4 = null;
	this.indices = this4;
	var i = 0;
	var j = 0;
	while(i < this.indexArraySize) {
		this.indices[i] = j;
		this.indices[i + 1] = j + 1;
		this.indices[i + 2] = j + 2;
		this.indices[i + 3] = j;
		this.indices[i + 4] = j + 2;
		this.indices[i + 5] = j + 3;
		i += 6;
		j += 4;
	}
	this.currentState = new openfl__$internal_renderer_opengl_utils__$SpriteBatch_State();
	this.dirty = true;
	this.drawing = false;
	this.batchedSprites = 0;
	this.setContext(gl);
};
$hxClasses["openfl._internal.renderer.opengl.utils.SpriteBatch"] = openfl__$internal_renderer_opengl_utils_SpriteBatch;
openfl__$internal_renderer_opengl_utils_SpriteBatch.__name__ = ["openfl","_internal","renderer","opengl","utils","SpriteBatch"];
openfl__$internal_renderer_opengl_utils_SpriteBatch.prototype = {
	destroy: function() {
		this.vertexArray.destroy();
		this.vertexArray = null;
		this.indices = null;
		this.gl.deleteBuffer(this.indexBuffer);
		this.currentState.destroy();
		var _g = 0;
		var _g1 = this.states;
		while(_g < _g1.length) {
			var state = _g1[_g];
			++_g;
			state.destroy();
		}
		this.gl = null;
	}
	,begin: function(renderSession,clipRect) {
		this.renderSession = renderSession;
		this.shader = renderSession.shaderManager.defaultShader;
		this.drawing = true;
		this.start(clipRect);
	}
	,finish: function() {
		this.stop();
		this.clipRect = null;
		this.drawing = false;
	}
	,start: function(clipRect) {
		if(!this.drawing) this.stop();
		this.dirty = true;
		this.clipRect = clipRect;
	}
	,stop: function() {
		this.flush();
	}
	,renderBitmapData: function(bitmapData,smoothing,matrix,ct,alpha,blendMode,flashShader,pixelSnapping,bgra) {
		if(bgra == null) bgra = false;
		if(alpha == null) alpha = 1;
		if(bitmapData == null) return;
		var texture = bitmapData.getTexture(this.gl);
		if(this.batchedSprites >= this.maxSprites) this.flush();
		var uvs = bitmapData.__uvData;
		if(uvs == null) return;
		this.prepareShader(flashShader,bitmapData);
		var color = ((alpha * 255 | 0) & 255) << 24 | 16777215;
		this.enableColor = true;
		if(this.enableColor != this.lastEnableColor) {
			this.flush();
			this.lastEnableColor = this.enableColor;
		}
		this.attributes[2].enabled = this.lastEnableColor;
		this.elementsPerVertex = this.getElementsPerVertex();
		var index = this.batchedSprites * 4 * this.elementsPerVertex;
		this.fillVertices(index,bitmapData.width,bitmapData.height,matrix,uvs,color,pixelSnapping);
		this.setState(this.batchedSprites,texture,smoothing,blendMode,ct,flashShader,true);
		this.batchedSprites++;
	}
	,renderTiles: function(object,sheet,tileData,smooth,flags,flashShader,count) {
		if(count == null) count = -1;
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		var texture = sheet.__bitmap.getTexture(this.gl);
		if(texture == null) return;
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useTransform = (flags & 16) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		var useRect = (flags & 32) > 0;
		var useOrigin = (flags & 64) > 0;
		var blendMode;
		var _g = flags & 983040;
		switch(_g) {
		case 65536:
			blendMode = openfl_display_BlendMode.ADD;
			break;
		case 131072:
			blendMode = openfl_display_BlendMode.MULTIPLY;
			break;
		case 262144:
			blendMode = openfl_display_BlendMode.SCREEN;
			break;
		case 524288:
			blendMode = openfl_display_BlendMode.SUBTRACT;
			break;
		default:
			var _g1 = flags & 15728640;
			switch(_g1) {
			case 1048576:
				blendMode = openfl_display_BlendMode.DARKEN;
				break;
			case 2097152:
				blendMode = openfl_display_BlendMode.LIGHTEN;
				break;
			case 4194304:
				blendMode = openfl_display_BlendMode.OVERLAY;
				break;
			case 8388608:
				blendMode = openfl_display_BlendMode.HARDLIGHT;
				break;
			default:
				var _g2 = flags & 251658240;
				switch(_g2) {
				case 16777216:
					blendMode = openfl_display_BlendMode.DIFFERENCE;
					break;
				case 33554432:
					blendMode = openfl_display_BlendMode.INVERT;
					break;
				default:
					blendMode = openfl_display_BlendMode.NORMAL;
				}
			}
		}
		if(useTransform) {
			useScale = false;
			useRotation = false;
		}
		var scaleIndex = 0;
		var rotationIndex = 0;
		var rgbIndex = 0;
		var alphaIndex = 0;
		var transformIndex = 0;
		var numValues = 3;
		if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
		if(useScale) {
			scaleIndex = numValues;
			numValues++;
		}
		if(useRotation) {
			rotationIndex = numValues;
			numValues++;
		}
		if(useTransform) {
			transformIndex = numValues;
			numValues += 4;
		}
		if(useRGB) {
			rgbIndex = numValues;
			numValues += 3;
		}
		if(useAlpha) {
			alphaIndex = numValues;
			numValues++;
		}
		var totalCount = tileData.length;
		if(count >= 0 && totalCount > count) totalCount = count;
		var itemCount = Math.ceil(totalCount / numValues);
		var iIndex = 0;
		var tileID = -1;
		var rect = sheet.__rectTile;
		var tileUV = sheet.__rectUV;
		var center = sheet.__point;
		var x = 0.0;
		var y = 0.0;
		var alpha = 1.0;
		var tint = 16777215;
		var color = -1;
		var scale = 1.0;
		var rotation = 0.0;
		var cosTheta = 1.0;
		var sinTheta = 0.0;
		var a = 0.0;
		var b = 0.0;
		var c = 0.0;
		var d = 0.0;
		var tx = 0.0;
		var ty = 0.0;
		var ox = 0.0;
		var oy = 0.0;
		var oMatrix = object.__worldTransform;
		var bIndex = 0;
		var tMa = 1.0;
		var tMb = 0.0;
		var tMc = 0.0;
		var tMd = 1.0;
		var tMtx = 0.0;
		var tMty = 0.0;
		var oMa = oMatrix.a;
		var oMb = oMatrix.b;
		var oMc = oMatrix.c;
		var oMd = oMatrix.d;
		var oMtx = oMatrix.tx;
		var oMty = oMatrix.ty;
		var rx = 0.0;
		var ry = 0.0;
		var rw = 0.0;
		var rh = 0.0;
		var tuvx = 0.0;
		var tuvy = 0.0;
		var tuvw = 0.0;
		var tuvh = 0.0;
		this.enableColor = true;
		if(this.enableColor != this.lastEnableColor) {
			this.flush();
			this.lastEnableColor = this.enableColor;
		}
		this.attributes[2].enabled = this.lastEnableColor;
		this.elementsPerVertex = this.getElementsPerVertex();
		this.prepareShader(flashShader,null);
		while(iIndex < totalCount) {
			if(this.batchedSprites >= this.maxSprites) this.flush();
			x = tileData[iIndex];
			y = tileData[iIndex + 1];
			if(useRect) {
				tileID = -1;
				rect.x = tileData[iIndex + 2];
				rect.y = tileData[iIndex + 3];
				rect.width = tileData[iIndex + 4];
				rect.height = tileData[iIndex + 5];
				if(useOrigin) {
					center.x = tileData[iIndex + 6];
					center.y = tileData[iIndex + 7];
				} else {
					center.x = 0;
					center.y = 0;
				}
				rw = rect.width;
				rh = rect.height;
				tuvx = rect.get_left() / sheet.__bitmap.width;
				tuvy = rect.get_top() / sheet.__bitmap.height;
				tuvw = rect.get_right() / sheet.__bitmap.width;
				tuvh = rect.get_bottom() / sheet.__bitmap.height;
			} else {
				tileID = (tileData[iIndex + 2] == null?0:tileData[iIndex + 2]) | 0;
				rect = sheet.__tileRects[tileID];
				center = sheet.__centerPoints[tileID];
				tileUV = sheet.__tileUVs[tileID];
				if(rect != null) {
					rw = rect.width;
					rh = rect.height;
					tuvx = tileUV.x;
					tuvy = tileUV.y;
					tuvw = tileUV.width;
					tuvh = tileUV.height;
				}
			}
			if(rect != null && rect.width > 0 && rect.height > 0 && center != null) {
				alpha = 1;
				tint = 16777215;
				scale = 1.0;
				rotation = 0.0;
				cosTheta = 1.0;
				sinTheta = 0.0;
				if(useAlpha) alpha = tileData[iIndex + alphaIndex] * object.__worldAlpha; else alpha = object.__worldAlpha;
				if(useRGB) tint = (tileData[iIndex + rgbIndex] * 255 | 0) << 16 | (tileData[iIndex + rgbIndex + 1] * 255 | 0) << 8 | (tileData[iIndex + rgbIndex + 2] * 255 | 0);
				if(useScale) scale = tileData[iIndex + scaleIndex];
				if(useRotation) {
					rotation = tileData[iIndex + rotationIndex];
					cosTheta = Math.cos(rotation);
					sinTheta = Math.sin(rotation);
				}
				if(useTransform) {
					a = tileData[iIndex + transformIndex];
					b = tileData[iIndex + transformIndex + 1];
					c = tileData[iIndex + transformIndex + 2];
					d = tileData[iIndex + transformIndex + 3];
				} else {
					a = scale * cosTheta;
					b = scale * sinTheta;
					c = -b;
					d = a;
				}
				ox = center.x * a + center.y * c;
				oy = center.x * b + center.y * d;
				tx = x - ox;
				ty = y - oy;
				tMa = (a * oMa + b * oMc) * rw;
				tMb = (a * oMb + b * oMd) * rw;
				tMc = (c * oMa + d * oMc) * rh;
				tMd = (c * oMb + d * oMd) * rh;
				tMtx = tx * oMa + ty * oMc + oMtx;
				tMty = tx * oMb + ty * oMd + oMty;
				bIndex = this.batchedSprites * 4 * this.elementsPerVertex;
				this.positions[bIndex] = tMtx;
				this.positions[bIndex + 1] = tMty;
				this.positions[bIndex + 5] = tMa + tMtx;
				this.positions[bIndex + 6] = tMb + tMty;
				this.positions[bIndex + 10] = tMa + tMc + tMtx;
				this.positions[bIndex + 11] = tMd + tMb + tMty;
				this.positions[bIndex + 15] = tMc + tMtx;
				this.positions[bIndex + 16] = tMd + tMty;
				var val;
				var val1;
				var val2 = this.colors[bIndex + 19] = ((alpha * 255 | 0) & 255) << 24 | tint;
				val1 = this.colors[bIndex + 14] = val2;
				val = this.colors[bIndex + 9] = val1;
				this.colors[bIndex + 4] = val;
				this.positions[bIndex + 2] = tuvx;
				this.positions[bIndex + 3] = tuvy;
				this.positions[bIndex + 7] = tuvw;
				this.positions[bIndex + 8] = tuvy;
				this.positions[bIndex + 12] = tuvw;
				this.positions[bIndex + 13] = tuvh;
				this.positions[bIndex + 17] = tuvx;
				this.positions[bIndex + 18] = tuvh;
				this.writtenVertexBytes = bIndex + 20;
				this.setState(this.batchedSprites,texture,smooth,blendMode,object.__worldColorTransform,flashShader,false);
				this.batchedSprites++;
			}
			iIndex += numValues;
		}
	}
	,fillVertices: function(index,width,height,matrix,uvs,color,pixelSnapping) {
		if(color == null) color = -1;
		var a = matrix.a;
		var b = matrix.b;
		var c = matrix.c;
		var d = matrix.d;
		var tx = matrix.tx;
		var ty = matrix.ty;
		if(pixelSnapping == null || pixelSnapping == openfl_display_PixelSnapping.NEVER) {
			this.positions[index] = tx;
			this.positions[index + 1] = ty;
			this.positions[index + 5] = a * width + tx;
			this.positions[index + 6] = b * width + ty;
			this.positions[index + 10] = a * width + c * height + tx;
			this.positions[index + 11] = d * height + b * width + ty;
			this.positions[index + 15] = c * height + tx;
			this.positions[index + 16] = d * height + ty;
		} else {
			var val = Math.round(tx);
			this.positions[index] = val;
			var val1 = Math.round(ty);
			this.positions[index + 1] = val1;
			var val2 = Math.round(a * width + tx);
			this.positions[index + 5] = val2;
			var val3 = Math.round(b * width + ty);
			this.positions[index + 6] = val3;
			var val4 = Math.round(a * width + c * height + tx);
			this.positions[index + 10] = val4;
			var val5 = Math.round(d * height + b * width + ty);
			this.positions[index + 11] = val5;
			var val6 = Math.round(c * height + tx);
			this.positions[index + 15] = val6;
			var val7 = Math.round(d * height + ty);
			this.positions[index + 16] = val7;
		}
		if(this.enableColor) {
			var val8;
			var val9;
			var val10 = this.colors[index + 19] = color;
			val9 = this.colors[index + 14] = val10;
			val8 = this.colors[index + 9] = val9;
			this.colors[index + 4] = val8;
		}
		this.positions[index + 2] = uvs.x0;
		this.positions[index + 3] = uvs.y0;
		this.positions[index + 7] = uvs.x1;
		this.positions[index + 8] = uvs.y1;
		this.positions[index + 12] = uvs.x2;
		this.positions[index + 13] = uvs.y2;
		this.positions[index + 17] = uvs.x3;
		this.positions[index + 18] = uvs.y3;
		this.writtenVertexBytes = index + 20;
	}
	,enableAttributes: function(color) {
		if(color == null) color = -1;
		this.enableColor = color != -1;
		if(this.enableColor != this.lastEnableColor) {
			this.flush();
			this.lastEnableColor = this.enableColor;
		}
		this.attributes[2].enabled = this.lastEnableColor;
		this.elementsPerVertex = this.getElementsPerVertex();
	}
	,flush: function() {
		if(this.batchedSprites == 0) return;
		if(this.clipRect != null) {
			this.gl.enable(this.gl.SCISSOR_TEST);
			this.gl.scissor(Math.floor(this.clipRect.x),Math.floor(this.clipRect.y),Math.ceil(this.clipRect.width),Math.ceil(this.clipRect.height));
		}
		if(this.dirty) {
			this.dirty = false;
			this.renderSession.activeTextures = 1;
			this.vertexArray.bind();
			this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		}
		if(this.writtenVertexBytes > this.vertexArraySize * 0.5) this.vertexArray.upload(this.positions); else {
			var view = this.positions.subarray(0,this.writtenVertexBytes);
			this.vertexArray.upload(view);
		}
		var nextState;
		var batchSize = 0;
		var start = 0;
		this.currentState.shader = null;
		this.currentState.shaderData = null;
		this.currentState.texture = null;
		this.currentState.textureSmooth = false;
		this.currentState.blendMode = this.renderSession.blendModeManager.currentBlendMode;
		this.currentState.colorTransform = null;
		this.currentState.skipColorTransformAlpha = false;
		var _g1 = 0;
		var _g = this.batchedSprites;
		while(_g1 < _g) {
			var i = _g1++;
			nextState = this.states[i];
			this.currentState.skipColorTransformAlpha = nextState.skipColorTransformAlpha;
			if(!nextState.equals(this.currentState)) {
				this.renderBatch(this.currentState,batchSize,start);
				start = i;
				batchSize = 0;
				this.currentState.shader = nextState.shader;
				this.currentState.shaderData = nextState.shaderData;
				this.currentState.texture = nextState.texture;
				this.currentState.textureSmooth = nextState.textureSmooth;
				this.currentState.blendMode = nextState.blendMode;
				this.currentState.colorTransform = nextState.colorTransform;
			}
			batchSize++;
		}
		this.renderBatch(this.currentState,batchSize,start);
		this.batchedSprites = 0;
		this.writtenVertexBytes = 0;
		if(this.clipRect != null) this.gl.disable(this.gl.SCISSOR_TEST);
	}
	,renderBatch: function(state,size,start) {
		if(size == 0 || state.texture == null) return;
		var shader;
		if(state.shader == null) shader = this.renderSession.shaderManager.defaultShader; else shader = state.shader;
		this.renderSession.shaderManager.setShader(shader);
		shader.bindVertexArray(this.vertexArray);
		this.renderSession.blendModeManager.setBlendMode(shader.blendMode != null?shader.blendMode:state.blendMode);
		this.gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uProjectionMatrix"),false,this.renderSession.projectionMatrix.toArray(true));
		if(state.colorTransform != null) {
			this.gl.uniform1i(shader.getUniformLocation("openfl_uUseColorTransform"),1);
			var ct = state.colorTransform;
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorMultiplier"),ct.redMultiplier,ct.greenMultiplier,ct.blueMultiplier,state.skipColorTransformAlpha?1:ct.alphaMultiplier);
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorOffset"),ct.redOffset / 255.,ct.greenOffset / 255.,ct.blueOffset / 255.,ct.alphaOffset / 255.);
		} else {
			this.gl.uniform1i(shader.getUniformLocation("openfl_uUseColorTransform"),0);
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorMultiplier"),1,1,1,1);
			this.gl.uniform4f(shader.getUniformLocation("openfl_uColorOffset"),0,0,0,0);
		}
		this.gl.activeTexture(this.gl.TEXTURE0);
		this.gl.bindTexture(this.gl.TEXTURE_2D,state.texture);
		this.gl.uniform1i(shader.getUniformLocation("openfl_uSampler0"),0);
		if(shader.smooth != null && shader.smooth || state.textureSmooth) {
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);
		} else {
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST);
			this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST);
		}
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,shader.wrapS);
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,shader.wrapT);
		shader.applyData(state.shaderData,this.renderSession);
		this.gl.drawElements(this.gl.TRIANGLES,size * 6,this.gl.UNSIGNED_SHORT,start * 6 * 2);
		this.renderSession.drawCount++;
	}
	,setState: function(index,texture,smooth,blendMode,colorTransform,shader,skipAlpha) {
		if(skipAlpha == null) skipAlpha = false;
		if(smooth == null) smooth = false;
		var state = this.states[index];
		if(state == null) state = this.states[index] = new openfl__$internal_renderer_opengl_utils__$SpriteBatch_State();
		state.texture = texture;
		state.textureSmooth = smooth;
		state.blendMode = blendMode;
		if(colorTransform != null && colorTransform.__isDefault()) state.colorTransform = null; else state.colorTransform = colorTransform;
		state.skipColorTransformAlpha = skipAlpha;
		if(shader == null) {
			state.shader = null;
			state.shaderData = null;
		} else {
			state.shader = shader.__shader;
			state.shaderData = shader.data;
		}
	}
	,setContext: function(gl) {
		this.gl = gl;
		this.vertexArray.setContext(gl,this.positions);
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer);
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,this.indices,gl.STATIC_DRAW);
	}
	,prepareShader: function(flashShader,bd) {
		if(flashShader != null) {
			flashShader.__init(this.gl);
			flashShader.__shader.wrapS = flashShader.repeatX;
			flashShader.__shader.wrapT = flashShader.repeatY;
			flashShader.__shader.smooth = flashShader.smooth;
			flashShader.__shader.blendMode = flashShader.blendMode;
			var objSize = flashShader.data.get(openfl_display_Shader.uObjectSize);
			var texSize = flashShader.data.get(openfl_display_Shader.uTextureSize);
			if(bd != null) {
				objSize.value[0] = bd.width;
				objSize.value[1] = bd.height;
				if(bd.__pingPongTexture != null) {
					texSize.value[0] = bd.__pingPongTexture.get_renderTexture().__width;
					texSize.value[1] = bd.__pingPongTexture.get_renderTexture().__height;
				} else {
					texSize.value[0] = bd.width;
					texSize.value[1] = bd.height;
				}
			} else {
				objSize.value[0] = 0;
				objSize.value[1] = 0;
				texSize.value[0] = 0;
				texSize.value[1] = 0;
			}
		}
	}
	,getElementsPerVertex: function() {
		var r = 0;
		var _g = 0;
		var _g1 = this.attributes;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.enabled) r += Math.floor(a.components * a.getElementsBytes() / 4);
		}
		return r;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_SpriteBatch
};
var openfl__$internal_renderer_opengl_utils__$SpriteBatch_State = function() {
	this.skipColorTransformAlpha = false;
	this.textureSmooth = true;
};
$hxClasses["openfl._internal.renderer.opengl.utils._SpriteBatch.State"] = openfl__$internal_renderer_opengl_utils__$SpriteBatch_State;
openfl__$internal_renderer_opengl_utils__$SpriteBatch_State.__name__ = ["openfl","_internal","renderer","opengl","utils","_SpriteBatch","State"];
openfl__$internal_renderer_opengl_utils__$SpriteBatch_State.prototype = {
	equals: function(other) {
		return (this.shader == null && other.shader == null || this.shader != null && other.shader != null && this.shader.ID == other.shader.ID) && this.texture == other.texture && this.textureSmooth == other.textureSmooth && this.blendMode == other.blendMode && (this.colorTransform == null && other.colorTransform == null || this.colorTransform != null && other.colorTransform != null && this.colorTransform.__equals(other.colorTransform,this.skipColorTransformAlpha));
	}
	,destroy: function() {
		this.texture = null;
		this.colorTransform = null;
	}
	,__class__: openfl__$internal_renderer_opengl_utils__$SpriteBatch_State
};
var openfl__$internal_renderer_opengl_utils_StencilManager = function(gl) {
	this.stencilMask = 0;
	this.stencilStack = [];
	this.setContext(gl);
	this.reverse = true;
	this.count = 0;
};
$hxClasses["openfl._internal.renderer.opengl.utils.StencilManager"] = openfl__$internal_renderer_opengl_utils_StencilManager;
openfl__$internal_renderer_opengl_utils_StencilManager.__name__ = ["openfl","_internal","renderer","opengl","utils","StencilManager"];
openfl__$internal_renderer_opengl_utils_StencilManager.prototype = {
	prepareGraphics: function(fill,renderSession,translationMatrix) {
		var shader = renderSession.shaderManager.fillShader;
		renderSession.shaderManager.setShader(shader);
		this.gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uTranslationMatrix"),false,translationMatrix);
		this.gl.uniformMatrix3fv(shader.getUniformLocation("openfl_uProjectionMatrix"),false,renderSession.projectionMatrix.toArray(true));
		fill.vertexArray.bind();
		shader.bindVertexArray(fill.vertexArray);
		this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,fill.indexBuffer);
	}
	,pushBucket: function(bucket,renderSession,translationMatrix,isMask) {
		if(isMask == null) isMask = false;
		if(!isMask) {
			this.gl.enable(this.gl.STENCIL_TEST);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
			this.gl.stencilMask(255);
			this.gl.colorMask(false,false,false,false);
			this.gl.stencilFunc(this.gl.NEVER,1,255);
			this.gl.stencilOp(this.gl.INVERT,this.gl.KEEP,this.gl.KEEP);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
		}
		var _g = 0;
		var _g1 = bucket.fills;
		while(_g < _g1.length) {
			var fill = _g1[_g];
			++_g;
			if(fill.available) continue;
			this.prepareGraphics(fill,renderSession,translationMatrix);
			this.gl.drawElements(fill.drawMode,fill.glIndices.length,this.gl.UNSIGNED_SHORT,0);
		}
		if(!isMask) {
			this.gl.colorMask(true,true,true,renderSession.renderer.transparent);
			this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
			this.gl.stencilFunc(this.gl.EQUAL,255,255);
		}
	}
	,popBucket: function(object,bucket,renderSession) {
		this.gl.disable(this.gl.STENCIL_TEST);
	}
	,pushMask: function(object,renderSession) {
		var maskGraphics = object.__maskGraphics;
		if(maskGraphics == null || maskGraphics.__commands.get_length() <= 0) return;
		if(this.stencilMask == 0) {
			this.gl.enable(this.gl.STENCIL_TEST);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
		}
		this.stencilMask++;
		if(maskGraphics.__dirty) openfl__$internal_renderer_opengl_utils_GraphicsRenderer.updateGraphics(object,maskGraphics,renderSession.gl);
		var func;
		if(this.stencilMask == 1) func = this.gl.NEVER; else func = this.gl.EQUAL;
		var ref = this.stencilMask;
		var mask = 255 - this.stencilMask;
		this.gl.stencilMask(255);
		this.gl.colorMask(false,false,false,false);
		this.gl.stencilFunc(func,ref,mask);
		this.gl.stencilOp(this.gl.REPLACE,this.gl.KEEP,this.gl.KEEP);
		var glStack = maskGraphics.__glStack[openfl__$internal_renderer_opengl_GLRenderer.glContextId];
		var bucket;
		var translationMatrix = object.__worldTransform;
		var _g1 = 0;
		var _g = glStack.buckets.length;
		while(_g1 < _g) {
			var i = _g1++;
			bucket = glStack.buckets[i];
			if(bucket.overrideMatrix != null) translationMatrix = bucket.overrideMatrix; else translationMatrix = object.__worldTransform;
			var _g2 = bucket.mode;
			switch(_g2[1]) {
			case 1:case 2:
				this.pushBucket(bucket,renderSession,translationMatrix.toArray(true),true);
				break;
			default:
			}
		}
		this.gl.colorMask(true,true,true,renderSession.renderer.transparent);
		this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
		this.gl.stencilFunc(this.gl.EQUAL,this.stencilMask,255);
	}
	,popMask: function(object,renderSession) {
		this.stencilMask--;
		if(this.stencilMask <= 0) {
			this.gl.disable(this.gl.STENCIL_TEST);
			this.stencilMask = 0;
		}
	}
	,bindGraphics: function(object,glData,renderSession) {
	}
	,destroy: function() {
		this.stencilStack = null;
		this.gl = null;
	}
	,popStencil: function(object,glData,renderSession) {
		this.stencilStack.pop();
		this.count--;
		if(this.stencilStack.length == 0) this.gl.disable(this.gl.STENCIL_TEST); else {
			var level = this.count;
			this.bindGraphics(object,glData,renderSession);
			this.gl.colorMask(false,false,false,false);
			if(glData.mode == 1) {
				this.reverse = !this.reverse;
				if(this.reverse) {
					this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
				} else {
					this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
				}
				this.gl.drawElements(this.gl.TRIANGLE_FAN,4,this.gl.UNSIGNED_SHORT,(glData.indices.length - 4) * 2);
				this.gl.stencilFunc(this.gl.ALWAYS,0,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INVERT);
				this.gl.drawElements(this.gl.TRIANGLE_FAN,glData.indices.length - 4,this.gl.UNSIGNED_SHORT,0);
				if(!this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - level,255); else this.gl.stencilFunc(this.gl.EQUAL,level,255);
			} else {
				if(!this.reverse) {
					this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
				} else {
					this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
					this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
				}
				this.gl.drawElements(this.gl.TRIANGLE_STRIP,glData.indices.length,this.gl.UNSIGNED_SHORT,0);
				if(!this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - level,255); else this.gl.stencilFunc(this.gl.EQUAL,level,255);
			}
			this.gl.colorMask(true,true,true,true);
			this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
		}
	}
	,pushStencil: function(object,glData,renderSession) {
		this.bindGraphics(object,glData,renderSession);
		if(this.stencilStack.length == 0) {
			this.gl.enable(this.gl.STENCIL_TEST);
			this.gl.clear(this.gl.STENCIL_BUFFER_BIT);
			this.reverse = true;
			this.count = 0;
		}
		this.stencilStack.push(glData);
		var level = this.count;
		this.gl.colorMask(false,false,false,false);
		this.gl.stencilFunc(this.gl.ALWAYS,0,255);
		this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INVERT);
		if(glData.mode == 1) {
			this.gl.drawElements(this.gl.TRIANGLE_FAN,glData.indices.length - 4,this.gl.UNSIGNED_SHORT,0);
			if(this.reverse) {
				this.gl.stencilFunc(this.gl.EQUAL,255 - level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
			} else {
				this.gl.stencilFunc(this.gl.EQUAL,level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
			}
			this.gl.drawElements(this.gl.TRIANGLE_FAN,4,this.gl.UNSIGNED_SHORT,(glData.indices.length - 4) * 2);
			if(this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255); else this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
			this.reverse = !this.reverse;
		} else {
			if(!this.reverse) {
				this.gl.stencilFunc(this.gl.EQUAL,255 - level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.DECR);
			} else {
				this.gl.stencilFunc(this.gl.EQUAL,level,255);
				this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.INCR);
			}
			this.gl.drawElements(this.gl.TRIANGLE_STRIP,glData.indices.length,this.gl.UNSIGNED_SHORT,0);
			if(!this.reverse) this.gl.stencilFunc(this.gl.EQUAL,255 - (level + 1),255); else this.gl.stencilFunc(this.gl.EQUAL,level + 1,255);
		}
		this.gl.colorMask(true,true,true,true);
		this.gl.stencilOp(this.gl.KEEP,this.gl.KEEP,this.gl.KEEP);
		this.count++;
	}
	,setContext: function(gl) {
		this.gl = gl;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_StencilManager
};
var openfl__$internal_renderer_opengl_utils_VertexArray = function(attributes,size,isStatic) {
	if(isStatic == null) isStatic = false;
	if(size == null) size = 0;
	this.isStatic = false;
	this.size = 0;
	this.attributes = [];
	this.size = size;
	this.attributes = attributes;
	if(size > 0) this.buffer = new ArrayBuffer(size);
	this.isStatic = isStatic;
};
$hxClasses["openfl._internal.renderer.opengl.utils.VertexArray"] = openfl__$internal_renderer_opengl_utils_VertexArray;
openfl__$internal_renderer_opengl_utils_VertexArray.__name__ = ["openfl","_internal","renderer","opengl","utils","VertexArray"];
openfl__$internal_renderer_opengl_utils_VertexArray.prototype = {
	bind: function() {
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.glBuffer);
	}
	,unbind: function() {
		this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);
	}
	,upload: function(view) {
		this.gl.bufferSubData(this.gl.ARRAY_BUFFER,0,view);
	}
	,destroy: function() {
		this.gl.deleteBuffer(this.glBuffer);
		this.buffer = null;
	}
	,setContext: function(gl,view) {
		this.gl = gl;
		this.glBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER,this.glBuffer);
		gl.bufferData(gl.ARRAY_BUFFER,view,this.isStatic?gl.STATIC_DRAW:gl.DYNAMIC_DRAW);
	}
	,get_stride: function() {
		var s = 0;
		var _g = 0;
		var _g1 = this.attributes;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.enabled) s += Math.floor(a.components * a.getElementsBytes() / 4) * 4;
		}
		return s;
	}
	,__class__: openfl__$internal_renderer_opengl_utils_VertexArray
	,__properties__: {get_stride:"get_stride"}
};
var openfl__$internal_text_TextEngine = function(textField) {
	this.textField = textField;
	this.width = 100;
	this.height = 100;
	this.text = "";
	this.bounds = new openfl_geom_Rectangle(0,0,0,0);
	this.type = openfl_text_TextFieldType.DYNAMIC;
	this.autoSize = openfl_text_TextFieldAutoSize.NONE;
	this.displayAsPassword = false;
	this.embedFonts = false;
	this.selectable = true;
	this.borderColor = 0;
	this.border = false;
	this.backgroundColor = 16777215;
	this.background = false;
	this.gridFitType = openfl_text_GridFitType.PIXEL;
	this.maxChars = 0;
	this.multiline = false;
	this.sharpness = 0;
	this.scrollH = 0;
	this.scrollV = 1;
	this.wordWrap = false;
	this.lineAscents = [];
	this.lineBreaks = [];
	this.lineDescents = [];
	this.lineLeadings = [];
	this.lineHeights = [];
	this.lineWidths = [];
	this.layoutGroups = [];
	this.textFormatRanges = [];
	openfl__$internal_text_TextEngine.__canvas = window.document.createElement("canvas");
	openfl__$internal_text_TextEngine.__context = openfl__$internal_text_TextEngine.__canvas.getContext("2d");
};
$hxClasses["openfl._internal.text.TextEngine"] = openfl__$internal_text_TextEngine;
openfl__$internal_text_TextEngine.__name__ = ["openfl","_internal","text","TextEngine"];
openfl__$internal_text_TextEngine.__canvas = null;
openfl__$internal_text_TextEngine.__context = null;
openfl__$internal_text_TextEngine.findFont = function(name) {
	return null;
};
openfl__$internal_text_TextEngine.getFont = function(format) {
	var font;
	if(format.italic) font = "italic "; else font = "normal ";
	font += "normal ";
	if(format.bold) font += "bold "; else font += "normal ";
	font += format.size + "px";
	font += "/" + (format.size + format.leading + 6) + "px ";
	font += "" + (function($this) {
		var $r;
		var _g = format.font;
		$r = (function($this) {
			var $r;
			switch(_g) {
			case "_sans":
				$r = "sans-serif";
				break;
			case "_serif":
				$r = "serif";
				break;
			case "_typewriter":
				$r = "monospace";
				break;
			default:
				$r = "'" + format.font + "'";
			}
			return $r;
		}($this));
		return $r;
	}(this));
	return font;
};
openfl__$internal_text_TextEngine.getFontInstance = function(format) {
	return null;
};
openfl__$internal_text_TextEngine.prototype = {
	getBounds: function() {
		var padding;
		if(this.border) padding = 1; else padding = 0;
		this.bounds.width = this.width + padding;
		this.bounds.height = this.height + padding;
	}
	,getLine: function(index) {
		if(index < 0 || index > this.lineBreaks.length + 1) return null;
		if(this.lineBreaks.length == 0) return this.text; else return this.text.substring(index > 0?this.lineBreaks[index - 1]:0,this.lineBreaks[index]);
	}
	,getLineMeasurements: function() {
		this.lineAscents.splice(0,this.lineAscents.length);
		this.lineDescents.splice(0,this.lineDescents.length);
		this.lineLeadings.splice(0,this.lineLeadings.length);
		this.lineHeights.splice(0,this.lineHeights.length);
		this.lineWidths.splice(0,this.lineWidths.length);
		var currentLineAscent = 0.0;
		var currentLineDescent = 0.0;
		var currentLineLeading = null;
		var currentLineHeight = 0.0;
		var currentLineWidth = 0.0;
		this.textWidth = 0;
		this.textHeight = 0;
		this.numLines = 1;
		this.bottomScrollV = 0;
		this.maxScrollH = 0;
		var _g = 0;
		var _g1 = this.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			while(group.lineIndex > this.numLines - 1) {
				this.lineAscents.push(currentLineAscent);
				this.lineDescents.push(currentLineDescent);
				this.lineLeadings.push(currentLineLeading != null?currentLineLeading:0);
				this.lineHeights.push(currentLineHeight);
				this.lineWidths.push(currentLineWidth);
				currentLineAscent = 0;
				currentLineDescent = 0;
				currentLineLeading = null;
				currentLineHeight = 0;
				currentLineWidth = 0;
				this.numLines++;
				if(this.textHeight <= this.height - 2) this.bottomScrollV++;
			}
			currentLineAscent = Math.max(currentLineAscent,group.ascent);
			currentLineDescent = Math.max(currentLineDescent,group.descent);
			if(currentLineLeading == null) currentLineLeading = group.leading; else currentLineLeading = Std["int"](Math.max(currentLineLeading,group.leading));
			currentLineHeight = Math.max(currentLineHeight,group.height);
			currentLineWidth = group.offsetX - 2 + group.width;
			if(currentLineWidth > this.textWidth) this.textWidth = currentLineWidth;
			this.textHeight = group.offsetY - 2 + group.ascent + group.descent;
		}
		this.lineAscents.push(currentLineAscent);
		this.lineDescents.push(currentLineDescent);
		this.lineLeadings.push(currentLineLeading != null?currentLineLeading:0);
		this.lineHeights.push(currentLineHeight);
		this.lineWidths.push(currentLineWidth);
		if(this.numLines == 1) {
			this.bottomScrollV = 1;
			if(currentLineLeading > 0) this.textHeight += currentLineLeading;
		} else if(this.textHeight <= this.height - 2) this.bottomScrollV++;
		if(this.textWidth > this.width - 4) this.maxScrollH = this.textWidth - this.width + 4 | 0; else this.maxScrollH = 0;
		this.maxScrollV = this.numLines - this.bottomScrollV + 1;
	}
	,getLayoutGroups: function() {
		var _g = this;
		this.layoutGroups.splice(0,this.layoutGroups.length);
		var rangeIndex = -1;
		var formatRange = null;
		var font = null;
		var currentFormat = openfl_text_TextField.__defaultTextFormat.clone();
		var leading = 0;
		var ascent = 0.0;
		var descent = 0.0;
		var layoutGroup;
		var advances;
		var widthValue;
		var heightValue = 0.0;
		var spaceWidth = 0.0;
		var previousSpaceIndex = 0;
		var spaceIndex = this.text.indexOf(" ");
		var breakIndex = this.text.indexOf("\n");
		var marginRight = 0.0;
		var offsetX = 2.0;
		var offsetY = 2.0;
		var textIndex = 0;
		var lineIndex = 0;
		var lineFormat = null;
		if(rangeIndex < _g.textFormatRanges.length - 1) {
			rangeIndex++;
			formatRange = _g.textFormatRanges[rangeIndex];
			currentFormat.__merge(formatRange.format);
			openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
			ascent = currentFormat.size;
			descent = currentFormat.size * 0.185;
			leading = currentFormat.leading;
			heightValue = ascent + descent + leading;
			if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
		}
		lineFormat = formatRange.format;
		var wrap;
		while(textIndex < this.text.length) if(breakIndex > -1 && (spaceIndex == -1 || breakIndex < spaceIndex) && formatRange.end >= breakIndex) {
			layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,breakIndex);
			var text = this.text;
			var advances1 = [];
			var _g1 = textIndex;
			while(_g1 < breakIndex) {
				var i = _g1++;
				advances1.push(openfl__$internal_text_TextEngine.__context.measureText(text.charAt(i)).width);
			}
			layoutGroup.advances = advances1;
			layoutGroup.offsetX = offsetX;
			layoutGroup.ascent = ascent;
			layoutGroup.descent = descent;
			layoutGroup.leading = leading;
			layoutGroup.lineIndex = lineIndex;
			layoutGroup.offsetY = offsetY;
			var advances2 = layoutGroup.advances;
			var width = 0.0;
			var _g2 = 0;
			while(_g2 < advances2.length) {
				var advance = advances2[_g2];
				++_g2;
				width += advance;
			}
			layoutGroup.width = width;
			layoutGroup.height = heightValue;
			this.layoutGroups.push(layoutGroup);
			offsetY += heightValue;
			offsetX = 2;
			if(this.wordWrap && layoutGroup.offsetX + layoutGroup.width > this.width - 2) {
				layoutGroup.offsetY = offsetY;
				layoutGroup.offsetX = offsetX;
				offsetY += heightValue;
				lineIndex++;
			}
			textIndex = breakIndex + 1;
			breakIndex = this.text.indexOf("\n",textIndex);
			lineIndex++;
			if(formatRange.end == breakIndex) {
				if(rangeIndex < _g.textFormatRanges.length - 1) {
					rangeIndex++;
					formatRange = _g.textFormatRanges[rangeIndex];
					currentFormat.__merge(formatRange.format);
					openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
					ascent = currentFormat.size;
					descent = currentFormat.size * 0.185;
					leading = currentFormat.leading;
					heightValue = ascent + descent + leading;
					if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
				}
				lineFormat = formatRange.format;
			}
		} else if(formatRange.end >= spaceIndex && spaceIndex > -1) {
			layoutGroup = null;
			wrap = false;
			while(true) {
				if(spaceIndex == -1) spaceIndex = formatRange.end;
				var text1 = this.text;
				var advances3 = [];
				var _g3 = textIndex;
				while(_g3 < spaceIndex) {
					var i1 = _g3++;
					advances3.push(openfl__$internal_text_TextEngine.__context.measureText(text1.charAt(i1)).width);
				}
				advances = advances3;
				var width1 = 0.0;
				var _g4 = 0;
				while(_g4 < advances.length) {
					var advance1 = advances[_g4];
					++_g4;
					width1 += advance1;
				}
				widthValue = width1;
				if(this.wordWrap) {
					if(offsetX + widthValue > this.width - 2) wrap = true;
				}
				if(wrap) {
					offsetY += heightValue;
					var i2 = this.layoutGroups.length - 1;
					var offsetCount = 0;
					while(true) {
						layoutGroup = this.layoutGroups[i2];
						if(i2 > 0 && layoutGroup.startIndex > previousSpaceIndex) offsetCount++; else break;
						i2--;
					}
					lineIndex++;
					offsetX = 2;
					if(offsetCount > 0) {
						var bumpX = this.layoutGroups[this.layoutGroups.length - offsetCount].offsetX;
						var _g11 = this.layoutGroups.length - offsetCount;
						var _g5 = this.layoutGroups.length;
						while(_g11 < _g5) {
							var i3 = _g11++;
							layoutGroup = this.layoutGroups[i3];
							layoutGroup.offsetX -= bumpX;
							layoutGroup.offsetY = offsetY;
							layoutGroup.lineIndex = lineIndex;
							offsetX += layoutGroup.width;
						}
					}
					layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,spaceIndex);
					layoutGroup.advances = advances;
					layoutGroup.offsetX = offsetX;
					layoutGroup.ascent = ascent;
					layoutGroup.descent = descent;
					layoutGroup.leading = leading;
					layoutGroup.lineIndex = lineIndex;
					layoutGroup.offsetY = offsetY;
					layoutGroup.width = widthValue;
					layoutGroup.height = heightValue;
					this.layoutGroups.push(layoutGroup);
					offsetX = widthValue + spaceWidth;
					marginRight = spaceWidth;
					wrap = false;
				} else {
					if(layoutGroup != null && textIndex == spaceIndex) {
						if(formatRange.format.align != openfl_text_TextFormatAlign.JUSTIFY) layoutGroup.endIndex = spaceIndex;
						layoutGroup.advances.push(spaceWidth);
						marginRight += spaceWidth;
					} else if(layoutGroup == null || lineFormat.align == openfl_text_TextFormatAlign.JUSTIFY) {
						layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,spaceIndex);
						layoutGroup.advances = advances;
						layoutGroup.offsetX = offsetX;
						layoutGroup.ascent = ascent;
						layoutGroup.descent = descent;
						layoutGroup.leading = leading;
						layoutGroup.lineIndex = lineIndex;
						layoutGroup.offsetY = offsetY;
						layoutGroup.width = widthValue;
						layoutGroup.height = heightValue;
						this.layoutGroups.push(layoutGroup);
						layoutGroup.advances.push(spaceWidth);
						marginRight = spaceWidth;
					} else {
						layoutGroup.endIndex = spaceIndex;
						layoutGroup.advances = layoutGroup.advances.concat(advances);
						layoutGroup.width += marginRight + widthValue;
						layoutGroup.advances.push(spaceWidth);
						marginRight = spaceWidth;
					}
					offsetX += widthValue + spaceWidth;
				}
				textIndex = spaceIndex + 1;
				previousSpaceIndex = spaceIndex;
				spaceIndex = this.text.indexOf(" ",previousSpaceIndex + 1);
				if(formatRange.end <= previousSpaceIndex) {
					layoutGroup = null;
					if(rangeIndex < _g.textFormatRanges.length - 1) {
						rangeIndex++;
						formatRange = _g.textFormatRanges[rangeIndex];
						currentFormat.__merge(formatRange.format);
						openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
						ascent = currentFormat.size;
						descent = currentFormat.size * 0.185;
						leading = currentFormat.leading;
						heightValue = ascent + descent + leading;
						if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
					}
				}
				if(spaceIndex > breakIndex && breakIndex > -1 || textIndex > this.text.length || spaceIndex > formatRange.end || spaceIndex == -1 && breakIndex > -1) break;
			}
		} else {
			if(textIndex >= formatRange.end) break;
			layoutGroup = new openfl__$internal_text_TextLayoutGroup(formatRange.format,textIndex,formatRange.end);
			var text2 = this.text;
			var advances4 = [];
			var _g6 = textIndex;
			while(_g6 < formatRange.end) {
				var i4 = _g6++;
				advances4.push(openfl__$internal_text_TextEngine.__context.measureText(text2.charAt(i4)).width);
			}
			layoutGroup.advances = advances4;
			layoutGroup.offsetX = offsetX;
			layoutGroup.ascent = ascent;
			layoutGroup.descent = descent;
			layoutGroup.leading = leading;
			layoutGroup.lineIndex = lineIndex;
			layoutGroup.offsetY = offsetY;
			var advances5 = layoutGroup.advances;
			var width2 = 0.0;
			var _g7 = 0;
			while(_g7 < advances5.length) {
				var advance2 = advances5[_g7];
				++_g7;
				width2 += advance2;
			}
			layoutGroup.width = width2;
			layoutGroup.height = heightValue;
			this.layoutGroups.push(layoutGroup);
			offsetX += layoutGroup.width;
			textIndex = formatRange.end;
			if(rangeIndex < _g.textFormatRanges.length - 1) {
				rangeIndex++;
				formatRange = _g.textFormatRanges[rangeIndex];
				currentFormat.__merge(formatRange.format);
				openfl__$internal_text_TextEngine.__context.font = openfl__$internal_text_TextEngine.getFont(currentFormat);
				ascent = currentFormat.size;
				descent = currentFormat.size * 0.185;
				leading = currentFormat.leading;
				heightValue = ascent + descent + leading;
				if(spaceIndex > -1) spaceWidth = openfl__$internal_text_TextEngine.__context.measureText(" ").width;
			}
		}
	}
	,setTextAlignment: function() {
		var lineIndex = -1;
		var offsetX = 0.0;
		var group;
		var lineLength;
		var _g1 = 0;
		var _g = this.layoutGroups.length;
		while(_g1 < _g) {
			var i = _g1++;
			group = this.layoutGroups[i];
			if(group.lineIndex != lineIndex) {
				lineIndex = group.lineIndex;
				var _g2 = group.format.align;
				switch(_g2[1]) {
				case 3:
					if(this.lineWidths[lineIndex] < this.width - 4) offsetX = Math.round((this.width - 4 - this.lineWidths[lineIndex]) / 2); else offsetX = 0;
					break;
				case 1:
					if(this.lineWidths[lineIndex] < this.width - 4) offsetX = Math.round(this.width - 4 - this.lineWidths[lineIndex]); else offsetX = 0;
					break;
				case 2:
					if(this.lineWidths[lineIndex] < this.width - 4) {
						lineLength = 1;
						var _g4 = i + 1;
						var _g3 = this.layoutGroups.length;
						while(_g4 < _g3) {
							var j = _g4++;
							if(this.layoutGroups[j].lineIndex == lineIndex) lineLength++; else break;
						}
						if(lineLength > 1) {
							group = this.layoutGroups[i + lineLength - 1];
							if(group.endIndex < this.text.length && this.text.charAt(group.endIndex) != "\n") {
								offsetX = (this.width - 4 - this.lineWidths[lineIndex]) / (lineLength - 1);
								var _g31 = 1;
								while(_g31 < lineLength) {
									var j1 = _g31++;
									this.layoutGroups[i + j1].offsetX += offsetX * j1;
								}
							}
						}
					}
					offsetX = 0;
					break;
				default:
					offsetX = 0;
				}
			}
			if(offsetX > 0) group.offsetX += offsetX;
		}
	}
	,update: function() {
		if(this.text == null || StringTools.trim(this.text) == "" || this.textFormatRanges.length == 0) {
			this.lineAscents.splice(0,this.lineAscents.length);
			this.lineBreaks.splice(0,this.lineBreaks.length);
			this.lineDescents.splice(0,this.lineDescents.length);
			this.lineLeadings.splice(0,this.lineLeadings.length);
			this.lineHeights.splice(0,this.lineHeights.length);
			this.lineWidths.splice(0,this.lineWidths.length);
			this.layoutGroups.splice(0,this.layoutGroups.length);
			this.textWidth = 0;
			this.textHeight = 0;
			this.numLines = 1;
			this.maxScrollH = 0;
			this.maxScrollV = 1;
			this.bottomScrollV = 1;
		} else {
			this.getLayoutGroups();
			this.getLineMeasurements();
			this.setTextAlignment();
		}
		this.getBounds();
	}
	,__class__: openfl__$internal_text_TextEngine
};
var openfl__$internal_text_TextFormatRange = function(format,start,end) {
	this.format = format;
	this.start = start;
	this.end = end;
};
$hxClasses["openfl._internal.text.TextFormatRange"] = openfl__$internal_text_TextFormatRange;
openfl__$internal_text_TextFormatRange.__name__ = ["openfl","_internal","text","TextFormatRange"];
openfl__$internal_text_TextFormatRange.prototype = {
	__class__: openfl__$internal_text_TextFormatRange
};
var openfl__$internal_text_TextLayoutGroup = function(format,startIndex,endIndex) {
	this.format = format;
	this.startIndex = startIndex;
	this.endIndex = endIndex;
};
$hxClasses["openfl._internal.text.TextLayoutGroup"] = openfl__$internal_text_TextLayoutGroup;
openfl__$internal_text_TextLayoutGroup.__name__ = ["openfl","_internal","text","TextLayoutGroup"];
openfl__$internal_text_TextLayoutGroup.prototype = {
	__class__: openfl__$internal_text_TextLayoutGroup
};
var openfl_display_Application = function() {
	lime_app_Application.call(this);
	if(openfl_Lib.application == null) openfl_Lib.application = this;
};
$hxClasses["openfl.display.Application"] = openfl_display_Application;
openfl_display_Application.__name__ = ["openfl","display","Application"];
openfl_display_Application.__super__ = lime_app_Application;
openfl_display_Application.prototype = $extend(lime_app_Application.prototype,{
	create: function(config) {
		this.config = config;
		this.backend.create(config);
		if(config != null) {
			if(Object.prototype.hasOwnProperty.call(config,"fps")) this.backend.setFrameRate(config.fps);
			if(Object.prototype.hasOwnProperty.call(config,"windows")) {
				var _g = 0;
				var _g1 = config.windows;
				while(_g < _g1.length) {
					var windowConfig = _g1[_g];
					++_g;
					var $window = new openfl_display_Window(windowConfig);
					this.createWindow($window);
					break;
				}
			}
			if(this.preloader == null || this.preloader.complete) this.onPreloadComplete();
		}
	}
	,__class__: openfl_display_Application
});
var openfl_display_Bitmap = function(bitmapData,pixelSnapping,smoothing) {
	if(smoothing == null) smoothing = false;
	openfl_display_DisplayObject.call(this);
	this.bitmapData = bitmapData;
	this.pixelSnapping = pixelSnapping;
	this.smoothing = smoothing;
	if(pixelSnapping == null) this.pixelSnapping = openfl_display_PixelSnapping.AUTO;
};
$hxClasses["openfl.display.Bitmap"] = openfl_display_Bitmap;
openfl_display_Bitmap.__name__ = ["openfl","display","Bitmap"];
openfl_display_Bitmap.__super__ = openfl_display_DisplayObject;
openfl_display_Bitmap.prototype = $extend(openfl_display_DisplayObject.prototype,{
	__getBounds: function(rect,matrix) {
		if(this.bitmapData != null) {
			var bounds = openfl_geom_Rectangle.__temp;
			bounds.setTo(0,0,this.bitmapData.width,this.bitmapData.height);
			bounds.__transform(bounds,matrix);
			rect.__expand(bounds.x,bounds.y,bounds.width,bounds.height);
		}
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || this.bitmapData == null) return false;
		if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
		this.__getWorldTransform();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(px > 0 && py > 0 && px <= this.bitmapData.width && py <= this.bitmapData.height) {
			if(stack != null && !interactiveOnly) stack.push(hitObject);
			return true;
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		if(this.bitmapData == null) return false;
		this.__getWorldTransform();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(px > 0 && py > 0 && px <= this.bitmapData.width && py <= this.bitmapData.height) return true;
		return false;
	}
	,__renderCairo: function(renderSession) {
		openfl__$internal_renderer_cairo_CairoBitmap.render(this,renderSession);
	}
	,__renderCairoMask: function(renderSession) {
		renderSession.cairo.rectangle(0,0,this.get_width(),this.get_height());
	}
	,__renderCanvas: function(renderSession) {
		openfl__$internal_renderer_canvas_CanvasBitmap.render(this,renderSession);
	}
	,__renderCanvasMask: function(renderSession) {
		renderSession.context.rect(0,0,this.get_width(),this.get_height());
	}
	,__renderDOM: function(renderSession) {
		if(this.stage != null && this.__worldVisible && this.__renderable && this.bitmapData != null && this.bitmapData.__isValid) {
			if(this.bitmapData.image.buffer.__srcImage != null) openfl__$internal_renderer_dom_DOMBitmap.renderImage(this,renderSession); else openfl__$internal_renderer_dom_DOMBitmap.renderCanvas(this,renderSession);
		} else {
			if(this.__image != null) {
				renderSession.element.removeChild(this.__image);
				this.__image = null;
				this.__style = null;
			}
			if(this.__canvas != null) {
				renderSession.element.removeChild(this.__canvas);
				this.__canvas = null;
				this.__style = null;
			}
		}
	}
	,__renderGL: function(renderSession) {
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		if(!this.__renderable || this.__worldAlpha <= 0 || this.bitmapData == null || !this.bitmapData.__isValid) null; else renderSession.spriteBatch.renderBitmapData(this.bitmapData,this.smoothing,this.__renderTransform,this.__worldColorTransform,this.__worldAlpha,this.__blendMode,this.__shader,this.pixelSnapping);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__updateMask: function(maskGraphics) {
		maskGraphics.__commands.overrideMatrix(this.__worldTransform);
		maskGraphics.beginFill(0);
		maskGraphics.drawRect(0,0,this.bitmapData.width,this.bitmapData.height);
		if(maskGraphics.__bounds == null) maskGraphics.__bounds = new openfl_geom_Rectangle();
		this.__getBounds(maskGraphics.__bounds,openfl_geom_Matrix.__identity);
		openfl_display_DisplayObject.prototype.__updateMask.call(this,maskGraphics);
	}
	,get_height: function() {
		if(this.bitmapData != null) return this.bitmapData.height * this.get_scaleY();
		return 0;
	}
	,set_height: function(value) {
		if(this.bitmapData != null) {
			if(value != this.bitmapData.height) this.set_scaleY(value / this.bitmapData.height);
			return value;
		}
		return 0;
	}
	,get_width: function() {
		if(this.bitmapData != null) return this.bitmapData.width * this.get_scaleX();
		return 0;
	}
	,set_width: function(value) {
		if(this.bitmapData != null) {
			if(value != this.bitmapData.width) this.set_scaleX(value / this.bitmapData.width);
			return value;
		}
		return 0;
	}
	,__class__: openfl_display_Bitmap
});
var openfl_display_TextureUvs = function() {
	this.y3 = 0;
	this.y2 = 0;
	this.y1 = 0;
	this.y0 = 0;
	this.x3 = 0;
	this.x2 = 0;
	this.x1 = 0;
	this.x0 = 0;
};
$hxClasses["openfl.display.TextureUvs"] = openfl_display_TextureUvs;
openfl_display_TextureUvs.__name__ = ["openfl","display","TextureUvs"];
openfl_display_TextureUvs.prototype = {
	reset: function() {
		this.x0 = this.x1 = this.x2 = this.x3 = this.y0 = this.y1 = this.y2 = this.y3 = 0;
	}
	,__class__: openfl_display_TextureUvs
};
var openfl_display_BitmapDataChannel = function() { };
$hxClasses["openfl.display.BitmapDataChannel"] = openfl_display_BitmapDataChannel;
openfl_display_BitmapDataChannel.__name__ = ["openfl","display","BitmapDataChannel"];
var openfl_display_BlendMode = $hxClasses["openfl.display.BlendMode"] = { __ename__ : ["openfl","display","BlendMode"], __constructs__ : ["ADD","ALPHA","DARKEN","DIFFERENCE","ERASE","HARDLIGHT","INVERT","LAYER","LIGHTEN","MULTIPLY","NORMAL","OVERLAY","SCREEN","SHADER","SUBTRACT"] };
openfl_display_BlendMode.ADD = ["ADD",0];
openfl_display_BlendMode.ADD.toString = $estr;
openfl_display_BlendMode.ADD.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.ALPHA = ["ALPHA",1];
openfl_display_BlendMode.ALPHA.toString = $estr;
openfl_display_BlendMode.ALPHA.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.DARKEN = ["DARKEN",2];
openfl_display_BlendMode.DARKEN.toString = $estr;
openfl_display_BlendMode.DARKEN.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.DIFFERENCE = ["DIFFERENCE",3];
openfl_display_BlendMode.DIFFERENCE.toString = $estr;
openfl_display_BlendMode.DIFFERENCE.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.ERASE = ["ERASE",4];
openfl_display_BlendMode.ERASE.toString = $estr;
openfl_display_BlendMode.ERASE.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.HARDLIGHT = ["HARDLIGHT",5];
openfl_display_BlendMode.HARDLIGHT.toString = $estr;
openfl_display_BlendMode.HARDLIGHT.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.INVERT = ["INVERT",6];
openfl_display_BlendMode.INVERT.toString = $estr;
openfl_display_BlendMode.INVERT.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.LAYER = ["LAYER",7];
openfl_display_BlendMode.LAYER.toString = $estr;
openfl_display_BlendMode.LAYER.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.LIGHTEN = ["LIGHTEN",8];
openfl_display_BlendMode.LIGHTEN.toString = $estr;
openfl_display_BlendMode.LIGHTEN.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.MULTIPLY = ["MULTIPLY",9];
openfl_display_BlendMode.MULTIPLY.toString = $estr;
openfl_display_BlendMode.MULTIPLY.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.NORMAL = ["NORMAL",10];
openfl_display_BlendMode.NORMAL.toString = $estr;
openfl_display_BlendMode.NORMAL.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.OVERLAY = ["OVERLAY",11];
openfl_display_BlendMode.OVERLAY.toString = $estr;
openfl_display_BlendMode.OVERLAY.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.SCREEN = ["SCREEN",12];
openfl_display_BlendMode.SCREEN.toString = $estr;
openfl_display_BlendMode.SCREEN.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.SHADER = ["SHADER",13];
openfl_display_BlendMode.SHADER.toString = $estr;
openfl_display_BlendMode.SHADER.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.SUBTRACT = ["SUBTRACT",14];
openfl_display_BlendMode.SUBTRACT.toString = $estr;
openfl_display_BlendMode.SUBTRACT.__enum__ = openfl_display_BlendMode;
openfl_display_BlendMode.__empty_constructs__ = [openfl_display_BlendMode.ADD,openfl_display_BlendMode.ALPHA,openfl_display_BlendMode.DARKEN,openfl_display_BlendMode.DIFFERENCE,openfl_display_BlendMode.ERASE,openfl_display_BlendMode.HARDLIGHT,openfl_display_BlendMode.INVERT,openfl_display_BlendMode.LAYER,openfl_display_BlendMode.LIGHTEN,openfl_display_BlendMode.MULTIPLY,openfl_display_BlendMode.NORMAL,openfl_display_BlendMode.OVERLAY,openfl_display_BlendMode.SCREEN,openfl_display_BlendMode.SHADER,openfl_display_BlendMode.SUBTRACT];
var openfl_display_CapsStyle = $hxClasses["openfl.display.CapsStyle"] = { __ename__ : ["openfl","display","CapsStyle"], __constructs__ : ["NONE","ROUND","SQUARE"] };
openfl_display_CapsStyle.NONE = ["NONE",0];
openfl_display_CapsStyle.NONE.toString = $estr;
openfl_display_CapsStyle.NONE.__enum__ = openfl_display_CapsStyle;
openfl_display_CapsStyle.ROUND = ["ROUND",1];
openfl_display_CapsStyle.ROUND.toString = $estr;
openfl_display_CapsStyle.ROUND.__enum__ = openfl_display_CapsStyle;
openfl_display_CapsStyle.SQUARE = ["SQUARE",2];
openfl_display_CapsStyle.SQUARE.toString = $estr;
openfl_display_CapsStyle.SQUARE.__enum__ = openfl_display_CapsStyle;
openfl_display_CapsStyle.__empty_constructs__ = [openfl_display_CapsStyle.NONE,openfl_display_CapsStyle.ROUND,openfl_display_CapsStyle.SQUARE];
var openfl_display_DirectRenderer = function(type) {
	if(type == null) type = "DirectRenderer";
	openfl_display_DisplayObject.call(this);
};
$hxClasses["openfl.display.DirectRenderer"] = openfl_display_DirectRenderer;
openfl_display_DirectRenderer.__name__ = ["openfl","display","DirectRenderer"];
openfl_display_DirectRenderer.__super__ = openfl_display_DisplayObject;
openfl_display_DirectRenderer.prototype = $extend(openfl_display_DisplayObject.prototype,{
	get_render: function() {
		return this.__render;
	}
	,set_render: function(value) {
		return this.__render = value;
	}
	,__class__: openfl_display_DirectRenderer
	,__properties__: $extend(openfl_display_DisplayObject.prototype.__properties__,{set_render:"set_render",get_render:"get_render"})
});
var openfl_display_FrameLabel = function(name,frame) {
	openfl_events_EventDispatcher.call(this);
	this.__name = name;
	this.__frame = frame;
};
$hxClasses["openfl.display.FrameLabel"] = openfl_display_FrameLabel;
openfl_display_FrameLabel.__name__ = ["openfl","display","FrameLabel"];
openfl_display_FrameLabel.__super__ = openfl_events_EventDispatcher;
openfl_display_FrameLabel.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	get_frame: function() {
		return this.__frame;
	}
	,get_name: function() {
		return this.__name;
	}
	,__class__: openfl_display_FrameLabel
	,__properties__: {get_name:"get_name",get_frame:"get_frame"}
});
var openfl_display_GradientType = $hxClasses["openfl.display.GradientType"] = { __ename__ : ["openfl","display","GradientType"], __constructs__ : ["RADIAL","LINEAR"] };
openfl_display_GradientType.RADIAL = ["RADIAL",0];
openfl_display_GradientType.RADIAL.toString = $estr;
openfl_display_GradientType.RADIAL.__enum__ = openfl_display_GradientType;
openfl_display_GradientType.LINEAR = ["LINEAR",1];
openfl_display_GradientType.LINEAR.toString = $estr;
openfl_display_GradientType.LINEAR.__enum__ = openfl_display_GradientType;
openfl_display_GradientType.__empty_constructs__ = [openfl_display_GradientType.RADIAL,openfl_display_GradientType.LINEAR];
var openfl_display_Graphics = function() {
	this.__glStack = [];
	this.__dirty = true;
	this.__commands = new openfl__$internal_renderer_DrawCommandBuffer();
	this.__strokePadding = 0;
	this.__positionX = 0;
	this.__positionY = 0;
	this.__hardware = true;
	this.moveTo(0,0);
};
$hxClasses["openfl.display.Graphics"] = openfl_display_Graphics;
openfl_display_Graphics.__name__ = ["openfl","display","Graphics"];
openfl_display_Graphics.prototype = {
	beginBitmapFill: function(bitmap,matrix,repeat,smooth) {
		if(smooth == null) smooth = false;
		if(repeat == null) repeat = true;
		this.__commands.beginBitmapFill(bitmap,matrix != null?new openfl_geom_Matrix(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty):null,repeat,smooth);
		this.__visible = true;
	}
	,beginFill: function(color,alpha) {
		if(alpha == null) alpha = 1;
		if(color == null) color = 0;
		this.__commands.beginFill(color & 16777215,alpha);
		if(alpha > 0) this.__visible = true;
	}
	,beginGradientFill: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.__commands.beginGradientFill(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
		this.__hardware = false;
		var _g = 0;
		while(_g < alphas.length) {
			var alpha = alphas[_g];
			++_g;
			if(alpha > 0) {
				this.__visible = true;
				break;
			}
		}
	}
	,clear: function() {
		this.__commands.clear();
		this.__strokePadding = 0;
		if(this.__bounds != null) {
			this.set___dirty(true);
			this.__transformDirty = true;
			this.__bounds = null;
		}
		this.__visible = false;
		this.__hardware = true;
		this.moveTo(0,0);
	}
	,copyFrom: function(sourceGraphics) {
		this.__bounds = sourceGraphics.__bounds.clone();
		this.__commands = sourceGraphics.__commands.copy();
		this.set___dirty(true);
		this.__strokePadding = sourceGraphics.__strokePadding;
		this.__positionX = sourceGraphics.__positionX;
		this.__positionY = sourceGraphics.__positionY;
		this.__transformDirty = true;
		this.__visible = sourceGraphics.__visible;
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding,this.__positionY + this.__strokePadding);
		var ix1;
		var iy1;
		var ix2;
		var iy2;
		ix1 = anchorX;
		ix2 = anchorX;
		if(!((controlX1 < anchorX && controlX1 > this.__positionX || controlX1 > anchorX && controlX1 < this.__positionX) && (controlX2 < anchorX && controlX2 > this.__positionX || controlX2 > anchorX && controlX2 < this.__positionX))) {
			var u = 2 * this.__positionX - 4 * controlX1 + 2 * controlX2;
			var v = controlX1 - this.__positionX;
			var w = -this.__positionX + 3 * controlX1 + anchorX - 3 * controlX2;
			var t1 = (-u + Math.sqrt(u * u - 4 * v * w)) / (2 * w);
			var t2 = (-u - Math.sqrt(u * u - 4 * v * w)) / (2 * w);
			if(t1 > 0 && t1 < 1) ix1 = this.__calculateBezierCubicPoint(t1,this.__positionX,controlX1,controlX2,anchorX);
			if(t2 > 0 && t2 < 1) ix2 = this.__calculateBezierCubicPoint(t2,this.__positionX,controlX1,controlX2,anchorX);
		}
		iy1 = anchorY;
		iy2 = anchorY;
		if(!((controlY1 < anchorY && controlY1 > this.__positionX || controlY1 > anchorY && controlY1 < this.__positionX) && (controlY2 < anchorY && controlY2 > this.__positionX || controlY2 > anchorY && controlY2 < this.__positionX))) {
			var u1 = 2 * this.__positionX - 4 * controlY1 + 2 * controlY2;
			var v1 = controlY1 - this.__positionX;
			var w1 = -this.__positionX + 3 * controlY1 + anchorY - 3 * controlY2;
			var t11 = (-u1 + Math.sqrt(u1 * u1 - 4 * v1 * w1)) / (2 * w1);
			var t21 = (-u1 - Math.sqrt(u1 * u1 - 4 * v1 * w1)) / (2 * w1);
			if(t11 > 0 && t11 < 1) iy1 = this.__calculateBezierCubicPoint(t11,this.__positionX,controlY1,controlY2,anchorY);
			if(t21 > 0 && t21 < 1) iy2 = this.__calculateBezierCubicPoint(t21,this.__positionX,controlY1,controlY2,anchorY);
		}
		this.__inflateBounds(ix1 - this.__strokePadding,iy1 - this.__strokePadding);
		this.__inflateBounds(ix1 + this.__strokePadding,iy1 + this.__strokePadding);
		this.__inflateBounds(ix2 - this.__strokePadding,iy2 - this.__strokePadding);
		this.__inflateBounds(ix2 + this.__strokePadding,iy2 + this.__strokePadding);
		this.__positionX = anchorX;
		this.__positionY = anchorY;
		this.__commands.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding,this.__positionY + this.__strokePadding);
		var ix;
		var iy;
		if(controlX < anchorX && controlX > this.__positionX || controlX > anchorX && controlX < this.__positionX) ix = anchorX; else {
			var tx = (this.__positionX - controlX) / (this.__positionX - 2 * controlX + anchorX);
			ix = this.__calculateBezierQuadPoint(tx,this.__positionX,controlX,anchorX);
		}
		if(controlY < anchorY && controlY > this.__positionY || controlY > anchorY && controlY < this.__positionY) iy = anchorY; else {
			var ty = (this.__positionY - controlY) / (this.__positionY - 2 * controlY + anchorY);
			iy = this.__calculateBezierQuadPoint(ty,this.__positionY,controlY,anchorY);
		}
		this.__inflateBounds(ix - this.__strokePadding,iy - this.__strokePadding);
		this.__inflateBounds(ix + this.__strokePadding,iy + this.__strokePadding);
		this.__positionX = anchorX;
		this.__positionY = anchorY;
		this.__commands.curveTo(controlX,controlY,anchorX,anchorY);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawCircle: function(x,y,radius) {
		if(radius <= 0) return;
		this.__inflateBounds(x - radius - this.__strokePadding,y - radius - this.__strokePadding);
		this.__inflateBounds(x + radius + this.__strokePadding,y + radius + this.__strokePadding);
		this.__commands.drawCircle(x,y,radius);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawEllipse: function(x,y,width,height) {
		if(width <= 0 || height <= 0) return;
		this.__inflateBounds(x - this.__strokePadding,y - this.__strokePadding);
		this.__inflateBounds(x + width + this.__strokePadding,y + height + this.__strokePadding);
		this.__commands.drawEllipse(x,y,width,height);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawGraphicsData: function(graphicsData) {
		var fill;
		var bitmapFill;
		var gradientFill;
		var stroke;
		var path;
		var _g = 0;
		while(_g < graphicsData.length) {
			var graphics = graphicsData.data[_g];
			++_g;
			if(js_Boot.__instanceof(graphics,openfl_display_GraphicsSolidFill)) {
				fill = graphics;
				this.beginFill(fill.color,fill.alpha);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsBitmapFill)) {
				bitmapFill = graphics;
				this.beginBitmapFill(bitmapFill.bitmapData,bitmapFill.matrix,bitmapFill.repeat,bitmapFill.smooth);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsGradientFill)) {
				gradientFill = graphics;
				this.beginGradientFill(gradientFill.type,gradientFill.colors,gradientFill.alphas,gradientFill.ratios,gradientFill.matrix,gradientFill.spreadMethod,gradientFill.interpolationMethod,gradientFill.focalPointRatio);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsStroke)) {
				stroke = graphics;
				if(js_Boot.__instanceof(stroke.fill,openfl_display_GraphicsSolidFill)) {
					fill = stroke.fill;
					this.lineStyle(stroke.thickness,fill.color,fill.alpha,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
				} else {
					this.lineStyle(stroke.thickness,0,1,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
					if(js_Boot.__instanceof(stroke.fill,openfl_display_GraphicsBitmapFill)) {
						bitmapFill = stroke.fill;
						this.lineBitmapStyle(bitmapFill.bitmapData,bitmapFill.matrix,bitmapFill.repeat,bitmapFill.smooth);
					} else if(js_Boot.__instanceof(stroke.fill,openfl_display_GraphicsGradientFill)) {
						gradientFill = stroke.fill;
						this.lineGradientStyle(gradientFill.type,gradientFill.colors,gradientFill.alphas,gradientFill.ratios,gradientFill.matrix,gradientFill.spreadMethod,gradientFill.interpolationMethod,gradientFill.focalPointRatio);
					}
				}
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsPath)) {
				path = graphics;
				this.drawPath(path.commands,path.data,path.winding);
			} else if(js_Boot.__instanceof(graphics,openfl_display_GraphicsEndFill)) this.endFill();
		}
	}
	,drawPath: function(commands,data,winding) {
		var dataIndex = 0;
		var _g = 0;
		try {
			while(_g < commands.length) {
				var command = commands.data[_g];
				++_g;
				if(command != null) switch(command) {
				case 1:
					this.moveTo(data.data[dataIndex],data.data[dataIndex + 1]);
					dataIndex += 2;
					break;
				case 2:
					this.lineTo(data.data[dataIndex],data.data[dataIndex + 1]);
					dataIndex += 2;
					break;
				case 4:
					this.moveTo(data.data[dataIndex + 2],data.data[dataIndex + 3]);
					throw "__break__";
					dataIndex += 4;
					break;
				case 5:
					this.lineTo(data.data[dataIndex + 2],data.data[dataIndex + 3]);
					throw "__break__";
					dataIndex += 4;
					break;
				case 3:
					this.curveTo(data.data[dataIndex],data.data[dataIndex + 1],data.data[dataIndex + 2],data.data[dataIndex + 3]);
					dataIndex += 4;
					break;
				case 6:
					this.cubicCurveTo(data.data[dataIndex],data.data[dataIndex + 1],data.data[dataIndex + 2],data.data[dataIndex + 3],data.data[dataIndex + 4],data.data[dataIndex + 5]);
					dataIndex += 6;
					break;
				default:
				} else {
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
	}
	,drawRect: function(x,y,width,height) {
		if(width <= 0 || height <= 0) return;
		this.__inflateBounds(x - this.__strokePadding,y - this.__strokePadding);
		this.__inflateBounds(x + width + this.__strokePadding,y + height + this.__strokePadding);
		this.__commands.drawRect(x,y,width,height);
		this.set___dirty(true);
	}
	,drawRoundRect: function(x,y,width,height,rx,ry) {
		if(ry == null) ry = -1;
		if(width <= 0 || height <= 0) return;
		this.__inflateBounds(x - this.__strokePadding,y - this.__strokePadding);
		this.__inflateBounds(x + width + this.__strokePadding,y + height + this.__strokePadding);
		this.__commands.drawRoundRect(x,y,width,height,rx,ry);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,drawRoundRectComplex: function(x,y,width,height,topLeftRadius,topRightRadius,bottomLeftRadius,bottomRightRadius) {
		openfl_Lib.notImplemented("Graphics.drawRoundRectComplex");
	}
	,drawTiles: function(sheet,tileData,smooth,flags,shader,count) {
		if(count == null) count = -1;
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		var useScale = (flags & 1) > 0;
		var useRotation = (flags & 2) > 0;
		var useRGB = (flags & 4) > 0;
		var useAlpha = (flags & 8) > 0;
		var useTransform = (flags & 16) > 0;
		var useRect = (flags & 32) > 0;
		var useOrigin = (flags & 64) > 0;
		var rect = openfl_geom_Rectangle.__temp;
		var matrix = openfl_geom_Matrix.__temp;
		var numValues = 3;
		var totalCount = count;
		if(count < 0) totalCount = tileData.length;
		if(useTransform || useScale || useRotation || useRGB || useAlpha) {
			var scaleIndex = 0;
			var rotationIndex = 0;
			var transformIndex = 0;
			if(useRect) if(useOrigin) numValues = 8; else numValues = 6;
			if(useScale) {
				scaleIndex = numValues;
				numValues++;
			}
			if(useRotation) {
				rotationIndex = numValues;
				numValues++;
			}
			if(useTransform) {
				transformIndex = numValues;
				numValues += 4;
			}
			if(useRGB) numValues += 3;
			if(useAlpha) numValues++;
			var itemCount = totalCount / numValues | 0;
			var index = 0;
			var cacheID = -1;
			var x;
			var y;
			var id;
			var scale;
			var rotation;
			var tileWidth;
			var tileHeight;
			var originX;
			var originY;
			var tile = null;
			var tilePoint = null;
			while(index < totalCount) {
				x = tileData[index];
				y = tileData[index + 1];
				if(!useRect) id = tileData[index + 2] | 0; else id = -1;
				scale = 1.0;
				rotation = 0.0;
				if(useScale) scale = tileData[index + scaleIndex];
				if(useRotation) rotation = tileData[index + rotationIndex];
				if(id < 0) tile = null; else if(!useRect && cacheID != id) {
					cacheID = id;
					tile = sheet.__tileRects[id];
					tilePoint = sheet.__centerPoints[id];
				} else if(useRect) {
					tile = sheet.__rectTile;
					tile.setTo(tileData[index + 2],tileData[index + 3],tileData[index + 4],tileData[index + 5]);
					tilePoint = sheet.__point;
					if(useOrigin) {
						tilePoint.x = tileData[index + 6] / tile.width;
						tilePoint.y = tileData[index + 7] / tile.height;
					} else {
						tilePoint.x = 0;
						tilePoint.y = 0;
					}
				}
				if(tile != null) {
					if(useTransform) {
						rect.setTo(0,0,tile.width,tile.height);
						matrix.setTo(tileData[index + transformIndex],tileData[index + transformIndex + 1],tileData[index + transformIndex + 2],tileData[index + transformIndex + 3],0,0);
						originX = tilePoint.x * scale;
						originY = tilePoint.y * scale;
						matrix.translate(x - (originX * matrix.a + originY * matrix.c + matrix.tx),y - (originX * matrix.b + originY * matrix.d + matrix.ty));
						rect.__transform(rect,matrix);
						this.__inflateBounds(rect.x,rect.y);
						this.__inflateBounds(rect.get_right(),rect.get_bottom());
					} else {
						tileWidth = tile.width * scale;
						tileHeight = tile.height * scale;
						x -= tilePoint.x * tileWidth;
						y -= tilePoint.y * tileHeight;
						if(rotation != 0) {
							rect.setTo(0,0,tileWidth,tileHeight);
							matrix.identity();
							matrix.rotate(rotation);
							matrix.translate(x,y);
							rect.__transform(rect,matrix);
							this.__inflateBounds(rect.x,rect.y);
							this.__inflateBounds(rect.get_right(),rect.get_bottom());
						} else {
							this.__inflateBounds(x,y);
							this.__inflateBounds(x + tileWidth,y + tileHeight);
						}
					}
				}
				index += numValues;
			}
		} else {
			var x1;
			var y1;
			var id1;
			var tile1;
			var centerPoint;
			var originX1;
			var originY1;
			var rect1 = openfl_geom_Rectangle.__temp;
			var index1 = 0;
			while(index1 < totalCount) {
				x1 = tileData[index1++];
				y1 = tileData[index1++];
				if(!useRect) id1 = Std["int"](tileData[index1++]); else id1 = -1;
				originX1 = 0.0;
				originY1 = 0.0;
				if(useRect) {
					rect1.setTo(tileData[index1++],tileData[index1++],tileData[index1++],tileData[index1++]);
					if(useOrigin) {
						originX1 = tileData[index1++];
						originY1 = tileData[index1++];
					}
					this.__inflateBounds(x1 - originX1,y1 - originY1);
					this.__inflateBounds(x1 - originX1 + rect1.width,y1 - originY1 + rect1.height);
				} else {
					tile1 = sheet.__tileRects[id1];
					if(tile1 != null) {
						centerPoint = sheet.__centerPoints[id1];
						originX1 = centerPoint.x * tile1.width;
						originY1 = centerPoint.y * tile1.height;
						this.__inflateBounds(x1 - originX1,y1 - originY1);
						this.__inflateBounds(x1 - originX1 + tile1.width,y1 - originY1 + tile1.height);
					}
				}
			}
		}
		this.__commands.drawTiles(sheet,tileData,smooth,flags,shader,count);
		this.set___dirty(true);
		this.__visible = true;
	}
	,drawTriangles: function(vertices,indices,uvtData,culling,colors,blendMode) {
		if(blendMode == null) blendMode = 0;
		var vlen = vertices.length / 2 | 0;
		if(culling == null) culling = openfl_display_TriangleCulling.NONE;
		if(indices == null) {
			if(vlen % 3 != 0) throw new js__$Boot_HaxeError(new openfl_errors_ArgumentError("Not enough vertices to close a triangle."));
			var this1;
			this1 = new openfl_VectorData();
			var this2;
			this2 = new Array(0);
			this1.data = this2;
			this1.length = 0;
			this1.fixed = false;
			indices = this1;
			var _g = 0;
			while(_g < vlen) {
				var i = _g++;
				if(!indices.fixed) {
					indices.length++;
					if(indices.data.length < indices.length) {
						var data;
						var this3;
						this3 = new Array(indices.data.length + 10);
						data = this3;
						haxe_ds__$Vector_Vector_$Impl_$.blit(indices.data,0,data,0,indices.data.length);
						indices.data = data;
					}
					indices.data[indices.length - 1] = i;
				}
				indices.length;
			}
		}
		this.__inflateBounds(0,0);
		var tmpx = -Infinity;
		var tmpy = -Infinity;
		var maxX = -Infinity;
		var maxY = -Infinity;
		var _g1 = 0;
		while(_g1 < vlen) {
			var i1 = _g1++;
			tmpx = vertices.data[i1 * 2];
			tmpy = vertices.data[i1 * 2 + 1];
			if(maxX < tmpx) maxX = tmpx;
			if(maxY < tmpy) maxY = tmpy;
		}
		this.__inflateBounds(maxX,maxY);
		this.__commands.drawTriangles(vertices,indices,uvtData,culling,colors,blendMode);
		this.set___dirty(true);
		this.__visible = true;
	}
	,endFill: function() {
		this.__commands.endFill();
	}
	,lineBitmapStyle: function(bitmap,matrix,repeat,smooth) {
		if(smooth == null) smooth = false;
		if(repeat == null) repeat = true;
		this.__commands.lineBitmapStyle(bitmap,matrix != null?new openfl_geom_Matrix(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty):null,repeat,smooth);
	}
	,lineGradientStyle: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		this.__commands.lineGradientStyle(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
	}
	,lineStyle: function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit) {
		if(thickness != null) {
			if(joints == openfl_display_JointStyle.MITER) {
				if(thickness > this.__strokePadding) this.__strokePadding = thickness;
			} else if(thickness / 2 > this.__strokePadding) this.__strokePadding = thickness / 2;
		}
		this.__commands.lineStyle(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit);
		if(thickness != null) this.__visible = true;
	}
	,lineTo: function(x,y) {
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding,this.__positionY + this.__strokePadding);
		this.__positionX = x;
		this.__positionY = y;
		this.__inflateBounds(this.__positionX - this.__strokePadding,this.__positionY - this.__strokePadding);
		this.__inflateBounds(this.__positionX + this.__strokePadding * 2,this.__positionY + this.__strokePadding);
		this.__commands.lineTo(x,y);
		this.__hardware = false;
		this.set___dirty(true);
	}
	,moveTo: function(x,y) {
		this.__positionX = x;
		this.__positionY = y;
		this.__commands.moveTo(x,y);
	}
	,__calculateBezierCubicPoint: function(t,p1,p2,p3,p4) {
		var iT = 1 - t;
		return p1 * (iT * iT * iT) + 3 * p2 * t * (iT * iT) + 3 * p3 * iT * (t * t) + p4 * (t * t * t);
	}
	,__calculateBezierQuadPoint: function(t,p1,p2,p3) {
		var iT = 1 - t;
		return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;
	}
	,__getBounds: function(rect,matrix) {
		if(this.__bounds == null) return;
		var bounds = openfl_geom_Rectangle.__temp;
		this.__bounds.__transform(bounds,matrix);
		rect.__expand(bounds.x,bounds.y,bounds.width,bounds.height);
	}
	,__hitTest: function(x,y,shapeFlag,matrix) {
		if(this.__bounds == null) return false;
		var px = matrix.__transformInverseX(x,y);
		var py = matrix.__transformInverseY(x,y);
		if(px > this.__bounds.x && py > this.__bounds.y && this.__bounds.contains(px,py)) {
			if(shapeFlag) return openfl__$internal_renderer_canvas_CanvasGraphics.hitTest(this,px,py);
			return true;
		}
		return false;
	}
	,__inflateBounds: function(x,y) {
		if(this.__bounds == null) {
			this.__bounds = new openfl_geom_Rectangle(x,y,0,0);
			this.__transformDirty = true;
			return;
		}
		if(x < this.__bounds.x) {
			this.__bounds.width += this.__bounds.x - x;
			this.__bounds.x = x;
			this.__transformDirty = true;
		}
		if(y < this.__bounds.y) {
			this.__bounds.height += this.__bounds.y - y;
			this.__bounds.y = y;
			this.__transformDirty = true;
		}
		if(x > this.__bounds.x + this.__bounds.width) this.__bounds.width = x - this.__bounds.x;
		if(y > this.__bounds.y + this.__bounds.height) this.__bounds.height = y - this.__bounds.y;
	}
	,set___dirty: function(value) {
		if(value && this.__owner != null) this.__owner.__setRenderDirty();
		return this.__dirty = value;
	}
	,__class__: openfl_display_Graphics
	,__properties__: {set___dirty:"set___dirty"}
};
var openfl_display_IGraphicsFill = function() { };
$hxClasses["openfl.display.IGraphicsFill"] = openfl_display_IGraphicsFill;
openfl_display_IGraphicsFill.__name__ = ["openfl","display","IGraphicsFill"];
openfl_display_IGraphicsFill.prototype = {
	__class__: openfl_display_IGraphicsFill
};
var openfl_display_IGraphicsData = function() { };
$hxClasses["openfl.display.IGraphicsData"] = openfl_display_IGraphicsData;
openfl_display_IGraphicsData.__name__ = ["openfl","display","IGraphicsData"];
openfl_display_IGraphicsData.prototype = {
	__class__: openfl_display_IGraphicsData
};
var openfl_display_GraphicsBitmapFill = function(bitmapData,matrix,repeat,smooth) {
	if(smooth == null) smooth = false;
	if(repeat == null) repeat = true;
	this.bitmapData = bitmapData;
	this.matrix = matrix;
	this.repeat = repeat;
	this.smooth = smooth;
	this.__graphicsDataType = openfl_display_GraphicsDataType.BITMAP;
	this.__graphicsFillType = openfl_display_GraphicsFillType.BITMAP_FILL;
};
$hxClasses["openfl.display.GraphicsBitmapFill"] = openfl_display_GraphicsBitmapFill;
openfl_display_GraphicsBitmapFill.__name__ = ["openfl","display","GraphicsBitmapFill"];
openfl_display_GraphicsBitmapFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsBitmapFill.prototype = {
	__class__: openfl_display_GraphicsBitmapFill
};
var openfl_display_GraphicsEndFill = function() {
	this.__graphicsDataType = openfl_display_GraphicsDataType.END;
	this.__graphicsFillType = openfl_display_GraphicsFillType.END_FILL;
};
$hxClasses["openfl.display.GraphicsEndFill"] = openfl_display_GraphicsEndFill;
openfl_display_GraphicsEndFill.__name__ = ["openfl","display","GraphicsEndFill"];
openfl_display_GraphicsEndFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsEndFill.prototype = {
	__class__: openfl_display_GraphicsEndFill
};
var openfl_display_GraphicsGradientFill = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	if(focalPointRatio == null) focalPointRatio = 0;
	if(type == null) type = openfl_display_GradientType.LINEAR;
	if(spreadMethod == null) spreadMethod = openfl_display_SpreadMethod.PAD;
	if(interpolationMethod == null) interpolationMethod = openfl_display_InterpolationMethod.RGB;
	this.type = type;
	this.colors = colors;
	this.alphas = alphas;
	this.ratios = ratios;
	this.matrix = matrix;
	this.spreadMethod = spreadMethod;
	this.interpolationMethod = interpolationMethod;
	this.focalPointRatio = focalPointRatio;
	this.__graphicsDataType = openfl_display_GraphicsDataType.GRADIENT;
	this.__graphicsFillType = openfl_display_GraphicsFillType.GRADIENT_FILL;
};
$hxClasses["openfl.display.GraphicsGradientFill"] = openfl_display_GraphicsGradientFill;
openfl_display_GraphicsGradientFill.__name__ = ["openfl","display","GraphicsGradientFill"];
openfl_display_GraphicsGradientFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsGradientFill.prototype = {
	__class__: openfl_display_GraphicsGradientFill
};
var openfl_display_IGraphicsPath = function() { };
$hxClasses["openfl.display.IGraphicsPath"] = openfl_display_IGraphicsPath;
openfl_display_IGraphicsPath.__name__ = ["openfl","display","IGraphicsPath"];
var openfl_display_GraphicsPath = function(commands,data,winding) {
	if(winding == null) winding = openfl_display_GraphicsPathWinding.EVEN_ODD;
	this.commands = commands;
	this.data = data;
	this.winding = winding;
	this.__graphicsDataType = openfl_display_GraphicsDataType.PATH;
};
$hxClasses["openfl.display.GraphicsPath"] = openfl_display_GraphicsPath;
openfl_display_GraphicsPath.__name__ = ["openfl","display","GraphicsPath"];
openfl_display_GraphicsPath.__interfaces__ = [openfl_display_IGraphicsPath,openfl_display_IGraphicsData];
openfl_display_GraphicsPath.prototype = {
	curveTo: function(controlX,controlY,anchorX,anchorY) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 3;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = anchorX;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = anchorY;
			}
			this5.length;
			var this7 = this.data;
			if(!this7.fixed) {
				this7.length++;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
				this7.data[this7.length - 1] = controlX;
			}
			this7.length;
			var this9 = this.data;
			if(!this9.fixed) {
				this9.length++;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
				this9.data[this9.length - 1] = controlY;
			}
			this9.length;
		}
	}
	,lineTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 2;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,moveTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 1;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,wideLineTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 2;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,wideMoveTo: function(x,y) {
		if(this.commands != null && this.data != null) {
			var this1 = this.commands;
			if(!this1.fixed) {
				this1.length++;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
				this1.data[this1.length - 1] = 1;
			}
			this1.length;
			var this3 = this.data;
			if(!this3.fixed) {
				this3.length++;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
				this3.data[this3.length - 1] = x;
			}
			this3.length;
			var this5 = this.data;
			if(!this5.fixed) {
				this5.length++;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
				this5.data[this5.length - 1] = y;
			}
			this5.length;
		}
	}
	,__class__: openfl_display_GraphicsPath
};
var openfl_display_GraphicsPathCommand = function() { };
$hxClasses["openfl.display.GraphicsPathCommand"] = openfl_display_GraphicsPathCommand;
openfl_display_GraphicsPathCommand.__name__ = ["openfl","display","GraphicsPathCommand"];
var openfl_display_GraphicsPathWinding = $hxClasses["openfl.display.GraphicsPathWinding"] = { __ename__ : ["openfl","display","GraphicsPathWinding"], __constructs__ : ["EVEN_ODD","NON_ZERO"] };
openfl_display_GraphicsPathWinding.EVEN_ODD = ["EVEN_ODD",0];
openfl_display_GraphicsPathWinding.EVEN_ODD.toString = $estr;
openfl_display_GraphicsPathWinding.EVEN_ODD.__enum__ = openfl_display_GraphicsPathWinding;
openfl_display_GraphicsPathWinding.NON_ZERO = ["NON_ZERO",1];
openfl_display_GraphicsPathWinding.NON_ZERO.toString = $estr;
openfl_display_GraphicsPathWinding.NON_ZERO.__enum__ = openfl_display_GraphicsPathWinding;
openfl_display_GraphicsPathWinding.__empty_constructs__ = [openfl_display_GraphicsPathWinding.EVEN_ODD,openfl_display_GraphicsPathWinding.NON_ZERO];
var openfl_display_GraphicsSolidFill = function(color,alpha) {
	if(alpha == null) alpha = 1;
	if(color == null) color = 0;
	this.alpha = alpha;
	this.color = color;
	this.__graphicsDataType = openfl_display_GraphicsDataType.SOLID;
	this.__graphicsFillType = openfl_display_GraphicsFillType.SOLID_FILL;
};
$hxClasses["openfl.display.GraphicsSolidFill"] = openfl_display_GraphicsSolidFill;
openfl_display_GraphicsSolidFill.__name__ = ["openfl","display","GraphicsSolidFill"];
openfl_display_GraphicsSolidFill.__interfaces__ = [openfl_display_IGraphicsFill,openfl_display_IGraphicsData];
openfl_display_GraphicsSolidFill.prototype = {
	__class__: openfl_display_GraphicsSolidFill
};
var openfl_display_IGraphicsStroke = function() { };
$hxClasses["openfl.display.IGraphicsStroke"] = openfl_display_IGraphicsStroke;
openfl_display_IGraphicsStroke.__name__ = ["openfl","display","IGraphicsStroke"];
var openfl_display_GraphicsStroke = function(thickness,pixelHinting,scaleMode,caps,joints,miterLimit,fill) {
	if(miterLimit == null) miterLimit = 3;
	if(pixelHinting == null) pixelHinting = false;
	if(thickness == null) thickness = 0.0;
	if(caps != null) this.caps = caps; else this.caps = openfl_display_CapsStyle.NONE;
	this.fill = fill;
	if(joints != null) this.joints = joints; else this.joints = openfl_display_JointStyle.ROUND;
	this.miterLimit = miterLimit;
	this.pixelHinting = pixelHinting;
	if(scaleMode != null) this.scaleMode = scaleMode; else this.scaleMode = openfl_display_LineScaleMode.NORMAL;
	this.thickness = thickness;
	this.__graphicsDataType = openfl_display_GraphicsDataType.STROKE;
};
$hxClasses["openfl.display.GraphicsStroke"] = openfl_display_GraphicsStroke;
openfl_display_GraphicsStroke.__name__ = ["openfl","display","GraphicsStroke"];
openfl_display_GraphicsStroke.__interfaces__ = [openfl_display_IGraphicsStroke,openfl_display_IGraphicsData];
openfl_display_GraphicsStroke.prototype = {
	__class__: openfl_display_GraphicsStroke
};
var openfl_display_GraphicsDataType = $hxClasses["openfl.display.GraphicsDataType"] = { __ename__ : ["openfl","display","GraphicsDataType"], __constructs__ : ["STROKE","SOLID","GRADIENT","PATH","BITMAP","END"] };
openfl_display_GraphicsDataType.STROKE = ["STROKE",0];
openfl_display_GraphicsDataType.STROKE.toString = $estr;
openfl_display_GraphicsDataType.STROKE.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.SOLID = ["SOLID",1];
openfl_display_GraphicsDataType.SOLID.toString = $estr;
openfl_display_GraphicsDataType.SOLID.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.GRADIENT = ["GRADIENT",2];
openfl_display_GraphicsDataType.GRADIENT.toString = $estr;
openfl_display_GraphicsDataType.GRADIENT.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.PATH = ["PATH",3];
openfl_display_GraphicsDataType.PATH.toString = $estr;
openfl_display_GraphicsDataType.PATH.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.BITMAP = ["BITMAP",4];
openfl_display_GraphicsDataType.BITMAP.toString = $estr;
openfl_display_GraphicsDataType.BITMAP.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.END = ["END",5];
openfl_display_GraphicsDataType.END.toString = $estr;
openfl_display_GraphicsDataType.END.__enum__ = openfl_display_GraphicsDataType;
openfl_display_GraphicsDataType.__empty_constructs__ = [openfl_display_GraphicsDataType.STROKE,openfl_display_GraphicsDataType.SOLID,openfl_display_GraphicsDataType.GRADIENT,openfl_display_GraphicsDataType.PATH,openfl_display_GraphicsDataType.BITMAP,openfl_display_GraphicsDataType.END];
var openfl_display_GraphicsFillType = $hxClasses["openfl.display.GraphicsFillType"] = { __ename__ : ["openfl","display","GraphicsFillType"], __constructs__ : ["SOLID_FILL","GRADIENT_FILL","BITMAP_FILL","END_FILL"] };
openfl_display_GraphicsFillType.SOLID_FILL = ["SOLID_FILL",0];
openfl_display_GraphicsFillType.SOLID_FILL.toString = $estr;
openfl_display_GraphicsFillType.SOLID_FILL.__enum__ = openfl_display_GraphicsFillType;
openfl_display_GraphicsFillType.GRADIENT_FILL = ["GRADIENT_FILL",1];
openfl_display_GraphicsFillType.GRADIENT_FILL.toString = $estr;
openfl_display_GraphicsFillType.GRADIENT_FILL.__enum__ = openfl_display_GraphicsFillType;
openfl_display_GraphicsFillType.BITMAP_FILL = ["BITMAP_FILL",2];
openfl_display_GraphicsFillType.BITMAP_FILL.toString = $estr;
openfl_display_GraphicsFillType.BITMAP_FILL.__enum__ = openfl_display_GraphicsFillType;
openfl_display_GraphicsFillType.END_FILL = ["END_FILL",3];
openfl_display_GraphicsFillType.END_FILL.toString = $estr;
openfl_display_GraphicsFillType.END_FILL.__enum__ = openfl_display_GraphicsFillType;
openfl_display_GraphicsFillType.__empty_constructs__ = [openfl_display_GraphicsFillType.SOLID_FILL,openfl_display_GraphicsFillType.GRADIENT_FILL,openfl_display_GraphicsFillType.BITMAP_FILL,openfl_display_GraphicsFillType.END_FILL];
var openfl_display_InterpolationMethod = $hxClasses["openfl.display.InterpolationMethod"] = { __ename__ : ["openfl","display","InterpolationMethod"], __constructs__ : ["RGB","LINEAR_RGB"] };
openfl_display_InterpolationMethod.RGB = ["RGB",0];
openfl_display_InterpolationMethod.RGB.toString = $estr;
openfl_display_InterpolationMethod.RGB.__enum__ = openfl_display_InterpolationMethod;
openfl_display_InterpolationMethod.LINEAR_RGB = ["LINEAR_RGB",1];
openfl_display_InterpolationMethod.LINEAR_RGB.toString = $estr;
openfl_display_InterpolationMethod.LINEAR_RGB.__enum__ = openfl_display_InterpolationMethod;
openfl_display_InterpolationMethod.__empty_constructs__ = [openfl_display_InterpolationMethod.RGB,openfl_display_InterpolationMethod.LINEAR_RGB];
var openfl_display_JPEGEncoderOptions = function(quality) {
	if(quality == null) quality = 80;
	this.quality = quality;
};
$hxClasses["openfl.display.JPEGEncoderOptions"] = openfl_display_JPEGEncoderOptions;
openfl_display_JPEGEncoderOptions.__name__ = ["openfl","display","JPEGEncoderOptions"];
openfl_display_JPEGEncoderOptions.prototype = {
	__class__: openfl_display_JPEGEncoderOptions
};
var openfl_display_JointStyle = $hxClasses["openfl.display.JointStyle"] = { __ename__ : ["openfl","display","JointStyle"], __constructs__ : ["MITER","ROUND","BEVEL"] };
openfl_display_JointStyle.MITER = ["MITER",0];
openfl_display_JointStyle.MITER.toString = $estr;
openfl_display_JointStyle.MITER.__enum__ = openfl_display_JointStyle;
openfl_display_JointStyle.ROUND = ["ROUND",1];
openfl_display_JointStyle.ROUND.toString = $estr;
openfl_display_JointStyle.ROUND.__enum__ = openfl_display_JointStyle;
openfl_display_JointStyle.BEVEL = ["BEVEL",2];
openfl_display_JointStyle.BEVEL.toString = $estr;
openfl_display_JointStyle.BEVEL.__enum__ = openfl_display_JointStyle;
openfl_display_JointStyle.__empty_constructs__ = [openfl_display_JointStyle.MITER,openfl_display_JointStyle.ROUND,openfl_display_JointStyle.BEVEL];
var openfl_display_LineScaleMode = $hxClasses["openfl.display.LineScaleMode"] = { __ename__ : ["openfl","display","LineScaleMode"], __constructs__ : ["HORIZONTAL","NONE","NORMAL","VERTICAL"] };
openfl_display_LineScaleMode.HORIZONTAL = ["HORIZONTAL",0];
openfl_display_LineScaleMode.HORIZONTAL.toString = $estr;
openfl_display_LineScaleMode.HORIZONTAL.__enum__ = openfl_display_LineScaleMode;
openfl_display_LineScaleMode.NONE = ["NONE",1];
openfl_display_LineScaleMode.NONE.toString = $estr;
openfl_display_LineScaleMode.NONE.__enum__ = openfl_display_LineScaleMode;
openfl_display_LineScaleMode.NORMAL = ["NORMAL",2];
openfl_display_LineScaleMode.NORMAL.toString = $estr;
openfl_display_LineScaleMode.NORMAL.__enum__ = openfl_display_LineScaleMode;
openfl_display_LineScaleMode.VERTICAL = ["VERTICAL",3];
openfl_display_LineScaleMode.VERTICAL.toString = $estr;
openfl_display_LineScaleMode.VERTICAL.__enum__ = openfl_display_LineScaleMode;
openfl_display_LineScaleMode.__empty_constructs__ = [openfl_display_LineScaleMode.HORIZONTAL,openfl_display_LineScaleMode.NONE,openfl_display_LineScaleMode.NORMAL,openfl_display_LineScaleMode.VERTICAL];
var openfl_display_Loader = function() {
	openfl_display_DisplayObjectContainer.call(this);
	this.contentLoaderInfo = openfl_display_LoaderInfo.create(this);
};
$hxClasses["openfl.display.Loader"] = openfl_display_Loader;
openfl_display_Loader.__name__ = ["openfl","display","Loader"];
openfl_display_Loader.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Loader.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	close: function() {
		openfl_Lib.notImplemented("Loader.close");
	}
	,load: function(request,context) {
		var extension = "";
		var parts = request.url.split(".");
		if(parts.length > 0) extension = parts[parts.length - 1].toLowerCase();
		if(extension.indexOf("?") != -1) extension = extension.split("?")[0];
		var transparent = true;
		this.contentLoaderInfo.url = request.url;
		if(request.contentType == null && request.contentType != "") switch(extension) {
		case "swf":
			this.contentLoaderInfo.contentType = "application/x-shockwave-flash";
			break;
		case "jpg":case "jpeg":
			transparent = false;
			this.contentLoaderInfo.contentType = "image/jpeg";
			break;
		case "png":
			this.contentLoaderInfo.contentType = "image/png";
			break;
		case "gif":
			this.contentLoaderInfo.contentType = "image/gif";
			break;
		default:
			this.contentLoaderInfo.contentType = "application/x-www-form-urlencoded";
		} else this.contentLoaderInfo.contentType = request.contentType;
		var worker = new lime_system_BackgroundWorker();
		worker.doWork.add(function(_) {
			var path = request.url;
			openfl_display_BitmapData.fromFile(path,function(bitmapData) {
				worker.sendComplete(bitmapData);
			},function() {
				worker.sendError(openfl_events_IOErrorEvent.IO_ERROR);
			});
		});
		worker.onError.add($bind(this,this.BitmapData_onError));
		worker.onComplete.add($bind(this,this.BitmapData_onLoad));
		worker.run();
	}
	,loadBytes: function(buffer,context) {
		var worker = new lime_system_BackgroundWorker();
		worker.doWork.add(function(_) {
			openfl_display_BitmapData.fromBytes(buffer,null,function(bitmapData) {
				worker.sendComplete(bitmapData);
			});
		});
		worker.onComplete.add($bind(this,this.BitmapData_onLoad));
		worker.run();
	}
	,unload: function() {
		if(this.get_numChildren() > 0) {
			while(this.get_numChildren() > 0) this.removeChildAt(0);
			this.content = null;
			this.contentLoaderInfo.url = null;
			this.contentLoaderInfo.contentType = null;
			this.contentLoaderInfo.content = null;
			this.contentLoaderInfo.bytesLoaded = 0;
			this.contentLoaderInfo.bytesTotal = 0;
			this.contentLoaderInfo.width = 0;
			this.contentLoaderInfo.height = 0;
			var event = new openfl_events_Event(openfl_events_Event.UNLOAD);
			event.currentTarget = this;
			this.__dispatchEvent(event);
		}
	}
	,unloadAndStop: function(gc) {
		if(gc == null) gc = true;
		openfl_Lib.notImplemented("Loader.unloadAndStop");
	}
	,BitmapData_onLoad: function(bitmapData) {
		this.contentLoaderInfo.content = new openfl_display_Bitmap(bitmapData);
		this.content = this.contentLoaderInfo.content;
		this.addChild(this.contentLoaderInfo.content);
		var event = new openfl_events_Event(openfl_events_Event.COMPLETE);
		event.target = this.contentLoaderInfo;
		event.currentTarget = this.contentLoaderInfo;
		this.contentLoaderInfo.dispatchEvent(event);
	}
	,BitmapData_onError: function(_) {
		var event = new openfl_events_IOErrorEvent(openfl_events_IOErrorEvent.IO_ERROR);
		event.target = this.contentLoaderInfo;
		event.currentTarget = this.contentLoaderInfo;
		this.contentLoaderInfo.dispatchEvent(event);
	}
	,__class__: openfl_display_Loader
});
var openfl_display_OpenGLView = function() {
	openfl_display_DirectRenderer.call(this,"OpenGLView");
	if(!this.__added) {
		this.__added = true;
		null;
	}
};
$hxClasses["openfl.display.OpenGLView"] = openfl_display_OpenGLView;
openfl_display_OpenGLView.__name__ = ["openfl","display","OpenGLView"];
openfl_display_OpenGLView.__properties__ = {get_isSupported:"get_isSupported"}
openfl_display_OpenGLView.isSupported = null;
openfl_display_OpenGLView.get_isSupported = function() {
	return false;
};
openfl_display_OpenGLView.__super__ = openfl_display_DirectRenderer;
openfl_display_OpenGLView.prototype = $extend(openfl_display_DirectRenderer.prototype,{
	__renderCanvas: function(renderSession) {
	}
	,__renderDOM: function(renderSession) {
		if(this.stage != null && this.__worldVisible && this.__renderable) {
			if(!this.__added) {
				renderSession.element.appendChild(this.__canvas);
				this.__added = true;
				openfl__$internal_renderer_dom_DOMRenderer.initializeElement(this,this.__canvas,renderSession);
			}
			if(this.__context != null) {
				var rect = null;
				if(this.get_scrollRect() == null) rect = new openfl_geom_Rectangle(0,0,this.stage.stageWidth,this.stage.stageHeight); else rect = new openfl_geom_Rectangle(this.get_x() + this.get_scrollRect().x,this.get_y() + this.get_scrollRect().y,this.get_scrollRect().width,this.get_scrollRect().height);
				if(this.__render != null) this.__render(rect);
			}
		} else if(this.__added) {
			renderSession.element.removeChild(this.__canvas);
			this.__added = false;
		}
	}
	,__renderGL: function(renderSession) {
		if(this.stage != null && this.__renderable) {
			var rect = null;
			if(this.get_scrollRect() == null) rect = new openfl_geom_Rectangle(0,0,this.stage.stageWidth,this.stage.stageHeight); else rect = new openfl_geom_Rectangle(this.get_x() + this.get_scrollRect().x,this.get_y() + this.get_scrollRect().y,this.get_scrollRect().width,this.get_scrollRect().height);
			if(this.__render != null) this.__render(rect);
			renderSession.shaderManager.setShader(null);
			renderSession.blendModeManager.setBlendMode(null);
		}
	}
	,__class__: openfl_display_OpenGLView
});
var openfl_display_PNGEncoderOptions = function(fastCompression) {
	if(fastCompression == null) fastCompression = false;
	this.fastCompression = fastCompression;
};
$hxClasses["openfl.display.PNGEncoderOptions"] = openfl_display_PNGEncoderOptions;
openfl_display_PNGEncoderOptions.__name__ = ["openfl","display","PNGEncoderOptions"];
openfl_display_PNGEncoderOptions.prototype = {
	__class__: openfl_display_PNGEncoderOptions
};
var openfl_display_PixelSnapping = $hxClasses["openfl.display.PixelSnapping"] = { __ename__ : ["openfl","display","PixelSnapping"], __constructs__ : ["NEVER","AUTO","ALWAYS"] };
openfl_display_PixelSnapping.NEVER = ["NEVER",0];
openfl_display_PixelSnapping.NEVER.toString = $estr;
openfl_display_PixelSnapping.NEVER.__enum__ = openfl_display_PixelSnapping;
openfl_display_PixelSnapping.AUTO = ["AUTO",1];
openfl_display_PixelSnapping.AUTO.toString = $estr;
openfl_display_PixelSnapping.AUTO.__enum__ = openfl_display_PixelSnapping;
openfl_display_PixelSnapping.ALWAYS = ["ALWAYS",2];
openfl_display_PixelSnapping.ALWAYS.toString = $estr;
openfl_display_PixelSnapping.ALWAYS.__enum__ = openfl_display_PixelSnapping;
openfl_display_PixelSnapping.__empty_constructs__ = [openfl_display_PixelSnapping.NEVER,openfl_display_PixelSnapping.AUTO,openfl_display_PixelSnapping.ALWAYS];
var openfl_display_Preloader = function(display) {
	lime_app_Preloader.call(this);
	if(display != null) {
		this.display = display;
		openfl_Lib.current.addChild(display);
		if(js_Boot.__instanceof(display,NMEPreloader)) (js_Boot.__cast(display , NMEPreloader)).onInit();
	}
};
$hxClasses["openfl.display.Preloader"] = openfl_display_Preloader;
openfl_display_Preloader.__name__ = ["openfl","display","Preloader"];
openfl_display_Preloader.__super__ = lime_app_Preloader;
openfl_display_Preloader.prototype = $extend(lime_app_Preloader.prototype,{
	load: function(urls,types) {
		var sounds = [];
		var musics = [];
		var url = null;
		var isAndroid = /Android/.test(navigator.userAgent);
		var isChrome = /Chrome/.test(navigator.userAgent);
		var _g1 = 0;
		var _g = urls.length;
		while(_g1 < _g) {
			var i = _g1++;
			url = urls[i];
			var _g2 = types[i];
			switch(_g2) {
			case "SOUND":
				var sound = haxe_io_Path.withoutExtension(url);
				if(!HxOverrides.remove(sounds,sound)) this.total++;
				sounds.push(sound);
				break;
			case "MUSIC":
				var music = haxe_io_Path.withoutExtension(url);
				if(isChrome) {
					if(!HxOverrides.remove(musics,music)) this.total++;
					musics.push(music);
				} else {
					var sound1 = haxe_io_Path.withoutExtension(url);
					if(!HxOverrides.remove(sounds,sound1)) this.total++;
					sounds.push(sound1);
				}
				break;
			default:
			}
		}
		if(isAndroid && !isChrome) {
			while(sounds.length > 0) {
				sounds.pop();
				this.total--;
			}
			while(musics.length > 0) {
				musics.pop();
				this.total--;
			}
		}
		var _g3 = 0;
		while(_g3 < sounds.length) {
			var soundName = sounds[_g3];
			++_g3;
			var sound2 = new openfl_media_Sound();
			sound2.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.sound_onComplete));
			sound2.addEventListener(openfl_events_IOErrorEvent.IO_ERROR,$bind(this,this.sound_onIOError));
			sound2.load(new openfl_net_URLRequest(soundName + ".ogg"));
		}
		var _g4 = 0;
		while(_g4 < musics.length) {
			var musicName = musics[_g4];
			++_g4;
			this.loadAudioTag(musicName);
		}
		lime_app_Preloader.prototype.load.call(this,urls,types);
	}
	,loadAudioTag: function(id) {
		var audio = new Audio();
		co_doubleduck_utils_SoundMgr.audios.set(id,audio);
		audio.addEventListener("canplaythrough",$bind(this,this.audio_onLoad));
		audio.loop = true;
		audio.onerror = $bind(this,this.handleLoadError);
		audio.src = id + ".mp3";
	}
	,audio_onLoad: function(data) {
		var audio = data.target;
		audio.removeEventListener("canplaythrough",$bind(this,this.audio_onLoad));
		this.sound_onComplete(null);
	}
	,start: function() {
		if(this.display != null && js_Boot.__instanceof(this.display,NMEPreloader)) {
			this.display.addEventListener(openfl_events_Event.COMPLETE,$bind(this,this.display_onComplete));
			(js_Boot.__cast(this.display , NMEPreloader)).onLoaded();
		} else lime_app_Preloader.prototype.start.call(this);
	}
	,update: function(loaded,total) {
		if(this.display != null && js_Boot.__instanceof(this.display,NMEPreloader)) (js_Boot.__cast(this.display , NMEPreloader)).onUpdate(loaded,total);
	}
	,display_onComplete: function(event) {
		this.display.removeEventListener(openfl_events_Event.COMPLETE,$bind(this,this.display_onComplete));
		openfl_Lib.current.removeChild(this.display);
		openfl_Lib.current.stage.set_focus(null);
		this.display = null;
		lime_app_Preloader.prototype.start.call(this);
	}
	,sound_onComplete: function(event) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,sound_onIOError: function(event) {
		this.loaded++;
		this.onProgress.dispatch(this.loaded,this.total);
		if(this.loaded == this.total) this.start();
	}
	,__class__: openfl_display_Preloader
});
var openfl_display_Shader = function(precision) {
	if(precision == null) precision = 1;
	this.__dirty = true;
	this.repeatY = 33071;
	this.repeatX = 33071;
	this.precision = 1;
	this.precision = precision;
	this.data = new haxe_ds_StringMap();
	var value = new openfl_display_GLShaderParameter("vec2");
	this.data.set(openfl_display_Shader.uObjectSize,value);
	var value1 = new openfl_display_GLShaderParameter("vec2");
	this.data.set(openfl_display_Shader.uTextureSize,value1);
};
$hxClasses["openfl.display.Shader"] = openfl_display_Shader;
openfl_display_Shader.__name__ = ["openfl","display","Shader"];
openfl_display_Shader.prototype = {
	__init: function(gl) {
		var dirty = this.__dirty;
		if(dirty) {
			if(this.__shader != null) this.__shader.destroy();
			this.__shader = new openfl__$internal_renderer_opengl_shaders2_Shader(gl);
			if(this.__vertexCode != null) this.__shader.vertexString = this.__vertexCode; else this.__shader.vertexString = openfl__$internal_renderer_opengl_shaders2_DefaultShader.VERTEX_SRC.join("\n");
			this.__shader.fragmentString = this.__fragmentCode;
			this.__dirty = false;
		}
		this.__shader.init(dirty);
	}
	,__buildFragmentCode: function(code) {
		var output = [];
		output.push("#ifdef GL_ES");
		output.push((function($this) {
			var $r;
			var _g = $this.precision;
			$r = (function($this) {
				var $r;
				switch(_g) {
				case 2:
					$r = "precision highp float;";
					break;
				case 1:
					$r = "precision mediump float;";
					break;
				default:
					$r = "precision lowp float;";
				}
				return $r;
			}($this));
			return $r;
		}(this)));
		output.push("#endif");
		output = output.concat(openfl_display_Shader.fragmentHeader);
		output.push(code);
		this.__fragmentCode = output.join("\n");
	}
	,__buildVertexCode: function(code) {
		var output = [];
		output.push("#ifdef GL_ES");
		output.push((function($this) {
			var $r;
			var _g = $this.precision;
			$r = (function($this) {
				var $r;
				switch(_g) {
				case 2:
					$r = "precision highp float;";
					break;
				case 1:
					$r = "precision mediump float;";
					break;
				default:
					$r = "precision lowp float;";
				}
				return $r;
			}($this));
			return $r;
		}(this)));
		output.push("#endif");
		output = output.concat(openfl_display_Shader.vertexHeader);
		output.push(code);
		this.__vertexCode = output.join("\n");
	}
	,__class__: openfl_display_Shader
};
var openfl_display_GLShaderParameter = function(type,arraySize) {
	this.internalType = 0;
	this.transpose = false;
	this.repeatY = 33071;
	this.repeatX = 33071;
	this.smooth = false;
	this.arraySize = 0;
	this.size = 0;
	this.type = type;
	if(arraySize == null) this.arraySize = 0; else this.arraySize = arraySize;
	this.__init();
};
$hxClasses["openfl.display.GLShaderParameter"] = openfl_display_GLShaderParameter;
openfl_display_GLShaderParameter.__name__ = ["openfl","display","GLShaderParameter"];
openfl_display_GLShaderParameter.prototype = {
	__init: function() {
		var _g = this.type;
		var v = _g;
		var m = _g;
		switch(_g) {
		case "bool":
			this.internalType = 1;
			this.size = 1;
			if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
			this.value = [0.0];
			break;
		case "int":
			this.internalType = 1;
			this.size = 1;
			if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
			this.value = [0.0];
			break;
		case "float":
			this.internalType = 2;
			this.size = 1;
			if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
			this.value = [0.0];
			break;
		case "sampler2D":
			if(v.indexOf("vec") > -1) {
				if(StringTools.startsWith(this.type,"b") || StringTools.startsWith(this.type,"i")) this.internalType = 1; else this.internalType = 2;
				var s = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s;
				this.set_value((function($this) {
					var $r;
					var _g1 = [];
					{
						var _g3 = 0;
						var _g2 = $this.size;
						while(_g3 < _g2) {
							var i = _g3++;
							_g1.push(0.0);
						}
					}
					$r = _g1;
					return $r;
				}(this)));
			} else if(m.indexOf("mat") > -1) {
				this.internalType = 3;
				var s1 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s1;
				if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
				var _g11 = this.size;
				switch(_g11) {
				case 2:
					this.value = [1,0,1,0];
					break;
				case 3:
					this.value = [1,0,0,0,1,0,0,0,1];
					break;
				case 4:
					this.value = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
					break;
				default:
					this.value = [0];
				}
			} else {
				this.internalType = 4;
				this.size = 0;
			}
			break;
		case "samplerCube":
			if(v.indexOf("vec") > -1) {
				if(StringTools.startsWith(this.type,"b") || StringTools.startsWith(this.type,"i")) this.internalType = 1; else this.internalType = 2;
				var s2 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s2;
				this.set_value((function($this) {
					var $r;
					var _g12 = [];
					{
						var _g31 = 0;
						var _g21 = $this.size;
						while(_g31 < _g21) {
							var i1 = _g31++;
							_g12.push(0.0);
						}
					}
					$r = _g12;
					return $r;
				}(this)));
			} else if(m.indexOf("mat") > -1) {
				this.internalType = 3;
				var s3 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s3;
				if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
				var _g13 = this.size;
				switch(_g13) {
				case 2:
					this.value = [1,0,1,0];
					break;
				case 3:
					this.value = [1,0,0,0,1,0,0,0,1];
					break;
				case 4:
					this.value = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
					break;
				default:
					this.value = [0];
				}
			} else {
				this.internalType = 4;
				this.size = 0;
			}
			break;
		default:
			if(v.indexOf("vec") > -1) {
				if(StringTools.startsWith(this.type,"b") || StringTools.startsWith(this.type,"i")) this.internalType = 1; else this.internalType = 2;
				var s4 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s4;
				this.set_value((function($this) {
					var $r;
					var _g14 = [];
					{
						var _g32 = 0;
						var _g22 = $this.size;
						while(_g32 < _g22) {
							var i2 = _g32++;
							_g14.push(0.0);
						}
					}
					$r = _g14;
					return $r;
				}(this)));
			} else if(m.indexOf("mat") > -1) {
				this.internalType = 3;
				var s5 = Std.parseInt(this.type.charAt(this.type.length - 1));
				this.size = s5;
				if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
				var _g15 = this.size;
				switch(_g15) {
				case 2:
					this.value = [1,0,1,0];
					break;
				case 3:
					this.value = [1,0,0,0,1,0,0,0,1];
					break;
				case 4:
					this.value = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
					break;
				default:
					this.value = [0];
				}
			} else {
				this.internalType = 0;
				null;
			}
		}
	}
	,set_value: function(v) {
		if(this.internalType == 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a value, use bitmap instead");
		return this.value = v;
	}
	,set_bitmap: function(v) {
		if(this.internalType != 4) throw new js__$Boot_HaxeError("This parameter doesn't accept a bitmap, use value instead");
		return this.bitmap = v;
	}
	,__class__: openfl_display_GLShaderParameter
	,__properties__: {set_bitmap:"set_bitmap",set_value:"set_value"}
};
var openfl_display_Shape = function() {
	openfl_display_DisplayObject.call(this);
};
$hxClasses["openfl.display.Shape"] = openfl_display_Shape;
openfl_display_Shape.__name__ = ["openfl","display","Shape"];
openfl_display_Shape.__super__ = openfl_display_DisplayObject;
openfl_display_Shape.prototype = $extend(openfl_display_DisplayObject.prototype,{
	get_graphics: function() {
		if(this.__graphics == null) {
			this.__graphics = new openfl_display_Graphics();
			this.__graphics.__owner = this;
		}
		return this.__graphics;
	}
	,__class__: openfl_display_Shape
	,__properties__: $extend(openfl_display_DisplayObject.prototype.__properties__,{get_graphics:"get_graphics"})
});
var openfl_display_SpreadMethod = $hxClasses["openfl.display.SpreadMethod"] = { __ename__ : ["openfl","display","SpreadMethod"], __constructs__ : ["REPEAT","REFLECT","PAD"] };
openfl_display_SpreadMethod.REPEAT = ["REPEAT",0];
openfl_display_SpreadMethod.REPEAT.toString = $estr;
openfl_display_SpreadMethod.REPEAT.__enum__ = openfl_display_SpreadMethod;
openfl_display_SpreadMethod.REFLECT = ["REFLECT",1];
openfl_display_SpreadMethod.REFLECT.toString = $estr;
openfl_display_SpreadMethod.REFLECT.__enum__ = openfl_display_SpreadMethod;
openfl_display_SpreadMethod.PAD = ["PAD",2];
openfl_display_SpreadMethod.PAD.toString = $estr;
openfl_display_SpreadMethod.PAD.__enum__ = openfl_display_SpreadMethod;
openfl_display_SpreadMethod.__empty_constructs__ = [openfl_display_SpreadMethod.REPEAT,openfl_display_SpreadMethod.REFLECT,openfl_display_SpreadMethod.PAD];
var openfl_display_Stage = function(window,color) {
	openfl_display_DisplayObjectContainer.call(this);
	this.application = window.application;
	this.window = window;
	if(color == null) {
		this.__transparent = true;
		this.set_color(0);
	} else this.set_color(color);
	this.set_name(null);
	this.__deltaTime = 0;
	this.__displayState = openfl_display_StageDisplayState.NORMAL;
	this.__mouseX = 0;
	this.__mouseY = 0;
	this.__lastClickTime = 0;
	this.stageWidth = window.__width * window.__scale | 0;
	this.stageHeight = window.__height * window.__scale | 0;
	this.stage = this;
	this.align = openfl_display_StageAlign.TOP_LEFT;
	this.allowsFullScreen = false;
	this.allowsFullScreenInteractive = false;
	this.quality = openfl_display_StageQuality.HIGH;
	this.scaleMode = openfl_display_StageScaleMode.NO_SCALE;
	this.stageFocusRect = true;
	this.__macKeyboard = /AppleWebKit/.test (navigator.userAgent) && /Mobile\/\w+/.test (navigator.userAgent) || /Mac/.test (navigator.platform);
	this.__clearBeforeRender = true;
	this.__stack = [];
	this.__mouseOutStack = [];
	var this1;
	this1 = new openfl_VectorData();
	var this2;
	this2 = new Array(0);
	this1.data = this2;
	this1.length = 0;
	this1.fixed = false;
	this.stage3Ds = this1;
	var this3 = this.stage3Ds;
	var x = new openfl_display_Stage3D();
	if(!this3.fixed) {
		this3.length++;
		if(this3.data.length < this3.length) {
			var data;
			var this4;
			this4 = new Array(this3.data.length + 10);
			data = this4;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data,0,this3.data.length);
			this3.data = data;
		}
		this3.data[this3.length - 1] = x;
	}
	this3.length;
	if(openfl_Lib.current.stage == null) this.stage.addChild(openfl_Lib.current);
};
$hxClasses["openfl.display.Stage"] = openfl_display_Stage;
openfl_display_Stage.__name__ = ["openfl","display","Stage"];
openfl_display_Stage.__interfaces__ = [lime_app_IModule];
openfl_display_Stage.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Stage.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	globalToLocal: function(pos) {
		return pos.clone();
	}
	,invalidate: function() {
		this.__invalidated = true;
	}
	,localToGlobal: function(pos) {
		return pos.clone();
	}
	,onGamepadAxisMove: function(gamepad,axis,value) {
		openfl_ui_GameInput.__onGamepadAxisMove(gamepad,axis,value);
	}
	,onGamepadButtonDown: function(gamepad,button) {
		openfl_ui_GameInput.__onGamepadButtonDown(gamepad,button);
	}
	,onGamepadButtonUp: function(gamepad,button) {
		openfl_ui_GameInput.__onGamepadButtonUp(gamepad,button);
	}
	,onGamepadConnect: function(gamepad) {
		openfl_ui_GameInput.__onGamepadConnect(gamepad);
	}
	,onGamepadDisconnect: function(gamepad) {
		openfl_ui_GameInput.__onGamepadDisconnect(gamepad);
	}
	,onJoystickAxisMove: function(joystick,axis,value) {
	}
	,onJoystickButtonDown: function(joystick,button) {
	}
	,onJoystickButtonUp: function(joystick,button) {
	}
	,onJoystickConnect: function(joystick) {
	}
	,onJoystickDisconnect: function(joystick) {
	}
	,onJoystickHatMove: function(joystick,hat,position) {
	}
	,onJoystickTrackballMove: function(joystick,trackball,value) {
	}
	,onKeyDown: function(window,keyCode,modifier) {
		if(this.window == null || this.window != window) return;
		this.__onKey(openfl_events_KeyboardEvent.KEY_DOWN,keyCode,modifier);
	}
	,onKeyUp: function(window,keyCode,modifier) {
		if(this.window == null || this.window != window) return;
		this.__onKey(openfl_events_KeyboardEvent.KEY_UP,keyCode,modifier);
	}
	,onModuleExit: function(code) {
		if(this.window != null) {
			var event = new openfl_events_Event(openfl_events_Event.DEACTIVATE);
			this.__broadcast(event,true);
		}
	}
	,onMouseDown: function(window,x,y,button) {
		if(this.window == null || this.window != window) return;
		var type;
		switch(button) {
		case 1:
			type = openfl_events_MouseEvent.MIDDLE_MOUSE_DOWN;
			break;
		case 2:
			type = openfl_events_MouseEvent.RIGHT_MOUSE_DOWN;
			break;
		default:
			type = openfl_events_MouseEvent.MOUSE_DOWN;
		}
		this.__onMouse(type,x * window.__scale | 0,y * window.__scale | 0,button);
	}
	,onMouseMove: function(window,x,y) {
		if(this.window == null || this.window != window) return;
		this.__onMouse(openfl_events_MouseEvent.MOUSE_MOVE,x * window.__scale | 0,y * window.__scale | 0,0);
	}
	,onMouseMoveRelative: function(window,x,y) {
	}
	,onMouseUp: function(window,x,y,button) {
		if(this.window == null || this.window != window) return;
		var type;
		switch(button) {
		case 1:
			type = openfl_events_MouseEvent.MIDDLE_MOUSE_UP;
			break;
		case 2:
			type = openfl_events_MouseEvent.RIGHT_MOUSE_UP;
			break;
		default:
			type = openfl_events_MouseEvent.MOUSE_UP;
		}
		this.__onMouse(type,x * window.__scale | 0,y * window.__scale | 0,button);
	}
	,onMouseWheel: function(window,deltaX,deltaY) {
		if(this.window == null || this.window != window) return;
		this.__onMouseWheel(deltaX * window.__scale | 0,deltaY * window.__scale | 0);
	}
	,onPreloadComplete: function() {
	}
	,onPreloadProgress: function(loaded,total) {
	}
	,onRenderContextLost: function(renderer) {
	}
	,onRenderContextRestored: function(renderer,context) {
	}
	,onTextEdit: function(window,text,start,length) {
	}
	,onTextInput: function(window,text) {
		if(this.window == null || this.window != window) return;
		var stack = [];
		if(this.__focus == null) this.__getInteractive(stack); else this.__focus.__getInteractive(stack);
		var event = new openfl_events_TextEvent(openfl_events_TextEvent.TEXT_INPUT,true,false,text);
		if(stack.length > 0) {
			stack.reverse();
			this.__fireEvent(event,stack);
		} else this.__broadcast(event,true);
	}
	,onTouchMove: function(touch) {
		this.__onTouch("touchMove",touch);
	}
	,onTouchEnd: function(touch) {
		this.__onTouch("touchEnd",touch);
	}
	,onTouchStart: function(touch) {
		this.__onTouch("touchBegin",touch);
	}
	,onWindowActivate: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_Event(openfl_events_Event.ACTIVATE);
		this.__broadcast(event,true);
	}
	,onWindowClose: function(window) {
		if(this.window == window) this.window = null;
	}
	,onWindowCreate: function(window) {
		if(this.window == null || this.window != window) return;
		if(window.renderer != null) {
			var _g = window.renderer.context;
			switch(_g[1]) {
			case 0:
				var gl = _g[2];
				this.__renderer = new openfl__$internal_renderer_opengl_GLRenderer(this.stageWidth,this.stageHeight,gl);
				break;
			case 1:
				var context = _g[2];
				this.__renderer = new openfl__$internal_renderer_canvas_CanvasRenderer(this.stageWidth,this.stageHeight,context);
				break;
			case 2:
				var element = _g[2];
				this.__renderer = new openfl__$internal_renderer_dom_DOMRenderer(this.stageWidth,this.stageHeight,element);
				break;
			case 4:
				var cairo = _g[2];
				this.__renderer = new openfl__$internal_renderer_cairo_CairoRenderer(this.stageWidth,this.stageHeight,cairo);
				break;
			case 5:
				var ctx = _g[2];
				this.__renderer = new openfl__$internal_renderer_console_ConsoleRenderer(this.stageWidth,this.stageHeight,ctx);
				break;
			default:
			}
		}
	}
	,onWindowDeactivate: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_Event(openfl_events_Event.DEACTIVATE);
		this.__broadcast(event,true);
	}
	,onWindowEnter: function(window) {
	}
	,onWindowFocusIn: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_FocusEvent(openfl_events_FocusEvent.FOCUS_IN,true,false,null,false,0);
		this.__broadcast(event,true);
	}
	,onWindowFocusOut: function(window) {
		if(this.window == null || this.window != window) return;
		var event = new openfl_events_FocusEvent(openfl_events_FocusEvent.FOCUS_OUT,true,false,null,false,0);
		this.__broadcast(event,true);
	}
	,onWindowFullscreen: function(window) {
	}
	,onWindowLeave: function(window) {
		if(this.window == null || this.window != window) return;
		this.__dispatchEvent(new openfl_events_Event(openfl_events_Event.MOUSE_LEAVE));
	}
	,onWindowMinimize: function(window) {
	}
	,onWindowMove: function(window,x,y) {
	}
	,onWindowResize: function(window,width,height) {
		if(this.window == null || this.window != window) return;
		this.stageWidth = width * window.__scale | 0;
		this.stageHeight = height * window.__scale | 0;
		if(this.__renderer != null) this.__renderer.resize(this.stageWidth,this.stageHeight);
		var event = new openfl_events_Event(openfl_events_Event.RESIZE);
		this.__broadcast(event,false);
	}
	,onWindowRestore: function(window) {
	}
	,render: function(renderer) {
		if(renderer.window == null || renderer.window != this.window) return;
		if(this.application != null && this.application.windows.length > 0) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			if(!this.__renderDirty) {
				this.__updateCachedBitmap = true;
				this.__updateFilters = this.get_filters() != null && this.get_filters().length > 0;
				this.__renderDirty = true;
				openfl_display_DisplayObject.__worldRenderDirty++;
			}
		}
		if(this.__rendering) return;
		this.__rendering = true;
		this.__broadcast(new openfl_events_Event(openfl_events_Event.ENTER_FRAME),true);
		if(this.__invalidated) {
			this.__invalidated = false;
			this.__broadcast(new openfl_events_Event(openfl_events_Event.RENDER),true);
		}
		this.__renderable = true;
		this.__enterFrame(this.__deltaTime);
		this.__deltaTime = 0;
		this.__update(false,true);
		if(this.__renderer != null) {
			{
				var _g = renderer.context;
				switch(_g[1]) {
				case 4:
					var cairo = _g[2];
					(js_Boot.__cast(this.__renderer , openfl__$internal_renderer_cairo_CairoRenderer)).cairo = cairo;
					this.__renderer.renderSession.cairo = cairo;
					break;
				default:
				}
			}
			this.__renderer.render(this);
		}
		this.__rendering = false;
	}
	,update: function(deltaTime) {
		this.__deltaTime = deltaTime;
	}
	,__drag: function(mouse) {
		var parent = this.__dragObject.parent;
		if(parent != null) mouse = parent.globalToLocal(mouse);
		var x = mouse.x + this.__dragOffsetX;
		var y = mouse.y + this.__dragOffsetY;
		if(this.__dragBounds != null) {
			if(x < this.__dragBounds.x) x = this.__dragBounds.x; else if(x > this.__dragBounds.get_right()) x = this.__dragBounds.get_right();
			if(y < this.__dragBounds.y) y = this.__dragBounds.y; else if(y > this.__dragBounds.get_bottom()) y = this.__dragBounds.get_bottom();
		}
		this.__dragObject.set_x(x);
		this.__dragObject.set_y(y);
	}
	,__fireEvent: function(event,stack) {
		var length = stack.length;
		if(length == 0) {
			event.eventPhase = openfl_events_EventPhase.AT_TARGET;
			event.target.__broadcast(event,false);
		} else {
			event.eventPhase = openfl_events_EventPhase.CAPTURING_PHASE;
			event.target = stack[stack.length - 1];
			var _g1 = 0;
			var _g = length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				stack[i].__broadcast(event,false);
				if(event.__isCanceled) return;
			}
			event.eventPhase = openfl_events_EventPhase.AT_TARGET;
			event.target.__broadcast(event,false);
			if(event.__isCanceled) return;
			if(event.bubbles) {
				event.eventPhase = openfl_events_EventPhase.BUBBLING_PHASE;
				var i1 = length - 2;
				while(i1 >= 0) {
					stack[i1].__broadcast(event,false);
					if(event.__isCanceled) return;
					i1--;
				}
			}
		}
	}
	,__getInteractive: function(stack) {
		if(stack != null) stack.push(this);
		return true;
	}
	,__onKey: function(type,keyCode,modifier) {
		openfl_events_MouseEvent.__altKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey(modifier);
		openfl_events_MouseEvent.__commandKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(modifier);
		openfl_events_MouseEvent.__ctrlKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier);
		openfl_events_MouseEvent.__shiftKey = lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier);
		var stack = [];
		if(this.__focus == null) this.__getInteractive(stack); else this.__focus.__getInteractive(stack);
		if(stack.length > 0) {
			var keyLocation;
			switch(keyCode) {
			case 1073742048:case 1073742049:case 1073742050:case 1073742051:
				keyLocation = 1;
				break;
			case 1073742052:case 1073742053:case 1073742054:case 1073742055:
				keyLocation = 2;
				break;
			case 1073741908:case 1073741909:case 1073741910:case 1073741911:case 1073741912:case 1073741913:case 1073741914:case 1073741915:case 1073741916:case 1073741917:case 1073741918:case 1073741919:case 1073741920:case 1073741921:case 1073741922:case 1073741923:case 1073742044:
				keyLocation = 3;
				break;
			default:
				keyLocation = 0;
			}
			var keyCode1;
			switch(keyCode) {
			case 8:
				keyCode1 = 8;
				break;
			case 9:
				keyCode1 = 9;
				break;
			case 13:
				keyCode1 = 13;
				break;
			case 27:
				keyCode1 = 27;
				break;
			case 32:
				keyCode1 = 32;
				break;
			case 33:
				keyCode1 = 49;
				break;
			case 34:
				keyCode1 = 222;
				break;
			case 35:
				keyCode1 = 51;
				break;
			case 36:
				keyCode1 = 52;
				break;
			case 37:
				keyCode1 = 53;
				break;
			case 38:
				keyCode1 = 55;
				break;
			case 39:
				keyCode1 = 222;
				break;
			case 40:
				keyCode1 = 57;
				break;
			case 41:
				keyCode1 = 48;
				break;
			case 42:
				keyCode1 = 56;
				break;
			case 44:
				keyCode1 = 188;
				break;
			case 45:
				keyCode1 = 189;
				break;
			case 46:
				keyCode1 = 190;
				break;
			case 47:
				keyCode1 = 191;
				break;
			case 48:
				keyCode1 = 48;
				break;
			case 49:
				keyCode1 = 49;
				break;
			case 50:
				keyCode1 = 50;
				break;
			case 51:
				keyCode1 = 51;
				break;
			case 52:
				keyCode1 = 52;
				break;
			case 53:
				keyCode1 = 53;
				break;
			case 54:
				keyCode1 = 54;
				break;
			case 55:
				keyCode1 = 55;
				break;
			case 56:
				keyCode1 = 56;
				break;
			case 57:
				keyCode1 = 57;
				break;
			case 58:
				keyCode1 = 186;
				break;
			case 59:
				keyCode1 = 186;
				break;
			case 60:
				keyCode1 = 60;
				break;
			case 61:
				keyCode1 = 187;
				break;
			case 62:
				keyCode1 = 190;
				break;
			case 63:
				keyCode1 = 191;
				break;
			case 64:
				keyCode1 = 50;
				break;
			case 91:
				keyCode1 = 219;
				break;
			case 92:
				keyCode1 = 220;
				break;
			case 93:
				keyCode1 = 221;
				break;
			case 94:
				keyCode1 = 54;
				break;
			case 95:
				keyCode1 = 189;
				break;
			case 96:
				keyCode1 = 192;
				break;
			case 97:
				keyCode1 = 65;
				break;
			case 98:
				keyCode1 = 66;
				break;
			case 99:
				keyCode1 = 67;
				break;
			case 100:
				keyCode1 = 68;
				break;
			case 101:
				keyCode1 = 69;
				break;
			case 102:
				keyCode1 = 70;
				break;
			case 103:
				keyCode1 = 71;
				break;
			case 104:
				keyCode1 = 72;
				break;
			case 105:
				keyCode1 = 73;
				break;
			case 106:
				keyCode1 = 74;
				break;
			case 107:
				keyCode1 = 75;
				break;
			case 108:
				keyCode1 = 76;
				break;
			case 109:
				keyCode1 = 77;
				break;
			case 110:
				keyCode1 = 78;
				break;
			case 111:
				keyCode1 = 79;
				break;
			case 112:
				keyCode1 = 80;
				break;
			case 113:
				keyCode1 = 81;
				break;
			case 114:
				keyCode1 = 82;
				break;
			case 115:
				keyCode1 = 83;
				break;
			case 116:
				keyCode1 = 84;
				break;
			case 117:
				keyCode1 = 85;
				break;
			case 118:
				keyCode1 = 86;
				break;
			case 119:
				keyCode1 = 87;
				break;
			case 120:
				keyCode1 = 88;
				break;
			case 121:
				keyCode1 = 89;
				break;
			case 122:
				keyCode1 = 90;
				break;
			case 127:
				keyCode1 = 46;
				break;
			case 1073741881:
				keyCode1 = 20;
				break;
			case 1073741882:
				keyCode1 = 112;
				break;
			case 1073741883:
				keyCode1 = 113;
				break;
			case 1073741884:
				keyCode1 = 114;
				break;
			case 1073741885:
				keyCode1 = 115;
				break;
			case 1073741886:
				keyCode1 = 116;
				break;
			case 1073741887:
				keyCode1 = 117;
				break;
			case 1073741888:
				keyCode1 = 118;
				break;
			case 1073741889:
				keyCode1 = 119;
				break;
			case 1073741890:
				keyCode1 = 120;
				break;
			case 1073741891:
				keyCode1 = 121;
				break;
			case 1073741892:
				keyCode1 = 122;
				break;
			case 1073741893:
				keyCode1 = 123;
				break;
			case 1073741894:
				keyCode1 = 301;
				break;
			case 1073741895:
				keyCode1 = 145;
				break;
			case 1073741896:
				keyCode1 = 19;
				break;
			case 1073741897:
				keyCode1 = 45;
				break;
			case 1073741898:
				keyCode1 = 36;
				break;
			case 1073741899:
				keyCode1 = 33;
				break;
			case 1073741901:
				keyCode1 = 35;
				break;
			case 1073741902:
				keyCode1 = 34;
				break;
			case 1073741903:
				keyCode1 = 39;
				break;
			case 1073741904:
				keyCode1 = 37;
				break;
			case 1073741905:
				keyCode1 = 40;
				break;
			case 1073741906:
				keyCode1 = 38;
				break;
			case 1073741907:
				keyCode1 = 144;
				break;
			case 1073741908:
				keyCode1 = 111;
				break;
			case 1073741909:
				keyCode1 = 106;
				break;
			case 1073741910:
				keyCode1 = 109;
				break;
			case 1073741911:
				keyCode1 = 107;
				break;
			case 1073741912:
				keyCode1 = 108;
				break;
			case 1073741913:
				keyCode1 = 97;
				break;
			case 1073741914:
				keyCode1 = 98;
				break;
			case 1073741915:
				keyCode1 = 99;
				break;
			case 1073741916:
				keyCode1 = 100;
				break;
			case 1073741917:
				keyCode1 = 101;
				break;
			case 1073741918:
				keyCode1 = 102;
				break;
			case 1073741919:
				keyCode1 = 103;
				break;
			case 1073741920:
				keyCode1 = 104;
				break;
			case 1073741921:
				keyCode1 = 105;
				break;
			case 1073741922:
				keyCode1 = 96;
				break;
			case 1073741923:
				keyCode1 = 110;
				break;
			case 1073741925:
				keyCode1 = 302;
				break;
			case 1073741928:
				keyCode1 = 124;
				break;
			case 1073741929:
				keyCode1 = 125;
				break;
			case 1073741930:
				keyCode1 = 126;
				break;
			case 1073741982:
				keyCode1 = 13;
				break;
			case 1073742044:
				keyCode1 = 110;
				break;
			case 1073742048:
				keyCode1 = 17;
				break;
			case 1073742049:
				keyCode1 = 16;
				break;
			case 1073742050:
				keyCode1 = 18;
				break;
			case 1073742051:
				keyCode1 = 15;
				break;
			case 1073742052:
				keyCode1 = 17;
				break;
			case 1073742053:
				keyCode1 = 16;
				break;
			case 1073742054:
				keyCode1 = 18;
				break;
			case 1073742055:
				keyCode1 = 15;
				break;
			default:
				keyCode1 = keyCode;
			}
			var charCode = openfl_ui_Keyboard.__getCharCode(keyCode1,lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier));
			var event = new openfl_events_KeyboardEvent(type,true,false,charCode,keyCode1,keyLocation,this.__macKeyboard?lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier) || lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(modifier):lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_altKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_ctrlKey(modifier),lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_metaKey(modifier));
			stack.reverse();
			this.__fireEvent(event,stack);
			if(event.__isCanceled) {
				if(type == openfl_events_KeyboardEvent.KEY_DOWN) this.window.onKeyDown.cancel(); else this.window.onKeyUp.cancel();
			}
		}
	}
	,__onMouse: function(type,x,y,button) {
		if(button > 2) return;
		this.__mouseX = x;
		this.__mouseY = y;
		var stack = [];
		var target = null;
		var targetPoint = new openfl_geom_Point(x,y);
		if(this.__hitTest(x,y,true,stack,true,this)) target = stack[stack.length - 1]; else {
			target = this;
			stack = [this];
		}
		if(target == null) target = this;
		if(type == openfl_events_MouseEvent.MOUSE_DOWN) {
			if(target.get_tabEnabled()) this.set_focus(target); else this.set_focus(null);
		}
		this.__fireEvent(openfl_events_MouseEvent.__create(type,button,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target),stack);
		var clickType;
		switch(type) {
		case "mouseUp":
			clickType = openfl_events_MouseEvent.CLICK;
			break;
		case "middleMouseUp":
			clickType = openfl_events_MouseEvent.MIDDLE_CLICK;
			break;
		case "rightMouseUp":
			clickType = openfl_events_MouseEvent.RIGHT_CLICK;
			break;
		default:
			clickType = null;
		}
		if(clickType != null) {
			this.__fireEvent(openfl_events_MouseEvent.__create(clickType,button,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target),stack);
			if(type == openfl_events_MouseEvent.MOUSE_UP && (js_Boot.__cast(target , openfl_display_InteractiveObject)).doubleClickEnabled) {
				var currentTime = openfl_Lib.getTimer();
				if(currentTime - this.__lastClickTime < 500) {
					this.__fireEvent(openfl_events_MouseEvent.__create(openfl_events_MouseEvent.DOUBLE_CLICK,button,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target),stack);
					this.__lastClickTime = 0;
				} else this.__lastClickTime = currentTime;
			}
		}
		var cursor = null;
		var _g = 0;
		while(_g < stack.length) {
			var target1 = stack[_g];
			++_g;
			cursor = target1.__getCursor();
			if(cursor != null) {
				lime_ui_Mouse.set_cursor(cursor);
				break;
			}
		}
		if(cursor == null) lime_ui_Mouse.set_cursor(lime_ui_MouseCursor.ARROW);
		var _g1 = 0;
		var _g11 = this.__mouseOutStack;
		while(_g1 < _g11.length) {
			var target2 = _g11[_g1];
			++_g1;
			if(HxOverrides.indexOf(stack,target2,0) == -1) {
				HxOverrides.remove(this.__mouseOutStack,target2);
				var localPoint = target2.globalToLocal(targetPoint);
				target2.__dispatchEvent(new openfl_events_MouseEvent(openfl_events_MouseEvent.MOUSE_OUT,false,false,localPoint.x,localPoint.y,target2));
			}
		}
		var _g2 = 0;
		while(_g2 < stack.length) {
			var target3 = stack[_g2];
			++_g2;
			if(HxOverrides.indexOf(this.__mouseOutStack,target3,0) == -1) {
				if(target3.hasEventListener(openfl_events_MouseEvent.MOUSE_OVER)) {
					var localPoint1 = target3.globalToLocal(targetPoint);
					target3.__dispatchEvent(new openfl_events_MouseEvent(openfl_events_MouseEvent.MOUSE_OVER,false,false,localPoint1.x,localPoint1.y,target3));
				}
				if(target3.hasEventListener(openfl_events_MouseEvent.MOUSE_OUT)) this.__mouseOutStack.push(target3);
			}
		}
		if(this.__dragObject != null) this.__drag(targetPoint);
	}
	,__onMouseWheel: function(deltaX,deltaY) {
		var x = this.__mouseX;
		var y = this.__mouseY;
		var stack = [];
		if(!this.__hitTest(x,y,false,stack,true,this)) stack = [this];
		var target = stack[stack.length - 1];
		var targetPoint = new openfl_geom_Point(x,y);
		var delta = deltaY | 0;
		this.__fireEvent(openfl_events_MouseEvent.__create(openfl_events_MouseEvent.MOUSE_WHEEL,0,this.__mouseX,this.__mouseY,target == this?targetPoint:target.globalToLocal(targetPoint),target,delta),stack);
	}
	,__onTouch: function(type,touch) {
		var point = new openfl_geom_Point(touch.x * this.stageWidth,touch.y * this.stageHeight);
		this.__mouseX = point.x;
		this.__mouseY = point.y;
		var __stack = [];
		if(this.__hitTest(this.__mouseX,this.__mouseY,false,__stack,true,this)) {
			var target = __stack[__stack.length - 1];
			if(target == null) target = this;
			var localPoint = target.globalToLocal(point);
			var touchEvent = openfl_events_TouchEvent.__create(type,null,this.__mouseX,this.__mouseY,localPoint,target);
			touchEvent.touchPointID = touch.id;
			touchEvent.isPrimaryTouchPoint = true;
			this.__fireEvent(touchEvent,__stack);
		} else {
			var touchEvent1 = openfl_events_TouchEvent.__create(type,null,this.__mouseX,this.__mouseY,point,this);
			touchEvent1.touchPointID = touch.id;
			touchEvent1.isPrimaryTouchPoint = true;
			this.__fireEvent(touchEvent1,[this.stage]);
		}
	}
	,__resize: function() {
	}
	,__startDrag: function(sprite,lockCenter,bounds) {
		if(bounds == null) this.__dragBounds = null; else this.__dragBounds = bounds.clone();
		this.__dragObject = sprite;
		if(this.__dragObject != null) {
			if(lockCenter) {
				this.__dragOffsetX = -this.__dragObject.get_width() / 2;
				this.__dragOffsetY = -this.__dragObject.get_height() / 2;
			} else {
				var mouse = new openfl_geom_Point(this.get_mouseX(),this.get_mouseY());
				var parent = this.__dragObject.parent;
				if(parent != null) mouse = parent.globalToLocal(mouse);
				this.__dragOffsetX = this.__dragObject.get_x() - mouse.x;
				this.__dragOffsetY = this.__dragObject.get_y() - mouse.y;
			}
		}
	}
	,__stopDrag: function(sprite) {
		this.__dragBounds = null;
		this.__dragObject = null;
	}
	,__update: function(transformOnly,updateChildren,maskGrahpics) {
		if(transformOnly) {
			if(openfl_display_DisplayObject.__worldTransformDirty > 0) {
				openfl_display_DisplayObjectContainer.prototype.__update.call(this,true,updateChildren,maskGrahpics);
				if(updateChildren) {
					openfl_display_DisplayObject.__worldTransformDirty = 0;
					this.__dirty = true;
				}
			}
		} else if(openfl_display_DisplayObject.__worldTransformDirty > 0 || this.__dirty || openfl_display_DisplayObject.__worldRenderDirty > 0) {
			openfl_display_DisplayObjectContainer.prototype.__update.call(this,false,updateChildren,maskGrahpics);
			if(updateChildren) {
				openfl_display_DisplayObject.__worldTransformDirty = 0;
				openfl_display_DisplayObject.__worldRenderDirty = 0;
				this.__dirty = false;
			}
		}
	}
	,get_mouseX: function() {
		return this.__mouseX;
	}
	,get_mouseY: function() {
		return this.__mouseY;
	}
	,canvas_onContextLost: function(event) {
	}
	,canvas_onContextRestored: function(event) {
	}
	,get_color: function() {
		return this.__color;
	}
	,set_color: function(value) {
		var r = (value & 16711680) >>> 16;
		var g = (value & 65280) >>> 8;
		var b = value & 255;
		this.__colorSplit = [r / 255,g / 255,b / 255];
		this.__colorString = "#" + StringTools.hex(value,6);
		return this.__color = value;
	}
	,get_displayState: function() {
		return this.__displayState;
	}
	,set_displayState: function(value) {
		if(this.window != null) switch(value[1]) {
		case 0:
			if(this.window.__fullscreen) {
				this.window.set_fullscreen(false);
				this.dispatchEvent(new openfl_events_FullScreenEvent(openfl_events_FullScreenEvent.FULL_SCREEN,false,false,false,true));
			}
			break;
		default:
			if(!this.window.__fullscreen) {
				this.window.set_fullscreen(true);
				this.dispatchEvent(new openfl_events_FullScreenEvent(openfl_events_FullScreenEvent.FULL_SCREEN,false,false,true,true));
			}
		}
		return this.__displayState = value;
	}
	,get_focus: function() {
		return this.__focus;
	}
	,set_focus: function(value) {
		if(value != this.__focus) {
			var oldFocus = this.__focus;
			this.__focus = value;
			if(oldFocus != null) {
				var event = new openfl_events_FocusEvent(openfl_events_FocusEvent.FOCUS_OUT,true,false,this.__focus,false,0);
				this.__stack = [];
				oldFocus.__getInteractive(this.__stack);
				this.__stack.reverse();
				this.__fireEvent(event,this.__stack);
			}
			if(this.__focus != null) {
				var event1 = new openfl_events_FocusEvent(openfl_events_FocusEvent.FOCUS_IN,true,false,oldFocus,false,0);
				this.__stack = [];
				value.__getInteractive(this.__stack);
				this.__stack.reverse();
				this.__fireEvent(event1,this.__stack);
			}
		}
		return this.__focus;
	}
	,get_frameRate: function() {
		if(this.application != null) return this.application.backend.getFrameRate();
		return 0;
	}
	,set_frameRate: function(value) {
		if(this.application != null) return this.application.backend.setFrameRate(value);
		return value;
	}
	,__class__: openfl_display_Stage
	,__properties__: $extend(openfl_display_DisplayObjectContainer.prototype.__properties__,{set_frameRate:"set_frameRate",get_frameRate:"get_frameRate",set_focus:"set_focus",get_focus:"get_focus",set_displayState:"set_displayState",get_displayState:"get_displayState",set_color:"set_color",get_color:"get_color"})
});
var openfl_display_Stage3D = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["openfl.display.Stage3D"] = openfl_display_Stage3D;
openfl_display_Stage3D.__name__ = ["openfl","display","Stage3D"];
openfl_display_Stage3D.__super__ = openfl_events_EventDispatcher;
openfl_display_Stage3D.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	requestContext3D: function(context3DRenderMode) {
		if(context3DRenderMode == null) context3DRenderMode = "";
		var _g = this;
		if(openfl_display_OpenGLView.get_isSupported()) haxe_Timer.delay(function() {
			_g.context3D = new openfl_display3D_Context3D();
			_g.dispatchEvent(new openfl_events_Event(openfl_events_Event.CONTEXT3D_CREATE));
		},1); else haxe_Timer.delay(function() {
			_g.dispatchEvent(new openfl_events_ErrorEvent(openfl_events_ErrorEvent.ERROR));
		},1);
	}
	,__class__: openfl_display_Stage3D
});
var openfl_display_StageAlign = $hxClasses["openfl.display.StageAlign"] = { __ename__ : ["openfl","display","StageAlign"], __constructs__ : ["TOP_RIGHT","TOP_LEFT","TOP","RIGHT","LEFT","BOTTOM_RIGHT","BOTTOM_LEFT","BOTTOM"] };
openfl_display_StageAlign.TOP_RIGHT = ["TOP_RIGHT",0];
openfl_display_StageAlign.TOP_RIGHT.toString = $estr;
openfl_display_StageAlign.TOP_RIGHT.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.TOP_LEFT = ["TOP_LEFT",1];
openfl_display_StageAlign.TOP_LEFT.toString = $estr;
openfl_display_StageAlign.TOP_LEFT.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.TOP = ["TOP",2];
openfl_display_StageAlign.TOP.toString = $estr;
openfl_display_StageAlign.TOP.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.RIGHT = ["RIGHT",3];
openfl_display_StageAlign.RIGHT.toString = $estr;
openfl_display_StageAlign.RIGHT.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.LEFT = ["LEFT",4];
openfl_display_StageAlign.LEFT.toString = $estr;
openfl_display_StageAlign.LEFT.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.BOTTOM_RIGHT = ["BOTTOM_RIGHT",5];
openfl_display_StageAlign.BOTTOM_RIGHT.toString = $estr;
openfl_display_StageAlign.BOTTOM_RIGHT.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.BOTTOM_LEFT = ["BOTTOM_LEFT",6];
openfl_display_StageAlign.BOTTOM_LEFT.toString = $estr;
openfl_display_StageAlign.BOTTOM_LEFT.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.BOTTOM = ["BOTTOM",7];
openfl_display_StageAlign.BOTTOM.toString = $estr;
openfl_display_StageAlign.BOTTOM.__enum__ = openfl_display_StageAlign;
openfl_display_StageAlign.__empty_constructs__ = [openfl_display_StageAlign.TOP_RIGHT,openfl_display_StageAlign.TOP_LEFT,openfl_display_StageAlign.TOP,openfl_display_StageAlign.RIGHT,openfl_display_StageAlign.LEFT,openfl_display_StageAlign.BOTTOM_RIGHT,openfl_display_StageAlign.BOTTOM_LEFT,openfl_display_StageAlign.BOTTOM];
var openfl_display_StageDisplayState = $hxClasses["openfl.display.StageDisplayState"] = { __ename__ : ["openfl","display","StageDisplayState"], __constructs__ : ["NORMAL","FULL_SCREEN","FULL_SCREEN_INTERACTIVE"] };
openfl_display_StageDisplayState.NORMAL = ["NORMAL",0];
openfl_display_StageDisplayState.NORMAL.toString = $estr;
openfl_display_StageDisplayState.NORMAL.__enum__ = openfl_display_StageDisplayState;
openfl_display_StageDisplayState.FULL_SCREEN = ["FULL_SCREEN",1];
openfl_display_StageDisplayState.FULL_SCREEN.toString = $estr;
openfl_display_StageDisplayState.FULL_SCREEN.__enum__ = openfl_display_StageDisplayState;
openfl_display_StageDisplayState.FULL_SCREEN_INTERACTIVE = ["FULL_SCREEN_INTERACTIVE",2];
openfl_display_StageDisplayState.FULL_SCREEN_INTERACTIVE.toString = $estr;
openfl_display_StageDisplayState.FULL_SCREEN_INTERACTIVE.__enum__ = openfl_display_StageDisplayState;
openfl_display_StageDisplayState.__empty_constructs__ = [openfl_display_StageDisplayState.NORMAL,openfl_display_StageDisplayState.FULL_SCREEN,openfl_display_StageDisplayState.FULL_SCREEN_INTERACTIVE];
var openfl_display_StageQuality = $hxClasses["openfl.display.StageQuality"] = { __ename__ : ["openfl","display","StageQuality"], __constructs__ : ["BEST","HIGH","MEDIUM","LOW"] };
openfl_display_StageQuality.BEST = ["BEST",0];
openfl_display_StageQuality.BEST.toString = $estr;
openfl_display_StageQuality.BEST.__enum__ = openfl_display_StageQuality;
openfl_display_StageQuality.HIGH = ["HIGH",1];
openfl_display_StageQuality.HIGH.toString = $estr;
openfl_display_StageQuality.HIGH.__enum__ = openfl_display_StageQuality;
openfl_display_StageQuality.MEDIUM = ["MEDIUM",2];
openfl_display_StageQuality.MEDIUM.toString = $estr;
openfl_display_StageQuality.MEDIUM.__enum__ = openfl_display_StageQuality;
openfl_display_StageQuality.LOW = ["LOW",3];
openfl_display_StageQuality.LOW.toString = $estr;
openfl_display_StageQuality.LOW.__enum__ = openfl_display_StageQuality;
openfl_display_StageQuality.__empty_constructs__ = [openfl_display_StageQuality.BEST,openfl_display_StageQuality.HIGH,openfl_display_StageQuality.MEDIUM,openfl_display_StageQuality.LOW];
var openfl_display_StageScaleMode = $hxClasses["openfl.display.StageScaleMode"] = { __ename__ : ["openfl","display","StageScaleMode"], __constructs__ : ["SHOW_ALL","NO_SCALE","NO_BORDER","EXACT_FIT"] };
openfl_display_StageScaleMode.SHOW_ALL = ["SHOW_ALL",0];
openfl_display_StageScaleMode.SHOW_ALL.toString = $estr;
openfl_display_StageScaleMode.SHOW_ALL.__enum__ = openfl_display_StageScaleMode;
openfl_display_StageScaleMode.NO_SCALE = ["NO_SCALE",1];
openfl_display_StageScaleMode.NO_SCALE.toString = $estr;
openfl_display_StageScaleMode.NO_SCALE.__enum__ = openfl_display_StageScaleMode;
openfl_display_StageScaleMode.NO_BORDER = ["NO_BORDER",2];
openfl_display_StageScaleMode.NO_BORDER.toString = $estr;
openfl_display_StageScaleMode.NO_BORDER.__enum__ = openfl_display_StageScaleMode;
openfl_display_StageScaleMode.EXACT_FIT = ["EXACT_FIT",3];
openfl_display_StageScaleMode.EXACT_FIT.toString = $estr;
openfl_display_StageScaleMode.EXACT_FIT.__enum__ = openfl_display_StageScaleMode;
openfl_display_StageScaleMode.__empty_constructs__ = [openfl_display_StageScaleMode.SHOW_ALL,openfl_display_StageScaleMode.NO_SCALE,openfl_display_StageScaleMode.NO_BORDER,openfl_display_StageScaleMode.EXACT_FIT];
var openfl_display_Tilesheet = function(image) {
	this.__bitmap = image;
	this.__centerPoints = [];
	this.__tileRects = [];
	this.__tileUVs = [];
	this.__rectTile = new openfl_geom_Rectangle();
	this.__rectUV = new openfl_geom_Rectangle();
	this.__point = new openfl_geom_Point();
};
$hxClasses["openfl.display.Tilesheet"] = openfl_display_Tilesheet;
openfl_display_Tilesheet.__name__ = ["openfl","display","Tilesheet"];
openfl_display_Tilesheet.prototype = {
	addTileRect: function(rectangle,centerPoint) {
		this.__tileRects.push(rectangle);
		if(centerPoint == null) centerPoint = openfl_display_Tilesheet.__defaultPoint;
		this.__centerPoints.push(centerPoint);
		this.__tileUVs.push(new openfl_geom_Rectangle(rectangle.get_left() / this.__bitmap.width,rectangle.get_top() / this.__bitmap.height,rectangle.get_right() / this.__bitmap.width,rectangle.get_bottom() / this.__bitmap.height));
		return this.__tileRects.length - 1;
	}
	,drawTiles: function(graphics,tileData,smooth,flags,count) {
		if(count == null) count = -1;
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		graphics.drawTiles(this,tileData,smooth,flags,null,count);
	}
	,getTileCenter: function(index) {
		return this.__centerPoints[index];
	}
	,getTileRect: function(index) {
		return this.__tileRects[index];
	}
	,getTileUVs: function(index) {
		return this.__tileUVs[index];
	}
	,__class__: openfl_display_Tilesheet
};
var openfl_display_TriangleCulling = $hxClasses["openfl.display.TriangleCulling"] = { __ename__ : ["openfl","display","TriangleCulling"], __constructs__ : ["NEGATIVE","NONE","POSITIVE"] };
openfl_display_TriangleCulling.NEGATIVE = ["NEGATIVE",0];
openfl_display_TriangleCulling.NEGATIVE.toString = $estr;
openfl_display_TriangleCulling.NEGATIVE.__enum__ = openfl_display_TriangleCulling;
openfl_display_TriangleCulling.NONE = ["NONE",1];
openfl_display_TriangleCulling.NONE.toString = $estr;
openfl_display_TriangleCulling.NONE.__enum__ = openfl_display_TriangleCulling;
openfl_display_TriangleCulling.POSITIVE = ["POSITIVE",2];
openfl_display_TriangleCulling.POSITIVE.toString = $estr;
openfl_display_TriangleCulling.POSITIVE.__enum__ = openfl_display_TriangleCulling;
openfl_display_TriangleCulling.__empty_constructs__ = [openfl_display_TriangleCulling.NEGATIVE,openfl_display_TriangleCulling.NONE,openfl_display_TriangleCulling.POSITIVE];
var openfl_display_Window = function(config) {
	lime_ui_Window.call(this,config);
};
$hxClasses["openfl.display.Window"] = openfl_display_Window;
openfl_display_Window.__name__ = ["openfl","display","Window"];
openfl_display_Window.__super__ = lime_ui_Window;
openfl_display_Window.prototype = $extend(lime_ui_Window.prototype,{
	create: function(application) {
		lime_ui_Window.prototype.create.call(this,application);
		this.stage = new openfl_display_Stage(this,Object.prototype.hasOwnProperty.call(this.config,"background")?this.config.background:16777215);
		application.addModule(this.stage);
	}
	,__class__: openfl_display_Window
});
var openfl_display3D_Context3D = function() {
	this.disposed = false;
	this.stencilCompareMode = 519;
	this.stencilRef = 0;
	this.stencilReadMask = 255;
	this._yFlip = 1;
	this.vertexBuffersCreated = [];
	this.indexBuffersCreated = [];
	this.programsCreated = [];
	this.texturesCreated = [];
	this.samplerParameters = [];
	var _g1 = 0;
	var _g = openfl_display3D_Context3D.MAX_SAMPLERS;
	while(_g1 < _g) {
		var i = _g1++;
		this.samplerParameters[i] = new openfl_display3D__$Context3D_SamplerState();
		this.samplerParameters[i].wrap = openfl_display3D_Context3DWrapMode.CLAMP;
		this.samplerParameters[i].filter = openfl_display3D_Context3DTextureFilter.LINEAR;
		this.samplerParameters[i].mipfilter = openfl_display3D_Context3DMipFilter.MIPNONE;
	}
	var stage = openfl_Lib.current.stage;
	this.ogl = new openfl_display_OpenGLView();
	this.ogl.set_scrollRect(new openfl_geom_Rectangle(0,0,stage.stageWidth,stage.stageHeight));
	this.scrollRect = this.ogl.get_scrollRect().clone();
	this.ogl.set_width(stage.stageWidth);
	this.ogl.set_height(stage.stageHeight);
	stage.addChildAt(this.ogl,0);
};
$hxClasses["openfl.display3D.Context3D"] = openfl_display3D_Context3D;
openfl_display3D_Context3D.__name__ = ["openfl","display3D","Context3D"];
openfl_display3D_Context3D.prototype = {
	clear: function(red,green,blue,alpha,depth,stencil,mask) {
		if(mask == null) mask = 17664;
		if(stencil == null) stencil = 0;
		if(depth == null) depth = 1;
		if(alpha == null) alpha = 1;
		if(blue == null) blue = 0;
		if(green == null) green = 0;
		if(red == null) red = 0;
		if(!this.drawing) {
			this.__updateBlendStatus();
			this.drawing = true;
		}
		lime_graphics_opengl_GL.context.clearColor(red,green,blue,alpha);
		lime_graphics_opengl_GL.context.clearDepth(depth);
		lime_graphics_opengl_GL.context.clearStencil(stencil);
		lime_graphics_opengl_GL.context.clear(mask);
	}
	,configureBackBuffer: function(width,height,antiAlias,enableDepthAndStencil) {
		if(enableDepthAndStencil == null) enableDepthAndStencil = true;
		if(enableDepthAndStencil) {
			lime_graphics_opengl_GL.context.enable(2929);
			lime_graphics_opengl_GL.context.enable(2960);
		}
		this.ogl.set_scrollRect(new openfl_geom_Rectangle(0,0,width,height));
		this.ogl.set_width(width);
		this.ogl.set_height(height);
		this.scrollRect = this.ogl.get_scrollRect().clone();
		lime_graphics_opengl_GL.context.viewport(this.scrollRect.x | 0,this.scrollRect.y | 0,this.scrollRect.width | 0,this.scrollRect.height | 0);
	}
	,createCubeTexture: function(size,format,optimizeForRenderToTexture,streamingLevels) {
		if(streamingLevels == null) streamingLevels = 0;
		var texture = new openfl_display3D_textures_CubeTexture(this,lime_graphics_opengl_GL.context.createTexture(),size);
		this.texturesCreated.push(texture);
		return texture;
	}
	,createIndexBuffer: function(numIndices,bufferUsage) {
		if(bufferUsage == null) bufferUsage = openfl_display3D_Context3DBufferUsage.STATIC_DRAW;
		var indexBuffer = new openfl_display3D_IndexBuffer3D(this,lime_graphics_opengl_GL.context.createBuffer(),numIndices,bufferUsage == openfl_display3D_Context3DBufferUsage.STATIC_DRAW?35044:35048);
		this.indexBuffersCreated.push(indexBuffer);
		return indexBuffer;
	}
	,createProgram: function() {
		var program = new openfl_display3D_Program3D(this,lime_graphics_opengl_GL.context.createProgram());
		this.programsCreated.push(program);
		return program;
	}
	,createRectangleTexture: function(width,height,format,optimizeForRenderToTexture) {
		var texture = new openfl_display3D_textures_RectangleTexture(this,lime_graphics_opengl_GL.context.createTexture(),optimizeForRenderToTexture,width,height);
		this.texturesCreated.push(texture);
		return texture;
	}
	,createTexture: function(width,height,format,optimizeForRenderToTexture,streamingLevels) {
		if(streamingLevels == null) streamingLevels = 0;
		var texture = new openfl_display3D_textures_Texture(this,lime_graphics_opengl_GL.context.createTexture(),optimizeForRenderToTexture,width,height);
		this.texturesCreated.push(texture);
		return texture;
	}
	,createVertexBuffer: function(numVertices,data32PerVertex,bufferUsage) {
		if(bufferUsage == null) bufferUsage = openfl_display3D_Context3DBufferUsage.STATIC_DRAW;
		var vertexBuffer = new openfl_display3D_VertexBuffer3D(this,lime_graphics_opengl_GL.context.createBuffer(),numVertices,data32PerVertex,bufferUsage == openfl_display3D_Context3DBufferUsage.STATIC_DRAW?35044:35048);
		this.vertexBuffersCreated.push(vertexBuffer);
		return vertexBuffer;
	}
	,__deleteTexture: function(texture) {
		if(texture.glTexture == null) return;
		HxOverrides.remove(this.texturesCreated,texture);
		lime_graphics_opengl_GL.context.deleteTexture(texture.glTexture);
		texture.glTexture = null;
	}
	,__deleteVertexBuffer: function(buffer) {
		if(buffer.glBuffer == null) return;
		HxOverrides.remove(this.vertexBuffersCreated,buffer);
		lime_graphics_opengl_GL.context.deleteBuffer(buffer.glBuffer);
		buffer.glBuffer = null;
	}
	,__deleteIndexBuffer: function(buffer) {
		if(buffer.glBuffer == null) return;
		HxOverrides.remove(this.indexBuffersCreated,buffer);
		lime_graphics_opengl_GL.context.deleteBuffer(buffer.glBuffer);
		buffer.glBuffer = null;
	}
	,__deleteProgram: function(program) {
		if(program.glProgram == null) return;
		HxOverrides.remove(this.programsCreated,program);
		lime_graphics_opengl_GL.context.deleteProgram(program.glProgram);
		program.glProgram = null;
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.vertexBuffersCreated;
		while(_g < _g1.length) {
			var vertexBuffer = _g1[_g];
			++_g;
			vertexBuffer.dispose();
		}
		this.vertexBuffersCreated = null;
		var _g2 = 0;
		var _g11 = this.indexBuffersCreated;
		while(_g2 < _g11.length) {
			var indexBuffer = _g11[_g2];
			++_g2;
			indexBuffer.dispose();
		}
		this.indexBuffersCreated = null;
		var _g3 = 0;
		var _g12 = this.programsCreated;
		while(_g3 < _g12.length) {
			var program = _g12[_g3];
			++_g3;
			program.dispose();
		}
		this.programsCreated = null;
		this.samplerParameters = null;
		var _g4 = 0;
		var _g13 = this.texturesCreated;
		while(_g4 < _g13.length) {
			var texture = _g13[_g4];
			++_g4;
			texture.dispose();
		}
		this.texturesCreated = null;
		if(this.framebuffer != null) {
			lime_graphics_opengl_GL.context.deleteFramebuffer(this.framebuffer);
			this.framebuffer = null;
		}
		if(this.renderbuffer != null) {
			lime_graphics_opengl_GL.context.deleteRenderbuffer(this.renderbuffer);
			this.renderbuffer = null;
		}
		this.disposed = true;
	}
	,drawToBitmapData: function(destination) {
	}
	,drawTriangles: function(indexBuffer,firstIndex,numTriangles) {
		if(numTriangles == null) numTriangles = -1;
		if(firstIndex == null) firstIndex = 0;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,"yflip");
		lime_graphics_opengl_GL.context.uniform1f(location,this._yFlip);
		if(!this.drawing) throw new js__$Boot_HaxeError(new openfl_errors_Error("Need to clear before drawing if the buffer has not been cleared since the last present() call."));
		var numIndices;
		if(numTriangles == -1) numIndices = indexBuffer.numIndices; else numIndices = numTriangles * 3;
		var byteOffset = firstIndex * 2;
		lime_graphics_opengl_GL.context.bindBuffer(34963,indexBuffer.glBuffer);
		lime_graphics_opengl_GL.context.drawElements(4,numIndices,5123,byteOffset);
	}
	,present: function() {
		this.drawing = false;
		lime_graphics_opengl_GL.context.useProgram(null);
		lime_graphics_opengl_GL.context.bindBuffer(34962,null);
		lime_graphics_opengl_GL.context.disable(2884);
		if(this.framebuffer != null) lime_graphics_opengl_GL.context.bindFramebuffer(36160,null);
		if(this.renderbuffer != null) lime_graphics_opengl_GL.context.bindRenderbuffer(36161,null);
	}
	,removeRenderMethod: function(func) {
		this.ogl.set_render(null);
	}
	,setBlendFactors: function(sourceFactor,destinationFactor) {
		this.blendEnabled = true;
		this.blendSourceFactor = sourceFactor;
		this.blendDestinationFactor = destinationFactor;
		this.__updateBlendStatus();
	}
	,setColorMask: function(red,green,blue,alpha) {
		lime_graphics_opengl_GL.context.colorMask(red,green,blue,alpha);
	}
	,setCulling: function(triangleFaceToCull) {
		if(triangleFaceToCull == 0) lime_graphics_opengl_GL.context.disable(2884); else {
			lime_graphics_opengl_GL.context.enable(2884);
			switch(triangleFaceToCull) {
			case 1029:
				lime_graphics_opengl_GL.context.cullFace(1029);
				break;
			case 1028:
				lime_graphics_opengl_GL.context.cullFace(1028);
				break;
			case 1032:
				lime_graphics_opengl_GL.context.cullFace(1032);
				break;
			default:
				throw new js__$Boot_HaxeError("Unknown Context3DTriangleFace type.");
			}
		}
		switch(triangleFaceToCull) {
		case 1029:
			this._yFlip = -1;
			break;
		case 1028:
			this._yFlip = 1;
			break;
		case 1032:
			this._yFlip = 1;
			break;
		case 0:
			this._yFlip = 1;
			break;
		default:
			throw new js__$Boot_HaxeError("Unknown culling mode " + triangleFaceToCull + ".");
		}
	}
	,setDepthTest: function(depthMask,passCompareMode) {
		lime_graphics_opengl_GL.context.depthFunc(passCompareMode);
		lime_graphics_opengl_GL.context.depthMask(depthMask);
	}
	,setGLSLProgramConstantsFromByteArray: function(locationName,data,byteArrayOffset) {
		if(byteArrayOffset == null) byteArrayOffset = 0;
		data.position = byteArrayOffset;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		lime_graphics_opengl_GL.uniform4f(location,data.readFloat(),data.readFloat(),data.readFloat(),data.readFloat());
	}
	,setGLSLProgramConstantsFromMatrix: function(locationName,matrix,transposedMatrix) {
		if(transposedMatrix == null) transposedMatrix = false;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		lime_graphics_opengl_GL.uniformMatrix4fv(location,!transposedMatrix,(function($this) {
			var $r;
			var array;
			{
				var this2 = matrix.rawData;
				var value = [];
				var _g1 = 0;
				var _g = this2.data.length;
				while(_g1 < _g) {
					var i = _g1++;
					value.push(this2.data[i]);
				}
				array = value;
			}
			var this1;
			if(array != null) this1 = new Float32Array(array); else this1 = null;
			$r = this1;
			return $r;
		}(this)));
	}
	,setGLSLProgramConstantsFromVector4: function(locationName,data,startIndex) {
		if(startIndex == null) startIndex = 0;
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		lime_graphics_opengl_GL.context.uniform4f(location,data[startIndex],data[startIndex + 1],data[startIndex + 2],data[startIndex + 3]);
	}
	,setGLSLTextureAt: function(locationName,texture,textureIndex) {
		switch(textureIndex) {
		case 0:
			lime_graphics_opengl_GL.context.activeTexture(33984);
			break;
		case 1:
			lime_graphics_opengl_GL.context.activeTexture(33985);
			break;
		case 2:
			lime_graphics_opengl_GL.context.activeTexture(33986);
			break;
		case 3:
			lime_graphics_opengl_GL.context.activeTexture(33987);
			break;
		case 4:
			lime_graphics_opengl_GL.context.activeTexture(33988);
			break;
		case 5:
			lime_graphics_opengl_GL.context.activeTexture(33989);
			break;
		case 6:
			lime_graphics_opengl_GL.context.activeTexture(33990);
			break;
		case 7:
			lime_graphics_opengl_GL.context.activeTexture(33991);
			break;
		default:
			throw new js__$Boot_HaxeError("Does not support texture8 or more");
		}
		if(texture == null) {
			lime_graphics_opengl_GL.context.bindTexture(3553,null);
			lime_graphics_opengl_GL.context.bindTexture(34067,null);
			return;
		}
		var location = lime_graphics_opengl_GL.context.getUniformLocation(this.currentProgram.glProgram,locationName);
		if(js_Boot.__instanceof(texture,openfl_display3D_textures_Texture)) {
			lime_graphics_opengl_GL.bindTexture(3553,(js_Boot.__cast(texture , openfl_display3D_textures_Texture)).glTexture);
			lime_graphics_opengl_GL.context.uniform1i(location,textureIndex);
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_RectangleTexture)) {
			lime_graphics_opengl_GL.bindTexture(3553,(js_Boot.__cast(texture , openfl_display3D_textures_RectangleTexture)).glTexture);
			lime_graphics_opengl_GL.context.uniform1i(location,textureIndex);
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_CubeTexture)) {
			lime_graphics_opengl_GL.bindTexture(34067,(js_Boot.__cast(texture , openfl_display3D_textures_CubeTexture)).glTexture);
			lime_graphics_opengl_GL.context.uniform1i(location,textureIndex);
		} else throw new js__$Boot_HaxeError("Texture of type " + Type.getClassName(texture == null?null:js_Boot.getClass(texture)) + " not supported yet");
		var parameters = this.samplerParameters[textureIndex];
		if(parameters != null) this.setTextureParameters(texture,parameters.wrap,parameters.filter,parameters.mipfilter); else this.setTextureParameters(texture,openfl_display3D_Context3DWrapMode.CLAMP,openfl_display3D_Context3DTextureFilter.NEAREST,openfl_display3D_Context3DMipFilter.MIPNONE);
	}
	,setGLSLVertexBufferAt: function(locationName,buffer,bufferOffset,format) {
		if(bufferOffset == null) bufferOffset = 0;
		var location;
		if(this.currentProgram != null && this.currentProgram.glProgram != null) location = lime_graphics_opengl_GL.context.getAttribLocation(this.currentProgram.glProgram,locationName); else location = -1;
		if(buffer == null) {
			if(location > -1) lime_graphics_opengl_GL.context.disableVertexAttribArray(location);
			return;
		}
		lime_graphics_opengl_GL.context.bindBuffer(34962,buffer.glBuffer);
		var dimension = 4;
		var type = 5126;
		var numBytes = 4;
		if(format == openfl_display3D_Context3DVertexBufferFormat.BYTES_4) {
			dimension = 4;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_1) {
			dimension = 1;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_2) {
			dimension = 2;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_3) {
			dimension = 3;
			type = 5126;
			numBytes = 4;
		} else if(format == openfl_display3D_Context3DVertexBufferFormat.FLOAT_4) {
			dimension = 4;
			type = 5126;
			numBytes = 4;
		} else throw new js__$Boot_HaxeError("Buffer format " + Std.string(format) + " is not supported");
		lime_graphics_opengl_GL.context.enableVertexAttribArray(location);
		lime_graphics_opengl_GL.context.vertexAttribPointer(location,dimension,type,false,buffer.data32PerVertex * numBytes,bufferOffset * numBytes);
	}
	,setProgram: function(program3D) {
		var glProgram = null;
		if(program3D != null) glProgram = program3D.glProgram;
		lime_graphics_opengl_GL.context.useProgram(glProgram);
		this.currentProgram = program3D;
	}
	,setProgramConstantsFromByteArray: function(programType,firstRegister,numRegisters,data,byteArrayOffset) {
		data.position = byteArrayOffset;
		var _g = 0;
		while(_g < numRegisters) {
			var i = _g++;
			var locationName = this.__getUniformLocationNameFromAgalRegisterIndex(programType,firstRegister + i);
			this.setGLSLProgramConstantsFromByteArray(locationName,data);
		}
	}
	,setProgramConstantsFromMatrix: function(programType,firstRegister,matrix,transposedMatrix) {
		if(transposedMatrix == null) transposedMatrix = false;
		var d = matrix.rawData;
		if(transposedMatrix) {
			this.setProgramConstantsFromVector(programType,firstRegister,[d.data[0],d.data[4],d.data[8],d.data[12]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 1,[d.data[1],d.data[5],d.data[9],d.data[13]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 2,[d.data[2],d.data[6],d.data[10],d.data[14]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 3,[d.data[3],d.data[7],d.data[11],d.data[15]],1);
		} else {
			this.setProgramConstantsFromVector(programType,firstRegister,[d.data[0],d.data[1],d.data[2],d.data[3]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 1,[d.data[4],d.data[5],d.data[6],d.data[7]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 2,[d.data[8],d.data[9],d.data[10],d.data[11]],1);
			this.setProgramConstantsFromVector(programType,firstRegister + 3,[d.data[12],d.data[13],d.data[14],d.data[15]],1);
		}
	}
	,setProgramConstantsFromVector: function(programType,firstRegister,data,numRegisters) {
		if(numRegisters == null) numRegisters = 1;
		var _g = 0;
		while(_g < numRegisters) {
			var i = _g++;
			var currentIndex = i * 4;
			var locationName = this.__getUniformLocationNameFromAgalRegisterIndex(programType,firstRegister + i);
			this.setGLSLProgramConstantsFromVector4(locationName,data,currentIndex);
		}
	}
	,setRenderMethod: function(func) {
		this.ogl.set_render(function(rect) {
			func(null);
		});
	}
	,setRenderToBackBuffer: function() {
		lime_graphics_opengl_GL.context.disable(2929);
		lime_graphics_opengl_GL.context.disable(2960);
		lime_graphics_opengl_GL.context.disable(3089);
		if(this.framebuffer != null) lime_graphics_opengl_GL.context.bindFramebuffer(36160,null);
		if(this.renderbuffer != null) lime_graphics_opengl_GL.context.bindRenderbuffer(36161,null);
		lime_graphics_opengl_GL.context.viewport(this.scrollRect.x | 0,this.scrollRect.y | 0,this.scrollRect.width | 0,this.scrollRect.height | 0);
	}
	,setRenderToTexture: function(texture,enableDepthAndStencil,antiAlias,surfaceSelector) {
		if(surfaceSelector == null) surfaceSelector = 0;
		if(antiAlias == null) antiAlias = 0;
		if(enableDepthAndStencil == null) enableDepthAndStencil = false;
		if(this.framebuffer == null) this.framebuffer = lime_graphics_opengl_GL.context.createFramebuffer();
		lime_graphics_opengl_GL.context.bindFramebuffer(36160,this.framebuffer);
		if(this.renderbuffer == null) this.renderbuffer = lime_graphics_opengl_GL.context.createRenderbuffer();
		lime_graphics_opengl_GL.context.bindRenderbuffer(36161,this.renderbuffer);
		lime_graphics_opengl_GL.context.renderbufferStorage(36161,6408,texture.width,texture.height);
		lime_graphics_opengl_GL.context.framebufferTexture2D(36160,36064,3553,texture.glTexture,0);
		lime_graphics_opengl_GL.context.renderbufferStorage(36161,34041,texture.width,texture.height);
		lime_graphics_opengl_GL.context.framebufferRenderbuffer(36160,33306,36161,this.renderbuffer);
		if(enableDepthAndStencil) {
			lime_graphics_opengl_GL.context.enable(2929);
			lime_graphics_opengl_GL.context.enable(2960);
		}
		lime_graphics_opengl_GL.context.bindTexture(3553,texture.glTexture);
		lime_graphics_opengl_GL.context.texImage2D(3553,0,6408,texture.width,texture.height,0,6408,5121,null);
		lime_graphics_opengl_GL.context.texParameteri(3553,10240,9729);
		lime_graphics_opengl_GL.context.texParameteri(3553,10241,9985);
		lime_graphics_opengl_GL.context.viewport(0,0,texture.width,texture.height);
	}
	,setSamplerStateAt: function(sampler,wrap,filter,mipfilter) {
		if(0 <= sampler && sampler < openfl_display3D_Context3D.MAX_SAMPLERS) {
			this.samplerParameters[sampler].wrap = wrap;
			this.samplerParameters[sampler].filter = filter;
			this.samplerParameters[sampler].mipfilter = mipfilter;
		} else throw new js__$Boot_HaxeError("Sampler is out of bounds.");
	}
	,setScissorRectangle: function(rectangle) {
		if(rectangle == null) {
			lime_graphics_opengl_GL.context.disable(3089);
			return;
		}
		lime_graphics_opengl_GL.context.enable(3089);
		lime_graphics_opengl_GL.context.scissor(rectangle.x | 0,rectangle.y | 0,rectangle.width | 0,rectangle.height | 0);
	}
	,setStencilActions: function(triangleFace,compareMode,actionOnBothPass,actionOnDepthFail,actionOnDepthPassStencilFail) {
		this.stencilCompareMode = compareMode;
		lime_graphics_opengl_GL.context.stencilOp(actionOnBothPass,actionOnDepthFail,actionOnDepthPassStencilFail);
		lime_graphics_opengl_GL.context.stencilFunc(this.stencilCompareMode,this.stencilRef,this.stencilReadMask);
	}
	,setStencilReferenceValue: function(referenceValue,readMask,writeMask) {
		if(writeMask == null) writeMask = 255;
		if(readMask == null) readMask = 255;
		this.stencilReadMask = readMask;
		this.stencilRef = referenceValue;
		lime_graphics_opengl_GL.context.stencilFunc(this.stencilCompareMode,this.stencilRef,this.stencilReadMask);
		lime_graphics_opengl_GL.context.stencilMask(writeMask);
	}
	,setTextureAt: function(sampler,texture) {
		var locationName = "fs" + sampler;
		this.setGLSLTextureAt(locationName,texture,sampler);
	}
	,setTextureParameters: function(texture,wrap,filter,mipfilter) {
		if(!openfl_display3D_Context3D.anisotropySupportTested) {
			var ext = lime_graphics_opengl_GL.context.getExtension("EXT_texture_filter_anisotropic");
			if(ext == null || Reflect.field(ext,"MAX_TEXTURE_MAX_ANISOTROPY_EXT") == null) ext = lime_graphics_opengl_GL.context.getExtension("MOZ_EXT_texture_filter_anisotropic");
			if(ext == null || Reflect.field(ext,"MAX_TEXTURE_MAX_ANISOTROPY_EXT") == null) ext = lime_graphics_opengl_GL.context.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			openfl_display3D_Context3D.supportsAnisotropy = ext != null;
			if(openfl_display3D_Context3D.supportsAnisotropy) {
				openfl_display3D_Context3D.maxSupportedAnisotropy = lime_graphics_opengl_GL.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
				lime_graphics_opengl_GL.context.texParameteri(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,openfl_display3D_Context3D.maxSupportedAnisotropy);
			}
			openfl_display3D_Context3D.anisotropySupportTested = true;
		}
		if(js_Boot.__instanceof(texture,openfl_display3D_textures_Texture)) {
			switch(wrap[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
				lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(3553,10242,10497);
				lime_graphics_opengl_GL.context.texParameteri(3553,10243,10497);
				break;
			}
			switch(filter[1]) {
			case 4:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9729);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 5:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 0:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(2,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):2);
				break;
			case 1:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(4,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):4);
				break;
			case 2:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(8,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):8);
				break;
			case 3:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(16,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):16);
				break;
			}
			switch(mipfilter[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(3553,10241,9987);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(3553,10241,9984);
				break;
			case 2:
				lime_graphics_opengl_GL.context.texParameteri(3553,10241,filter == openfl_display3D_Context3DTextureFilter.NEAREST?9728:9729);
				break;
			}
			var tex = texture;
			if(mipfilter != openfl_display3D_Context3DMipFilter.MIPNONE && !tex.mipmapsGenerated) {
				lime_graphics_opengl_GL.context.generateMipmap(3553);
				tex.mipmapsGenerated = true;
			}
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_RectangleTexture)) {
			lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
			lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
			switch(filter[1]) {
			case 4:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9729);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 5:
				lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 0:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(2,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):2);
				break;
			case 1:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(4,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):4);
				break;
			case 2:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(8,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):8);
				break;
			case 3:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(3553,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(16,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):16);
				break;
			}
			lime_graphics_opengl_GL.context.texParameteri(3553,10241,filter == openfl_display3D_Context3DTextureFilter.NEAREST?9728:9729);
		} else if(js_Boot.__instanceof(texture,openfl_display3D_textures_CubeTexture)) {
			switch(wrap[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(34067,10242,33071);
				lime_graphics_opengl_GL.context.texParameteri(34067,10243,33071);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(34067,10242,10497);
				lime_graphics_opengl_GL.context.texParameteri(34067,10243,10497);
				break;
			}
			switch(filter[1]) {
			case 4:
				lime_graphics_opengl_GL.context.texParameteri(34067,10240,9729);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 5:
				lime_graphics_opengl_GL.context.texParameteri(34067,10240,9728);
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.context.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,1);
				break;
			case 0:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(2,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):2);
				break;
			case 1:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(4,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):4);
				break;
			case 2:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(8,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):8);
				break;
			case 3:
				if(openfl_display3D_Context3D.supportsAnisotropy) lime_graphics_opengl_GL.texParameterf(34067,openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT,_$UInt_UInt_$Impl_$.gt(16,openfl_display3D_Context3D.maxSupportedAnisotropy)?_$UInt_UInt_$Impl_$.toFloat(openfl_display3D_Context3D.maxSupportedAnisotropy):16);
				break;
			}
			switch(mipfilter[1]) {
			case 0:
				lime_graphics_opengl_GL.context.texParameteri(34067,10241,9987);
				break;
			case 1:
				lime_graphics_opengl_GL.context.texParameteri(34067,10241,9984);
				break;
			case 2:
				lime_graphics_opengl_GL.context.texParameteri(34067,10241,filter == openfl_display3D_Context3DTextureFilter.NEAREST?9728:9729);
				break;
			}
			var cubetex = texture;
			if(mipfilter != openfl_display3D_Context3DMipFilter.MIPNONE && !cubetex.mipmapsGenerated) {
				lime_graphics_opengl_GL.context.generateMipmap(34067);
				cubetex.mipmapsGenerated = true;
			}
		} else throw new js__$Boot_HaxeError("Texture of type " + Type.getClassName(texture == null?null:js_Boot.getClass(texture)) + " not supported yet");
	}
	,setVertexBufferAt: function(index,buffer,bufferOffset,format) {
		if(bufferOffset == null) bufferOffset = 0;
		var locationName = "va" + index;
		this.setGLSLVertexBufferAt(locationName,buffer,bufferOffset,format);
	}
	,__getUniformLocationNameFromAgalRegisterIndex: function(programType,firstRegister) {
		if(programType == openfl_display3D_Context3DProgramType.VERTEX) return "vc" + firstRegister; else if(programType == openfl_display3D_Context3DProgramType.FRAGMENT) return "fc" + firstRegister;
		throw new js__$Boot_HaxeError("Program Type " + Std.string(programType) + " not supported");
	}
	,__updateBlendStatus: function() {
		if(this.blendEnabled) {
			lime_graphics_opengl_GL.context.enable(3042);
			lime_graphics_opengl_GL.context.blendEquation(32774);
			lime_graphics_opengl_GL.context.blendFunc(this.blendSourceFactor,this.blendDestinationFactor);
		} else lime_graphics_opengl_GL.context.disable(3042);
	}
	,__class__: openfl_display3D_Context3D
};
var openfl_display3D__$Context3D_SamplerState = function() {
};
$hxClasses["openfl.display3D._Context3D.SamplerState"] = openfl_display3D__$Context3D_SamplerState;
openfl_display3D__$Context3D_SamplerState.__name__ = ["openfl","display3D","_Context3D","SamplerState"];
openfl_display3D__$Context3D_SamplerState.prototype = {
	__class__: openfl_display3D__$Context3D_SamplerState
};
var openfl_display3D_Context3DBufferUsage = $hxClasses["openfl.display3D.Context3DBufferUsage"] = { __ename__ : ["openfl","display3D","Context3DBufferUsage"], __constructs__ : ["STATIC_DRAW","DYNAMIC_DRAW"] };
openfl_display3D_Context3DBufferUsage.STATIC_DRAW = ["STATIC_DRAW",0];
openfl_display3D_Context3DBufferUsage.STATIC_DRAW.toString = $estr;
openfl_display3D_Context3DBufferUsage.STATIC_DRAW.__enum__ = openfl_display3D_Context3DBufferUsage;
openfl_display3D_Context3DBufferUsage.DYNAMIC_DRAW = ["DYNAMIC_DRAW",1];
openfl_display3D_Context3DBufferUsage.DYNAMIC_DRAW.toString = $estr;
openfl_display3D_Context3DBufferUsage.DYNAMIC_DRAW.__enum__ = openfl_display3D_Context3DBufferUsage;
openfl_display3D_Context3DBufferUsage.__empty_constructs__ = [openfl_display3D_Context3DBufferUsage.STATIC_DRAW,openfl_display3D_Context3DBufferUsage.DYNAMIC_DRAW];
var openfl_display3D_Context3DClearMask = function() { };
$hxClasses["openfl.display3D.Context3DClearMask"] = openfl_display3D_Context3DClearMask;
openfl_display3D_Context3DClearMask.__name__ = ["openfl","display3D","Context3DClearMask"];
var openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$ = {};
$hxClasses["openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_"] = openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.__name__ = ["openfl","display3D","_Context3DCompareMode","Context3DCompareMode_Impl_"];
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$._new = function(a) {
	return a;
};
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.fromInt = function(s) {
	return s;
};
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.toInt = function(this1) {
	return this1;
};
var openfl_display3D_Context3DMipFilter = $hxClasses["openfl.display3D.Context3DMipFilter"] = { __ename__ : ["openfl","display3D","Context3DMipFilter"], __constructs__ : ["MIPLINEAR","MIPNEAREST","MIPNONE"] };
openfl_display3D_Context3DMipFilter.MIPLINEAR = ["MIPLINEAR",0];
openfl_display3D_Context3DMipFilter.MIPLINEAR.toString = $estr;
openfl_display3D_Context3DMipFilter.MIPLINEAR.__enum__ = openfl_display3D_Context3DMipFilter;
openfl_display3D_Context3DMipFilter.MIPNEAREST = ["MIPNEAREST",1];
openfl_display3D_Context3DMipFilter.MIPNEAREST.toString = $estr;
openfl_display3D_Context3DMipFilter.MIPNEAREST.__enum__ = openfl_display3D_Context3DMipFilter;
openfl_display3D_Context3DMipFilter.MIPNONE = ["MIPNONE",2];
openfl_display3D_Context3DMipFilter.MIPNONE.toString = $estr;
openfl_display3D_Context3DMipFilter.MIPNONE.__enum__ = openfl_display3D_Context3DMipFilter;
openfl_display3D_Context3DMipFilter.__empty_constructs__ = [openfl_display3D_Context3DMipFilter.MIPLINEAR,openfl_display3D_Context3DMipFilter.MIPNEAREST,openfl_display3D_Context3DMipFilter.MIPNONE];
var openfl_display3D_Context3DProgramType = $hxClasses["openfl.display3D.Context3DProgramType"] = { __ename__ : ["openfl","display3D","Context3DProgramType"], __constructs__ : ["VERTEX","FRAGMENT"] };
openfl_display3D_Context3DProgramType.VERTEX = ["VERTEX",0];
openfl_display3D_Context3DProgramType.VERTEX.toString = $estr;
openfl_display3D_Context3DProgramType.VERTEX.__enum__ = openfl_display3D_Context3DProgramType;
openfl_display3D_Context3DProgramType.FRAGMENT = ["FRAGMENT",1];
openfl_display3D_Context3DProgramType.FRAGMENT.toString = $estr;
openfl_display3D_Context3DProgramType.FRAGMENT.__enum__ = openfl_display3D_Context3DProgramType;
openfl_display3D_Context3DProgramType.__empty_constructs__ = [openfl_display3D_Context3DProgramType.VERTEX,openfl_display3D_Context3DProgramType.FRAGMENT];
var openfl_display3D_Context3DTextureFilter = $hxClasses["openfl.display3D.Context3DTextureFilter"] = { __ename__ : ["openfl","display3D","Context3DTextureFilter"], __constructs__ : ["ANISOTROPIC2X","ANISOTROPIC4X","ANISOTROPIC8X","ANISOTROPIC16X","LINEAR","NEAREST"] };
openfl_display3D_Context3DTextureFilter.ANISOTROPIC2X = ["ANISOTROPIC2X",0];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC2X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC2X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC4X = ["ANISOTROPIC4X",1];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC4X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC4X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC8X = ["ANISOTROPIC8X",2];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC8X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC8X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC16X = ["ANISOTROPIC16X",3];
openfl_display3D_Context3DTextureFilter.ANISOTROPIC16X.toString = $estr;
openfl_display3D_Context3DTextureFilter.ANISOTROPIC16X.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.LINEAR = ["LINEAR",4];
openfl_display3D_Context3DTextureFilter.LINEAR.toString = $estr;
openfl_display3D_Context3DTextureFilter.LINEAR.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.NEAREST = ["NEAREST",5];
openfl_display3D_Context3DTextureFilter.NEAREST.toString = $estr;
openfl_display3D_Context3DTextureFilter.NEAREST.__enum__ = openfl_display3D_Context3DTextureFilter;
openfl_display3D_Context3DTextureFilter.__empty_constructs__ = [openfl_display3D_Context3DTextureFilter.ANISOTROPIC2X,openfl_display3D_Context3DTextureFilter.ANISOTROPIC4X,openfl_display3D_Context3DTextureFilter.ANISOTROPIC8X,openfl_display3D_Context3DTextureFilter.ANISOTROPIC16X,openfl_display3D_Context3DTextureFilter.LINEAR,openfl_display3D_Context3DTextureFilter.NEAREST];
var openfl_display3D_Context3DTextureFormat = $hxClasses["openfl.display3D.Context3DTextureFormat"] = { __ename__ : ["openfl","display3D","Context3DTextureFormat"], __constructs__ : ["BGRA","COMPRESSED","COMPRESSED_ALPHA"] };
openfl_display3D_Context3DTextureFormat.BGRA = ["BGRA",0];
openfl_display3D_Context3DTextureFormat.BGRA.toString = $estr;
openfl_display3D_Context3DTextureFormat.BGRA.__enum__ = openfl_display3D_Context3DTextureFormat;
openfl_display3D_Context3DTextureFormat.COMPRESSED = ["COMPRESSED",1];
openfl_display3D_Context3DTextureFormat.COMPRESSED.toString = $estr;
openfl_display3D_Context3DTextureFormat.COMPRESSED.__enum__ = openfl_display3D_Context3DTextureFormat;
openfl_display3D_Context3DTextureFormat.COMPRESSED_ALPHA = ["COMPRESSED_ALPHA",2];
openfl_display3D_Context3DTextureFormat.COMPRESSED_ALPHA.toString = $estr;
openfl_display3D_Context3DTextureFormat.COMPRESSED_ALPHA.__enum__ = openfl_display3D_Context3DTextureFormat;
openfl_display3D_Context3DTextureFormat.__empty_constructs__ = [openfl_display3D_Context3DTextureFormat.BGRA,openfl_display3D_Context3DTextureFormat.COMPRESSED,openfl_display3D_Context3DTextureFormat.COMPRESSED_ALPHA];
var openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$ = {};
$hxClasses["openfl.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_"] = openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.__name__ = ["openfl","display3D","_Context3DTriangleFace","Context3DTriangleFace_Impl_"];
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$._new = function(a) {
	return a;
};
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.fromInt = function(s) {
	return s;
};
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.toInt = function(this1) {
	return this1;
};
var openfl_display3D_Context3DVertexBufferFormat = $hxClasses["openfl.display3D.Context3DVertexBufferFormat"] = { __ename__ : ["openfl","display3D","Context3DVertexBufferFormat"], __constructs__ : ["BYTES_4","FLOAT_1","FLOAT_2","FLOAT_3","FLOAT_4"] };
openfl_display3D_Context3DVertexBufferFormat.BYTES_4 = ["BYTES_4",0];
openfl_display3D_Context3DVertexBufferFormat.BYTES_4.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.BYTES_4.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_1 = ["FLOAT_1",1];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_1.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_1.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_2 = ["FLOAT_2",2];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_2.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_2.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_3 = ["FLOAT_3",3];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_3.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_3.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_4 = ["FLOAT_4",4];
openfl_display3D_Context3DVertexBufferFormat.FLOAT_4.toString = $estr;
openfl_display3D_Context3DVertexBufferFormat.FLOAT_4.__enum__ = openfl_display3D_Context3DVertexBufferFormat;
openfl_display3D_Context3DVertexBufferFormat.__empty_constructs__ = [openfl_display3D_Context3DVertexBufferFormat.BYTES_4,openfl_display3D_Context3DVertexBufferFormat.FLOAT_1,openfl_display3D_Context3DVertexBufferFormat.FLOAT_2,openfl_display3D_Context3DVertexBufferFormat.FLOAT_3,openfl_display3D_Context3DVertexBufferFormat.FLOAT_4];
var openfl_display3D_Context3DWrapMode = $hxClasses["openfl.display3D.Context3DWrapMode"] = { __ename__ : ["openfl","display3D","Context3DWrapMode"], __constructs__ : ["CLAMP","REPEAT"] };
openfl_display3D_Context3DWrapMode.CLAMP = ["CLAMP",0];
openfl_display3D_Context3DWrapMode.CLAMP.toString = $estr;
openfl_display3D_Context3DWrapMode.CLAMP.__enum__ = openfl_display3D_Context3DWrapMode;
openfl_display3D_Context3DWrapMode.REPEAT = ["REPEAT",1];
openfl_display3D_Context3DWrapMode.REPEAT.toString = $estr;
openfl_display3D_Context3DWrapMode.REPEAT.__enum__ = openfl_display3D_Context3DWrapMode;
openfl_display3D_Context3DWrapMode.__empty_constructs__ = [openfl_display3D_Context3DWrapMode.CLAMP,openfl_display3D_Context3DWrapMode.REPEAT];
var openfl_display3D_IndexBuffer3D = function(context,glBuffer,numIndices,bufferUsage) {
	this.context = context;
	this.glBuffer = glBuffer;
	this.numIndices = numIndices;
	this.bufferUsage = bufferUsage;
};
$hxClasses["openfl.display3D.IndexBuffer3D"] = openfl_display3D_IndexBuffer3D;
openfl_display3D_IndexBuffer3D.__name__ = ["openfl","display3D","IndexBuffer3D"];
openfl_display3D_IndexBuffer3D.prototype = {
	dispose: function() {
		this.context.__deleteIndexBuffer(this);
	}
	,uploadFromByteArray: function(byteArray,byteArrayOffset,startOffset,count) {
		var bytesPerIndex = 2;
		lime_graphics_opengl_GL.context.bindBuffer(34963,this.glBuffer);
		var length = count * bytesPerIndex;
		var offset = byteArrayOffset + startOffset * bytesPerIndex;
		var indices;
		var this1;
		if(length != null) this1 = new Int16Array(length); else this1 = null;
		indices = this1;
		byteArray.position = offset;
		var i = 0;
		while(byteArray.position < length + offset) {
			var val = byteArray.readUnsignedByte();
			indices[i] = val;
			i++;
		}
		lime_graphics_opengl_GL.context.bufferData(34963,indices,this.bufferUsage);
	}
	,uploadFromVector: function(data,startOffset,count) {
		lime_graphics_opengl_GL.context.bindBuffer(34963,this.glBuffer);
		var indices;
		var this1;
		if(count != null) this1 = new Int16Array(count); else this1 = null;
		indices = this1;
		var _g1 = startOffset;
		var _g = startOffset + count;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i] = data.data[i];
		}
		lime_graphics_opengl_GL.context.bufferData(34963,indices,this.bufferUsage);
	}
	,uploadFromInt16Array: function(data) {
		lime_graphics_opengl_GL.context.bindBuffer(34963,this.glBuffer);
		lime_graphics_opengl_GL.context.bufferData(34963,data,this.bufferUsage);
	}
	,__class__: openfl_display3D_IndexBuffer3D
};
var openfl_display3D_Program3D = function(context,program) {
	this.context = context;
	this.glProgram = program;
};
$hxClasses["openfl.display3D.Program3D"] = openfl_display3D_Program3D;
openfl_display3D_Program3D.__name__ = ["openfl","display3D","Program3D"];
openfl_display3D_Program3D.prototype = {
	dispose: function() {
		this.context.__deleteProgram(this);
	}
	,upload: function(vertexShader,fragmentShader) {
		lime_graphics_opengl_GL.context.attachShader(this.glProgram,vertexShader);
		lime_graphics_opengl_GL.context.attachShader(this.glProgram,fragmentShader);
		lime_graphics_opengl_GL.context.linkProgram(this.glProgram);
		if(lime_graphics_opengl_GL.context.getProgramParameter(this.glProgram,35714) == 0) {
			var result = lime_graphics_opengl_GL.context.getProgramInfoLog(this.glProgram);
			if(result != "") throw new js__$Boot_HaxeError(result);
		}
	}
	,__class__: openfl_display3D_Program3D
};
var openfl_display3D_VertexBuffer3D = function(context,glBuffer,numVertices,data32PerVertex,bufferUsage) {
	this.context = context;
	this.glBuffer = glBuffer;
	this.numVertices = numVertices;
	this.data32PerVertex = data32PerVertex;
	this.bufferUsage = bufferUsage;
};
$hxClasses["openfl.display3D.VertexBuffer3D"] = openfl_display3D_VertexBuffer3D;
openfl_display3D_VertexBuffer3D.__name__ = ["openfl","display3D","VertexBuffer3D"];
openfl_display3D_VertexBuffer3D.prototype = {
	dispose: function() {
		this.context.__deleteVertexBuffer(this);
	}
	,uploadFromByteArray: function(byteArray,byteArrayOffset,startOffset,count) {
		var bytesPerVertex = this.data32PerVertex * 4;
		lime_graphics_opengl_GL.context.bindBuffer(34962,this.glBuffer);
		var length = count * bytesPerVertex;
		var offset = byteArrayOffset + startOffset * bytesPerVertex;
		var float32Array;
		var this1;
		if(length != null) this1 = new Float32Array(length); else this1 = null;
		float32Array = this1;
		byteArray.position = offset;
		var i = 0;
		while(byteArray.position < length + offset) {
			var val = byteArray.readUnsignedByte();
			float32Array[i] = val;
			i++;
		}
		lime_graphics_opengl_GL.context.bufferData(34962,float32Array,this.bufferUsage);
	}
	,uploadFromFloat32Array: function(data) {
		lime_graphics_opengl_GL.context.bindBuffer(34962,this.glBuffer);
		lime_graphics_opengl_GL.context.bufferData(34962,data,this.bufferUsage);
	}
	,uploadFromVector: function(data,startVertex,numVertices) {
		var bytesPerVertex = this.data32PerVertex * 4;
		lime_graphics_opengl_GL.context.bindBuffer(34962,this.glBuffer);
		var length = numVertices * this.data32PerVertex;
		var offset = startVertex;
		var float32Array;
		var this1;
		if(length != null) this1 = new Float32Array(length); else this1 = null;
		float32Array = this1;
		var _g1 = startVertex;
		var _g = startVertex + length;
		while(_g1 < _g) {
			var i = _g1++;
			float32Array[i] = data.data[i];
		}
		lime_graphics_opengl_GL.context.bufferData(34962,float32Array,this.bufferUsage);
		float32Array = null;
	}
	,__class__: openfl_display3D_VertexBuffer3D
};
var openfl_display3D_textures_TextureBase = function(context,glTexture,width,height) {
	if(height == null) height = 0;
	if(width == null) width = 0;
	openfl_events_EventDispatcher.call(this);
	this.context = context;
	this.width = width;
	this.height = height;
	this.glTexture = glTexture;
};
$hxClasses["openfl.display3D.textures.TextureBase"] = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_TextureBase.__name__ = ["openfl","display3D","textures","TextureBase"];
openfl_display3D_textures_TextureBase.__super__ = openfl_events_EventDispatcher;
openfl_display3D_textures_TextureBase.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	dispose: function() {
		this.context.__deleteTexture(this);
	}
	,__class__: openfl_display3D_textures_TextureBase
});
var openfl_display3D_textures_CubeTexture = function(context,glTexture,size) {
	openfl_display3D_textures_TextureBase.call(this,context,glTexture,size,size);
	this.size = size;
	this.mipmapsGenerated = false;
	this._textures = [];
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		this._textures[i] = lime_graphics_opengl_GL.context.createTexture();
	}
};
$hxClasses["openfl.display3D.textures.CubeTexture"] = openfl_display3D_textures_CubeTexture;
openfl_display3D_textures_CubeTexture.__name__ = ["openfl","display3D","textures","CubeTexture"];
openfl_display3D_textures_CubeTexture.__super__ = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_CubeTexture.prototype = $extend(openfl_display3D_textures_TextureBase.prototype,{
	glTextureAt: function(index) {
		return this._textures[index];
	}
	,uploadCompressedTextureFromByteArray: function(data,byteArrayOffset,async) {
		if(async == null) async = false;
	}
	,uploadFromBitmapData: function(bitmapData,side,miplevel) {
		if(miplevel == null) miplevel = 0;
		var source = bitmapData.image.get_data();
		lime_graphics_opengl_GL.context.bindTexture(34067,this.glTexture);
		switch(side) {
		case 0:
			lime_graphics_opengl_GL.context.texImage2D(34069,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 1:
			lime_graphics_opengl_GL.context.texImage2D(34070,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 2:
			lime_graphics_opengl_GL.context.texImage2D(34071,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 3:
			lime_graphics_opengl_GL.context.texImage2D(34072,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 4:
			lime_graphics_opengl_GL.context.texImage2D(34073,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		case 5:
			lime_graphics_opengl_GL.context.texImage2D(34074,miplevel,6408,bitmapData.width,bitmapData.height,0,6408,5121,source);
			break;
		default:
			throw new js__$Boot_HaxeError("unknown side type");
		}
		lime_graphics_opengl_GL.context.bindTexture(34067,null);
	}
	,uploadFromByteArray: function(data,byteArrayOffset,side,miplevel) {
		if(miplevel == null) miplevel = 0;
	}
	,__class__: openfl_display3D_textures_CubeTexture
});
var openfl_display3D_textures_RectangleTexture = function(context,glTexture,optimize,width,height) {
	this.optimizeForRenderToTexture = optimize;
	if(this.optimizeForRenderToTexture == null) this.optimizeForRenderToTexture = false;
	openfl_display3D_textures_TextureBase.call(this,context,glTexture,width,height);
};
$hxClasses["openfl.display3D.textures.RectangleTexture"] = openfl_display3D_textures_RectangleTexture;
openfl_display3D_textures_RectangleTexture.__name__ = ["openfl","display3D","textures","RectangleTexture"];
openfl_display3D_textures_RectangleTexture.__super__ = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_RectangleTexture.prototype = $extend(openfl_display3D_textures_TextureBase.prototype,{
	uploadFromBitmapData: function(bitmapData,miplevel) {
		if(miplevel == null) miplevel = 0;
		var p = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromArrayBuffer(bitmapData.image.get_data().buffer);
		this.width = bitmapData.width;
		this.height = bitmapData.height;
		this.uploadFromByteArray(p,0);
	}
	,uploadFromByteArray: function(data,byteArrayOffset) {
		lime_graphics_opengl_GL.context.bindTexture(3553,this.glTexture);
		if(this.optimizeForRenderToTexture) lime_graphics_opengl_GL.context.pixelStorei(37440,1);
		lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
		lime_graphics_opengl_GL.context.texParameteri(3553,10241,9728);
		lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
		lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
		var source;
		var elements = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data);
		var this1;
		if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
		source = this1;
		data.position = byteArrayOffset;
		var i = 0;
		while(data.position < openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data)) {
			var val = data.readUnsignedByte();
			source[i] = val;
			i++;
		}
		lime_graphics_opengl_GL.context.texImage2D(3553,0,6408,this.width,this.height,0,6408,5121,source);
		lime_graphics_opengl_GL.context.bindTexture(3553,null);
	}
	,__class__: openfl_display3D_textures_RectangleTexture
});
var openfl_display3D_textures_Texture = function(context,glTexture,optimize,width,height) {
	this.optimizeForRenderToTexture = optimize;
	this.mipmapsGenerated = false;
	if(this.optimizeForRenderToTexture == null) this.optimizeForRenderToTexture = false;
	openfl_display3D_textures_TextureBase.call(this,context,glTexture,width,height);
};
$hxClasses["openfl.display3D.textures.Texture"] = openfl_display3D_textures_Texture;
openfl_display3D_textures_Texture.__name__ = ["openfl","display3D","textures","Texture"];
openfl_display3D_textures_Texture.__super__ = openfl_display3D_textures_TextureBase;
openfl_display3D_textures_Texture.prototype = $extend(openfl_display3D_textures_TextureBase.prototype,{
	uploadCompressedTextureFromByteArray: function(data,byteArrayOffset,async) {
		if(async == null) async = false;
	}
	,uploadFromBitmapData: function(bitmapData,miplevel) {
		if(miplevel == null) miplevel = 0;
		var image = bitmapData.image;
		if(!image.get_premultiplied() && image.get_transparent()) {
			image = image.clone();
			image.set_premultiplied(true);
		}
		this.width = image.width;
		this.height = image.height;
		this.uploadFromUInt8Array(image.get_data(),miplevel);
	}
	,uploadFromByteArray: function(data,byteArrayOffset,miplevel) {
		if(miplevel == null) miplevel = 0;
		var source;
		var elements = openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data);
		var this1;
		if(elements != null) this1 = new Uint8Array(elements); else this1 = null;
		source = this1;
		data.position = byteArrayOffset;
		var i = 0;
		while(data.position < openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(data)) {
			var val = data.readUnsignedByte();
			source[i] = val;
			i++;
		}
		this.uploadFromUInt8Array(source,miplevel);
	}
	,uploadFromUInt8Array: function(data,miplevel) {
		if(miplevel == null) miplevel = 0;
		lime_graphics_opengl_GL.context.bindTexture(3553,this.glTexture);
		if(this.optimizeForRenderToTexture) {
			lime_graphics_opengl_GL.context.pixelStorei(37440,1);
			lime_graphics_opengl_GL.context.texParameteri(3553,10240,9728);
			lime_graphics_opengl_GL.context.texParameteri(3553,10241,9728);
			lime_graphics_opengl_GL.context.texParameteri(3553,10242,33071);
			lime_graphics_opengl_GL.context.texParameteri(3553,10243,33071);
		}
		lime_graphics_opengl_GL.context.texImage2D(3553,miplevel,6408,this.width,this.height,0,6408,5121,data);
		lime_graphics_opengl_GL.context.bindTexture(3553,null);
	}
	,__class__: openfl_display3D_textures_Texture
});
var openfl_errors_Error = function(message,id) {
	if(id == null) id = 0;
	if(message == null) message = "";
	this.message = message;
	this.errorID = id;
	this.name = "Error";
};
$hxClasses["openfl.errors.Error"] = openfl_errors_Error;
openfl_errors_Error.__name__ = ["openfl","errors","Error"];
openfl_errors_Error.prototype = {
	getStackTrace: function() {
		return haxe_CallStack.toString(haxe_CallStack.exceptionStack());
	}
	,toString: function() {
		if(this.message != null) return this.message; else return "Error";
	}
	,__class__: openfl_errors_Error
};
var openfl_errors_ArgumentError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message);
	this.name = "ArgumentError";
};
$hxClasses["openfl.errors.ArgumentError"] = openfl_errors_ArgumentError;
openfl_errors_ArgumentError.__name__ = ["openfl","errors","ArgumentError"];
openfl_errors_ArgumentError.__super__ = openfl_errors_Error;
openfl_errors_ArgumentError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_ArgumentError
});
var openfl_errors_IOError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message);
	this.name = "IOError";
};
$hxClasses["openfl.errors.IOError"] = openfl_errors_IOError;
openfl_errors_IOError.__name__ = ["openfl","errors","IOError"];
openfl_errors_IOError.__super__ = openfl_errors_Error;
openfl_errors_IOError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_IOError
});
var openfl_errors_EOFError = function() {
	openfl_errors_IOError.call(this,"End of file was encountered");
	this.name = "EOFError";
	this.errorID = 2030;
};
$hxClasses["openfl.errors.EOFError"] = openfl_errors_EOFError;
openfl_errors_EOFError.__name__ = ["openfl","errors","EOFError"];
openfl_errors_EOFError.__super__ = openfl_errors_IOError;
openfl_errors_EOFError.prototype = $extend(openfl_errors_IOError.prototype,{
	__class__: openfl_errors_EOFError
});
var openfl_errors_RangeError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message,0);
	this.name = "RangeError";
};
$hxClasses["openfl.errors.RangeError"] = openfl_errors_RangeError;
openfl_errors_RangeError.__name__ = ["openfl","errors","RangeError"];
openfl_errors_RangeError.__super__ = openfl_errors_Error;
openfl_errors_RangeError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_RangeError
});
var openfl_errors_TypeError = function(message) {
	if(message == null) message = "";
	openfl_errors_Error.call(this,message,0);
	this.name = "TypeError";
};
$hxClasses["openfl.errors.TypeError"] = openfl_errors_TypeError;
openfl_errors_TypeError.__name__ = ["openfl","errors","TypeError"];
openfl_errors_TypeError.__super__ = openfl_errors_Error;
openfl_errors_TypeError.prototype = $extend(openfl_errors_Error.prototype,{
	__class__: openfl_errors_TypeError
});
var openfl_events_ActivityEvent = function(type,bubbles,cancelable,activating) {
	if(activating == null) activating = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.activating = activating;
};
$hxClasses["openfl.events.ActivityEvent"] = openfl_events_ActivityEvent;
openfl_events_ActivityEvent.__name__ = ["openfl","events","ActivityEvent"];
openfl_events_ActivityEvent.__super__ = openfl_events_Event;
openfl_events_ActivityEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_ActivityEvent(this.type,this.bubbles,this.cancelable,this.activating);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("ActivityEvent",["type","bubbles","cancelable","activating"]);
	}
	,__class__: openfl_events_ActivityEvent
});
var openfl_events_TextEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["openfl.events.TextEvent"] = openfl_events_TextEvent;
openfl_events_TextEvent.__name__ = ["openfl","events","TextEvent"];
openfl_events_TextEvent.__super__ = openfl_events_Event;
openfl_events_TextEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_TextEvent(this.type,this.bubbles,this.cancelable,this.text);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("TextEvent",["type","bubbles","cancelable","text"]);
	}
	,__class__: openfl_events_TextEvent
});
var openfl_events_ErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_TextEvent.call(this,type,bubbles,cancelable,text);
	this.errorID = id;
};
$hxClasses["openfl.events.ErrorEvent"] = openfl_events_ErrorEvent;
openfl_events_ErrorEvent.__name__ = ["openfl","events","ErrorEvent"];
openfl_events_ErrorEvent.__super__ = openfl_events_TextEvent;
openfl_events_ErrorEvent.prototype = $extend(openfl_events_TextEvent.prototype,{
	clone: function() {
		var event = new openfl_events_ErrorEvent(this.type,this.bubbles,this.cancelable,this.text,this.errorID);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("ErrorEvent",["type","bubbles","cancelable","text","errorID"]);
	}
	,__class__: openfl_events_ErrorEvent
});
var openfl_events__$EventDispatcher_Listener = function(callback,useCapture,priority) {
	this.callback = callback;
	this.useCapture = useCapture;
	this.priority = priority;
};
$hxClasses["openfl.events._EventDispatcher.Listener"] = openfl_events__$EventDispatcher_Listener;
openfl_events__$EventDispatcher_Listener.__name__ = ["openfl","events","_EventDispatcher","Listener"];
openfl_events__$EventDispatcher_Listener.prototype = {
	match: function(callback,useCapture) {
		return Reflect.compareMethods(this.callback,callback) && this.useCapture == useCapture;
	}
	,__class__: openfl_events__$EventDispatcher_Listener
};
var openfl_events_EventPhase = $hxClasses["openfl.events.EventPhase"] = { __ename__ : ["openfl","events","EventPhase"], __constructs__ : ["CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE"] };
openfl_events_EventPhase.CAPTURING_PHASE = ["CAPTURING_PHASE",0];
openfl_events_EventPhase.CAPTURING_PHASE.toString = $estr;
openfl_events_EventPhase.CAPTURING_PHASE.__enum__ = openfl_events_EventPhase;
openfl_events_EventPhase.AT_TARGET = ["AT_TARGET",1];
openfl_events_EventPhase.AT_TARGET.toString = $estr;
openfl_events_EventPhase.AT_TARGET.__enum__ = openfl_events_EventPhase;
openfl_events_EventPhase.BUBBLING_PHASE = ["BUBBLING_PHASE",2];
openfl_events_EventPhase.BUBBLING_PHASE.toString = $estr;
openfl_events_EventPhase.BUBBLING_PHASE.__enum__ = openfl_events_EventPhase;
openfl_events_EventPhase.__empty_constructs__ = [openfl_events_EventPhase.CAPTURING_PHASE,openfl_events_EventPhase.AT_TARGET,openfl_events_EventPhase.BUBBLING_PHASE];
var openfl_events_FocusEvent = function(type,bubbles,cancelable,relatedObject,shiftKey,keyCode) {
	if(keyCode == null) keyCode = 0;
	if(shiftKey == null) shiftKey = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.keyCode = keyCode;
	this.shiftKey = shiftKey;
	this.relatedObject = relatedObject;
};
$hxClasses["openfl.events.FocusEvent"] = openfl_events_FocusEvent;
openfl_events_FocusEvent.__name__ = ["openfl","events","FocusEvent"];
openfl_events_FocusEvent.__super__ = openfl_events_Event;
openfl_events_FocusEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_FocusEvent(this.type,this.bubbles,this.cancelable,this.relatedObject,this.shiftKey,this.keyCode);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("FocusEvent",["type","bubbles","cancelable","relatedObject","shiftKey","keyCode"]);
	}
	,__class__: openfl_events_FocusEvent
});
var openfl_events_FullScreenEvent = function(type,bubbles,cancelable,fullScreen,interactive) {
	if(interactive == null) interactive = false;
	if(fullScreen == null) fullScreen = false;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_ActivityEvent.call(this,type,bubbles,cancelable);
	this.fullScreen = fullScreen;
	this.interactive = interactive;
};
$hxClasses["openfl.events.FullScreenEvent"] = openfl_events_FullScreenEvent;
openfl_events_FullScreenEvent.__name__ = ["openfl","events","FullScreenEvent"];
openfl_events_FullScreenEvent.__super__ = openfl_events_ActivityEvent;
openfl_events_FullScreenEvent.prototype = $extend(openfl_events_ActivityEvent.prototype,{
	clone: function() {
		var event = new openfl_events_FullScreenEvent(this.type,this.bubbles,this.cancelable,this.fullScreen,this.interactive);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("FullscreenEvent",["type","bubbles","cancelable","fullscreen","interactive"]);
	}
	,__class__: openfl_events_FullScreenEvent
});
var openfl_events_GameInputEvent = function(type,bubbles,cancelable,device) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.device = device;
};
$hxClasses["openfl.events.GameInputEvent"] = openfl_events_GameInputEvent;
openfl_events_GameInputEvent.__name__ = ["openfl","events","GameInputEvent"];
openfl_events_GameInputEvent.__super__ = openfl_events_Event;
openfl_events_GameInputEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_GameInputEvent(this.type,this.bubbles,this.cancelable,this.device);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("GameInputEvent",["type","bubbles","cancelable","device"]);
	}
	,__class__: openfl_events_GameInputEvent
});
var openfl_events_HTTPStatusEvent = function(type,bubbles,cancelable,status,redirected) {
	if(redirected == null) redirected = false;
	if(status == null) status = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.status = status;
	this.redirected = redirected;
	openfl_events_Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.HTTPStatusEvent"] = openfl_events_HTTPStatusEvent;
openfl_events_HTTPStatusEvent.__name__ = ["openfl","events","HTTPStatusEvent"];
openfl_events_HTTPStatusEvent.__super__ = openfl_events_Event;
openfl_events_HTTPStatusEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_HTTPStatusEvent(this.type,this.bubbles,null,this.status,this.redirected);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("HTTPStatusEvent",["type","bubbles","cancelable","status","redirected"]);
	}
	,__class__: openfl_events_HTTPStatusEvent
});
var openfl_events_IOErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_ErrorEvent.call(this,type,bubbles,cancelable,text,id);
};
$hxClasses["openfl.events.IOErrorEvent"] = openfl_events_IOErrorEvent;
openfl_events_IOErrorEvent.__name__ = ["openfl","events","IOErrorEvent"];
openfl_events_IOErrorEvent.__super__ = openfl_events_ErrorEvent;
openfl_events_IOErrorEvent.prototype = $extend(openfl_events_ErrorEvent.prototype,{
	clone: function() {
		var event = new openfl_events_IOErrorEvent(this.type,this.bubbles,this.cancelable,this.text,this.errorID);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("IOErrorEvent",["type","bubbles","cancelable","text","errorID"]);
	}
	,__class__: openfl_events_IOErrorEvent
});
var openfl_events_KeyboardEvent = function(type,bubbles,cancelable,charCodeValue,keyCodeValue,keyLocationValue,ctrlKeyValue,altKeyValue,shiftKeyValue,controlKeyValue,commandKeyValue) {
	if(commandKeyValue == null) commandKeyValue = false;
	if(controlKeyValue == null) controlKeyValue = false;
	if(shiftKeyValue == null) shiftKeyValue = false;
	if(altKeyValue == null) altKeyValue = false;
	if(ctrlKeyValue == null) ctrlKeyValue = false;
	if(keyCodeValue == null) keyCodeValue = 0;
	if(charCodeValue == null) charCodeValue = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.charCode = charCodeValue;
	this.keyCode = keyCodeValue;
	if(keyLocationValue != null) this.keyLocation = keyLocationValue; else this.keyLocation = 0;
	this.ctrlKey = ctrlKeyValue;
	this.altKey = altKeyValue;
	this.shiftKey = shiftKeyValue;
	this.controlKey = controlKeyValue;
	this.commandKey = commandKeyValue;
};
$hxClasses["openfl.events.KeyboardEvent"] = openfl_events_KeyboardEvent;
openfl_events_KeyboardEvent.__name__ = ["openfl","events","KeyboardEvent"];
openfl_events_KeyboardEvent.__super__ = openfl_events_Event;
openfl_events_KeyboardEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_KeyboardEvent(this.type,this.bubbles,this.cancelable,this.charCode,this.keyCode,this.keyLocation,this.ctrlKey,this.altKey,this.shiftKey,this.controlKey,this.commandKey);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("KeyboardEvent",["type","bubbles","cancelable","charCode","keyCode","keyLocation","ctrlKey","altKey","shiftKey"]);
	}
	,__class__: openfl_events_KeyboardEvent
});
var openfl_events_MouseEvent = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.clickCount = clickCount;
};
$hxClasses["openfl.events.MouseEvent"] = openfl_events_MouseEvent;
openfl_events_MouseEvent.__name__ = ["openfl","events","MouseEvent"];
openfl_events_MouseEvent.__altKey = null;
openfl_events_MouseEvent.__buttonDown = null;
openfl_events_MouseEvent.__commandKey = null;
openfl_events_MouseEvent.__ctrlKey = null;
openfl_events_MouseEvent.__shiftKey = null;
openfl_events_MouseEvent.__create = function(type,button,stageX,stageY,local,target,delta) {
	if(delta == null) delta = 0;
	switch(type) {
	case "mouseDown":
		openfl_events_MouseEvent.__buttonDown = true;
		break;
	case "mouseUp":
		openfl_events_MouseEvent.__buttonDown = false;
		break;
	default:
	}
	var event = new openfl_events_MouseEvent(type,true,false,local.x,local.y,null,openfl_events_MouseEvent.__ctrlKey,openfl_events_MouseEvent.__altKey,openfl_events_MouseEvent.__shiftKey,openfl_events_MouseEvent.__buttonDown,delta,openfl_events_MouseEvent.__commandKey);
	event.stageX = stageX;
	event.stageY = stageY;
	event.target = target;
	return event;
};
openfl_events_MouseEvent.__super__ = openfl_events_Event;
openfl_events_MouseEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_MouseEvent(this.type,this.bubbles,this.cancelable,this.localX,this.localY,this.relatedObject,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey,this.clickCount);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("MouseEvent",["type","bubbles","cancelable","localX","localY","relatedObject","ctrlKey","altKey","shiftKey","buttonDown","delta"]);
	}
	,updateAfterEvent: function() {
	}
	,__class__: openfl_events_MouseEvent
});
var openfl_events_NetStatusEvent = function(type,bubbles,cancelable,info) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.info = info;
	openfl_events_Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.NetStatusEvent"] = openfl_events_NetStatusEvent;
openfl_events_NetStatusEvent.__name__ = ["openfl","events","NetStatusEvent"];
openfl_events_NetStatusEvent.__super__ = openfl_events_Event;
openfl_events_NetStatusEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_NetStatusEvent(this.type,this.bubbles,this.cancelable,this.info);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("NetStatusEvent",["type","bubbles","cancelable","info"]);
	}
	,__class__: openfl_events_NetStatusEvent
});
var openfl_events_ProgressEvent = function(type,bubbles,cancelable,bytesLoaded,bytesTotal) {
	if(bytesTotal == null) bytesTotal = 0;
	if(bytesLoaded == null) bytesLoaded = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.bytesLoaded = bytesLoaded;
	this.bytesTotal = bytesTotal;
};
$hxClasses["openfl.events.ProgressEvent"] = openfl_events_ProgressEvent;
openfl_events_ProgressEvent.__name__ = ["openfl","events","ProgressEvent"];
openfl_events_ProgressEvent.__super__ = openfl_events_Event;
openfl_events_ProgressEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_ProgressEvent(this.type,this.bubbles,this.cancelable,this.bytesLoaded,this.bytesTotal);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("ProgressEvent",["type","bubbles","cancelable","bytesLoaded","bytesTotal"]);
	}
	,__class__: openfl_events_ProgressEvent
});
var openfl_events_SecurityErrorEvent = function(type,bubbles,cancelable,text,id) {
	if(id == null) id = 0;
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_ErrorEvent.call(this,type,bubbles,cancelable,text,id);
};
$hxClasses["openfl.events.SecurityErrorEvent"] = openfl_events_SecurityErrorEvent;
openfl_events_SecurityErrorEvent.__name__ = ["openfl","events","SecurityErrorEvent"];
openfl_events_SecurityErrorEvent.__super__ = openfl_events_ErrorEvent;
openfl_events_SecurityErrorEvent.prototype = $extend(openfl_events_ErrorEvent.prototype,{
	clone: function() {
		var event = new openfl_events_SecurityErrorEvent(this.type,this.bubbles,this.cancelable,this.text,this.errorID);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("SecurityErrorEvent",["type","bubbles","cancelable","text","errorID"]);
	}
	,__class__: openfl_events_SecurityErrorEvent
});
var openfl_events_TouchEvent = function(type,bubbles,cancelable,touchPointID,isPrimaryTouchPoint,localX,localY,sizeX,sizeY,pressure,relatedObject,ctrlKey,altKey,shiftKey,commandKey,controlKey,timestamp,touchIntent,samples,isTouchPointCanceled) {
	if(isTouchPointCanceled == null) isTouchPointCanceled = false;
	if(timestamp == null) timestamp = 0;
	if(controlKey == null) controlKey = false;
	if(commandKey == null) commandKey = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(pressure == null) pressure = 0;
	if(sizeY == null) sizeY = 0;
	if(sizeX == null) sizeX = 0;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(isPrimaryTouchPoint == null) isPrimaryTouchPoint = false;
	if(touchPointID == null) touchPointID = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.touchPointID = touchPointID;
	this.isPrimaryTouchPoint = isPrimaryTouchPoint;
	this.localX = localX;
	this.localY = localY;
	this.sizeX = sizeX;
	this.sizeY = sizeY;
	this.pressure = pressure;
	this.relatedObject = relatedObject;
	this.ctrlKey = ctrlKey;
	this.altKey = altKey;
	this.shiftKey = shiftKey;
	this.commandKey = commandKey;
	this.controlKey = controlKey;
};
$hxClasses["openfl.events.TouchEvent"] = openfl_events_TouchEvent;
openfl_events_TouchEvent.__name__ = ["openfl","events","TouchEvent"];
openfl_events_TouchEvent.__create = function(type,touch,stageX,stageY,local,target) {
	var evt = new openfl_events_TouchEvent(type,true,false,0,true,local.x,local.y,1,1,1);
	evt.stageX = stageX;
	evt.stageY = stageY;
	evt.target = target;
	return evt;
};
openfl_events_TouchEvent.__super__ = openfl_events_Event;
openfl_events_TouchEvent.prototype = $extend(openfl_events_Event.prototype,{
	clone: function() {
		var event = new openfl_events_TouchEvent(this.type,this.bubbles,this.cancelable,this.touchPointID,this.isPrimaryTouchPoint,this.localX,this.localY,this.sizeX,this.sizeY,this.pressure,this.relatedObject,this.ctrlKey,this.altKey,this.shiftKey,this.commandKey,this.controlKey);
		event.target = this.target;
		event.currentTarget = this.currentTarget;
		event.eventPhase = this.eventPhase;
		return event;
	}
	,toString: function() {
		return this.__formatToString("TouchEvent",["type","bubbles","cancelable","touchPointID","isPrimaryTouchPoint","localX","localY","sizeX","sizeY","pressure","relatedObject","ctrlKey","altKey","shiftKey","commandKey","controlKey"]);
	}
	,updateAfterEvent: function() {
	}
	,__class__: openfl_events_TouchEvent
});
var openfl_filters_BitmapFilter = function() {
	this.__saveLastFilter = false;
	this.__passes = 0;
	this.__dirty = true;
};
$hxClasses["openfl.filters.BitmapFilter"] = openfl_filters_BitmapFilter;
openfl_filters_BitmapFilter.__name__ = ["openfl","filters","BitmapFilter"];
openfl_filters_BitmapFilter.__tmpRenderTexture = null;
openfl_filters_BitmapFilter.__applyFilters = function(filters,renderSession,source,target,sourceRect,destPoint) {
	var same = target == source && target.__usingPingPongTexture;
	if(same) target.__pingPongTexture.useOldTexture = true;
	if(sourceRect == null) sourceRect = source.rect;
	var lastFilterOutput = null;
	var useLastFilter = false;
	var srcShader = source.__shader;
	var _g = 0;
	while(_g < filters.length) {
		var filter = filters[_g];
		++_g;
		useLastFilter = false;
		if(filter.__saveLastFilter) {
			target.__pingPongTexture.swap();
			target.__drawGL(renderSession,source,null,null,null,sourceRect,true,!target.__usingPingPongTexture,true);
			lastFilterOutput = target.__pingPongTexture.get_oldRenderTexture();
			target.__pingPongTexture.set_oldRenderTexture(openfl_filters_BitmapFilter.__tmpRenderTexture);
		}
		var _g2 = 0;
		var _g1 = filter.__passes;
		while(_g2 < _g1) {
			var pass = _g2++;
			useLastFilter = filter.__saveLastFilter && filter.__useLastFilter(pass);
			if(same && !useLastFilter) target.__pingPongTexture.swap();
			if(useLastFilter) {
				openfl_filters_BitmapFilter.__tmpRenderTexture = target.__pingPongTexture.get_oldRenderTexture();
				target.__pingPongTexture.set_oldRenderTexture(lastFilterOutput);
			}
			source.__shader = filter.__preparePass(pass);
			target.__drawGL(renderSession,source,null,null,null,sourceRect,true,!target.__usingPingPongTexture,!useLastFilter);
		}
	}
	source.__shader = srcShader;
	if(same) target.__pingPongTexture.useOldTexture = false;
};
openfl_filters_BitmapFilter.__expandBounds = function(filters,rect,matrix) {
	var r = openfl_geom_Rectangle.__temp;
	r.setEmpty();
	var _g = 0;
	while(_g < filters.length) {
		var filter = filters[_g];
		++_g;
		filter.__growBounds(r);
	}
	r.__transform(r,matrix);
	rect.__expand(r.x,r.y,r.width,r.height);
};
openfl_filters_BitmapFilter.prototype = {
	clone: function() {
		return new openfl_filters_BitmapFilter();
	}
	,__applyFilter: function(sourceData,targetData,sourceRect,destPoint) {
	}
	,__growBounds: function(rect) {
	}
	,__preparePass: function(pass) {
		return null;
	}
	,__useLastFilter: function(pass) {
		return false;
	}
	,__class__: openfl_filters_BitmapFilter
};
var openfl_geom_Matrix3D = function(v) {
	if(v != null && v.length == 16) this.rawData = v; else {
		var value = [1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		var vec;
		var this1;
		this1 = new Array(value.length);
		vec = this1;
		var _g1 = 0;
		var _g = value.length;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = value[i];
		}
		vectorData.data = vec;
		this.rawData = vectorData;
	}
};
$hxClasses["openfl.geom.Matrix3D"] = openfl_geom_Matrix3D;
openfl_geom_Matrix3D.__name__ = ["openfl","geom","Matrix3D"];
openfl_geom_Matrix3D.create2D = function(x,y,scale,rotation) {
	if(rotation == null) rotation = 0;
	if(scale == null) scale = 1;
	var theta = rotation * Math.PI / 180.0;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	return new openfl_geom_Matrix3D((function($this) {
		var $r;
		var value = [c * scale,-s * scale,0,0,s * scale,c * scale,0,0,0,0,1,0,x,y,0,1];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		{
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
		}
		$r = vectorData;
		return $r;
	}(this)));
};
openfl_geom_Matrix3D.createABCD = function(a,b,c,d,tx,ty) {
	return new openfl_geom_Matrix3D((function($this) {
		var $r;
		var value = [a,b,0,0,c,d,0,0,0,0,1,0,tx,ty,0,1];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		{
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
		}
		$r = vectorData;
		return $r;
	}(this)));
};
openfl_geom_Matrix3D.createOrtho = function(x0,x1,y0,y1,zNear,zFar) {
	var sx = 1.0 / (x1 - x0);
	var sy = 1.0 / (y1 - y0);
	var sz = 1.0 / (zFar - zNear);
	return new openfl_geom_Matrix3D((function($this) {
		var $r;
		var value = [2.0 * sx,0,0,0,0,2.0 * sy,0,0,0,0,-2. * sz,0,-(x0 + x1) * sx,-(y0 + y1) * sy,-(zNear + zFar) * sz,1];
		var vectorData = new openfl_VectorData();
		vectorData.length = value.length;
		vectorData.fixed = true;
		{
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
		}
		$r = vectorData;
		return $r;
	}(this)));
};
openfl_geom_Matrix3D.interpolate = function(thisMat,toMat,percent) {
	var m = new openfl_geom_Matrix3D();
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		var this1 = m.rawData;
		if(!this1.fixed) {
			if(i >= this1.length) this1.length = i + 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[i] = thisMat.rawData.data[i] + (toMat.rawData.data[i] - thisMat.rawData.data[i]) * percent;
	}
	return m;
};
openfl_geom_Matrix3D.__getAxisRotation = function(x,y,z,degrees) {
	var m = new openfl_geom_Matrix3D();
	var a1 = new openfl_geom_Vector3D(x,y,z);
	var rad = -degrees * (Math.PI / 180);
	var c = Math.cos(rad);
	var s = Math.sin(rad);
	var t = 1.0 - c;
	var this1 = m.rawData;
	if(!this1.fixed) {
		if(0 >= this1.length) this1.length = 1;
		if(this1.data.length < this1.length) {
			var data;
			var this2;
			this2 = new Array(this1.data.length + 10);
			data = this2;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
			this1.data = data;
		}
	}
	this1.data[0] = c + a1.x * a1.x * t;
	var this3 = m.rawData;
	if(!this3.fixed) {
		if(5 >= this3.length) this3.length = 6;
		if(this3.data.length < this3.length) {
			var data1;
			var this4;
			this4 = new Array(this3.data.length + 10);
			data1 = this4;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
			this3.data = data1;
		}
	}
	this3.data[5] = c + a1.y * a1.y * t;
	var this5 = m.rawData;
	if(!this5.fixed) {
		if(10 >= this5.length) this5.length = 11;
		if(this5.data.length < this5.length) {
			var data2;
			var this6;
			this6 = new Array(this5.data.length + 10);
			data2 = this6;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
			this5.data = data2;
		}
	}
	this5.data[10] = c + a1.z * a1.z * t;
	var tmp1 = a1.x * a1.y * t;
	var tmp2 = a1.z * s;
	var this7 = m.rawData;
	if(!this7.fixed) {
		if(4 >= this7.length) this7.length = 5;
		if(this7.data.length < this7.length) {
			var data3;
			var this8;
			this8 = new Array(this7.data.length + 10);
			data3 = this8;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
			this7.data = data3;
		}
	}
	this7.data[4] = tmp1 + tmp2;
	var this9 = m.rawData;
	if(!this9.fixed) {
		if(1 >= this9.length) this9.length = 2;
		if(this9.data.length < this9.length) {
			var data4;
			var this10;
			this10 = new Array(this9.data.length + 10);
			data4 = this10;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
			this9.data = data4;
		}
	}
	this9.data[1] = tmp1 - tmp2;
	tmp1 = a1.x * a1.z * t;
	tmp2 = a1.y * s;
	var this11 = m.rawData;
	if(!this11.fixed) {
		if(8 >= this11.length) this11.length = 9;
		if(this11.data.length < this11.length) {
			var data5;
			var this12;
			this12 = new Array(this11.data.length + 10);
			data5 = this12;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
			this11.data = data5;
		}
	}
	this11.data[8] = tmp1 - tmp2;
	var this13 = m.rawData;
	if(!this13.fixed) {
		if(2 >= this13.length) this13.length = 3;
		if(this13.data.length < this13.length) {
			var data6;
			var this14;
			this14 = new Array(this13.data.length + 10);
			data6 = this14;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
			this13.data = data6;
		}
	}
	this13.data[2] = tmp1 + tmp2;
	tmp1 = a1.y * a1.z * t;
	tmp2 = a1.x * s;
	var this15 = m.rawData;
	if(!this15.fixed) {
		if(9 >= this15.length) this15.length = 10;
		if(this15.data.length < this15.length) {
			var data7;
			var this16;
			this16 = new Array(this15.data.length + 10);
			data7 = this16;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
			this15.data = data7;
		}
	}
	this15.data[9] = tmp1 + tmp2;
	var this17 = m.rawData;
	if(!this17.fixed) {
		if(6 >= this17.length) this17.length = 7;
		if(this17.data.length < this17.length) {
			var data8;
			var this18;
			this18 = new Array(this17.data.length + 10);
			data8 = this18;
			haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
			this17.data = data8;
		}
	}
	this17.data[6] = tmp1 - tmp2;
	return m;
};
openfl_geom_Matrix3D.prototype = {
	append: function(lhs) {
		var m111 = this.rawData.data[0];
		var m121 = this.rawData.data[4];
		var m131 = this.rawData.data[8];
		var m141 = this.rawData.data[12];
		var m112 = this.rawData.data[1];
		var m122 = this.rawData.data[5];
		var m132 = this.rawData.data[9];
		var m142 = this.rawData.data[13];
		var m113 = this.rawData.data[2];
		var m123 = this.rawData.data[6];
		var m133 = this.rawData.data[10];
		var m143 = this.rawData.data[14];
		var m114 = this.rawData.data[3];
		var m124 = this.rawData.data[7];
		var m134 = this.rawData.data[11];
		var m144 = this.rawData.data[15];
		var m211 = lhs.rawData.data[0];
		var m221 = lhs.rawData.data[4];
		var m231 = lhs.rawData.data[8];
		var m241 = lhs.rawData.data[12];
		var m212 = lhs.rawData.data[1];
		var m222 = lhs.rawData.data[5];
		var m232 = lhs.rawData.data[9];
		var m242 = lhs.rawData.data[13];
		var m213 = lhs.rawData.data[2];
		var m223 = lhs.rawData.data[6];
		var m233 = lhs.rawData.data[10];
		var m243 = lhs.rawData.data[14];
		var m214 = lhs.rawData.data[3];
		var m224 = lhs.rawData.data[7];
		var m234 = lhs.rawData.data[11];
		var m244 = lhs.rawData.data[15];
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(0 >= this1.length) this1.length = 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(1 >= this3.length) this3.length = 2;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(2 >= this5.length) this5.length = 3;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(3 >= this7.length) this7.length = 4;
			if(this7.data.length < this7.length) {
				var data3;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data3 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
				this7.data = data3;
			}
		}
		this7.data[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(4 >= this9.length) this9.length = 5;
			if(this9.data.length < this9.length) {
				var data4;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data4 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
				this9.data = data4;
			}
		}
		this9.data[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(5 >= this11.length) this11.length = 6;
			if(this11.data.length < this11.length) {
				var data5;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data5 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
				this11.data = data5;
			}
		}
		this11.data[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(6 >= this13.length) this13.length = 7;
			if(this13.data.length < this13.length) {
				var data6;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data6 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
				this13.data = data6;
			}
		}
		this13.data[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(7 >= this15.length) this15.length = 8;
			if(this15.data.length < this15.length) {
				var data7;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data7 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
				this15.data = data7;
			}
		}
		this15.data[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(8 >= this17.length) this17.length = 9;
			if(this17.data.length < this17.length) {
				var data8;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data8 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
				this17.data = data8;
			}
		}
		this17.data[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(9 >= this19.length) this19.length = 10;
			if(this19.data.length < this19.length) {
				var data9;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data9 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
				this19.data = data9;
			}
		}
		this19.data[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(10 >= this21.length) this21.length = 11;
			if(this21.data.length < this21.length) {
				var data10;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data10 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
				this21.data = data10;
			}
		}
		this21.data[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(11 >= this23.length) this23.length = 12;
			if(this23.data.length < this23.length) {
				var data11;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data11 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
				this23.data = data11;
			}
		}
		this23.data[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(12 >= this25.length) this25.length = 13;
			if(this25.data.length < this25.length) {
				var data12;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data12 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
				this25.data = data12;
			}
		}
		this25.data[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
		var this27 = this.rawData;
		if(!this27.fixed) {
			if(13 >= this27.length) this27.length = 14;
			if(this27.data.length < this27.length) {
				var data13;
				var this28;
				this28 = new Array(this27.data.length + 10);
				data13 = this28;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
				this27.data = data13;
			}
		}
		this27.data[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
		var this29 = this.rawData;
		if(!this29.fixed) {
			if(14 >= this29.length) this29.length = 15;
			if(this29.data.length < this29.length) {
				var data14;
				var this30;
				this30 = new Array(this29.data.length + 10);
				data14 = this30;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
				this29.data = data14;
			}
		}
		this29.data[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
		var this31 = this.rawData;
		if(!this31.fixed) {
			if(15 >= this31.length) this31.length = 16;
			if(this31.data.length < this31.length) {
				var data15;
				var this32;
				this32 = new Array(this31.data.length + 10);
				data15 = this32;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
				this31.data = data15;
			}
		}
		this31.data[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
	}
	,appendRotation: function(degrees,axis,pivotPoint) {
		var m = openfl_geom_Matrix3D.__getAxisRotation(axis.x,axis.y,axis.z,degrees);
		if(pivotPoint != null) {
			var p = pivotPoint;
			m.appendTranslation(p.x,p.y,p.z);
		}
		this.append(m);
	}
	,appendScale: function(xScale,yScale,zScale) {
		this.append(new openfl_geom_Matrix3D((function($this) {
			var $r;
			var value = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
			var vectorData = new openfl_VectorData();
			vectorData.length = value.length;
			vectorData.fixed = true;
			{
				var vec;
				var this1;
				this1 = new Array(value.length);
				vec = this1;
				var _g1 = 0;
				var _g = value.length;
				while(_g1 < _g) {
					var i = _g1++;
					vec[i] = value[i];
				}
				vectorData.data = vec;
			}
			$r = vectorData;
			return $r;
		}(this))));
	}
	,appendTranslation: function(x,y,z) {
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(12 >= this1.length) this1.length = 13;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[12] = this.rawData.data[12] + x;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(13 >= this3.length) this3.length = 14;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[13] = this.rawData.data[13] + y;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(14 >= this5.length) this5.length = 15;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[14] = this.rawData.data[14] + z;
	}
	,clone: function() {
		return new openfl_geom_Matrix3D((function($this) {
			var $r;
			var this1 = $this.rawData;
			var vectorData = new openfl_VectorData();
			vectorData.length = this1.length;
			vectorData.fixed = this1.fixed;
			{
				var this2;
				this2 = new Array(this1.length);
				vectorData.data = this2;
			}
			haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
			$r = vectorData;
			return $r;
		}(this)));
	}
	,copyColumnFrom: function(column,vector3D) {
		switch(column) {
		case 0:
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = vector3D.x;
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(1 >= this3.length) this3.length = 2;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[1] = vector3D.y;
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(2 >= this5.length) this5.length = 3;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[2] = vector3D.z;
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(3 >= this7.length) this7.length = 4;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[3] = vector3D.w;
			break;
		case 1:
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(4 >= this9.length) this9.length = 5;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[4] = vector3D.x;
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = vector3D.y;
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(6 >= this13.length) this13.length = 7;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[6] = vector3D.z;
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(7 >= this15.length) this15.length = 8;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[7] = vector3D.w;
			break;
		case 2:
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(8 >= this17.length) this17.length = 9;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[8] = vector3D.x;
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(9 >= this19.length) this19.length = 10;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[9] = vector3D.y;
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = vector3D.z;
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(11 >= this23.length) this23.length = 12;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[11] = vector3D.w;
			break;
		case 3:
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(12 >= this25.length) this25.length = 13;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[12] = vector3D.x;
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(13 >= this27.length) this27.length = 14;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[13] = vector3D.y;
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(14 >= this29.length) this29.length = 15;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[14] = vector3D.z;
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = vector3D.w;
			break;
		default:
		}
	}
	,copyColumnTo: function(column,vector3D) {
		switch(column) {
		case 0:
			vector3D.x = this.rawData.data[0];
			vector3D.y = this.rawData.data[1];
			vector3D.z = this.rawData.data[2];
			vector3D.w = this.rawData.data[3];
			break;
		case 1:
			vector3D.x = this.rawData.data[4];
			vector3D.y = this.rawData.data[5];
			vector3D.z = this.rawData.data[6];
			vector3D.w = this.rawData.data[7];
			break;
		case 2:
			vector3D.x = this.rawData.data[8];
			vector3D.y = this.rawData.data[9];
			vector3D.z = this.rawData.data[10];
			vector3D.w = this.rawData.data[11];
			break;
		case 3:
			vector3D.x = this.rawData.data[12];
			vector3D.y = this.rawData.data[13];
			vector3D.z = this.rawData.data[14];
			vector3D.w = this.rawData.data[15];
			break;
		default:
		}
	}
	,copyFrom: function(other) {
		var this1 = other.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this1.length;
		vectorData.fixed = this1.fixed;
		var this2;
		this2 = new Array(this1.length);
		vectorData.data = this2;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
		this.rawData = vectorData;
	}
	,copyRawDataFrom: function(vector,index,transpose) {
		if(transpose == null) transpose = false;
		if(index == null) index = 0;
		if(transpose) this.transpose();
		var length = vector.length - index;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(i >= this1.length) this1.length = i + 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[i] = vector.data[i + index];
		}
		if(transpose) this.transpose();
	}
	,copyRawDataTo: function(vector,index,transpose) {
		if(transpose == null) transpose = false;
		if(index == null) index = 0;
		if(transpose) this.transpose();
		var _g1 = 0;
		var _g = this.rawData.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = i + index;
			if(!vector.fixed) {
				if(key >= vector.length) vector.length = key + 1;
				if(vector.data.length < vector.length) {
					var data;
					var this1;
					this1 = new Array(vector.data.length + 10);
					data = this1;
					haxe_ds__$Vector_Vector_$Impl_$.blit(vector.data,0,data,0,vector.data.length);
					vector.data = data;
				}
			}
			vector.data[key] = this.rawData.data[i];
		}
		if(transpose) this.transpose();
	}
	,copyRowFrom: function(row,vector3D) {
		switch(row) {
		case 0:
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = vector3D.x;
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(4 >= this3.length) this3.length = 5;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[4] = vector3D.y;
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(8 >= this5.length) this5.length = 9;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[8] = vector3D.z;
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(12 >= this7.length) this7.length = 13;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[12] = vector3D.w;
			break;
		case 1:
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(1 >= this9.length) this9.length = 2;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[1] = vector3D.x;
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = vector3D.y;
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(9 >= this13.length) this13.length = 10;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[9] = vector3D.z;
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(13 >= this15.length) this15.length = 14;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[13] = vector3D.w;
			break;
		case 2:
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(2 >= this17.length) this17.length = 3;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[2] = vector3D.x;
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(6 >= this19.length) this19.length = 7;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[6] = vector3D.y;
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = vector3D.z;
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(14 >= this23.length) this23.length = 15;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[14] = vector3D.w;
			break;
		case 3:
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(3 >= this25.length) this25.length = 4;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[3] = vector3D.x;
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(7 >= this27.length) this27.length = 8;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[7] = vector3D.y;
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(11 >= this29.length) this29.length = 12;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[11] = vector3D.z;
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = vector3D.w;
			break;
		default:
		}
	}
	,copyRowTo: function(row,vector3D) {
		switch(row) {
		case 0:
			vector3D.x = this.rawData.data[0];
			vector3D.y = this.rawData.data[4];
			vector3D.z = this.rawData.data[8];
			vector3D.w = this.rawData.data[12];
			break;
		case 1:
			vector3D.x = this.rawData.data[1];
			vector3D.y = this.rawData.data[5];
			vector3D.z = this.rawData.data[9];
			vector3D.w = this.rawData.data[13];
			break;
		case 2:
			vector3D.x = this.rawData.data[2];
			vector3D.y = this.rawData.data[6];
			vector3D.z = this.rawData.data[10];
			vector3D.w = this.rawData.data[14];
			break;
		case 3:
			vector3D.x = this.rawData.data[3];
			vector3D.y = this.rawData.data[7];
			vector3D.z = this.rawData.data[11];
			vector3D.w = this.rawData.data[15];
			break;
		default:
		}
	}
	,copyToMatrix3D: function(other) {
		var this1 = this.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this1.length;
		vectorData.fixed = this1.fixed;
		var this2;
		this2 = new Array(this1.length);
		vectorData.data = this2;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
		other.rawData = vectorData;
	}
	,decompose: function(orientationStyle) {
		if(orientationStyle == null) orientationStyle = openfl_geom_Orientation3D.EULER_ANGLES;
		var vec;
		var this1;
		this1 = new openfl_VectorData();
		var this2;
		this2 = new Array(0);
		this1.data = this2;
		this1.length = 0;
		this1.fixed = false;
		vec = this1;
		var m = this.clone();
		var mr;
		var this3 = m.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this3.length;
		vectorData.fixed = this3.fixed;
		var this4;
		this4 = new Array(this3.length);
		vectorData.data = this4;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,vectorData.data,0,this3.length);
		mr = vectorData;
		var pos = new openfl_geom_Vector3D(mr.data[12],mr.data[13],mr.data[14]);
		{
			if(!mr.fixed) {
				if(12 >= mr.length) mr.length = 13;
				if(mr.data.length < mr.length) {
					var data;
					var this5;
					this5 = new Array(mr.data.length + 10);
					data = this5;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data,0,mr.data.length);
					mr.data = data;
				}
			}
			mr.data[12] = 0;
		}
		{
			if(!mr.fixed) {
				if(13 >= mr.length) mr.length = 14;
				if(mr.data.length < mr.length) {
					var data1;
					var this6;
					this6 = new Array(mr.data.length + 10);
					data1 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data1,0,mr.data.length);
					mr.data = data1;
				}
			}
			mr.data[13] = 0;
		}
		{
			if(!mr.fixed) {
				if(14 >= mr.length) mr.length = 15;
				if(mr.data.length < mr.length) {
					var data2;
					var this7;
					this7 = new Array(mr.data.length + 10);
					data2 = this7;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data2,0,mr.data.length);
					mr.data = data2;
				}
			}
			mr.data[14] = 0;
		}
		var scale = new openfl_geom_Vector3D();
		scale.x = Math.sqrt(mr.data[0] * mr.data[0] + mr.data[1] * mr.data[1] + mr.data[2] * mr.data[2]);
		scale.y = Math.sqrt(mr.data[4] * mr.data[4] + mr.data[5] * mr.data[5] + mr.data[6] * mr.data[6]);
		scale.z = Math.sqrt(mr.data[8] * mr.data[8] + mr.data[9] * mr.data[9] + mr.data[10] * mr.data[10]);
		if(mr.data[0] * (mr.data[5] * mr.data[10] - mr.data[6] * mr.data[9]) - mr.data[1] * (mr.data[4] * mr.data[10] - mr.data[6] * mr.data[8]) + mr.data[2] * (mr.data[4] * mr.data[9] - mr.data[5] * mr.data[8]) < 0) scale.z = -scale.z;
		{
			if(!mr.fixed) {
				if(0 >= mr.length) mr.length = 1;
				if(mr.data.length < mr.length) {
					var data3;
					var this8;
					this8 = new Array(mr.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data3,0,mr.data.length);
					mr.data = data3;
				}
			}
			mr.data[0] = mr.data[0] / scale.x;
		}
		{
			if(!mr.fixed) {
				if(1 >= mr.length) mr.length = 2;
				if(mr.data.length < mr.length) {
					var data4;
					var this9;
					this9 = new Array(mr.data.length + 10);
					data4 = this9;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data4,0,mr.data.length);
					mr.data = data4;
				}
			}
			mr.data[1] = mr.data[1] / scale.x;
		}
		{
			if(!mr.fixed) {
				if(2 >= mr.length) mr.length = 3;
				if(mr.data.length < mr.length) {
					var data5;
					var this10;
					this10 = new Array(mr.data.length + 10);
					data5 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data5,0,mr.data.length);
					mr.data = data5;
				}
			}
			mr.data[2] = mr.data[2] / scale.x;
		}
		{
			if(!mr.fixed) {
				if(4 >= mr.length) mr.length = 5;
				if(mr.data.length < mr.length) {
					var data6;
					var this11;
					this11 = new Array(mr.data.length + 10);
					data6 = this11;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data6,0,mr.data.length);
					mr.data = data6;
				}
			}
			mr.data[4] = mr.data[4] / scale.y;
		}
		{
			if(!mr.fixed) {
				if(5 >= mr.length) mr.length = 6;
				if(mr.data.length < mr.length) {
					var data7;
					var this12;
					this12 = new Array(mr.data.length + 10);
					data7 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data7,0,mr.data.length);
					mr.data = data7;
				}
			}
			mr.data[5] = mr.data[5] / scale.y;
		}
		{
			if(!mr.fixed) {
				if(6 >= mr.length) mr.length = 7;
				if(mr.data.length < mr.length) {
					var data8;
					var this13;
					this13 = new Array(mr.data.length + 10);
					data8 = this13;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data8,0,mr.data.length);
					mr.data = data8;
				}
			}
			mr.data[6] = mr.data[6] / scale.y;
		}
		{
			if(!mr.fixed) {
				if(8 >= mr.length) mr.length = 9;
				if(mr.data.length < mr.length) {
					var data9;
					var this14;
					this14 = new Array(mr.data.length + 10);
					data9 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data9,0,mr.data.length);
					mr.data = data9;
				}
			}
			mr.data[8] = mr.data[8] / scale.z;
		}
		{
			if(!mr.fixed) {
				if(9 >= mr.length) mr.length = 10;
				if(mr.data.length < mr.length) {
					var data10;
					var this15;
					this15 = new Array(mr.data.length + 10);
					data10 = this15;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data10,0,mr.data.length);
					mr.data = data10;
				}
			}
			mr.data[9] = mr.data[9] / scale.z;
		}
		{
			if(!mr.fixed) {
				if(10 >= mr.length) mr.length = 11;
				if(mr.data.length < mr.length) {
					var data11;
					var this16;
					this16 = new Array(mr.data.length + 10);
					data11 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(mr.data,0,data11,0,mr.data.length);
					mr.data = data11;
				}
			}
			mr.data[10] = mr.data[10] / scale.z;
		}
		var rot = new openfl_geom_Vector3D();
		if(orientationStyle != null) switch(orientationStyle[1]) {
		case 0:
			rot.w = Math.acos((mr.data[0] + mr.data[5] + mr.data[10] - 1) / 2);
			var len = Math.sqrt((mr.data[6] - mr.data[9]) * (mr.data[6] - mr.data[9]) + (mr.data[8] - mr.data[2]) * (mr.data[8] - mr.data[2]) + (mr.data[1] - mr.data[4]) * (mr.data[1] - mr.data[4]));
			if(len != 0) {
				rot.x = (mr.data[6] - mr.data[9]) / len;
				rot.y = (mr.data[8] - mr.data[2]) / len;
				rot.z = (mr.data[1] - mr.data[4]) / len;
			} else rot.x = rot.y = rot.z = 0;
			break;
		case 2:
			var tr = mr.data[0] + mr.data[5] + mr.data[10];
			if(tr > 0) {
				rot.w = Math.sqrt(1 + tr) / 2;
				rot.x = (mr.data[6] - mr.data[9]) / (4 * rot.w);
				rot.y = (mr.data[8] - mr.data[2]) / (4 * rot.w);
				rot.z = (mr.data[1] - mr.data[4]) / (4 * rot.w);
			} else if(mr.data[0] > mr.data[5] && mr.data[0] > mr.data[10]) {
				rot.x = Math.sqrt(1 + mr.data[0] - mr.data[5] - mr.data[10]) / 2;
				rot.w = (mr.data[6] - mr.data[9]) / (4 * rot.x);
				rot.y = (mr.data[1] + mr.data[4]) / (4 * rot.x);
				rot.z = (mr.data[8] + mr.data[2]) / (4 * rot.x);
			} else if(mr.data[5] > mr.data[10]) {
				rot.y = Math.sqrt(1 + mr.data[5] - mr.data[0] - mr.data[10]) / 2;
				rot.x = (mr.data[1] + mr.data[4]) / (4 * rot.y);
				rot.w = (mr.data[8] - mr.data[2]) / (4 * rot.y);
				rot.z = (mr.data[6] + mr.data[9]) / (4 * rot.y);
			} else {
				rot.z = Math.sqrt(1 + mr.data[10] - mr.data[0] - mr.data[5]) / 2;
				rot.x = (mr.data[8] + mr.data[2]) / (4 * rot.z);
				rot.y = (mr.data[6] + mr.data[9]) / (4 * rot.z);
				rot.w = (mr.data[1] - mr.data[4]) / (4 * rot.z);
			}
			break;
		case 1:
			rot.y = Math.asin(-mr.data[2]);
			if(mr.data[2] != 1 && mr.data[2] != -1) {
				rot.x = Math.atan2(mr.data[6],mr.data[10]);
				rot.z = Math.atan2(mr.data[1],mr.data[0]);
			} else {
				rot.z = 0;
				rot.x = Math.atan2(mr.data[4],mr.data[5]);
			}
			break;
		}
		if(!vec.fixed) {
			vec.length++;
			if(vec.data.length < vec.length) {
				var data12;
				var this17;
				this17 = new Array(vec.data.length + 10);
				data12 = this17;
				haxe_ds__$Vector_Vector_$Impl_$.blit(vec.data,0,data12,0,vec.data.length);
				vec.data = data12;
			}
			vec.data[vec.length - 1] = pos;
		}
		vec.length;
		if(!vec.fixed) {
			vec.length++;
			if(vec.data.length < vec.length) {
				var data13;
				var this18;
				this18 = new Array(vec.data.length + 10);
				data13 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(vec.data,0,data13,0,vec.data.length);
				vec.data = data13;
			}
			vec.data[vec.length - 1] = rot;
		}
		vec.length;
		if(!vec.fixed) {
			vec.length++;
			if(vec.data.length < vec.length) {
				var data14;
				var this19;
				this19 = new Array(vec.data.length + 10);
				data14 = this19;
				haxe_ds__$Vector_Vector_$Impl_$.blit(vec.data,0,data14,0,vec.data.length);
				vec.data = data14;
			}
			vec.data[vec.length - 1] = scale;
		}
		vec.length;
		return vec;
	}
	,deltaTransformVector: function(v) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		return new openfl_geom_Vector3D(x * this.rawData.data[0] + y * this.rawData.data[4] + z * this.rawData.data[8] + this.rawData.data[3],x * this.rawData.data[1] + y * this.rawData.data[5] + z * this.rawData.data[9] + this.rawData.data[7],x * this.rawData.data[2] + y * this.rawData.data[6] + z * this.rawData.data[10] + this.rawData.data[11],0);
	}
	,identity: function() {
		{
			var value = [1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
			var vectorData = new openfl_VectorData();
			vectorData.length = value.length;
			vectorData.fixed = true;
			var vec;
			var this1;
			this1 = new Array(value.length);
			vec = this1;
			var _g1 = 0;
			var _g = value.length;
			while(_g1 < _g) {
				var i = _g1++;
				vec[i] = value[i];
			}
			vectorData.data = vec;
			this.rawData = vectorData;
		}
	}
	,interpolateTo: function(toMat,percent) {
		var _g = 0;
		while(_g < 16) {
			var i = _g++;
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(i >= this1.length) this1.length = i + 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[i] = this.rawData.data[i] + (toMat.rawData.data[i] - this.rawData.data[i]) * percent;
		}
	}
	,invert: function() {
		var d = (this.rawData.data[0] * this.rawData.data[5] - this.rawData.data[4] * this.rawData.data[1]) * (this.rawData.data[10] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[11]) - (this.rawData.data[0] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[7]) + (this.rawData.data[0] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[7]) + (this.rawData.data[4] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[3]) - (this.rawData.data[4] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[3]) + (this.rawData.data[8] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[9]) * (this.rawData.data[2] * this.rawData.data[7] - this.rawData.data[6] * this.rawData.data[3]);
		var invertable = Math.abs(d) > 0.00000000001;
		if(invertable) {
			d = 1 / d;
			var m11 = this.rawData.data[0];
			var m21 = this.rawData.data[4];
			var m31 = this.rawData.data[8];
			var m41 = this.rawData.data[12];
			var m12 = this.rawData.data[1];
			var m22 = this.rawData.data[5];
			var m32 = this.rawData.data[9];
			var m42 = this.rawData.data[13];
			var m13 = this.rawData.data[2];
			var m23 = this.rawData.data[6];
			var m33 = this.rawData.data[10];
			var m43 = this.rawData.data[14];
			var m14 = this.rawData.data[3];
			var m24 = this.rawData.data[7];
			var m34 = this.rawData.data[11];
			var m44 = this.rawData.data[15];
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(1 >= this3.length) this3.length = 2;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(2 >= this5.length) this5.length = 3;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(3 >= this7.length) this7.length = 4;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(4 >= this9.length) this9.length = 5;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(6 >= this13.length) this13.length = 7;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(7 >= this15.length) this15.length = 8;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(8 >= this17.length) this17.length = 9;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(9 >= this19.length) this19.length = 10;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(11 >= this23.length) this23.length = 12;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(12 >= this25.length) this25.length = 13;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(13 >= this27.length) this27.length = 14;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(14 >= this29.length) this29.length = 15;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));
		}
		return invertable;
	}
	,pointAt: function(pos,at,up) {
		if(at == null) at = new openfl_geom_Vector3D(0,0,-1);
		if(up == null) up = new openfl_geom_Vector3D(0,-1,0);
		var dir = new openfl_geom_Vector3D(at.x - pos.x,at.y - pos.y,at.z - pos.z);
		var vup = new openfl_geom_Vector3D(up.x,up.y,up.z,up.w);
		var right;
		dir.normalize();
		vup.normalize();
		var dir2 = new openfl_geom_Vector3D(dir.x,dir.y,dir.z,dir.w);
		dir2.scaleBy(vup.x * dir.x + vup.y * dir.y + vup.z * dir.z);
		vup = new openfl_geom_Vector3D(vup.x - dir2.x,vup.y - dir2.y,vup.z - dir2.z);
		if(Math.sqrt(vup.x * vup.x + vup.y * vup.y + vup.z * vup.z) > 0) vup.normalize(); else if(dir.x != 0) vup = new openfl_geom_Vector3D(-dir.y,dir.x,0); else vup = new openfl_geom_Vector3D(1,0,0);
		right = new openfl_geom_Vector3D(vup.y * dir.z - vup.z * dir.y,vup.z * dir.x - vup.x * dir.z,vup.x * dir.y - vup.y * dir.x,1);
		right.normalize();
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(0 >= this1.length) this1.length = 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[0] = right.x;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(4 >= this3.length) this3.length = 5;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[4] = right.y;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(8 >= this5.length) this5.length = 9;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[8] = right.z;
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(12 >= this7.length) this7.length = 13;
			if(this7.data.length < this7.length) {
				var data3;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data3 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
				this7.data = data3;
			}
		}
		this7.data[12] = 0.0;
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(1 >= this9.length) this9.length = 2;
			if(this9.data.length < this9.length) {
				var data4;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data4 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
				this9.data = data4;
			}
		}
		this9.data[1] = vup.x;
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(5 >= this11.length) this11.length = 6;
			if(this11.data.length < this11.length) {
				var data5;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data5 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
				this11.data = data5;
			}
		}
		this11.data[5] = vup.y;
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(9 >= this13.length) this13.length = 10;
			if(this13.data.length < this13.length) {
				var data6;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data6 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
				this13.data = data6;
			}
		}
		this13.data[9] = vup.z;
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(13 >= this15.length) this15.length = 14;
			if(this15.data.length < this15.length) {
				var data7;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data7 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
				this15.data = data7;
			}
		}
		this15.data[13] = 0.0;
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(2 >= this17.length) this17.length = 3;
			if(this17.data.length < this17.length) {
				var data8;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data8 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
				this17.data = data8;
			}
		}
		this17.data[2] = dir.x;
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(6 >= this19.length) this19.length = 7;
			if(this19.data.length < this19.length) {
				var data9;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data9 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
				this19.data = data9;
			}
		}
		this19.data[6] = dir.y;
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(10 >= this21.length) this21.length = 11;
			if(this21.data.length < this21.length) {
				var data10;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data10 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
				this21.data = data10;
			}
		}
		this21.data[10] = dir.z;
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(14 >= this23.length) this23.length = 15;
			if(this23.data.length < this23.length) {
				var data11;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data11 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
				this23.data = data11;
			}
		}
		this23.data[14] = 0.0;
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(3 >= this25.length) this25.length = 4;
			if(this25.data.length < this25.length) {
				var data12;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data12 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
				this25.data = data12;
			}
		}
		this25.data[3] = pos.x;
		var this27 = this.rawData;
		if(!this27.fixed) {
			if(7 >= this27.length) this27.length = 8;
			if(this27.data.length < this27.length) {
				var data13;
				var this28;
				this28 = new Array(this27.data.length + 10);
				data13 = this28;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
				this27.data = data13;
			}
		}
		this27.data[7] = pos.y;
		var this29 = this.rawData;
		if(!this29.fixed) {
			if(11 >= this29.length) this29.length = 12;
			if(this29.data.length < this29.length) {
				var data14;
				var this30;
				this30 = new Array(this29.data.length + 10);
				data14 = this30;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
				this29.data = data14;
			}
		}
		this29.data[11] = pos.z;
		var this31 = this.rawData;
		if(!this31.fixed) {
			if(15 >= this31.length) this31.length = 16;
			if(this31.data.length < this31.length) {
				var data15;
				var this32;
				this32 = new Array(this31.data.length + 10);
				data15 = this32;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
				this31.data = data15;
			}
		}
		this31.data[15] = 1.0;
	}
	,prepend: function(rhs) {
		var m111 = rhs.rawData.data[0];
		var m121 = rhs.rawData.data[4];
		var m131 = rhs.rawData.data[8];
		var m141 = rhs.rawData.data[12];
		var m112 = rhs.rawData.data[1];
		var m122 = rhs.rawData.data[5];
		var m132 = rhs.rawData.data[9];
		var m142 = rhs.rawData.data[13];
		var m113 = rhs.rawData.data[2];
		var m123 = rhs.rawData.data[6];
		var m133 = rhs.rawData.data[10];
		var m143 = rhs.rawData.data[14];
		var m114 = rhs.rawData.data[3];
		var m124 = rhs.rawData.data[7];
		var m134 = rhs.rawData.data[11];
		var m144 = rhs.rawData.data[15];
		var m211 = this.rawData.data[0];
		var m221 = this.rawData.data[4];
		var m231 = this.rawData.data[8];
		var m241 = this.rawData.data[12];
		var m212 = this.rawData.data[1];
		var m222 = this.rawData.data[5];
		var m232 = this.rawData.data[9];
		var m242 = this.rawData.data[13];
		var m213 = this.rawData.data[2];
		var m223 = this.rawData.data[6];
		var m233 = this.rawData.data[10];
		var m243 = this.rawData.data[14];
		var m214 = this.rawData.data[3];
		var m224 = this.rawData.data[7];
		var m234 = this.rawData.data[11];
		var m244 = this.rawData.data[15];
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(0 >= this1.length) this1.length = 1;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(1 >= this3.length) this3.length = 2;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(2 >= this5.length) this5.length = 3;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(3 >= this7.length) this7.length = 4;
			if(this7.data.length < this7.length) {
				var data3;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data3 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
				this7.data = data3;
			}
		}
		this7.data[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(4 >= this9.length) this9.length = 5;
			if(this9.data.length < this9.length) {
				var data4;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data4 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
				this9.data = data4;
			}
		}
		this9.data[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(5 >= this11.length) this11.length = 6;
			if(this11.data.length < this11.length) {
				var data5;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data5 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
				this11.data = data5;
			}
		}
		this11.data[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(6 >= this13.length) this13.length = 7;
			if(this13.data.length < this13.length) {
				var data6;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data6 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
				this13.data = data6;
			}
		}
		this13.data[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(7 >= this15.length) this15.length = 8;
			if(this15.data.length < this15.length) {
				var data7;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data7 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
				this15.data = data7;
			}
		}
		this15.data[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(8 >= this17.length) this17.length = 9;
			if(this17.data.length < this17.length) {
				var data8;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data8 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
				this17.data = data8;
			}
		}
		this17.data[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(9 >= this19.length) this19.length = 10;
			if(this19.data.length < this19.length) {
				var data9;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data9 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
				this19.data = data9;
			}
		}
		this19.data[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(10 >= this21.length) this21.length = 11;
			if(this21.data.length < this21.length) {
				var data10;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data10 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
				this21.data = data10;
			}
		}
		this21.data[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(11 >= this23.length) this23.length = 12;
			if(this23.data.length < this23.length) {
				var data11;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data11 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
				this23.data = data11;
			}
		}
		this23.data[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(12 >= this25.length) this25.length = 13;
			if(this25.data.length < this25.length) {
				var data12;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data12 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
				this25.data = data12;
			}
		}
		this25.data[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;
		var this27 = this.rawData;
		if(!this27.fixed) {
			if(13 >= this27.length) this27.length = 14;
			if(this27.data.length < this27.length) {
				var data13;
				var this28;
				this28 = new Array(this27.data.length + 10);
				data13 = this28;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
				this27.data = data13;
			}
		}
		this27.data[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;
		var this29 = this.rawData;
		if(!this29.fixed) {
			if(14 >= this29.length) this29.length = 15;
			if(this29.data.length < this29.length) {
				var data14;
				var this30;
				this30 = new Array(this29.data.length + 10);
				data14 = this30;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
				this29.data = data14;
			}
		}
		this29.data[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;
		var this31 = this.rawData;
		if(!this31.fixed) {
			if(15 >= this31.length) this31.length = 16;
			if(this31.data.length < this31.length) {
				var data15;
				var this32;
				this32 = new Array(this31.data.length + 10);
				data15 = this32;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
				this31.data = data15;
			}
		}
		this31.data[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;
	}
	,prependRotation: function(degrees,axis,pivotPoint) {
		var m = openfl_geom_Matrix3D.__getAxisRotation(axis.x,axis.y,axis.z,degrees);
		if(pivotPoint != null) {
			var p = pivotPoint;
			m.appendTranslation(p.x,p.y,p.z);
		}
		this.prepend(m);
	}
	,prependScale: function(xScale,yScale,zScale) {
		this.prepend(new openfl_geom_Matrix3D((function($this) {
			var $r;
			var value = [xScale,0.0,0.0,0.0,0.0,yScale,0.0,0.0,0.0,0.0,zScale,0.0,0.0,0.0,0.0,1.0];
			var vectorData = new openfl_VectorData();
			vectorData.length = value.length;
			vectorData.fixed = true;
			{
				var vec;
				var this1;
				this1 = new Array(value.length);
				vec = this1;
				var _g1 = 0;
				var _g = value.length;
				while(_g1 < _g) {
					var i = _g1++;
					vec[i] = value[i];
				}
				vectorData.data = vec;
			}
			$r = vectorData;
			return $r;
		}(this))));
	}
	,prependTranslation: function(x,y,z) {
		var m = new openfl_geom_Matrix3D();
		m.set_position(new openfl_geom_Vector3D(x,y,z));
		this.prepend(m);
	}
	,recompose: function(components,orientationStyle) {
		if(components.length < 3 || components.data[2].x == 0 || components.data[2].y == 0 || components.data[2].z == 0) return false;
		if(orientationStyle == null) orientationStyle = openfl_geom_Orientation3D.EULER_ANGLES;
		this.identity();
		var scale = [];
		scale[0] = scale[1] = scale[2] = components.data[2].x;
		scale[4] = scale[5] = scale[6] = components.data[2].y;
		scale[8] = scale[9] = scale[10] = components.data[2].z;
		if(orientationStyle != null) switch(orientationStyle[1]) {
		case 1:
			var cx = Math.cos(components.data[1].x);
			var cy = Math.cos(components.data[1].y);
			var cz = Math.cos(components.data[1].z);
			var sx = Math.sin(components.data[1].x);
			var sy = Math.sin(components.data[1].y);
			var sz = Math.sin(components.data[1].z);
			var this1 = this.rawData;
			if(!this1.fixed) {
				if(0 >= this1.length) this1.length = 1;
				if(this1.data.length < this1.length) {
					var data;
					var this2;
					this2 = new Array(this1.data.length + 10);
					data = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
					this1.data = data;
				}
			}
			this1.data[0] = cy * cz * scale[0];
			var this3 = this.rawData;
			if(!this3.fixed) {
				if(1 >= this3.length) this3.length = 2;
				if(this3.data.length < this3.length) {
					var data1;
					var this4;
					this4 = new Array(this3.data.length + 10);
					data1 = this4;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
					this3.data = data1;
				}
			}
			this3.data[1] = cy * sz * scale[1];
			var this5 = this.rawData;
			if(!this5.fixed) {
				if(2 >= this5.length) this5.length = 3;
				if(this5.data.length < this5.length) {
					var data2;
					var this6;
					this6 = new Array(this5.data.length + 10);
					data2 = this6;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
					this5.data = data2;
				}
			}
			this5.data[2] = -sy * scale[2];
			var this7 = this.rawData;
			if(!this7.fixed) {
				if(3 >= this7.length) this7.length = 4;
				if(this7.data.length < this7.length) {
					var data3;
					var this8;
					this8 = new Array(this7.data.length + 10);
					data3 = this8;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data3,0,this7.data.length);
					this7.data = data3;
				}
			}
			this7.data[3] = 0;
			var this9 = this.rawData;
			if(!this9.fixed) {
				if(4 >= this9.length) this9.length = 5;
				if(this9.data.length < this9.length) {
					var data4;
					var this10;
					this10 = new Array(this9.data.length + 10);
					data4 = this10;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data4,0,this9.data.length);
					this9.data = data4;
				}
			}
			this9.data[4] = (sx * sy * cz - cx * sz) * scale[4];
			var this11 = this.rawData;
			if(!this11.fixed) {
				if(5 >= this11.length) this11.length = 6;
				if(this11.data.length < this11.length) {
					var data5;
					var this12;
					this12 = new Array(this11.data.length + 10);
					data5 = this12;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data5,0,this11.data.length);
					this11.data = data5;
				}
			}
			this11.data[5] = (sx * sy * sz + cx * cz) * scale[5];
			var this13 = this.rawData;
			if(!this13.fixed) {
				if(6 >= this13.length) this13.length = 7;
				if(this13.data.length < this13.length) {
					var data6;
					var this14;
					this14 = new Array(this13.data.length + 10);
					data6 = this14;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data6,0,this13.data.length);
					this13.data = data6;
				}
			}
			this13.data[6] = sx * cy * scale[6];
			var this15 = this.rawData;
			if(!this15.fixed) {
				if(7 >= this15.length) this15.length = 8;
				if(this15.data.length < this15.length) {
					var data7;
					var this16;
					this16 = new Array(this15.data.length + 10);
					data7 = this16;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data7,0,this15.data.length);
					this15.data = data7;
				}
			}
			this15.data[7] = 0;
			var this17 = this.rawData;
			if(!this17.fixed) {
				if(8 >= this17.length) this17.length = 9;
				if(this17.data.length < this17.length) {
					var data8;
					var this18;
					this18 = new Array(this17.data.length + 10);
					data8 = this18;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data8,0,this17.data.length);
					this17.data = data8;
				}
			}
			this17.data[8] = (cx * sy * cz + sx * sz) * scale[8];
			var this19 = this.rawData;
			if(!this19.fixed) {
				if(9 >= this19.length) this19.length = 10;
				if(this19.data.length < this19.length) {
					var data9;
					var this20;
					this20 = new Array(this19.data.length + 10);
					data9 = this20;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data9,0,this19.data.length);
					this19.data = data9;
				}
			}
			this19.data[9] = (cx * sy * sz - sx * cz) * scale[9];
			var this21 = this.rawData;
			if(!this21.fixed) {
				if(10 >= this21.length) this21.length = 11;
				if(this21.data.length < this21.length) {
					var data10;
					var this22;
					this22 = new Array(this21.data.length + 10);
					data10 = this22;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data10,0,this21.data.length);
					this21.data = data10;
				}
			}
			this21.data[10] = cx * cy * scale[10];
			var this23 = this.rawData;
			if(!this23.fixed) {
				if(11 >= this23.length) this23.length = 12;
				if(this23.data.length < this23.length) {
					var data11;
					var this24;
					this24 = new Array(this23.data.length + 10);
					data11 = this24;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data11,0,this23.data.length);
					this23.data = data11;
				}
			}
			this23.data[11] = 0;
			var this25 = this.rawData;
			if(!this25.fixed) {
				if(12 >= this25.length) this25.length = 13;
				if(this25.data.length < this25.length) {
					var data12;
					var this26;
					this26 = new Array(this25.data.length + 10);
					data12 = this26;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data12,0,this25.data.length);
					this25.data = data12;
				}
			}
			this25.data[12] = components.data[0].x;
			var this27 = this.rawData;
			if(!this27.fixed) {
				if(13 >= this27.length) this27.length = 14;
				if(this27.data.length < this27.length) {
					var data13;
					var this28;
					this28 = new Array(this27.data.length + 10);
					data13 = this28;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this27.data,0,data13,0,this27.data.length);
					this27.data = data13;
				}
			}
			this27.data[13] = components.data[0].y;
			var this29 = this.rawData;
			if(!this29.fixed) {
				if(14 >= this29.length) this29.length = 15;
				if(this29.data.length < this29.length) {
					var data14;
					var this30;
					this30 = new Array(this29.data.length + 10);
					data14 = this30;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this29.data,0,data14,0,this29.data.length);
					this29.data = data14;
				}
			}
			this29.data[14] = components.data[0].z;
			var this31 = this.rawData;
			if(!this31.fixed) {
				if(15 >= this31.length) this31.length = 16;
				if(this31.data.length < this31.length) {
					var data15;
					var this32;
					this32 = new Array(this31.data.length + 10);
					data15 = this32;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this31.data,0,data15,0,this31.data.length);
					this31.data = data15;
				}
			}
			this31.data[15] = 1;
			break;
		default:
			var x = components.data[1].x;
			var y = components.data[1].y;
			var z = components.data[1].z;
			var w = components.data[1].w;
			if(Type.enumEq(orientationStyle,openfl_geom_Orientation3D.AXIS_ANGLE)) {
				x *= Math.sin(w / 2);
				y *= Math.sin(w / 2);
				z *= Math.sin(w / 2);
				w = Math.cos(w / 2);
			}
			var this33 = this.rawData;
			if(!this33.fixed) {
				if(0 >= this33.length) this33.length = 1;
				if(this33.data.length < this33.length) {
					var data16;
					var this34;
					this34 = new Array(this33.data.length + 10);
					data16 = this34;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this33.data,0,data16,0,this33.data.length);
					this33.data = data16;
				}
			}
			this33.data[0] = (1 - 2 * y * y - 2 * z * z) * scale[0];
			var this35 = this.rawData;
			if(!this35.fixed) {
				if(1 >= this35.length) this35.length = 2;
				if(this35.data.length < this35.length) {
					var data17;
					var this36;
					this36 = new Array(this35.data.length + 10);
					data17 = this36;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this35.data,0,data17,0,this35.data.length);
					this35.data = data17;
				}
			}
			this35.data[1] = (2 * x * y + 2 * w * z) * scale[1];
			var this37 = this.rawData;
			if(!this37.fixed) {
				if(2 >= this37.length) this37.length = 3;
				if(this37.data.length < this37.length) {
					var data18;
					var this38;
					this38 = new Array(this37.data.length + 10);
					data18 = this38;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this37.data,0,data18,0,this37.data.length);
					this37.data = data18;
				}
			}
			this37.data[2] = (2 * x * z - 2 * w * y) * scale[2];
			var this39 = this.rawData;
			if(!this39.fixed) {
				if(3 >= this39.length) this39.length = 4;
				if(this39.data.length < this39.length) {
					var data19;
					var this40;
					this40 = new Array(this39.data.length + 10);
					data19 = this40;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this39.data,0,data19,0,this39.data.length);
					this39.data = data19;
				}
			}
			this39.data[3] = 0;
			var this41 = this.rawData;
			if(!this41.fixed) {
				if(4 >= this41.length) this41.length = 5;
				if(this41.data.length < this41.length) {
					var data20;
					var this42;
					this42 = new Array(this41.data.length + 10);
					data20 = this42;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this41.data,0,data20,0,this41.data.length);
					this41.data = data20;
				}
			}
			this41.data[4] = (2 * x * y - 2 * w * z) * scale[4];
			var this43 = this.rawData;
			if(!this43.fixed) {
				if(5 >= this43.length) this43.length = 6;
				if(this43.data.length < this43.length) {
					var data21;
					var this44;
					this44 = new Array(this43.data.length + 10);
					data21 = this44;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this43.data,0,data21,0,this43.data.length);
					this43.data = data21;
				}
			}
			this43.data[5] = (1 - 2 * x * x - 2 * z * z) * scale[5];
			var this45 = this.rawData;
			if(!this45.fixed) {
				if(6 >= this45.length) this45.length = 7;
				if(this45.data.length < this45.length) {
					var data22;
					var this46;
					this46 = new Array(this45.data.length + 10);
					data22 = this46;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this45.data,0,data22,0,this45.data.length);
					this45.data = data22;
				}
			}
			this45.data[6] = (2 * y * z + 2 * w * x) * scale[6];
			var this47 = this.rawData;
			if(!this47.fixed) {
				if(7 >= this47.length) this47.length = 8;
				if(this47.data.length < this47.length) {
					var data23;
					var this48;
					this48 = new Array(this47.data.length + 10);
					data23 = this48;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this47.data,0,data23,0,this47.data.length);
					this47.data = data23;
				}
			}
			this47.data[7] = 0;
			var this49 = this.rawData;
			if(!this49.fixed) {
				if(8 >= this49.length) this49.length = 9;
				if(this49.data.length < this49.length) {
					var data24;
					var this50;
					this50 = new Array(this49.data.length + 10);
					data24 = this50;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this49.data,0,data24,0,this49.data.length);
					this49.data = data24;
				}
			}
			this49.data[8] = (2 * x * z + 2 * w * y) * scale[8];
			var this51 = this.rawData;
			if(!this51.fixed) {
				if(9 >= this51.length) this51.length = 10;
				if(this51.data.length < this51.length) {
					var data25;
					var this52;
					this52 = new Array(this51.data.length + 10);
					data25 = this52;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this51.data,0,data25,0,this51.data.length);
					this51.data = data25;
				}
			}
			this51.data[9] = (2 * y * z - 2 * w * x) * scale[9];
			var this53 = this.rawData;
			if(!this53.fixed) {
				if(10 >= this53.length) this53.length = 11;
				if(this53.data.length < this53.length) {
					var data26;
					var this54;
					this54 = new Array(this53.data.length + 10);
					data26 = this54;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this53.data,0,data26,0,this53.data.length);
					this53.data = data26;
				}
			}
			this53.data[10] = (1 - 2 * x * x - 2 * y * y) * scale[10];
			var this55 = this.rawData;
			if(!this55.fixed) {
				if(11 >= this55.length) this55.length = 12;
				if(this55.data.length < this55.length) {
					var data27;
					var this56;
					this56 = new Array(this55.data.length + 10);
					data27 = this56;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this55.data,0,data27,0,this55.data.length);
					this55.data = data27;
				}
			}
			this55.data[11] = 0;
			var this57 = this.rawData;
			if(!this57.fixed) {
				if(12 >= this57.length) this57.length = 13;
				if(this57.data.length < this57.length) {
					var data28;
					var this58;
					this58 = new Array(this57.data.length + 10);
					data28 = this58;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this57.data,0,data28,0,this57.data.length);
					this57.data = data28;
				}
			}
			this57.data[12] = components.data[0].x;
			var this59 = this.rawData;
			if(!this59.fixed) {
				if(13 >= this59.length) this59.length = 14;
				if(this59.data.length < this59.length) {
					var data29;
					var this60;
					this60 = new Array(this59.data.length + 10);
					data29 = this60;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this59.data,0,data29,0,this59.data.length);
					this59.data = data29;
				}
			}
			this59.data[13] = components.data[0].y;
			var this61 = this.rawData;
			if(!this61.fixed) {
				if(14 >= this61.length) this61.length = 15;
				if(this61.data.length < this61.length) {
					var data30;
					var this62;
					this62 = new Array(this61.data.length + 10);
					data30 = this62;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this61.data,0,data30,0,this61.data.length);
					this61.data = data30;
				}
			}
			this61.data[14] = components.data[0].z;
			var this63 = this.rawData;
			if(!this63.fixed) {
				if(15 >= this63.length) this63.length = 16;
				if(this63.data.length < this63.length) {
					var data31;
					var this64;
					this64 = new Array(this63.data.length + 10);
					data31 = this64;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this63.data,0,data31,0,this63.data.length);
					this63.data = data31;
				}
			}
			this63.data[15] = 1;
		} else {
			var x = components.data[1].x;
			var y = components.data[1].y;
			var z = components.data[1].z;
			var w = components.data[1].w;
			if(Type.enumEq(orientationStyle,openfl_geom_Orientation3D.AXIS_ANGLE)) {
				x *= Math.sin(w / 2);
				y *= Math.sin(w / 2);
				z *= Math.sin(w / 2);
				w = Math.cos(w / 2);
			}
			var this33 = this.rawData;
			if(!this33.fixed) {
				if(0 >= this33.length) this33.length = 1;
				if(this33.data.length < this33.length) {
					var data16;
					var this34;
					this34 = new Array(this33.data.length + 10);
					data16 = this34;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this33.data,0,data16,0,this33.data.length);
					this33.data = data16;
				}
			}
			this33.data[0] = (1 - 2 * y * y - 2 * z * z) * scale[0];
			var this35 = this.rawData;
			if(!this35.fixed) {
				if(1 >= this35.length) this35.length = 2;
				if(this35.data.length < this35.length) {
					var data17;
					var this36;
					this36 = new Array(this35.data.length + 10);
					data17 = this36;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this35.data,0,data17,0,this35.data.length);
					this35.data = data17;
				}
			}
			this35.data[1] = (2 * x * y + 2 * w * z) * scale[1];
			var this37 = this.rawData;
			if(!this37.fixed) {
				if(2 >= this37.length) this37.length = 3;
				if(this37.data.length < this37.length) {
					var data18;
					var this38;
					this38 = new Array(this37.data.length + 10);
					data18 = this38;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this37.data,0,data18,0,this37.data.length);
					this37.data = data18;
				}
			}
			this37.data[2] = (2 * x * z - 2 * w * y) * scale[2];
			var this39 = this.rawData;
			if(!this39.fixed) {
				if(3 >= this39.length) this39.length = 4;
				if(this39.data.length < this39.length) {
					var data19;
					var this40;
					this40 = new Array(this39.data.length + 10);
					data19 = this40;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this39.data,0,data19,0,this39.data.length);
					this39.data = data19;
				}
			}
			this39.data[3] = 0;
			var this41 = this.rawData;
			if(!this41.fixed) {
				if(4 >= this41.length) this41.length = 5;
				if(this41.data.length < this41.length) {
					var data20;
					var this42;
					this42 = new Array(this41.data.length + 10);
					data20 = this42;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this41.data,0,data20,0,this41.data.length);
					this41.data = data20;
				}
			}
			this41.data[4] = (2 * x * y - 2 * w * z) * scale[4];
			var this43 = this.rawData;
			if(!this43.fixed) {
				if(5 >= this43.length) this43.length = 6;
				if(this43.data.length < this43.length) {
					var data21;
					var this44;
					this44 = new Array(this43.data.length + 10);
					data21 = this44;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this43.data,0,data21,0,this43.data.length);
					this43.data = data21;
				}
			}
			this43.data[5] = (1 - 2 * x * x - 2 * z * z) * scale[5];
			var this45 = this.rawData;
			if(!this45.fixed) {
				if(6 >= this45.length) this45.length = 7;
				if(this45.data.length < this45.length) {
					var data22;
					var this46;
					this46 = new Array(this45.data.length + 10);
					data22 = this46;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this45.data,0,data22,0,this45.data.length);
					this45.data = data22;
				}
			}
			this45.data[6] = (2 * y * z + 2 * w * x) * scale[6];
			var this47 = this.rawData;
			if(!this47.fixed) {
				if(7 >= this47.length) this47.length = 8;
				if(this47.data.length < this47.length) {
					var data23;
					var this48;
					this48 = new Array(this47.data.length + 10);
					data23 = this48;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this47.data,0,data23,0,this47.data.length);
					this47.data = data23;
				}
			}
			this47.data[7] = 0;
			var this49 = this.rawData;
			if(!this49.fixed) {
				if(8 >= this49.length) this49.length = 9;
				if(this49.data.length < this49.length) {
					var data24;
					var this50;
					this50 = new Array(this49.data.length + 10);
					data24 = this50;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this49.data,0,data24,0,this49.data.length);
					this49.data = data24;
				}
			}
			this49.data[8] = (2 * x * z + 2 * w * y) * scale[8];
			var this51 = this.rawData;
			if(!this51.fixed) {
				if(9 >= this51.length) this51.length = 10;
				if(this51.data.length < this51.length) {
					var data25;
					var this52;
					this52 = new Array(this51.data.length + 10);
					data25 = this52;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this51.data,0,data25,0,this51.data.length);
					this51.data = data25;
				}
			}
			this51.data[9] = (2 * y * z - 2 * w * x) * scale[9];
			var this53 = this.rawData;
			if(!this53.fixed) {
				if(10 >= this53.length) this53.length = 11;
				if(this53.data.length < this53.length) {
					var data26;
					var this54;
					this54 = new Array(this53.data.length + 10);
					data26 = this54;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this53.data,0,data26,0,this53.data.length);
					this53.data = data26;
				}
			}
			this53.data[10] = (1 - 2 * x * x - 2 * y * y) * scale[10];
			var this55 = this.rawData;
			if(!this55.fixed) {
				if(11 >= this55.length) this55.length = 12;
				if(this55.data.length < this55.length) {
					var data27;
					var this56;
					this56 = new Array(this55.data.length + 10);
					data27 = this56;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this55.data,0,data27,0,this55.data.length);
					this55.data = data27;
				}
			}
			this55.data[11] = 0;
			var this57 = this.rawData;
			if(!this57.fixed) {
				if(12 >= this57.length) this57.length = 13;
				if(this57.data.length < this57.length) {
					var data28;
					var this58;
					this58 = new Array(this57.data.length + 10);
					data28 = this58;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this57.data,0,data28,0,this57.data.length);
					this57.data = data28;
				}
			}
			this57.data[12] = components.data[0].x;
			var this59 = this.rawData;
			if(!this59.fixed) {
				if(13 >= this59.length) this59.length = 14;
				if(this59.data.length < this59.length) {
					var data29;
					var this60;
					this60 = new Array(this59.data.length + 10);
					data29 = this60;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this59.data,0,data29,0,this59.data.length);
					this59.data = data29;
				}
			}
			this59.data[13] = components.data[0].y;
			var this61 = this.rawData;
			if(!this61.fixed) {
				if(14 >= this61.length) this61.length = 15;
				if(this61.data.length < this61.length) {
					var data30;
					var this62;
					this62 = new Array(this61.data.length + 10);
					data30 = this62;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this61.data,0,data30,0,this61.data.length);
					this61.data = data30;
				}
			}
			this61.data[14] = components.data[0].z;
			var this63 = this.rawData;
			if(!this63.fixed) {
				if(15 >= this63.length) this63.length = 16;
				if(this63.data.length < this63.length) {
					var data31;
					var this64;
					this64 = new Array(this63.data.length + 10);
					data31 = this64;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this63.data,0,data31,0,this63.data.length);
					this63.data = data31;
				}
			}
			this63.data[15] = 1;
		}
		if(components.data[2].x == 0) {
			var this65 = this.rawData;
			if(!this65.fixed) {
				if(0 >= this65.length) this65.length = 1;
				if(this65.data.length < this65.length) {
					var data32;
					var this66;
					this66 = new Array(this65.data.length + 10);
					data32 = this66;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this65.data,0,data32,0,this65.data.length);
					this65.data = data32;
				}
			}
			this65.data[0] = 1e-15;
		}
		if(components.data[2].y == 0) {
			var this67 = this.rawData;
			if(!this67.fixed) {
				if(5 >= this67.length) this67.length = 6;
				if(this67.data.length < this67.length) {
					var data33;
					var this68;
					this68 = new Array(this67.data.length + 10);
					data33 = this68;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this67.data,0,data33,0,this67.data.length);
					this67.data = data33;
				}
			}
			this67.data[5] = 1e-15;
		}
		if(components.data[2].z == 0) {
			var this69 = this.rawData;
			if(!this69.fixed) {
				if(10 >= this69.length) this69.length = 11;
				if(this69.data.length < this69.length) {
					var data34;
					var this70;
					this70 = new Array(this69.data.length + 10);
					data34 = this70;
					haxe_ds__$Vector_Vector_$Impl_$.blit(this69.data,0,data34,0,this69.data.length);
					this69.data = data34;
				}
			}
			this69.data[10] = 1e-15;
		}
		return !(components.data[2].x == 0 || components.data[2].y == 0 || components.data[2].y == 0);
	}
	,transformVector: function(v) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		return new openfl_geom_Vector3D(x * this.rawData.data[0] + y * this.rawData.data[4] + z * this.rawData.data[8] + this.rawData.data[12],x * this.rawData.data[1] + y * this.rawData.data[5] + z * this.rawData.data[9] + this.rawData.data[13],x * this.rawData.data[2] + y * this.rawData.data[6] + z * this.rawData.data[10] + this.rawData.data[14],x * this.rawData.data[3] + y * this.rawData.data[7] + z * this.rawData.data[11] + this.rawData.data[15]);
	}
	,transformVectors: function(vin,vout) {
		var i = 0;
		var x;
		var y;
		var z;
		while(i + 3 <= vin.length) {
			x = vin.data[i];
			y = vin.data[i + 1];
			z = vin.data[i + 2];
			{
				if(!vout.fixed) {
					if(i >= vout.length) vout.length = i + 1;
					if(vout.data.length < vout.length) {
						var data;
						var this1;
						this1 = new Array(vout.data.length + 10);
						data = this1;
						haxe_ds__$Vector_Vector_$Impl_$.blit(vout.data,0,data,0,vout.data.length);
						vout.data = data;
					}
				}
				vout.data[i] = x * this.rawData.data[0] + y * this.rawData.data[4] + z * this.rawData.data[8] + this.rawData.data[12];
			}
			var key = i + 1;
			if(!vout.fixed) {
				if(key >= vout.length) vout.length = key + 1;
				if(vout.data.length < vout.length) {
					var data1;
					var this2;
					this2 = new Array(vout.data.length + 10);
					data1 = this2;
					haxe_ds__$Vector_Vector_$Impl_$.blit(vout.data,0,data1,0,vout.data.length);
					vout.data = data1;
				}
			}
			vout.data[key] = x * this.rawData.data[1] + y * this.rawData.data[5] + z * this.rawData.data[9] + this.rawData.data[13];
			var key1 = i + 2;
			if(!vout.fixed) {
				if(key1 >= vout.length) vout.length = key1 + 1;
				if(vout.data.length < vout.length) {
					var data2;
					var this3;
					this3 = new Array(vout.data.length + 10);
					data2 = this3;
					haxe_ds__$Vector_Vector_$Impl_$.blit(vout.data,0,data2,0,vout.data.length);
					vout.data = data2;
				}
			}
			vout.data[key1] = x * this.rawData.data[2] + y * this.rawData.data[6] + z * this.rawData.data[10] + this.rawData.data[14];
			i += 3;
		}
	}
	,transpose: function() {
		var oRawData;
		var this1 = this.rawData;
		var vectorData = new openfl_VectorData();
		vectorData.length = this1.length;
		vectorData.fixed = this1.fixed;
		var this2;
		this2 = new Array(this1.length);
		vectorData.data = this2;
		haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,vectorData.data,0,this1.length);
		oRawData = vectorData;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(1 >= this3.length) this3.length = 2;
			if(this3.data.length < this3.length) {
				var data;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data,0,this3.data.length);
				this3.data = data;
			}
		}
		this3.data[1] = oRawData.data[4];
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(2 >= this5.length) this5.length = 3;
			if(this5.data.length < this5.length) {
				var data1;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data1 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data1,0,this5.data.length);
				this5.data = data1;
			}
		}
		this5.data[2] = oRawData.data[8];
		var this7 = this.rawData;
		if(!this7.fixed) {
			if(3 >= this7.length) this7.length = 4;
			if(this7.data.length < this7.length) {
				var data2;
				var this8;
				this8 = new Array(this7.data.length + 10);
				data2 = this8;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this7.data,0,data2,0,this7.data.length);
				this7.data = data2;
			}
		}
		this7.data[3] = oRawData.data[12];
		var this9 = this.rawData;
		if(!this9.fixed) {
			if(4 >= this9.length) this9.length = 5;
			if(this9.data.length < this9.length) {
				var data3;
				var this10;
				this10 = new Array(this9.data.length + 10);
				data3 = this10;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this9.data,0,data3,0,this9.data.length);
				this9.data = data3;
			}
		}
		this9.data[4] = oRawData.data[1];
		var this11 = this.rawData;
		if(!this11.fixed) {
			if(6 >= this11.length) this11.length = 7;
			if(this11.data.length < this11.length) {
				var data4;
				var this12;
				this12 = new Array(this11.data.length + 10);
				data4 = this12;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this11.data,0,data4,0,this11.data.length);
				this11.data = data4;
			}
		}
		this11.data[6] = oRawData.data[9];
		var this13 = this.rawData;
		if(!this13.fixed) {
			if(7 >= this13.length) this13.length = 8;
			if(this13.data.length < this13.length) {
				var data5;
				var this14;
				this14 = new Array(this13.data.length + 10);
				data5 = this14;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this13.data,0,data5,0,this13.data.length);
				this13.data = data5;
			}
		}
		this13.data[7] = oRawData.data[13];
		var this15 = this.rawData;
		if(!this15.fixed) {
			if(8 >= this15.length) this15.length = 9;
			if(this15.data.length < this15.length) {
				var data6;
				var this16;
				this16 = new Array(this15.data.length + 10);
				data6 = this16;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this15.data,0,data6,0,this15.data.length);
				this15.data = data6;
			}
		}
		this15.data[8] = oRawData.data[2];
		var this17 = this.rawData;
		if(!this17.fixed) {
			if(9 >= this17.length) this17.length = 10;
			if(this17.data.length < this17.length) {
				var data7;
				var this18;
				this18 = new Array(this17.data.length + 10);
				data7 = this18;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this17.data,0,data7,0,this17.data.length);
				this17.data = data7;
			}
		}
		this17.data[9] = oRawData.data[6];
		var this19 = this.rawData;
		if(!this19.fixed) {
			if(11 >= this19.length) this19.length = 12;
			if(this19.data.length < this19.length) {
				var data8;
				var this20;
				this20 = new Array(this19.data.length + 10);
				data8 = this20;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this19.data,0,data8,0,this19.data.length);
				this19.data = data8;
			}
		}
		this19.data[11] = oRawData.data[14];
		var this21 = this.rawData;
		if(!this21.fixed) {
			if(12 >= this21.length) this21.length = 13;
			if(this21.data.length < this21.length) {
				var data9;
				var this22;
				this22 = new Array(this21.data.length + 10);
				data9 = this22;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this21.data,0,data9,0,this21.data.length);
				this21.data = data9;
			}
		}
		this21.data[12] = oRawData.data[3];
		var this23 = this.rawData;
		if(!this23.fixed) {
			if(13 >= this23.length) this23.length = 14;
			if(this23.data.length < this23.length) {
				var data10;
				var this24;
				this24 = new Array(this23.data.length + 10);
				data10 = this24;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this23.data,0,data10,0,this23.data.length);
				this23.data = data10;
			}
		}
		this23.data[13] = oRawData.data[7];
		var this25 = this.rawData;
		if(!this25.fixed) {
			if(14 >= this25.length) this25.length = 15;
			if(this25.data.length < this25.length) {
				var data11;
				var this26;
				this26 = new Array(this25.data.length + 10);
				data11 = this26;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this25.data,0,data11,0,this25.data.length);
				this25.data = data11;
			}
		}
		this25.data[14] = oRawData.data[11];
	}
	,get_determinant: function() {
		return (this.rawData.data[0] * this.rawData.data[5] - this.rawData.data[4] * this.rawData.data[1]) * (this.rawData.data[10] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[11]) - (this.rawData.data[0] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[7]) + (this.rawData.data[0] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[1]) * (this.rawData.data[6] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[7]) + (this.rawData.data[4] * this.rawData.data[9] - this.rawData.data[8] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[15] - this.rawData.data[14] * this.rawData.data[3]) - (this.rawData.data[4] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[5]) * (this.rawData.data[2] * this.rawData.data[11] - this.rawData.data[10] * this.rawData.data[3]) + (this.rawData.data[8] * this.rawData.data[13] - this.rawData.data[12] * this.rawData.data[9]) * (this.rawData.data[2] * this.rawData.data[7] - this.rawData.data[6] * this.rawData.data[3]);
	}
	,get_position: function() {
		return new openfl_geom_Vector3D(this.rawData.data[12],this.rawData.data[13],this.rawData.data[14]);
	}
	,set_position: function(val) {
		var this1 = this.rawData;
		if(!this1.fixed) {
			if(12 >= this1.length) this1.length = 13;
			if(this1.data.length < this1.length) {
				var data;
				var this2;
				this2 = new Array(this1.data.length + 10);
				data = this2;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this1.data,0,data,0,this1.data.length);
				this1.data = data;
			}
		}
		this1.data[12] = val.x;
		var this3 = this.rawData;
		if(!this3.fixed) {
			if(13 >= this3.length) this3.length = 14;
			if(this3.data.length < this3.length) {
				var data1;
				var this4;
				this4 = new Array(this3.data.length + 10);
				data1 = this4;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this3.data,0,data1,0,this3.data.length);
				this3.data = data1;
			}
		}
		this3.data[13] = val.y;
		var this5 = this.rawData;
		if(!this5.fixed) {
			if(14 >= this5.length) this5.length = 15;
			if(this5.data.length < this5.length) {
				var data2;
				var this6;
				this6 = new Array(this5.data.length + 10);
				data2 = this6;
				haxe_ds__$Vector_Vector_$Impl_$.blit(this5.data,0,data2,0,this5.data.length);
				this5.data = data2;
			}
		}
		this5.data[14] = val.z;
		return val;
	}
	,__class__: openfl_geom_Matrix3D
	,__properties__: {set_position:"set_position",get_position:"get_position",get_determinant:"get_determinant"}
};
var openfl_geom_Orientation3D = $hxClasses["openfl.geom.Orientation3D"] = { __ename__ : ["openfl","geom","Orientation3D"], __constructs__ : ["AXIS_ANGLE","EULER_ANGLES","QUATERNION"] };
openfl_geom_Orientation3D.AXIS_ANGLE = ["AXIS_ANGLE",0];
openfl_geom_Orientation3D.AXIS_ANGLE.toString = $estr;
openfl_geom_Orientation3D.AXIS_ANGLE.__enum__ = openfl_geom_Orientation3D;
openfl_geom_Orientation3D.EULER_ANGLES = ["EULER_ANGLES",1];
openfl_geom_Orientation3D.EULER_ANGLES.toString = $estr;
openfl_geom_Orientation3D.EULER_ANGLES.__enum__ = openfl_geom_Orientation3D;
openfl_geom_Orientation3D.QUATERNION = ["QUATERNION",2];
openfl_geom_Orientation3D.QUATERNION.toString = $estr;
openfl_geom_Orientation3D.QUATERNION.__enum__ = openfl_geom_Orientation3D;
openfl_geom_Orientation3D.__empty_constructs__ = [openfl_geom_Orientation3D.AXIS_ANGLE,openfl_geom_Orientation3D.EULER_ANGLES,openfl_geom_Orientation3D.QUATERNION];
var openfl_geom_Transform = function(displayObject) {
	this.__colorTransform = new openfl_geom_ColorTransform();
	this.concatenatedColorTransform = new openfl_geom_ColorTransform();
	this.pixelBounds = new openfl_geom_Rectangle();
	this.__displayObject = displayObject;
	this.__hasMatrix = true;
};
$hxClasses["openfl.geom.Transform"] = openfl_geom_Transform;
openfl_geom_Transform.__name__ = ["openfl","geom","Transform"];
openfl_geom_Transform.prototype = {
	get_colorTransform: function() {
		return this.__colorTransform;
	}
	,set_colorTransform: function(value) {
		if(!this.__colorTransform.__equals(value)) {
			this.__colorTransform = value;
			if(value != null) this.__displayObject.set_alpha(value.alphaMultiplier);
			this.__displayObject.__setRenderDirty();
		}
		return this.__colorTransform;
	}
	,get_matrix: function() {
		if(this.__hasMatrix) return this.__displayObject.__transform.clone();
		return null;
	}
	,get_concatenatedMatrix: function() {
		if(this.__hasMatrix) return this.__displayObject.__getWorldTransform().clone();
		return null;
	}
	,set_matrix: function(value) {
		if(value == null) {
			this.__hasMatrix = false;
			return null;
		}
		this.__hasMatrix = true;
		this.__hasMatrix3D = false;
		if(this.__displayObject != null) {
			var rotation = 180 / Math.PI * Math.atan2(value.d,value.c) - 90;
			if(rotation != this.__displayObject.__rotation) {
				this.__displayObject.__rotation = rotation;
				var radians = rotation * (Math.PI / 180);
				this.__displayObject.__rotationSine = Math.sin(radians);
				this.__displayObject.__rotationCosine = Math.cos(radians);
			}
			this.__displayObject.__transform.copyFrom(value);
			this.__displayObject.__setTransformDirty();
		}
		return value;
	}
	,get_matrix3D: function() {
		if(this.__hasMatrix3D) {
			var matrix = this.__displayObject.__transform;
			return new openfl_geom_Matrix3D((function($this) {
				var $r;
				var value = [matrix.a,matrix.b,0.0,0.0,matrix.c,matrix.d,0.0,0.0,0.0,0.0,1.0,0.0,matrix.tx,matrix.ty,0.0,1.0];
				var vectorData = new openfl_VectorData();
				vectorData.length = value.length;
				vectorData.fixed = true;
				{
					var vec;
					var this1;
					this1 = new Array(value.length);
					vec = this1;
					var _g1 = 0;
					var _g = value.length;
					while(_g1 < _g) {
						var i = _g1++;
						vec[i] = value[i];
					}
					vectorData.data = vec;
				}
				$r = vectorData;
				return $r;
			}(this)));
		}
		return null;
	}
	,set_matrix3D: function(value) {
		if(value == null) {
			this.__hasMatrix3D = false;
			return null;
		}
		this.__hasMatrix = false;
		this.__hasMatrix3D = true;
		if(this.__displayObject != null) {
			var rotation = 180 / Math.PI * Math.atan2(value.rawData.data[5],value.rawData.data[4]) - 90;
			if(rotation != this.__displayObject.__rotation) {
				this.__displayObject.__rotation = rotation;
				var radians = rotation * (Math.PI / 180);
				this.__displayObject.__rotationSine = Math.sin(radians);
				this.__displayObject.__rotationCosine = Math.cos(radians);
			}
			this.__displayObject.__transform.a = value.rawData.data[0];
			this.__displayObject.__transform.b = value.rawData.data[1];
			this.__displayObject.__transform.c = value.rawData.data[5];
			this.__displayObject.__transform.d = value.rawData.data[6];
			this.__displayObject.__transform.tx = value.rawData.data[12];
			this.__displayObject.__transform.ty = value.rawData.data[13];
			this.__displayObject.__setTransformDirty();
		}
		return value;
	}
	,__class__: openfl_geom_Transform
	,__properties__: {set_matrix3D:"set_matrix3D",get_matrix3D:"get_matrix3D",set_matrix:"set_matrix",get_matrix:"get_matrix",get_concatenatedMatrix:"get_concatenatedMatrix",set_colorTransform:"set_colorTransform",get_colorTransform:"get_colorTransform"}
};
var openfl_geom_Vector3D = function(x,y,z,w) {
	if(w == null) w = 0;
	if(z == null) z = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.w = w;
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["openfl.geom.Vector3D"] = openfl_geom_Vector3D;
openfl_geom_Vector3D.__name__ = ["openfl","geom","Vector3D"];
openfl_geom_Vector3D.__properties__ = {get_Z_AXIS:"get_Z_AXIS",get_Y_AXIS:"get_Y_AXIS",get_X_AXIS:"get_X_AXIS"}
openfl_geom_Vector3D.X_AXIS = null;
openfl_geom_Vector3D.Y_AXIS = null;
openfl_geom_Vector3D.Z_AXIS = null;
openfl_geom_Vector3D.angleBetween = function(a,b) {
	var la = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
	var lb = Math.sqrt(b.x * b.x + b.y * b.y + b.z * b.z);
	var dot = a.x * b.x + a.y * b.y + a.z * b.z;
	if(la != 0) dot /= la;
	if(lb != 0) dot /= lb;
	return Math.acos(dot);
};
openfl_geom_Vector3D.distance = function(pt1,pt2) {
	var x = pt2.x - pt1.x;
	var y = pt2.y - pt1.y;
	var z = pt2.z - pt1.z;
	return Math.sqrt(x * x + y * y + z * z);
};
openfl_geom_Vector3D.get_X_AXIS = function() {
	return new openfl_geom_Vector3D(1,0,0);
};
openfl_geom_Vector3D.get_Y_AXIS = function() {
	return new openfl_geom_Vector3D(0,1,0);
};
openfl_geom_Vector3D.get_Z_AXIS = function() {
	return new openfl_geom_Vector3D(0,0,1);
};
openfl_geom_Vector3D.prototype = {
	add: function(a) {
		return new openfl_geom_Vector3D(this.x + a.x,this.y + a.y,this.z + a.z);
	}
	,clone: function() {
		return new openfl_geom_Vector3D(this.x,this.y,this.z,this.w);
	}
	,copyFrom: function(sourceVector3D) {
		this.x = sourceVector3D.x;
		this.y = sourceVector3D.y;
		this.z = sourceVector3D.z;
	}
	,crossProduct: function(a) {
		return new openfl_geom_Vector3D(this.y * a.z - this.z * a.y,this.z * a.x - this.x * a.z,this.x * a.y - this.y * a.x,1);
	}
	,decrementBy: function(a) {
		this.x -= a.x;
		this.y -= a.y;
		this.z -= a.z;
	}
	,dotProduct: function(a) {
		return this.x * a.x + this.y * a.y + this.z * a.z;
	}
	,equals: function(toCompare,allFour) {
		if(allFour == null) allFour = false;
		return this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w);
	}
	,incrementBy: function(a) {
		this.x += a.x;
		this.y += a.y;
		this.z += a.z;
	}
	,nearEquals: function(toCompare,tolerance,allFour) {
		if(allFour == null) allFour = false;
		return Math.abs(this.x - toCompare.x) < tolerance && Math.abs(this.y - toCompare.y) < tolerance && Math.abs(this.z - toCompare.z) < tolerance && (!allFour || Math.abs(this.w - toCompare.w) < tolerance);
	}
	,negate: function() {
		this.x *= -1;
		this.y *= -1;
		this.z *= -1;
	}
	,normalize: function() {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(l != 0) {
			this.x /= l;
			this.y /= l;
			this.z /= l;
		}
		return l;
	}
	,project: function() {
		this.x /= this.w;
		this.y /= this.w;
		this.z /= this.w;
	}
	,scaleBy: function(s) {
		this.x *= s;
		this.y *= s;
		this.z *= s;
	}
	,setTo: function(xa,ya,za) {
		this.x = xa;
		this.y = ya;
		this.z = za;
	}
	,subtract: function(a) {
		return new openfl_geom_Vector3D(this.x - a.x,this.y - a.y,this.z - a.z);
	}
	,toString: function() {
		return "Vector3D(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,get_lengthSquared: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z;
	}
	,__class__: openfl_geom_Vector3D
	,__properties__: {get_lengthSquared:"get_lengthSquared",get_length:"get_length"}
};
var openfl_media_ID3Info = function() {
};
$hxClasses["openfl.media.ID3Info"] = openfl_media_ID3Info;
openfl_media_ID3Info.__name__ = ["openfl","media","ID3Info"];
openfl_media_ID3Info.prototype = {
	__class__: openfl_media_ID3Info
};
var openfl_media_Sound = function(stream,context) {
	openfl_events_EventDispatcher.call(this,this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.id3 = null;
	this.isBuffering = false;
	this.url = null;
	if(stream != null) this.load(stream,context);
};
$hxClasses["openfl.media.Sound"] = openfl_media_Sound;
openfl_media_Sound.__name__ = ["openfl","media","Sound"];
openfl_media_Sound.fromAudioBuffer = function(buffer) {
	var sound = new openfl_media_Sound();
	sound.__buffer = buffer;
	return sound;
};
openfl_media_Sound.fromFile = function(path) {
	return openfl_media_Sound.fromAudioBuffer(lime_audio_AudioBuffer.fromFile(path));
};
openfl_media_Sound.__super__ = openfl_events_EventDispatcher;
openfl_media_Sound.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	close: function() {
		if(openfl_media_Sound.__registeredSounds.exists(this.__soundID)) createjs.Sound.removeSound(this.__soundID);
	}
	,load: function(stream,context) {
		this.url = stream.url;
		this.__soundID = haxe_io_Path.withoutExtension(stream.url);
		if(!openfl_media_Sound.__registeredSounds.exists(this.__soundID)) {
			openfl_media_Sound.__registeredSounds.set(this.__soundID,true);
			createjs.Sound.addEventListener("fileload",$bind(this,this.SoundJS_onFileLoad));
			createjs.Sound.addEventListener("fileerror",$bind(this,this.SoundJS_onFileError));
			createjs.Sound.registerSound(this.url,this.__soundID);
		} else this.dispatchEvent(new openfl_events_Event(openfl_events_Event.COMPLETE));
	}
	,loadCompressedDataFromByteArray: function(bytes,bytesLength,forcePlayAsMusic) {
		if(forcePlayAsMusic == null) forcePlayAsMusic = false;
		openfl_Lib.notImplemented("Sound.loadCompressedDataFromByteArray");
	}
	,loadPCMFromByteArray: function(bytes,samples,format,stereo,sampleRate) {
		if(sampleRate == null) sampleRate = 44100;
		if(stereo == null) stereo = true;
		openfl_Lib.notImplemented("Sound.loadPCMFromByteArray");
	}
	,play: function(startTime,loops,sndTransform) {
		if(loops == null) loops = 0;
		if(startTime == null) startTime = 0.0;
		if(sndTransform == null) sndTransform = new openfl_media_SoundTransform(1,0);
		var pan = sndTransform.pan;
		if(pan == 0) pan = -0.0000001;
		var instance;
		if(loops > 1) instance = createjs.Sound.play(this.__soundID,"any",0,startTime | 0,loops - 1,sndTransform.volume,pan); else instance = createjs.Sound.play(this.__soundID,"any",0,startTime | 0,0,sndTransform.volume,pan);
		return new openfl_media_SoundChannel(instance);
	}
	,get_id3: function() {
		return new openfl_media_ID3Info();
	}
	,get_length: function() {
		if(this.__buffer != null) {
		}
		return 0;
	}
	,AudioBuffer_onURLLoad: function(buffer) {
		if(buffer == null) this.dispatchEvent(new openfl_events_IOErrorEvent(openfl_events_IOErrorEvent.IO_ERROR)); else {
			this.__buffer = buffer;
			this.dispatchEvent(new openfl_events_Event(openfl_events_Event.COMPLETE));
		}
	}
	,SoundJS_onFileLoad: function(event) {
		if(event.id == this.__soundID) {
			createjs.Sound.removeEventListener("fileload",$bind(this,this.SoundJS_onFileLoad));
			createjs.Sound.removeEventListener("fileerror",$bind(this,this.SoundJS_onFileError));
			this.dispatchEvent(new openfl_events_Event(openfl_events_Event.COMPLETE));
		}
	}
	,SoundJS_onFileError: function(event) {
		if(event.id == this.__soundID) {
			createjs.Sound.removeEventListener("fileload",$bind(this,this.SoundJS_onFileLoad));
			createjs.Sound.removeEventListener("fileerror",$bind(this,this.SoundJS_onFileError));
			this.dispatchEvent(new openfl_events_IOErrorEvent(openfl_events_IOErrorEvent.IO_ERROR));
		}
	}
	,__class__: openfl_media_Sound
	,__properties__: {get_length:"get_length",get_id3:"get_id3"}
});
var openfl_media_SoundChannel = function(soundInstance) {
	openfl_events_EventDispatcher.call(this,this);
	this.leftPeak = 1;
	this.rightPeak = 1;
	if(soundInstance != null) {
		this.__soundInstance = soundInstance;
		this.__soundInstance.addEventListener("complete",$bind(this,this.source_onComplete));
		this.__isValid = true;
	}
};
$hxClasses["openfl.media.SoundChannel"] = openfl_media_SoundChannel;
openfl_media_SoundChannel.__name__ = ["openfl","media","SoundChannel"];
openfl_media_SoundChannel.__super__ = openfl_events_EventDispatcher;
openfl_media_SoundChannel.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	stop: function() {
		if(!this.__isValid) return;
		this.__soundInstance.stop();
	}
	,__dispose: function() {
		if(!this.__isValid) return;
		this.__soundInstance.stop();
		this.__soundInstance = null;
		this.__isValid = false;
	}
	,get_position: function() {
		if(!this.__isValid) return 0;
		return this.__soundInstance.getPosition();
	}
	,set_position: function(value) {
		if(!this.__isValid) return 0;
		this.__soundInstance.setPosition(value | 0);
		return this.__soundInstance.getPosition();
	}
	,get_soundTransform: function() {
		if(!this.__isValid) return new openfl_media_SoundTransform();
		return new openfl_media_SoundTransform(this.__soundInstance.getVolume(),this.__soundInstance.getPan());
	}
	,set_soundTransform: function(value) {
		if(!this.__isValid) return value;
		this.__soundInstance.setVolume(value.volume);
		this.__soundInstance.setPan(value.pan);
		return value;
	}
	,soundInstance_onComplete: function(_) {
		this.dispatchEvent(new openfl_events_Event(openfl_events_Event.SOUND_COMPLETE));
	}
	,source_onComplete: function() {
		this.__dispose();
		this.dispatchEvent(new openfl_events_Event(openfl_events_Event.SOUND_COMPLETE));
	}
	,__class__: openfl_media_SoundChannel
	,__properties__: {set_soundTransform:"set_soundTransform",get_soundTransform:"get_soundTransform",set_position:"set_position",get_position:"get_position"}
});
var openfl_media_SoundLoaderContext = function(bufferTime,checkPolicyFile) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	if(bufferTime == null) bufferTime = 1000;
	this.bufferTime = bufferTime;
	this.checkPolicyFile = checkPolicyFile;
};
$hxClasses["openfl.media.SoundLoaderContext"] = openfl_media_SoundLoaderContext;
openfl_media_SoundLoaderContext.__name__ = ["openfl","media","SoundLoaderContext"];
openfl_media_SoundLoaderContext.prototype = {
	__class__: openfl_media_SoundLoaderContext
};
var openfl_media_SoundTransform = function(vol,panning) {
	if(panning == null) panning = 0;
	if(vol == null) vol = 1;
	this.volume = vol;
	this.pan = panning;
	this.leftToLeft = 0;
	this.leftToRight = 0;
	this.rightToLeft = 0;
	this.rightToRight = 0;
};
$hxClasses["openfl.media.SoundTransform"] = openfl_media_SoundTransform;
openfl_media_SoundTransform.__name__ = ["openfl","media","SoundTransform"];
openfl_media_SoundTransform.prototype = {
	clone: function() {
		return new openfl_media_SoundTransform(this.volume,this.pan);
	}
	,__class__: openfl_media_SoundTransform
};
var openfl_net_NetConnection = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["openfl.net.NetConnection"] = openfl_net_NetConnection;
openfl_net_NetConnection.__name__ = ["openfl","net","NetConnection"];
openfl_net_NetConnection.__super__ = openfl_events_EventDispatcher;
openfl_net_NetConnection.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	connect: function(command,_,_1,_2,_3,_4) {
		if(command != null) throw new js__$Boot_HaxeError("Error: Can only connect in \"HTTP streaming\" mode");
		this.dispatchEvent(new openfl_events_NetStatusEvent(openfl_events_NetStatusEvent.NET_STATUS,false,true,{ code : "connectSuccess"}));
	}
	,__class__: openfl_net_NetConnection
});
var openfl_net_SharedObject = function() {
	openfl_events_EventDispatcher.call(this);
	this.client = this;
	this.objectEncoding = 3;
};
$hxClasses["openfl.net.SharedObject"] = openfl_net_SharedObject;
openfl_net_SharedObject.__name__ = ["openfl","net","SharedObject"];
openfl_net_SharedObject.__sharedObjects = null;
openfl_net_SharedObject.getLocal = function(name,localPath,secure) {
	if(secure == null) secure = false;
	if(localPath == null) localPath = window.location.href;
	if(openfl_net_SharedObject.__sharedObjects == null) {
		openfl_net_SharedObject.__sharedObjects = new haxe_ds_StringMap();
		openfl_Lib.application.onExit.add(openfl_net_SharedObject.application_onExit);
	}
	var id = localPath + "/" + name;
	if(!openfl_net_SharedObject.__sharedObjects.exists(id)) {
		var sharedObject = new openfl_net_SharedObject();
		sharedObject.data = { };
		sharedObject.__localPath = localPath;
		sharedObject.__name = name;
		var encodedData = null;
		try {
			var storage = js_Browser.getLocalStorage();
			if(storage != null) encodedData = storage.getItem(localPath + ":" + name);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
		}
		if(encodedData != null && encodedData != "") try {
			var unserializer = new haxe_Unserializer(encodedData);
			unserializer.setResolver({ resolveEnum : Type.resolveEnum, resolveClass : openfl_net_SharedObject.__resolveClass});
			sharedObject.data = unserializer.unserialize();
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
		}
		openfl_net_SharedObject.__sharedObjects.set(id,sharedObject);
	}
	return openfl_net_SharedObject.__sharedObjects.get(id);
};
openfl_net_SharedObject.getRemote = function(name,remotePath,persistence,secure) {
	if(secure == null) secure = false;
	if(persistence == null) persistence = false;
	openfl_Lib.notImplemented("SharedObject.getRemote");
	return null;
};
openfl_net_SharedObject.__mkdir = function(directory) {
};
openfl_net_SharedObject.__resolveClass = function(name) {
	if(name != null) {
		if(StringTools.startsWith(name,"neash.")) name = StringTools.replace(name,"neash.","openfl.");
		if(StringTools.startsWith(name,"native.")) name = StringTools.replace(name,"native.","openfl.");
		if(StringTools.startsWith(name,"flash.")) name = StringTools.replace(name,"flash.","openfl.");
		if(StringTools.startsWith(name,"openfl._v2.")) name = StringTools.replace(name,"openfl._v2.","openfl.");
		if(StringTools.startsWith(name,"openfl._legacy.")) name = StringTools.replace(name,"openfl._legacy.","openfl.");
		return Type.resolveClass(name);
	}
	return null;
};
openfl_net_SharedObject.application_onExit = function(_) {
	var $it0 = openfl_net_SharedObject.__sharedObjects.iterator();
	while( $it0.hasNext() ) {
		var sharedObject = $it0.next();
		sharedObject.flush();
	}
};
openfl_net_SharedObject.__super__ = openfl_events_EventDispatcher;
openfl_net_SharedObject.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	clear: function() {
		this.data = { };
		try {
			var storage = js_Browser.getLocalStorage();
			if(storage != null) storage.removeItem(this.__localPath + ":" + this.__name);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
		}
	}
	,close: function() {
	}
	,connect: function(myConnection,params) {
		openfl_Lib.notImplemented("SharedObject.connect");
	}
	,flush: function(minDiskSpace) {
		if(minDiskSpace == null) minDiskSpace = 0;
		if(Reflect.fields(this.data).length == 0) return openfl_net_SharedObjectFlushStatus.FLUSHED;
		var encodedData = haxe_Serializer.run(this.data);
		try {
			var storage = js_Browser.getLocalStorage();
			if(storage != null) {
				storage.removeItem(this.__localPath + ":" + this.__name);
				storage.setItem(this.__localPath + ":" + this.__name,encodedData);
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return openfl_net_SharedObjectFlushStatus.PENDING;
		}
		return openfl_net_SharedObjectFlushStatus.FLUSHED;
	}
	,send: function($arguments) {
		openfl_Lib.notImplemented("SharedObject.send");
	}
	,setDirty: function(propertyName) {
	}
	,setProperty: function(propertyName,value) {
		if(this.data != null) this.data[propertyName] = value;
	}
	,get_size: function() {
		try {
			var d = haxe_Serializer.run(this.data);
			return haxe_io_Bytes.ofString(d).length;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return 0;
		}
	}
	,__class__: openfl_net_SharedObject
	,__properties__: {get_size:"get_size"}
});
var openfl_net_SharedObjectFlushStatus = $hxClasses["openfl.net.SharedObjectFlushStatus"] = { __ename__ : ["openfl","net","SharedObjectFlushStatus"], __constructs__ : ["FLUSHED","PENDING"] };
openfl_net_SharedObjectFlushStatus.FLUSHED = ["FLUSHED",0];
openfl_net_SharedObjectFlushStatus.FLUSHED.toString = $estr;
openfl_net_SharedObjectFlushStatus.FLUSHED.__enum__ = openfl_net_SharedObjectFlushStatus;
openfl_net_SharedObjectFlushStatus.PENDING = ["PENDING",1];
openfl_net_SharedObjectFlushStatus.PENDING.toString = $estr;
openfl_net_SharedObjectFlushStatus.PENDING.__enum__ = openfl_net_SharedObjectFlushStatus;
openfl_net_SharedObjectFlushStatus.__empty_constructs__ = [openfl_net_SharedObjectFlushStatus.FLUSHED,openfl_net_SharedObjectFlushStatus.PENDING];
var openfl_net_URLLoader = function(request) {
	openfl_events_EventDispatcher.call(this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.set_dataFormat(openfl_net_URLLoaderDataFormat.TEXT);
	if(request != null) this.load(request);
};
$hxClasses["openfl.net.URLLoader"] = openfl_net_URLLoader;
openfl_net_URLLoader.__name__ = ["openfl","net","URLLoader"];
openfl_net_URLLoader.__super__ = openfl_events_EventDispatcher;
openfl_net_URLLoader.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	close: function() {
	}
	,getData: function() {
		return null;
	}
	,load: function(request) {
		this.requestUrl(request.url,request.method,request.data,request.formatRequestHeaders());
	}
	,registerEvents: function(subject) {
		var self = this;
		if(typeof XMLHttpRequestProgressEvent != "undefined") subject.addEventListener("progress",$bind(this,this.onProgress),false);
		subject.onreadystatechange = function() {
			if(subject.readyState != 4) return;
			var s;
			try {
				s = subject.status;
			} catch( e ) {
				haxe_CallStack.lastException = e;
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				s = null;
			}
			if(s == undefined) s = null;
			if(s != null) self.onStatus(s);
			if(s != null && s >= 200 && s < 400) self.onData(subject.response); else if(s == null) self.onError("Failed to connect or resolve host"); else if(s == 12029) self.onError("Failed to connect to host"); else if(s == 12007) self.onError("Unknown host"); else if(s == 0) {
				self.onError("Unable to make request (may be blocked due to cross-domain permissions)");
				self.onSecurityError("Unable to make request (may be blocked due to cross-domain permissions)");
			} else self.onError("Http Error #" + subject.status);
		};
	}
	,requestUrl: function(url,method,data,requestHeaders) {
		var xmlHttpRequest = new XMLHttpRequest();
		this.registerEvents(xmlHttpRequest);
		var uri = "";
		if(js_Boot.__instanceof(data,openfl_utils_ByteArrayData)) {
			var data1 = data;
			var _g = this.dataFormat;
			switch(_g[1]) {
			case 0:
				uri = js_Boot.__cast(data1 , ArrayBuffer);
				break;
			default:
				uri = data1.readUTFBytes(data1.length);
			}
		} else if(js_Boot.__instanceof(data,openfl_net_URLVariables)) {
			var data2 = data;
			var _g1 = 0;
			var _g11 = Reflect.fields(data2);
			while(_g1 < _g11.length) {
				var p = _g11[_g1];
				++_g1;
				if(uri.length != 0) uri += "&";
				uri += encodeURIComponent(p) + "=" + StringTools.urlEncode(Reflect.field(data2,p));
			}
		} else if(data != null) uri = data.toString();
		try {
			if(method == "GET" && uri != null && uri != "") {
				var question = url.split("?").length <= 1;
				xmlHttpRequest.open(method,url + (question?"?":"&") + Std.string(uri),true);
				uri = "";
			} else xmlHttpRequest.open(method,url,true);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.onError(e.toString());
			return;
		}
		var _g2 = this.dataFormat;
		switch(_g2[1]) {
		case 0:
			xmlHttpRequest.responseType = "arraybuffer";
			break;
		default:
		}
		var _g3 = 0;
		while(_g3 < requestHeaders.length) {
			var header = requestHeaders[_g3];
			++_g3;
			xmlHttpRequest.setRequestHeader(header.name,header.value);
		}
		xmlHttpRequest.send(uri);
		this.onOpen();
		this.getData = function() {
			if(xmlHttpRequest.response != null) return xmlHttpRequest.response; else return xmlHttpRequest.responseText;
		};
	}
	,onData: function(_) {
		var content = this.getData();
		var _g = this.dataFormat;
		switch(_g[1]) {
		case 0:
			this.data = openfl_utils__$ByteArray_ByteArray_$Impl_$.fromArrayBuffer(content);
			break;
		default:
			this.data = Std.string(content);
		}
		var evt = new openfl_events_Event(openfl_events_Event.COMPLETE);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onError: function(msg) {
		var evt = new openfl_events_IOErrorEvent(openfl_events_IOErrorEvent.IO_ERROR);
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onOpen: function() {
		var evt = new openfl_events_Event(openfl_events_Event.OPEN);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onProgress: function(event) {
		var evt = new openfl_events_ProgressEvent(openfl_events_ProgressEvent.PROGRESS);
		evt.currentTarget = this;
		evt.bytesLoaded = event.loaded;
		evt.bytesTotal = event.total;
		this.dispatchEvent(evt);
	}
	,onSecurityError: function(msg) {
		var evt = new openfl_events_SecurityErrorEvent(openfl_events_SecurityErrorEvent.SECURITY_ERROR);
		evt.text = msg;
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,onStatus: function(status) {
		var evt = new openfl_events_HTTPStatusEvent(openfl_events_HTTPStatusEvent.HTTP_STATUS,false,false,status);
		evt.currentTarget = this;
		this.dispatchEvent(evt);
	}
	,set_dataFormat: function(inputVal) {
		if(inputVal == openfl_net_URLLoaderDataFormat.BINARY && !Reflect.hasField(window,"ArrayBuffer")) this.dataFormat = openfl_net_URLLoaderDataFormat.TEXT; else this.dataFormat = inputVal;
		return this.dataFormat;
	}
	,__class__: openfl_net_URLLoader
	,__properties__: {set_dataFormat:"set_dataFormat"}
});
var openfl_net_URLLoaderDataFormat = $hxClasses["openfl.net.URLLoaderDataFormat"] = { __ename__ : ["openfl","net","URLLoaderDataFormat"], __constructs__ : ["BINARY","TEXT","VARIABLES"] };
openfl_net_URLLoaderDataFormat.BINARY = ["BINARY",0];
openfl_net_URLLoaderDataFormat.BINARY.toString = $estr;
openfl_net_URLLoaderDataFormat.BINARY.__enum__ = openfl_net_URLLoaderDataFormat;
openfl_net_URLLoaderDataFormat.TEXT = ["TEXT",1];
openfl_net_URLLoaderDataFormat.TEXT.toString = $estr;
openfl_net_URLLoaderDataFormat.TEXT.__enum__ = openfl_net_URLLoaderDataFormat;
openfl_net_URLLoaderDataFormat.VARIABLES = ["VARIABLES",2];
openfl_net_URLLoaderDataFormat.VARIABLES.toString = $estr;
openfl_net_URLLoaderDataFormat.VARIABLES.__enum__ = openfl_net_URLLoaderDataFormat;
openfl_net_URLLoaderDataFormat.__empty_constructs__ = [openfl_net_URLLoaderDataFormat.BINARY,openfl_net_URLLoaderDataFormat.TEXT,openfl_net_URLLoaderDataFormat.VARIABLES];
var openfl_net_URLRequest = function(inURL) {
	if(inURL != null) this.url = inURL;
	this.requestHeaders = [];
	this.method = "GET";
	this.contentType = null;
};
$hxClasses["openfl.net.URLRequest"] = openfl_net_URLRequest;
openfl_net_URLRequest.__name__ = ["openfl","net","URLRequest"];
openfl_net_URLRequest.prototype = {
	formatRequestHeaders: function() {
		var res = this.requestHeaders;
		if(res == null) res = [];
		if(this.method == "GET" || this.data == null) return res;
		if(typeof(this.data) == "string" || js_Boot.__instanceof(this.data,openfl_utils_ByteArrayData)) {
			res = res.slice();
			res.push(new openfl_net_URLRequestHeader("Content-Type",this.contentType != null?this.contentType:"application/x-www-form-urlencoded"));
		}
		return res;
	}
	,__class__: openfl_net_URLRequest
};
var openfl_net_URLRequestHeader = function(name,value) {
	if(value == null) value = "";
	if(name == null) name = "";
	this.name = name;
	this.value = value;
};
$hxClasses["openfl.net.URLRequestHeader"] = openfl_net_URLRequestHeader;
openfl_net_URLRequestHeader.__name__ = ["openfl","net","URLRequestHeader"];
openfl_net_URLRequestHeader.prototype = {
	__class__: openfl_net_URLRequestHeader
};
var openfl_net_URLVariables = function(source) {
	if(source != null) this.decode(source);
};
$hxClasses["openfl.net.URLVariables"] = openfl_net_URLVariables;
openfl_net_URLVariables.__name__ = ["openfl","net","URLVariables"];
openfl_net_URLVariables.prototype = {
	decode: function(source) {
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			Reflect.deleteField(this,f);
		}
		var fields1 = source.split(";").join("&").split("&");
		var _g1 = 0;
		while(_g1 < fields1.length) {
			var f1 = fields1[_g1];
			++_g1;
			var eq = f1.indexOf("=");
			if(eq > 0) Reflect.setField(this,StringTools.urlDecode(HxOverrides.substr(f1,0,eq)),StringTools.urlDecode(HxOverrides.substr(f1,eq + 1,null))); else if(eq != 0) Reflect.setField(this,decodeURIComponent(f1.split("+").join(" ")),"");
		}
	}
	,toString: function() {
		var result = [];
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			result.push(encodeURIComponent(f) + "=" + StringTools.urlEncode(Reflect.field(this,f)));
		}
		return result.join("&");
	}
	,__class__: openfl_net_URLVariables
};
var openfl_system_LoaderContext = function(checkPolicyFile,applicationDomain,securityDomain) {
	if(checkPolicyFile == null) checkPolicyFile = false;
	this.checkPolicyFile = checkPolicyFile;
	this.securityDomain = securityDomain;
	this.applicationDomain = applicationDomain;
	this.allowCodeImport = true;
	this.allowLoadBytesCodeExecution = true;
};
$hxClasses["openfl.system.LoaderContext"] = openfl_system_LoaderContext;
openfl_system_LoaderContext.__name__ = ["openfl","system","LoaderContext"];
openfl_system_LoaderContext.prototype = {
	__class__: openfl_system_LoaderContext
};
var openfl_system_SecurityDomain = function() {
};
$hxClasses["openfl.system.SecurityDomain"] = openfl_system_SecurityDomain;
openfl_system_SecurityDomain.__name__ = ["openfl","system","SecurityDomain"];
openfl_system_SecurityDomain.prototype = {
	__class__: openfl_system_SecurityDomain
};
var openfl_text_AntiAliasType = $hxClasses["openfl.text.AntiAliasType"] = { __ename__ : ["openfl","text","AntiAliasType"], __constructs__ : ["ADVANCED","NORMAL"] };
openfl_text_AntiAliasType.ADVANCED = ["ADVANCED",0];
openfl_text_AntiAliasType.ADVANCED.toString = $estr;
openfl_text_AntiAliasType.ADVANCED.__enum__ = openfl_text_AntiAliasType;
openfl_text_AntiAliasType.NORMAL = ["NORMAL",1];
openfl_text_AntiAliasType.NORMAL.toString = $estr;
openfl_text_AntiAliasType.NORMAL.__enum__ = openfl_text_AntiAliasType;
openfl_text_AntiAliasType.__empty_constructs__ = [openfl_text_AntiAliasType.ADVANCED,openfl_text_AntiAliasType.NORMAL];
var openfl_text_Font = function(name) {
	lime_text_Font.call(this,name);
};
$hxClasses["openfl.text.Font"] = openfl_text_Font;
openfl_text_Font.__name__ = ["openfl","text","Font"];
openfl_text_Font.enumerateFonts = function(enumerateDeviceFonts) {
	if(enumerateDeviceFonts == null) enumerateDeviceFonts = false;
	return openfl_text_Font.__registeredFonts;
};
openfl_text_Font.fromBytes = function(bytes) {
	var font = new openfl_text_Font();
	font.__fromBytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes(bytes));
	return font;
};
openfl_text_Font.fromFile = function(path) {
	var font = new openfl_text_Font();
	font.__fromFile(path);
	return font;
};
openfl_text_Font.registerFont = function(font) {
	var instance;
	instance = js_Boot.__cast(Type.createInstance(font,[]) , openfl_text_Font);
	if(instance != null) openfl_text_Font.__registeredFonts.push(instance);
};
openfl_text_Font.__fromLimeFont = function(value) {
	var font = new openfl_text_Font();
	font.name = value.name;
	font.src = value.src;
	return font;
};
openfl_text_Font.__super__ = lime_text_Font;
openfl_text_Font.prototype = $extend(lime_text_Font.prototype,{
	get_fontName: function() {
		return this.name;
	}
	,set_fontName: function(value) {
		return this.name = value;
	}
	,__class__: openfl_text_Font
	,__properties__: $extend(lime_text_Font.prototype.__properties__,{set_fontName:"set_fontName",get_fontName:"get_fontName"})
});
var openfl_text_FontStyle = $hxClasses["openfl.text.FontStyle"] = { __ename__ : ["openfl","text","FontStyle"], __constructs__ : ["REGULAR","ITALIC","BOLD_ITALIC","BOLD"] };
openfl_text_FontStyle.REGULAR = ["REGULAR",0];
openfl_text_FontStyle.REGULAR.toString = $estr;
openfl_text_FontStyle.REGULAR.__enum__ = openfl_text_FontStyle;
openfl_text_FontStyle.ITALIC = ["ITALIC",1];
openfl_text_FontStyle.ITALIC.toString = $estr;
openfl_text_FontStyle.ITALIC.__enum__ = openfl_text_FontStyle;
openfl_text_FontStyle.BOLD_ITALIC = ["BOLD_ITALIC",2];
openfl_text_FontStyle.BOLD_ITALIC.toString = $estr;
openfl_text_FontStyle.BOLD_ITALIC.__enum__ = openfl_text_FontStyle;
openfl_text_FontStyle.BOLD = ["BOLD",3];
openfl_text_FontStyle.BOLD.toString = $estr;
openfl_text_FontStyle.BOLD.__enum__ = openfl_text_FontStyle;
openfl_text_FontStyle.__empty_constructs__ = [openfl_text_FontStyle.REGULAR,openfl_text_FontStyle.ITALIC,openfl_text_FontStyle.BOLD_ITALIC,openfl_text_FontStyle.BOLD];
var openfl_text_FontType = $hxClasses["openfl.text.FontType"] = { __ename__ : ["openfl","text","FontType"], __constructs__ : ["DEVICE","EMBEDDED","EMBEDDED_CFF"] };
openfl_text_FontType.DEVICE = ["DEVICE",0];
openfl_text_FontType.DEVICE.toString = $estr;
openfl_text_FontType.DEVICE.__enum__ = openfl_text_FontType;
openfl_text_FontType.EMBEDDED = ["EMBEDDED",1];
openfl_text_FontType.EMBEDDED.toString = $estr;
openfl_text_FontType.EMBEDDED.__enum__ = openfl_text_FontType;
openfl_text_FontType.EMBEDDED_CFF = ["EMBEDDED_CFF",2];
openfl_text_FontType.EMBEDDED_CFF.toString = $estr;
openfl_text_FontType.EMBEDDED_CFF.__enum__ = openfl_text_FontType;
openfl_text_FontType.__empty_constructs__ = [openfl_text_FontType.DEVICE,openfl_text_FontType.EMBEDDED,openfl_text_FontType.EMBEDDED_CFF];
var openfl_text_GridFitType = $hxClasses["openfl.text.GridFitType"] = { __ename__ : ["openfl","text","GridFitType"], __constructs__ : ["NONE","PIXEL","SUBPIXEL"] };
openfl_text_GridFitType.NONE = ["NONE",0];
openfl_text_GridFitType.NONE.toString = $estr;
openfl_text_GridFitType.NONE.__enum__ = openfl_text_GridFitType;
openfl_text_GridFitType.PIXEL = ["PIXEL",1];
openfl_text_GridFitType.PIXEL.toString = $estr;
openfl_text_GridFitType.PIXEL.__enum__ = openfl_text_GridFitType;
openfl_text_GridFitType.SUBPIXEL = ["SUBPIXEL",2];
openfl_text_GridFitType.SUBPIXEL.toString = $estr;
openfl_text_GridFitType.SUBPIXEL.__enum__ = openfl_text_GridFitType;
openfl_text_GridFitType.__empty_constructs__ = [openfl_text_GridFitType.NONE,openfl_text_GridFitType.PIXEL,openfl_text_GridFitType.SUBPIXEL];
var openfl_text_TextField = function() {
	openfl_display_InteractiveObject.call(this);
	this.__caretIndex = -1;
	this.__graphics = new openfl_display_Graphics();
	this.__textEngine = new openfl__$internal_text_TextEngine(this);
	this.__layoutDirty = true;
	this.__tabEnabled = true;
	if(openfl_text_TextField.__defaultTextFormat == null) {
		openfl_text_TextField.__defaultTextFormat = new openfl_text_TextFormat("Times New Roman",12,0,false,false,false,"","",openfl_text_TextFormatAlign.LEFT,0,0,0,0);
		openfl_text_TextField.__defaultTextFormat.blockIndent = 0;
		openfl_text_TextField.__defaultTextFormat.bullet = false;
		openfl_text_TextField.__defaultTextFormat.letterSpacing = 0;
		openfl_text_TextField.__defaultTextFormat.kerning = false;
	}
	this.__textFormat = openfl_text_TextField.__defaultTextFormat.clone();
	this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(this.__textFormat,0,0));
	this.addEventListener(openfl_events_MouseEvent.MOUSE_DOWN,$bind(this,this.this_onMouseDown));
};
$hxClasses["openfl.text.TextField"] = openfl_text_TextField;
openfl_text_TextField.__name__ = ["openfl","text","TextField"];
openfl_text_TextField.__defaultTextFormat = null;
openfl_text_TextField.__super__ = openfl_display_InteractiveObject;
openfl_text_TextField.prototype = $extend(openfl_display_InteractiveObject.prototype,{
	appendText: function(text) {
		this.__textEngine.text += text;
		this.__textEngine.textFormatRanges[this.__textEngine.textFormatRanges.length - 1].end = this.__textEngine.text.length;
		this.__dirty = true;
		this.__layoutDirty = true;
	}
	,getCharBoundaries: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return null;
		this.__updateLayout();
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(charIndex >= group.startIndex && charIndex <= group.endIndex) {
				var x = group.offsetX;
				var _g3 = 0;
				var _g2 = charIndex - group.startIndex;
				while(_g3 < _g2) {
					var i = _g3++;
					x += group.advances[i];
				}
				return new openfl_geom_Rectangle(x,group.offsetY,group.advances[charIndex - group.startIndex],group.ascent + group.descent);
			}
		}
		return null;
	}
	,getCharIndexAtPoint: function(x,y) {
		if(x <= 2 || x > this.get_width() + 4 || y <= 0 || y > this.get_height() + 4) return -1;
		this.__updateLayout();
		x += this.get_scrollH();
		var _g1 = 0;
		var _g = this.get_scrollV() - 1;
		while(_g1 < _g) {
			var i = _g1++;
			y += this.__textEngine.lineHeights[i];
		}
		var _g2 = 0;
		var _g11 = this.__textEngine.layoutGroups;
		while(_g2 < _g11.length) {
			var group = _g11[_g2];
			++_g2;
			if(y >= group.offsetY && y <= group.offsetY + group.height) {
				if(x >= group.offsetX && x <= group.offsetX + group.width) {
					var advance = 0.0;
					var _g3 = 0;
					var _g21 = group.advances.length;
					while(_g3 < _g21) {
						var i1 = _g3++;
						advance += group.advances[i1];
						if(x <= group.offsetX + advance) return group.startIndex + i1;
					}
					return group.endIndex;
				}
			}
		}
		return -1;
	}
	,getFirstCharInParagraph: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return 0;
		var index = this.__textEngine.text.indexOf("\n");
		var startIndex = 0;
		while(index > -1) {
			if(index <= charIndex) startIndex = index + 1; else if(index > charIndex) break;
			index = this.__textEngine.text.indexOf("\n",index + 1);
		}
		return startIndex;
	}
	,getLineIndexAtPoint: function(x,y) {
		this.__updateLayout();
		if(x <= 2 || x > this.get_width() + 4 || y <= 0 || y > this.get_height() + 4) return -1;
		var _g1 = 0;
		var _g = this.get_scrollV() - 1;
		while(_g1 < _g) {
			var i = _g1++;
			y += this.__textEngine.lineHeights[i];
		}
		var _g2 = 0;
		var _g11 = this.__textEngine.layoutGroups;
		while(_g2 < _g11.length) {
			var group = _g11[_g2];
			++_g2;
			if(y >= group.offsetY && y <= group.offsetY + group.height) return group.lineIndex;
		}
		return -1;
	}
	,getLineIndexOfChar: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return -1;
		this.__updateLayout();
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.startIndex <= charIndex && group.endIndex >= charIndex) return group.lineIndex;
		}
		return -1;
	}
	,getLineLength: function(lineIndex) {
		this.__updateLayout();
		if(lineIndex < 0 || lineIndex > this.__textEngine.numLines - 1) return 0;
		var startIndex = -1;
		var endIndex = -1;
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.lineIndex == lineIndex) {
				if(startIndex == -1) startIndex = group.startIndex;
			} else if(group.lineIndex == lineIndex + 1) {
				endIndex = group.startIndex;
				break;
			}
		}
		if(endIndex == -1) endIndex = this.__textEngine.text.length;
		return endIndex - startIndex;
	}
	,getLineMetrics: function(lineIndex) {
		this.__updateLayout();
		var ascender = this.__textEngine.lineAscents[lineIndex];
		var descender = this.__textEngine.lineDescents[lineIndex];
		var leading = this.__textEngine.lineLeadings[lineIndex];
		var lineHeight = this.__textEngine.lineHeights[lineIndex];
		var lineWidth = this.__textEngine.lineWidths[lineIndex];
		var margin;
		var _g = this.__textFormat.align;
		switch(_g[1]) {
		case 0:case 2:
			margin = 2;
			break;
		case 1:
			margin = this.__textEngine.width - lineWidth - 2;
			break;
		case 3:
			margin = (this.__textEngine.width - lineWidth) / 2;
			break;
		}
		return new openfl_text_TextLineMetrics(margin,lineWidth,lineHeight,ascender,descender,leading);
	}
	,getLineOffset: function(lineIndex) {
		this.__updateLayout();
		if(lineIndex < 0 || lineIndex > this.__textEngine.numLines - 1) return -1;
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.lineIndex == lineIndex) return group.startIndex;
		}
		return 0;
	}
	,getLineText: function(lineIndex) {
		this.__updateLayout();
		if(lineIndex < 0 || lineIndex > this.__textEngine.numLines - 1) return null;
		var startIndex = -1;
		var endIndex = -1;
		var _g = 0;
		var _g1 = this.__textEngine.layoutGroups;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.lineIndex == lineIndex) {
				if(startIndex == -1) startIndex = group.startIndex;
			} else if(group.lineIndex == lineIndex + 1) {
				endIndex = group.startIndex;
				break;
			}
		}
		if(endIndex == -1) endIndex = this.__textEngine.text.length;
		return this.__textEngine.text.substring(startIndex,endIndex);
	}
	,getParagraphLength: function(charIndex) {
		if(charIndex < 0 || charIndex > this.__textEngine.text.length - 1) return 0;
		var startIndex = this.getFirstCharInParagraph(charIndex);
		var endIndex = this.__textEngine.text.indexOf("\n",charIndex) + 1;
		if(endIndex == 0) endIndex = this.__textEngine.text.length;
		return endIndex - startIndex;
	}
	,getTextFormat: function(beginIndex,endIndex) {
		if(endIndex == null) endIndex = 0;
		if(beginIndex == null) beginIndex = 0;
		var format = null;
		var _g = 0;
		var _g1 = this.__textEngine.textFormatRanges;
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			if(group.start <= beginIndex && group.end >= beginIndex || group.start <= endIndex && group.end >= endIndex) {
				if(format == null) format = group.format.clone(); else {
					if(group.format.font != format.font) format.font = null;
					if(group.format.size != format.size) format.size = null;
					if(group.format.color != format.color) format.color = null;
					if(group.format.bold != format.bold) format.bold = null;
					if(group.format.italic != format.italic) format.italic = null;
					if(group.format.underline != format.underline) format.underline = null;
					if(group.format.url != format.url) format.url = null;
					if(group.format.target != format.target) format.target = null;
					if(group.format.align != format.align) format.align = null;
					if(group.format.leftMargin != format.leftMargin) format.leftMargin = null;
					if(group.format.rightMargin != format.rightMargin) format.rightMargin = null;
					if(group.format.indent != format.indent) format.indent = null;
					if(group.format.leading != format.leading) format.leading = null;
					if(group.format.blockIndent != format.blockIndent) format.blockIndent = null;
					if(group.format.bullet != format.bullet) format.bullet = null;
					if(group.format.kerning != format.kerning) format.kerning = null;
					if(group.format.letterSpacing != format.letterSpacing) format.letterSpacing = null;
					if(group.format.tabStops != format.tabStops) format.tabStops = null;
				}
			}
		}
		return format;
	}
	,replaceSelectedText: function(value) {
		if(value == "" && this.__selectionIndex == this.__caretIndex) return;
		var startIndex;
		if(this.__caretIndex < this.__selectionIndex) startIndex = this.__caretIndex; else startIndex = this.__selectionIndex;
		var endIndex;
		if(this.__caretIndex > this.__selectionIndex) endIndex = this.__caretIndex; else endIndex = this.__selectionIndex;
		this.replaceText(startIndex,endIndex,value);
		this.__caretIndex = startIndex + value.length;
		this.__selectionIndex = this.__caretIndex;
	}
	,replaceText: function(beginIndex,endIndex,newText) {
		if(endIndex < beginIndex || beginIndex < 0 || endIndex > this.__textEngine.text.length || newText == null) return;
		this.__textEngine.text = this.__textEngine.text.substring(0,beginIndex) + newText + this.__textEngine.text.substring(endIndex);
		var offset = newText.length - (endIndex - beginIndex);
		var i = 0;
		var range;
		while(i < this.__textEngine.textFormatRanges.length) {
			range = this.__textEngine.textFormatRanges[i];
			if(range.start <= beginIndex && range.end >= endIndex) {
				range.end += offset;
				i++;
			} else if(range.start >= beginIndex && range.end <= endIndex) {
				this.__textEngine.textFormatRanges.splice(i,1);
				offset -= range.end - range.start;
			} else if(range.start > beginIndex && range.start <= endIndex) {
				range.start += offset;
				i++;
			} else i++;
		}
		this.__dirty = true;
		this.__layoutDirty = true;
	}
	,setSelection: function(beginIndex,endIndex) {
		this.__selectionIndex = beginIndex;
		this.__caretIndex = endIndex;
	}
	,setTextFormat: function(format,beginIndex,endIndex) {
		if(endIndex == null) endIndex = 0;
		if(beginIndex == null) beginIndex = 0;
		if(format.font != null) this.__textFormat.font = format.font;
		if(format.size != null) this.__textFormat.size = format.size;
		if(format.color != null) this.__textFormat.color = format.color;
		if(format.bold != null) this.__textFormat.bold = format.bold;
		if(format.italic != null) this.__textFormat.italic = format.italic;
		if(format.underline != null) this.__textFormat.underline = format.underline;
		if(format.url != null) this.__textFormat.url = format.url;
		if(format.target != null) this.__textFormat.target = format.target;
		if(format.align != null) this.__textFormat.align = format.align;
		if(format.leftMargin != null) this.__textFormat.leftMargin = format.leftMargin;
		if(format.rightMargin != null) this.__textFormat.rightMargin = format.rightMargin;
		if(format.indent != null) this.__textFormat.indent = format.indent;
		if(format.leading != null) this.__textFormat.leading = format.leading;
		if(format.blockIndent != null) this.__textFormat.blockIndent = format.blockIndent;
		if(format.bullet != null) this.__textFormat.bullet = format.bullet;
		if(format.kerning != null) this.__textFormat.kerning = format.kerning;
		if(format.letterSpacing != null) this.__textFormat.letterSpacing = format.letterSpacing;
		if(format.tabStops != null) this.__textFormat.tabStops = format.tabStops;
		this.__dirty = true;
		this.__layoutDirty = true;
	}
	,__getBounds: function(rect,matrix) {
		this.__updateLayout();
		var bounds = openfl_geom_Rectangle.__temp;
		this.__textEngine.bounds.__transform(bounds,matrix);
		rect.__expand(bounds.x,bounds.y,bounds.width,bounds.height);
	}
	,__getCursor: function() {
		if(this.__textEngine.selectable) return lime_ui_MouseCursor.TEXT; else return null;
	}
	,__getPosition: function(x,y) {
		this.__updateLayout();
		x += this.get_scrollH();
		var _g1 = 0;
		var _g = this.get_scrollV() - 1;
		while(_g1 < _g) {
			var i = _g1++;
			y += this.__textEngine.lineHeights[i];
		}
		if(y > this.__textEngine.textHeight) y = this.__textEngine.textHeight;
		var firstGroup = true;
		var group;
		var nextGroup;
		var _g11 = 0;
		var _g2 = this.__textEngine.layoutGroups.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			group = this.__textEngine.layoutGroups[i1];
			if(i1 < this.__textEngine.layoutGroups.length - 1) nextGroup = this.__textEngine.layoutGroups[i1 + 1]; else nextGroup = null;
			if(firstGroup) {
				if(y < group.offsetY) y = group.offsetY;
				if(x < group.offsetX) x = group.offsetX;
				firstGroup = false;
			}
			if(y >= group.offsetY && y <= group.offsetY + group.height || nextGroup == null) {
				if(x >= group.offsetX && x <= group.offsetX + group.width || (nextGroup == null || nextGroup.lineIndex != group.lineIndex)) {
					var advance = 0.0;
					var _g3 = 0;
					var _g21 = group.advances.length;
					while(_g3 < _g21) {
						var i2 = _g3++;
						advance += group.advances[i2];
						if(x <= group.offsetX + advance) {
							if(x <= group.offsetX + (advance - group.advances[i2]) + group.advances[i2] / 2) return group.startIndex + i2; else if(group.startIndex + i2 < group.endIndex) return group.startIndex + i2 + 1; else return group.endIndex;
						}
					}
					return group.endIndex;
				}
			}
		}
		return this.__textEngine.text.length;
	}
	,__hitTest: function(x,y,shapeFlag,stack,interactiveOnly,hitObject) {
		if(!hitObject.get_visible() || this.__isMask || interactiveOnly && !this.mouseEnabled) return false;
		if(this.get_mask() != null && !this.get_mask().__hitTestMask(x,y)) return false;
		this.__getWorldTransform();
		this.__updateLayout();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(this.__textEngine.bounds.contains(px,py)) {
			if(stack != null) stack.push(hitObject);
			return true;
		}
		return false;
	}
	,__hitTestMask: function(x,y) {
		this.__getWorldTransform();
		this.__updateLayout();
		var px = this.__worldTransform.__transformInverseX(x,y);
		var py = this.__worldTransform.__transformInverseY(x,y);
		if(this.__textEngine.bounds.contains(px,py)) return true;
		return false;
	}
	,__renderCairo: function(renderSession) {
		openfl__$internal_renderer_cairo_CairoTextField.render(this,renderSession);
		openfl_display_InteractiveObject.prototype.__renderCairo.call(this,renderSession);
	}
	,__renderCanvas: function(renderSession) {
		openfl__$internal_renderer_canvas_CanvasTextField.render(this,renderSession);
		if(this.__textEngine.antiAliasType == openfl_text_AntiAliasType.ADVANCED && this.__textEngine.gridFitType == openfl_text_GridFitType.PIXEL) {
			var smoothingEnabled = renderSession.context.imageSmoothingEnabled;
			if(smoothingEnabled) {
				renderSession.context.mozImageSmoothingEnabled = false;
				renderSession.context.msImageSmoothingEnabled = false;
				renderSession.context.imageSmoothingEnabled = false;
			}
			openfl_display_InteractiveObject.prototype.__renderCanvas.call(this,renderSession);
			if(smoothingEnabled) {
				renderSession.context.mozImageSmoothingEnabled = true;
				renderSession.context.msImageSmoothingEnabled = true;
				renderSession.context.imageSmoothingEnabled = true;
			}
		} else openfl_display_InteractiveObject.prototype.__renderCanvas.call(this,renderSession);
	}
	,__renderDOM: function(renderSession) {
		openfl__$internal_renderer_dom_DOMTextField.render(this,renderSession);
	}
	,__renderGL: function(renderSession) {
		if(this.__cacheAsBitmap) {
			this.__cacheGL(renderSession);
			return;
		}
		if(this.__scrollRect != null) renderSession.maskManager.pushRect(this.__scrollRect,this.__renderTransform);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.pushMask(this);
		openfl__$internal_renderer_canvas_CanvasTextField.render(this,renderSession);
		openfl__$internal_renderer_opengl_GLRenderer.renderBitmap(this,renderSession,this.__textEngine.antiAliasType != openfl_text_AntiAliasType.ADVANCED || this.__textEngine.gridFitType != openfl_text_GridFitType.PIXEL);
		if(this.__mask != null && this.__maskGraphics != null && this.__maskGraphics.__commands.get_length() > 0) renderSession.maskManager.popMask();
		if(this.__scrollRect != null) renderSession.maskManager.popRect();
	}
	,__startCursorTimer: function() {
		this.__cursorTimer = haxe_Timer.delay($bind(this,this.__startCursorTimer),600);
		this.__showCursor = !this.__showCursor;
		this.__dirty = true;
	}
	,__startTextInput: function() {
		if(this.__caretIndex < 0) {
			this.__caretIndex = this.__textEngine.text.length;
			this.__selectionIndex = this.__caretIndex;
		}
		if(this.stage != null) {
			this.stage.window.backend.setEnableTextEvents(true);
			if(!this.__inputEnabled) {
				this.stage.window.backend.setEnableTextEvents(true);
				if(!this.stage.window.onTextInput.has($bind(this,this.window_onTextInput))) {
					this.stage.window.onTextInput.add($bind(this,this.window_onTextInput));
					this.stage.window.onKeyDown.add($bind(this,this.window_onKeyDown));
				}
				this.__inputEnabled = true;
				this.__startCursorTimer();
			}
		}
	}
	,__stopCursorTimer: function() {
		if(this.__cursorTimer != null) {
			this.__cursorTimer.stop();
			this.__cursorTimer = null;
		}
		if(this.__showCursor) {
			this.__showCursor = false;
			this.__dirty = true;
		}
	}
	,__stopTextInput: function() {
		if(this.__inputEnabled && this.stage != null) {
			this.stage.window.backend.setEnableTextEvents(false);
			this.stage.window.onTextInput.remove($bind(this,this.window_onTextInput));
			this.stage.window.onKeyDown.remove($bind(this,this.window_onKeyDown));
			this.__inputEnabled = false;
			this.__stopCursorTimer();
		}
	}
	,__updateLayout: function() {
		if(this.__layoutDirty) {
			this.__textEngine.update();
			if(this.__textEngine.autoSize != openfl_text_TextFieldAutoSize.NONE) {
				var cacheWidth = this.__textEngine.width;
				var cacheHeight = this.__textEngine.height;
				var _g = this.__textEngine.autoSize;
				switch(_g[1]) {
				case 1:case 3:case 0:
					if(!this.__textEngine.wordWrap) this.__textEngine.width = this.__textEngine.textWidth + 4;
					this.__textEngine.height = this.__textEngine.textHeight + 4;
					break;
				default:
				}
				if(this.__textEngine.width != cacheWidth) {
					var _g1 = this.__textEngine.autoSize;
					switch(_g1[1]) {
					case 3:
						var _g11 = this;
						_g11.set_x(_g11.get_x() + (cacheWidth - this.__textEngine.width));
						break;
					case 0:
						var _g12 = this;
						_g12.set_x(_g12.get_x() + (cacheWidth - this.__textEngine.width) / 2);
						break;
					default:
					}
				}
				this.__textEngine.getBounds();
			}
			this.__layoutDirty = false;
		}
	}
	,get_antiAliasType: function() {
		return this.__textEngine.antiAliasType;
	}
	,set_antiAliasType: function(value) {
		if(value != this.__textEngine.antiAliasType) {
		}
		return this.__textEngine.antiAliasType = value;
	}
	,get_autoSize: function() {
		return this.__textEngine.autoSize;
	}
	,set_autoSize: function(value) {
		if(value != this.__textEngine.autoSize) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.autoSize = value;
	}
	,get_background: function() {
		return this.__textEngine.background;
	}
	,set_background: function(value) {
		if(value != this.__textEngine.background) this.__dirty = true;
		return this.__textEngine.background = value;
	}
	,get_backgroundColor: function() {
		return this.__textEngine.backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(value != this.__textEngine.backgroundColor) this.__dirty = true;
		return this.__textEngine.backgroundColor = value;
	}
	,get_border: function() {
		return this.__textEngine.border;
	}
	,set_border: function(value) {
		if(value != this.__textEngine.border) this.__dirty = true;
		return this.__textEngine.border = value;
	}
	,get_borderColor: function() {
		return this.__textEngine.borderColor;
	}
	,set_borderColor: function(value) {
		if(value != this.__textEngine.borderColor) this.__dirty = true;
		return this.__textEngine.borderColor = value;
	}
	,get_bottomScrollV: function() {
		this.__updateLayout();
		return this.__textEngine.bottomScrollV;
	}
	,get_caretIndex: function() {
		return this.__caretIndex;
	}
	,get_defaultTextFormat: function() {
		return this.__textFormat.clone();
	}
	,set_defaultTextFormat: function(value) {
		this.__textFormat.__merge(value);
		this.__layoutDirty = true;
		this.__dirty = true;
		return value;
	}
	,get_displayAsPassword: function() {
		return this.__textEngine.displayAsPassword;
	}
	,set_displayAsPassword: function(value) {
		if(value != this.__textEngine.displayAsPassword) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.displayAsPassword = value;
	}
	,get_embedFonts: function() {
		return this.__textEngine.embedFonts;
	}
	,set_embedFonts: function(value) {
		return this.__textEngine.embedFonts = value;
	}
	,get_gridFitType: function() {
		return this.__textEngine.gridFitType;
	}
	,set_gridFitType: function(value) {
		return this.__textEngine.gridFitType = value;
	}
	,get_height: function() {
		this.__updateLayout();
		return this.__textEngine.height;
	}
	,set_height: function(value) {
		if(this.get_scaleY() != 1 || value != this.__textEngine.height) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		this.set_scaleY(1);
		return this.__textEngine.height = value;
	}
	,get_htmlText: function() {
		return this.__textEngine.text;
	}
	,set_htmlText: function(value) {
		if(!this.__isHTML || this.__textEngine.text != value) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		this.__isHTML = true;
		if(this.__div == null) {
			value = new EReg("<br>","g").replace(value,"\n");
			value = new EReg("<br/>","g").replace(value,"\n");
			var segments = value.split("<font");
			if(segments.length == 1) {
				value = new EReg("<.*?>","g").replace(value,"");
				if(this.__textEngine.textFormatRanges.length > 1) this.__textEngine.textFormatRanges.splice(1,this.__textEngine.textFormatRanges.length - 1);
				var range = this.__textEngine.textFormatRanges[0];
				range.format = this.__textFormat;
				range.start = 0;
				range.end = value.length;
				return this.__textEngine.text = value;
			} else {
				this.__textEngine.textFormatRanges.splice(0,this.__textEngine.textFormatRanges.length);
				value = "";
				var _g = 0;
				while(_g < segments.length) {
					var segment = segments[_g];
					++_g;
					if(segment == "") continue;
					var closeFontIndex = segment.indexOf("</font>");
					if(closeFontIndex > -1) {
						var start = segment.indexOf(">") + 1;
						var end = closeFontIndex;
						var format = this.__textFormat.clone();
						var faceIndex = segment.indexOf("face=");
						var colorIndex = segment.indexOf("color=");
						var sizeIndex = segment.indexOf("size=");
						if(faceIndex > -1 && faceIndex < start) {
							var len = segment.indexOf("\"",faceIndex);
							format.font = HxOverrides.substr(segment,faceIndex + 6,len);
						}
						if(colorIndex > -1 && colorIndex < start) format.color = Std.parseInt("0x" + HxOverrides.substr(segment,colorIndex + 8,6));
						if(sizeIndex > -1 && sizeIndex < start) format.size = Std.parseInt((function($this) {
							var $r;
							var len1 = segment.indexOf("\"",sizeIndex);
							$r = HxOverrides.substr(segment,sizeIndex + 6,len1);
							return $r;
						}(this)));
						var sub = segment.substring(start,end);
						sub = new EReg("<.*?>","g").replace(sub,"");
						this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(format,value.length,value.length + sub.length));
						value += sub;
						if(closeFontIndex + 7 < segment.length) {
							sub = HxOverrides.substr(segment,closeFontIndex + 7,null);
							this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(this.__textFormat,value.length,value.length + sub.length));
							value += sub;
						}
					} else {
						this.__textEngine.textFormatRanges.push(new openfl__$internal_text_TextFormatRange(this.__textFormat,value.length,value.length + segment.length));
						value += segment;
					}
				}
			}
		}
		return this.__textEngine.text = value;
	}
	,get_length: function() {
		if(this.__textEngine.text != null) return this.__textEngine.text.length;
		return 0;
	}
	,get_maxChars: function() {
		return this.__textEngine.maxChars;
	}
	,set_maxChars: function(value) {
		if(value != this.__textEngine.maxChars) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.maxChars = value;
	}
	,get_maxScrollH: function() {
		this.__updateLayout();
		return this.__textEngine.maxScrollH;
	}
	,get_maxScrollV: function() {
		this.__updateLayout();
		return this.__textEngine.maxScrollV;
	}
	,get_multiline: function() {
		return this.__textEngine.multiline;
	}
	,set_multiline: function(value) {
		if(value != this.__textEngine.multiline) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.multiline = value;
	}
	,get_numLines: function() {
		this.__updateLayout();
		return this.__textEngine.numLines;
	}
	,get_restrict: function() {
		return this.__textEngine.restrict;
	}
	,set_restrict: function(value) {
		return this.__textEngine.restrict = value;
	}
	,get_scrollH: function() {
		return this.__textEngine.scrollH;
	}
	,set_scrollH: function(value) {
		if(value > this.__textEngine.maxScrollH) value = this.__textEngine.maxScrollH;
		if(value < 0) value = 0;
		if(value != this.__textEngine.scrollH) this.__dirty = true;
		return this.__textEngine.scrollH = value;
	}
	,get_scrollV: function() {
		return this.__textEngine.scrollV;
	}
	,set_scrollV: function(value) {
		if(value > this.__textEngine.maxScrollV) value = this.__textEngine.maxScrollV;
		if(value < 1) value = 1;
		if(value != this.__textEngine.scrollV) this.__dirty = true;
		return this.__textEngine.scrollV = value;
	}
	,get_selectable: function() {
		return this.__textEngine.selectable;
	}
	,set_selectable: function(value) {
		if(value != this.__textEngine.selectable && this.get_type() == openfl_text_TextFieldType.INPUT) {
			if(this.stage != null && this.stage.get_focus() == this) this.__startTextInput(); else if(!value) this.__stopTextInput();
		}
		return this.__textEngine.selectable = value;
	}
	,get_selectionBeginIndex: function() {
		return Std["int"](Math.min(this.__caretIndex,this.__selectionIndex));
	}
	,get_selectionEndIndex: function() {
		return Std["int"](Math.max(this.__caretIndex,this.__selectionIndex));
	}
	,get_sharpness: function() {
		return this.__textEngine.sharpness;
	}
	,set_sharpness: function(value) {
		if(value != this.__textEngine.sharpness) this.__dirty = true;
		return this.__textEngine.sharpness = value;
	}
	,get_text: function() {
		return this.__textEngine.text;
	}
	,set_text: function(value) {
		if(this.__isHTML || this.__textEngine.text != value) {
			this.__dirty = true;
			this.__layoutDirty = true;
		} else return value;
		if(this.__textEngine.textFormatRanges.length > 1) this.__textEngine.textFormatRanges.splice(1,this.__textEngine.textFormatRanges.length - 1);
		var range = this.__textEngine.textFormatRanges[0];
		range.format = this.__textFormat;
		range.start = 0;
		range.end = value.length;
		this.__isHTML = false;
		return this.__textEngine.text = value;
	}
	,get_textColor: function() {
		return this.__textFormat.color;
	}
	,set_textColor: function(value) {
		if(value != this.__textFormat.color) this.__dirty = true;
		var _g = 0;
		var _g1 = this.__textEngine.textFormatRanges;
		while(_g < _g1.length) {
			var range = _g1[_g];
			++_g;
			range.format.color = value;
		}
		return this.__textFormat.color = value;
	}
	,get_textWidth: function() {
		this.__updateLayout();
		return this.__textEngine.textWidth;
	}
	,get_textHeight: function() {
		this.__updateLayout();
		return this.__textEngine.textHeight;
	}
	,get_type: function() {
		return this.__textEngine.type;
	}
	,set_type: function(value) {
		if(value != this.__textEngine.type) {
			if(value == openfl_text_TextFieldType.INPUT) {
				this.addEventListener(openfl_events_FocusEvent.FOCUS_IN,$bind(this,this.this_onFocusIn));
				this.addEventListener(openfl_events_FocusEvent.FOCUS_OUT,$bind(this,this.this_onFocusOut));
				this.addEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.this_onAddedToStage));
				this.this_onFocusIn(null);
			} else {
				this.removeEventListener(openfl_events_FocusEvent.FOCUS_IN,$bind(this,this.this_onFocusIn));
				this.removeEventListener(openfl_events_FocusEvent.FOCUS_OUT,$bind(this,this.this_onFocusOut));
				this.removeEventListener(openfl_events_Event.ADDED_TO_STAGE,$bind(this,this.this_onAddedToStage));
				this.__stopTextInput();
			}
			this.__dirty = true;
		}
		return this.__textEngine.type = value;
	}
	,get_width: function() {
		this.__updateLayout();
		return this.__textEngine.width;
	}
	,set_width: function(value) {
		if(this.get_scaleX() != 1 || this.__textEngine.width != value) {
			if(!this.__transformDirty) {
				this.__transformDirty = true;
				openfl_display_DisplayObject.__worldTransformDirty++;
			}
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		this.set_scaleX(1);
		return this.__textEngine.width = value;
	}
	,get_wordWrap: function() {
		return this.__textEngine.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value != this.__textEngine.wordWrap) {
			this.__dirty = true;
			this.__layoutDirty = true;
		}
		return this.__textEngine.wordWrap = value;
	}
	,stage_onMouseMove: function(event) {
		if(this.stage == null) return;
		if(this.__textEngine.selectable && this.__selectionIndex >= 0) {
			this.__updateLayout();
			var position = this.__getPosition(this.get_mouseX(),this.get_mouseY());
			if(position != this.__caretIndex) {
				this.__caretIndex = position;
				this.__dirty = true;
			}
		}
	}
	,stage_onMouseUp: function(event) {
		if(this.stage == null) return;
		this.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_MOVE,$bind(this,this.stage_onMouseMove));
		this.stage.removeEventListener(openfl_events_MouseEvent.MOUSE_UP,$bind(this,this.stage_onMouseUp));
		if(this.stage.get_focus() == this) {
			this.__getWorldTransform();
			this.__updateLayout();
			var px = this.__worldTransform.__transformInverseX(this.get_x(),this.get_y());
			var py = this.__worldTransform.__transformInverseY(this.get_x(),this.get_y());
			var upPos = this.__getPosition(this.get_mouseX(),this.get_mouseY());
			var leftPos;
			var rightPos;
			leftPos = Std["int"](Math.min(this.__selectionIndex,upPos));
			rightPos = Std["int"](Math.max(this.__selectionIndex,upPos));
			this.__selectionIndex = leftPos;
			this.__caretIndex = rightPos;
			if(this.__inputEnabled) {
				this.this_onFocusIn(null);
				this.__stopCursorTimer();
				this.__startCursorTimer();
			}
		}
	}
	,this_onAddedToStage: function(event) {
		this.this_onFocusIn(null);
	}
	,this_onFocusIn: function(event) {
		if(this.get_selectable() && this.get_type() == openfl_text_TextFieldType.INPUT && this.stage != null && this.stage.get_focus() == this) this.__startTextInput();
	}
	,this_onFocusOut: function(event) {
		this.__stopTextInput();
	}
	,this_onMouseDown: function(event) {
		if(!this.get_selectable()) return;
		this.__updateLayout();
		this.__caretIndex = this.__getPosition(this.get_mouseX(),this.get_mouseY());
		this.__selectionIndex = this.__caretIndex;
		this.__dirty = true;
		this.stage.addEventListener(openfl_events_MouseEvent.MOUSE_MOVE,$bind(this,this.stage_onMouseMove));
		this.stage.addEventListener(openfl_events_MouseEvent.MOUSE_UP,$bind(this,this.stage_onMouseUp));
	}
	,window_onKeyDown: function(key,modifier) {
		switch(key) {
		case 8:
			if(this.__selectionIndex == this.__caretIndex && this.__caretIndex > 0) this.__selectionIndex = this.__caretIndex - 1;
			if(this.__selectionIndex != this.__caretIndex) {
				this.replaceSelectedText("");
				this.__selectionIndex = this.__caretIndex;
				this.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE,true));
			}
			break;
		case 127:
			if(this.__selectionIndex == this.__caretIndex && this.__caretIndex < this.__textEngine.text.length) this.__selectionIndex = this.__caretIndex + 1;
			if(this.__selectionIndex != this.__caretIndex) {
				this.replaceSelectedText("");
				this.__selectionIndex = this.__caretIndex;
				this.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE,true));
			}
			break;
		case 1073741904:
			if(lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier)) {
				if(this.__caretIndex > 0) this.__caretIndex--;
			} else {
				if(this.__selectionIndex == this.__caretIndex) {
					if(this.__caretIndex > 0) this.__caretIndex--;
				} else this.__caretIndex = Std["int"](Math.min(this.__caretIndex,this.__selectionIndex));
				this.__selectionIndex = this.__caretIndex;
			}
			this.__stopCursorTimer();
			this.__startCursorTimer();
			break;
		case 1073741903:
			if(lime_ui__$KeyModifier_KeyModifier_$Impl_$.get_shiftKey(modifier)) {
				if(this.__caretIndex < this.__textEngine.text.length) this.__caretIndex++;
			} else {
				if(this.__selectionIndex == this.__caretIndex) {
					if(this.__caretIndex < this.__textEngine.text.length) this.__caretIndex++;
				} else this.__caretIndex = Std["int"](Math.max(this.__caretIndex,this.__selectionIndex));
				this.__selectionIndex = this.__caretIndex;
			}
			this.__stopCursorTimer();
			this.__startCursorTimer();
			break;
		case 99:
			if(modifier == 64 || modifier == 128) lime_system_Clipboard.set_text(this.__textEngine.text.substring(this.__caretIndex,this.__selectionIndex));
			break;
		case 120:
			if(modifier == 64 || modifier == 128) {
				lime_system_Clipboard.set_text(this.__textEngine.text.substring(this.__caretIndex,this.__selectionIndex));
				if(this.__caretIndex != this.__selectionIndex) {
					this.replaceSelectedText("");
					this.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE,true));
				}
			}
			break;
		case 118:
			if(modifier == 64 || modifier == 128) {
				var text = lime_system_Clipboard.get_text();
				if(text != null) this.replaceSelectedText(text); else this.replaceSelectedText("");
				this.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE,true));
			}
			break;
		default:
		}
	}
	,window_onTextInput: function(value) {
		this.replaceSelectedText(value);
		this.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE,true));
	}
	,__class__: openfl_text_TextField
	,__properties__: $extend(openfl_display_InteractiveObject.prototype.__properties__,{set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_type:"set_type",get_type:"get_type",get_textWidth:"get_textWidth",get_textHeight:"get_textHeight",set_textColor:"set_textColor",get_textColor:"get_textColor",set_text:"set_text",get_text:"get_text",set_sharpness:"set_sharpness",get_sharpness:"get_sharpness",get_selectionEndIndex:"get_selectionEndIndex",get_selectionBeginIndex:"get_selectionBeginIndex",set_selectable:"set_selectable",get_selectable:"get_selectable",set_scrollV:"set_scrollV",get_scrollV:"get_scrollV",set_scrollH:"set_scrollH",get_scrollH:"get_scrollH",set_restrict:"set_restrict",get_restrict:"get_restrict",get_numLines:"get_numLines",set_multiline:"set_multiline",get_multiline:"get_multiline",get_maxScrollV:"get_maxScrollV",get_maxScrollH:"get_maxScrollH",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",get_length:"get_length",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_gridFitType:"set_gridFitType",get_gridFitType:"get_gridFitType",set_embedFonts:"set_embedFonts",get_embedFonts:"get_embedFonts",set_displayAsPassword:"set_displayAsPassword",get_displayAsPassword:"get_displayAsPassword",set_defaultTextFormat:"set_defaultTextFormat",get_defaultTextFormat:"get_defaultTextFormat",get_caretIndex:"get_caretIndex",get_bottomScrollV:"get_bottomScrollV",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_border:"set_border",get_border:"get_border",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_background:"set_background",get_background:"get_background",set_autoSize:"set_autoSize",get_autoSize:"get_autoSize",set_antiAliasType:"set_antiAliasType",get_antiAliasType:"get_antiAliasType"})
});
var openfl_text_TextFieldAutoSize = $hxClasses["openfl.text.TextFieldAutoSize"] = { __ename__ : ["openfl","text","TextFieldAutoSize"], __constructs__ : ["CENTER","LEFT","NONE","RIGHT"] };
openfl_text_TextFieldAutoSize.CENTER = ["CENTER",0];
openfl_text_TextFieldAutoSize.CENTER.toString = $estr;
openfl_text_TextFieldAutoSize.CENTER.__enum__ = openfl_text_TextFieldAutoSize;
openfl_text_TextFieldAutoSize.LEFT = ["LEFT",1];
openfl_text_TextFieldAutoSize.LEFT.toString = $estr;
openfl_text_TextFieldAutoSize.LEFT.__enum__ = openfl_text_TextFieldAutoSize;
openfl_text_TextFieldAutoSize.NONE = ["NONE",2];
openfl_text_TextFieldAutoSize.NONE.toString = $estr;
openfl_text_TextFieldAutoSize.NONE.__enum__ = openfl_text_TextFieldAutoSize;
openfl_text_TextFieldAutoSize.RIGHT = ["RIGHT",3];
openfl_text_TextFieldAutoSize.RIGHT.toString = $estr;
openfl_text_TextFieldAutoSize.RIGHT.__enum__ = openfl_text_TextFieldAutoSize;
openfl_text_TextFieldAutoSize.__empty_constructs__ = [openfl_text_TextFieldAutoSize.CENTER,openfl_text_TextFieldAutoSize.LEFT,openfl_text_TextFieldAutoSize.NONE,openfl_text_TextFieldAutoSize.RIGHT];
var openfl_text_TextFieldType = $hxClasses["openfl.text.TextFieldType"] = { __ename__ : ["openfl","text","TextFieldType"], __constructs__ : ["DYNAMIC","INPUT"] };
openfl_text_TextFieldType.DYNAMIC = ["DYNAMIC",0];
openfl_text_TextFieldType.DYNAMIC.toString = $estr;
openfl_text_TextFieldType.DYNAMIC.__enum__ = openfl_text_TextFieldType;
openfl_text_TextFieldType.INPUT = ["INPUT",1];
openfl_text_TextFieldType.INPUT.toString = $estr;
openfl_text_TextFieldType.INPUT.__enum__ = openfl_text_TextFieldType;
openfl_text_TextFieldType.__empty_constructs__ = [openfl_text_TextFieldType.DYNAMIC,openfl_text_TextFieldType.INPUT];
var openfl_text_TextFormat = function(font,size,color,bold,italic,underline,url,target,align,leftMargin,rightMargin,indent,leading) {
	this.font = font;
	this.size = size;
	this.color = color;
	this.bold = bold;
	this.italic = italic;
	this.underline = underline;
	this.url = url;
	this.target = target;
	this.align = align;
	this.leftMargin = leftMargin;
	this.rightMargin = rightMargin;
	this.indent = indent;
	this.leading = leading;
};
$hxClasses["openfl.text.TextFormat"] = openfl_text_TextFormat;
openfl_text_TextFormat.__name__ = ["openfl","text","TextFormat"];
openfl_text_TextFormat.prototype = {
	clone: function() {
		var newFormat = new openfl_text_TextFormat(this.font,this.size,this.color,this.bold,this.italic,this.underline,this.url,this.target);
		newFormat.align = this.align;
		newFormat.leftMargin = this.leftMargin;
		newFormat.rightMargin = this.rightMargin;
		newFormat.indent = this.indent;
		newFormat.leading = this.leading;
		newFormat.blockIndent = this.blockIndent;
		newFormat.bullet = this.bullet;
		newFormat.kerning = this.kerning;
		newFormat.letterSpacing = this.letterSpacing;
		newFormat.tabStops = this.tabStops;
		return newFormat;
	}
	,__merge: function(format) {
		if(format.font != null) this.font = format.font;
		if(format.size != null) this.size = format.size;
		if(format.color != null) this.color = format.color;
		if(format.bold != null) this.bold = format.bold;
		if(format.italic != null) this.italic = format.italic;
		if(format.underline != null) this.underline = format.underline;
		if(format.url != null) this.url = format.url;
		if(format.target != null) this.target = format.target;
		if(format.align != null) this.align = format.align;
		if(format.leftMargin != null) this.leftMargin = format.leftMargin;
		if(format.rightMargin != null) this.rightMargin = format.rightMargin;
		if(format.indent != null) this.indent = format.indent;
		if(format.leading != null) this.leading = format.leading;
		if(format.blockIndent != null) this.blockIndent = format.blockIndent;
		if(format.bullet != null) this.bullet = format.bullet;
		if(format.kerning != null) this.kerning = format.kerning;
		if(format.letterSpacing != null) this.letterSpacing = format.letterSpacing;
		if(format.tabStops != null) this.tabStops = format.tabStops;
	}
	,__class__: openfl_text_TextFormat
};
var openfl_text_TextFormatAlign = $hxClasses["openfl.text.TextFormatAlign"] = { __ename__ : ["openfl","text","TextFormatAlign"], __constructs__ : ["LEFT","RIGHT","JUSTIFY","CENTER"] };
openfl_text_TextFormatAlign.LEFT = ["LEFT",0];
openfl_text_TextFormatAlign.LEFT.toString = $estr;
openfl_text_TextFormatAlign.LEFT.__enum__ = openfl_text_TextFormatAlign;
openfl_text_TextFormatAlign.RIGHT = ["RIGHT",1];
openfl_text_TextFormatAlign.RIGHT.toString = $estr;
openfl_text_TextFormatAlign.RIGHT.__enum__ = openfl_text_TextFormatAlign;
openfl_text_TextFormatAlign.JUSTIFY = ["JUSTIFY",2];
openfl_text_TextFormatAlign.JUSTIFY.toString = $estr;
openfl_text_TextFormatAlign.JUSTIFY.__enum__ = openfl_text_TextFormatAlign;
openfl_text_TextFormatAlign.CENTER = ["CENTER",3];
openfl_text_TextFormatAlign.CENTER.toString = $estr;
openfl_text_TextFormatAlign.CENTER.__enum__ = openfl_text_TextFormatAlign;
openfl_text_TextFormatAlign.__empty_constructs__ = [openfl_text_TextFormatAlign.LEFT,openfl_text_TextFormatAlign.RIGHT,openfl_text_TextFormatAlign.JUSTIFY,openfl_text_TextFormatAlign.CENTER];
var openfl_text_TextLineMetrics = function(x,width,height,ascent,descent,leading) {
	this.x = x;
	this.width = width;
	this.height = height;
	this.ascent = ascent;
	this.descent = descent;
	this.leading = leading;
};
$hxClasses["openfl.text.TextLineMetrics"] = openfl_text_TextLineMetrics;
openfl_text_TextLineMetrics.__name__ = ["openfl","text","TextLineMetrics"];
openfl_text_TextLineMetrics.prototype = {
	__class__: openfl_text_TextLineMetrics
};
var openfl_ui_GameInput = function() {
	openfl_events_EventDispatcher.call(this);
	openfl_ui_GameInput.__instances.push(this);
};
$hxClasses["openfl.ui.GameInput"] = openfl_ui_GameInput;
openfl_ui_GameInput.__name__ = ["openfl","ui","GameInput"];
openfl_ui_GameInput.getDeviceAt = function(index) {
	if(index >= 0 && index < openfl_ui_GameInput.__deviceList.length) return openfl_ui_GameInput.__deviceList[index];
	return null;
};
openfl_ui_GameInput.__getDevice = function(gamepad) {
	if(gamepad == null) return null;
	if(!(openfl_ui_GameInput.__devices.h.__keys__[gamepad.__id__] != null)) {
		var device = new openfl_ui_GameInputDevice(gamepad.get_guid(),gamepad.get_name());
		openfl_ui_GameInput.__deviceList.push(device);
		openfl_ui_GameInput.__devices.set(gamepad,device);
		openfl_ui_GameInput.numDevices = openfl_ui_GameInput.__deviceList.length;
	}
	return openfl_ui_GameInput.__devices.h[gamepad.__id__];
};
openfl_ui_GameInput.__onGamepadAxisMove = function(gamepad,axis,value) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	if(device.enabled) {
		if(!device.__axis.h.hasOwnProperty(axis)) {
			var control1 = new openfl_ui_GameInputControl(device,"AXIS_" + (function($this) {
				var $r;
				switch(axis) {
				case 0:
					$r = "LEFT_X";
					break;
				case 1:
					$r = "LEFT_Y";
					break;
				case 2:
					$r = "RIGHT_X";
					break;
				case 3:
					$r = "RIGHT_Y";
					break;
				case 4:
					$r = "TRIGGER_LEFT";
					break;
				case 5:
					$r = "TRIGGER_RIGHT";
					break;
				default:
					$r = "UNKNOWN (" + axis + ")";
				}
				return $r;
			}(this)),-1,1);
			device.__axis.h[axis] = control1;
			device.__controls.push(control1);
		}
		var control = device.__axis.h[axis];
		control.value = value;
		control.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE));
	}
};
openfl_ui_GameInput.__onGamepadButtonDown = function(gamepad,button) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	if(device.enabled) {
		if(!device.__button.h.hasOwnProperty(button)) {
			var control1 = new openfl_ui_GameInputControl(device,"BUTTON_" + (function($this) {
				var $r;
				switch(button) {
				case 0:
					$r = "A";
					break;
				case 1:
					$r = "B";
					break;
				case 2:
					$r = "X";
					break;
				case 3:
					$r = "Y";
					break;
				case 4:
					$r = "BACK";
					break;
				case 5:
					$r = "GUIDE";
					break;
				case 6:
					$r = "START";
					break;
				case 7:
					$r = "LEFT_STICK";
					break;
				case 8:
					$r = "RIGHT_STICK";
					break;
				case 9:
					$r = "LEFT_SHOULDER";
					break;
				case 10:
					$r = "RIGHT_SHOULDER";
					break;
				case 11:
					$r = "DPAD_UP";
					break;
				case 12:
					$r = "DPAD_DOWN";
					break;
				case 13:
					$r = "DPAD_LEFT";
					break;
				case 14:
					$r = "DPAD_RIGHT";
					break;
				default:
					$r = "UNKNOWN (" + button + ")";
				}
				return $r;
			}(this)),0,1);
			device.__button.h[button] = control1;
			device.__controls.push(control1);
		}
		var control = device.__button.h[button];
		control.value = 1;
		control.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE));
	}
};
openfl_ui_GameInput.__onGamepadButtonUp = function(gamepad,button) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	if(device.enabled) {
		if(!device.__button.h.hasOwnProperty(button)) {
			var control1 = new openfl_ui_GameInputControl(device,"BUTTON_" + (function($this) {
				var $r;
				switch(button) {
				case 0:
					$r = "A";
					break;
				case 1:
					$r = "B";
					break;
				case 2:
					$r = "X";
					break;
				case 3:
					$r = "Y";
					break;
				case 4:
					$r = "BACK";
					break;
				case 5:
					$r = "GUIDE";
					break;
				case 6:
					$r = "START";
					break;
				case 7:
					$r = "LEFT_STICK";
					break;
				case 8:
					$r = "RIGHT_STICK";
					break;
				case 9:
					$r = "LEFT_SHOULDER";
					break;
				case 10:
					$r = "RIGHT_SHOULDER";
					break;
				case 11:
					$r = "DPAD_UP";
					break;
				case 12:
					$r = "DPAD_DOWN";
					break;
				case 13:
					$r = "DPAD_LEFT";
					break;
				case 14:
					$r = "DPAD_RIGHT";
					break;
				default:
					$r = "UNKNOWN (" + button + ")";
				}
				return $r;
			}(this)),0,1);
			device.__button.h[button] = control1;
			device.__controls.push(control1);
		}
		var control = device.__button.h[button];
		control.value = 0;
		control.dispatchEvent(new openfl_events_Event(openfl_events_Event.CHANGE));
	}
};
openfl_ui_GameInput.__onGamepadConnect = function(gamepad) {
	var device = openfl_ui_GameInput.__getDevice(gamepad);
	if(device == null) return;
	var _g = 0;
	var _g1 = openfl_ui_GameInput.__instances;
	while(_g < _g1.length) {
		var instance = _g1[_g];
		++_g;
		instance.dispatchEvent(new openfl_events_GameInputEvent(openfl_events_GameInputEvent.DEVICE_ADDED,null,null,device));
	}
};
openfl_ui_GameInput.__onGamepadDisconnect = function(gamepad) {
	var device = openfl_ui_GameInput.__devices.h[gamepad.__id__];
	if(device != null) {
		if(openfl_ui_GameInput.__devices.h.__keys__[gamepad.__id__] != null) {
			var x = openfl_ui_GameInput.__devices.h[gamepad.__id__];
			HxOverrides.remove(openfl_ui_GameInput.__deviceList,x);
			openfl_ui_GameInput.__devices.remove(gamepad);
		}
		openfl_ui_GameInput.numDevices = openfl_ui_GameInput.__deviceList.length;
		var _g = 0;
		var _g1 = openfl_ui_GameInput.__instances;
		while(_g < _g1.length) {
			var instance = _g1[_g];
			++_g;
			instance.dispatchEvent(new openfl_events_GameInputEvent(openfl_events_GameInputEvent.DEVICE_REMOVED,null,null,device));
		}
	}
};
openfl_ui_GameInput.__super__ = openfl_events_EventDispatcher;
openfl_ui_GameInput.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_ui_GameInput
});
var openfl_ui_GameInputControl = function(device,id,minValue,maxValue,value) {
	if(value == null) value = 0;
	openfl_events_EventDispatcher.call(this);
	this.device = device;
	this.id = id;
	this.minValue = minValue;
	this.maxValue = maxValue;
	this.value = value;
};
$hxClasses["openfl.ui.GameInputControl"] = openfl_ui_GameInputControl;
openfl_ui_GameInputControl.__name__ = ["openfl","ui","GameInputControl"];
openfl_ui_GameInputControl.__super__ = openfl_events_EventDispatcher;
openfl_ui_GameInputControl.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_ui_GameInputControl
});
var openfl_ui_GameInputDevice = function(id,name) {
	this.__controls = [];
	this.__button = new haxe_ds_IntMap();
	this.__axis = new haxe_ds_IntMap();
	this.id = id;
	this.name = name;
	var control;
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		control = new openfl_ui_GameInputControl(this,"AXIS_" + i,-1,1);
		this.__axis.h[i] = control;
		this.__controls.push(control);
	}
	var _g1 = 0;
	while(_g1 < 15) {
		var i1 = _g1++;
		control = new openfl_ui_GameInputControl(this,"BUTTON_" + i1,0,1);
		this.__button.h[i1] = control;
		this.__controls.push(control);
	}
};
$hxClasses["openfl.ui.GameInputDevice"] = openfl_ui_GameInputDevice;
openfl_ui_GameInputDevice.__name__ = ["openfl","ui","GameInputDevice"];
openfl_ui_GameInputDevice.prototype = {
	getCachedSamples: function(data,append) {
		if(append == null) append = false;
		return 0;
	}
	,getControlAt: function(i) {
		if(i >= 0 && i < this.__controls.length) return this.__controls[i];
		return null;
	}
	,startCachingSamples: function(numSamples,controls) {
	}
	,stopCachingSamples: function() {
	}
	,get_numControls: function() {
		return this.__controls.length;
	}
	,__class__: openfl_ui_GameInputDevice
	,__properties__: {get_numControls:"get_numControls"}
};
var openfl_ui_Keyboard = function() { };
$hxClasses["openfl.ui.Keyboard"] = openfl_ui_Keyboard;
openfl_ui_Keyboard.__name__ = ["openfl","ui","Keyboard"];
openfl_ui_Keyboard.capsLock = null;
openfl_ui_Keyboard.numLock = null;
openfl_ui_Keyboard.isAccessible = function() {
	return false;
};
openfl_ui_Keyboard.__convertKeyCode = function(key) {
	switch(key) {
	case 8:
		return 8;
	case 9:
		return 9;
	case 13:
		return 13;
	case 27:
		return 27;
	case 32:
		return 32;
	case 33:
		return 49;
	case 34:
		return 222;
	case 35:
		return 51;
	case 36:
		return 52;
	case 37:
		return 53;
	case 38:
		return 55;
	case 39:
		return 222;
	case 40:
		return 57;
	case 41:
		return 48;
	case 42:
		return 56;
	case 44:
		return 188;
	case 45:
		return 189;
	case 46:
		return 190;
	case 47:
		return 191;
	case 48:
		return 48;
	case 49:
		return 49;
	case 50:
		return 50;
	case 51:
		return 51;
	case 52:
		return 52;
	case 53:
		return 53;
	case 54:
		return 54;
	case 55:
		return 55;
	case 56:
		return 56;
	case 57:
		return 57;
	case 58:
		return 186;
	case 59:
		return 186;
	case 60:
		return 60;
	case 61:
		return 187;
	case 62:
		return 190;
	case 63:
		return 191;
	case 64:
		return 50;
	case 91:
		return 219;
	case 92:
		return 220;
	case 93:
		return 221;
	case 94:
		return 54;
	case 95:
		return 189;
	case 96:
		return 192;
	case 97:
		return 65;
	case 98:
		return 66;
	case 99:
		return 67;
	case 100:
		return 68;
	case 101:
		return 69;
	case 102:
		return 70;
	case 103:
		return 71;
	case 104:
		return 72;
	case 105:
		return 73;
	case 106:
		return 74;
	case 107:
		return 75;
	case 108:
		return 76;
	case 109:
		return 77;
	case 110:
		return 78;
	case 111:
		return 79;
	case 112:
		return 80;
	case 113:
		return 81;
	case 114:
		return 82;
	case 115:
		return 83;
	case 116:
		return 84;
	case 117:
		return 85;
	case 118:
		return 86;
	case 119:
		return 87;
	case 120:
		return 88;
	case 121:
		return 89;
	case 122:
		return 90;
	case 127:
		return 46;
	case 1073741881:
		return 20;
	case 1073741882:
		return 112;
	case 1073741883:
		return 113;
	case 1073741884:
		return 114;
	case 1073741885:
		return 115;
	case 1073741886:
		return 116;
	case 1073741887:
		return 117;
	case 1073741888:
		return 118;
	case 1073741889:
		return 119;
	case 1073741890:
		return 120;
	case 1073741891:
		return 121;
	case 1073741892:
		return 122;
	case 1073741893:
		return 123;
	case 1073741894:
		return 301;
	case 1073741895:
		return 145;
	case 1073741896:
		return 19;
	case 1073741897:
		return 45;
	case 1073741898:
		return 36;
	case 1073741899:
		return 33;
	case 1073741901:
		return 35;
	case 1073741902:
		return 34;
	case 1073741903:
		return 39;
	case 1073741904:
		return 37;
	case 1073741905:
		return 40;
	case 1073741906:
		return 38;
	case 1073741907:
		return 144;
	case 1073741908:
		return 111;
	case 1073741909:
		return 106;
	case 1073741910:
		return 109;
	case 1073741911:
		return 107;
	case 1073741912:
		return 108;
	case 1073741913:
		return 97;
	case 1073741914:
		return 98;
	case 1073741915:
		return 99;
	case 1073741916:
		return 100;
	case 1073741917:
		return 101;
	case 1073741918:
		return 102;
	case 1073741919:
		return 103;
	case 1073741920:
		return 104;
	case 1073741921:
		return 105;
	case 1073741922:
		return 96;
	case 1073741923:
		return 110;
	case 1073741925:
		return 302;
	case 1073741928:
		return 124;
	case 1073741929:
		return 125;
	case 1073741930:
		return 126;
	case 1073741982:
		return 13;
	case 1073742044:
		return 110;
	case 1073742048:
		return 17;
	case 1073742049:
		return 16;
	case 1073742050:
		return 18;
	case 1073742051:
		return 15;
	case 1073742052:
		return 17;
	case 1073742053:
		return 16;
	case 1073742054:
		return 18;
	case 1073742055:
		return 15;
	default:
		return key;
	}
};
openfl_ui_Keyboard.__getCharCode = function(key,shift) {
	if(shift == null) shift = false;
	if(!shift) {
		switch(key) {
		case 8:
			return 8;
		case 9:
			return 9;
		case 13:
			return 13;
		case 27:
			return 27;
		case 32:
			return 32;
		case 186:
			return 59;
		case 187:
			return 61;
		case 188:
			return 44;
		case 189:
			return 45;
		case 190:
			return 46;
		case 191:
			return 47;
		case 192:
			return 96;
		case 219:
			return 91;
		case 220:
			return 92;
		case 221:
			return 93;
		case 222:
			return 39;
		}
		if(key >= 48 && key <= 57) return key - 48 + 48;
		if(key >= 65 && key <= 90) return key - 65 + 97;
	} else {
		switch(key) {
		case 48:
			return 41;
		case 49:
			return 33;
		case 50:
			return 64;
		case 51:
			return 35;
		case 52:
			return 36;
		case 53:
			return 37;
		case 54:
			return 94;
		case 55:
			return 38;
		case 56:
			return 42;
		case 57:
			return 40;
		case 186:
			return 58;
		case 187:
			return 43;
		case 188:
			return 60;
		case 189:
			return 95;
		case 190:
			return 62;
		case 191:
			return 63;
		case 192:
			return 126;
		case 219:
			return 123;
		case 220:
			return 124;
		case 221:
			return 125;
		case 222:
			return 34;
		}
		if(key >= 65 && key <= 90) return key - 65 + 65;
	}
	if(key >= 96 && key <= 105) return key - 96 + 48;
	switch(key) {
	case 106:
		return 42;
	case 107:
		return 43;
	case 108:
		return 44;
	case 110:
		return 45;
	case 111:
		return 46;
	case 46:
		return 127;
	case 13:
		return 13;
	case 8:
		return 8;
	}
	return 0;
};
openfl_ui_Keyboard.__getKeyLocation = function(key) {
	switch(key) {
	case 1073742048:case 1073742049:case 1073742050:case 1073742051:
		return 1;
	case 1073742052:case 1073742053:case 1073742054:case 1073742055:
		return 2;
	case 1073741908:case 1073741909:case 1073741910:case 1073741911:case 1073741912:case 1073741913:case 1073741914:case 1073741915:case 1073741916:case 1073741917:case 1073741918:case 1073741919:case 1073741920:case 1073741921:case 1073741922:case 1073741923:case 1073742044:
		return 3;
	default:
		return 0;
	}
};
var openfl_utils__$ByteArray_ByteArray_$Impl_$ = {};
$hxClasses["openfl.utils._ByteArray.ByteArray_Impl_"] = openfl_utils__$ByteArray_ByteArray_$Impl_$;
openfl_utils__$ByteArray_ByteArray_$Impl_$.__name__ = ["openfl","utils","_ByteArray","ByteArray_Impl_"];
openfl_utils__$ByteArray_ByteArray_$Impl_$.__properties__ = {set_length:"set_length",get_length:"get_length"}
openfl_utils__$ByteArray_ByteArray_$Impl_$.defaultObjectEncoding = null;
openfl_utils__$ByteArray_ByteArray_$Impl_$._new = function(length) {
	if(length == null) length = 0;
	return new openfl_utils_ByteArrayData(length);
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.get = function(this1,index) {
	return this1.b[index];
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.set = function(this1,index,value) {
	this1.b[index] = value & 255;
	return value;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.fromArrayBuffer = function(buffer) {
	return openfl_utils_ByteArrayData.fromBytes(haxe_io_Bytes.ofData(buffer));
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytes = function(bytes) {
	if(js_Boot.__instanceof(bytes,openfl_utils_ByteArrayData)) return bytes; else return openfl_utils_ByteArrayData.fromBytes(bytes);
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.fromBytesData = function(bytesData) {
	return openfl_utils_ByteArrayData.fromBytes(haxe_io_Bytes.ofData(bytesData));
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toArrayBuffer = function(byteArray) {
	return byteArray.b.bufferValue;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytes = function(byteArray) {
	return byteArray;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toBytesData = function(byteArray) {
	return byteArray.b.bufferValue;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.toLimeBytes = function(byteArray) {
	return new lime_utils_Bytes(openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length(byteArray),byteArray.b.bufferValue);
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.get_length = function(this1) {
	return this1.__length;
};
openfl_utils__$ByteArray_ByteArray_$Impl_$.set_length = function(this1,value) {
	if(value > 0) this1.__resize(value);
	this1.__length = value;
	return value;
};
var openfl_utils_CompressionAlgorithm = $hxClasses["openfl.utils.CompressionAlgorithm"] = { __ename__ : ["openfl","utils","CompressionAlgorithm"], __constructs__ : ["DEFLATE","ZLIB","LZMA","GZIP"] };
openfl_utils_CompressionAlgorithm.DEFLATE = ["DEFLATE",0];
openfl_utils_CompressionAlgorithm.DEFLATE.toString = $estr;
openfl_utils_CompressionAlgorithm.DEFLATE.__enum__ = openfl_utils_CompressionAlgorithm;
openfl_utils_CompressionAlgorithm.ZLIB = ["ZLIB",1];
openfl_utils_CompressionAlgorithm.ZLIB.toString = $estr;
openfl_utils_CompressionAlgorithm.ZLIB.__enum__ = openfl_utils_CompressionAlgorithm;
openfl_utils_CompressionAlgorithm.LZMA = ["LZMA",2];
openfl_utils_CompressionAlgorithm.LZMA.toString = $estr;
openfl_utils_CompressionAlgorithm.LZMA.__enum__ = openfl_utils_CompressionAlgorithm;
openfl_utils_CompressionAlgorithm.GZIP = ["GZIP",3];
openfl_utils_CompressionAlgorithm.GZIP.toString = $estr;
openfl_utils_CompressionAlgorithm.GZIP.__enum__ = openfl_utils_CompressionAlgorithm;
openfl_utils_CompressionAlgorithm.__empty_constructs__ = [openfl_utils_CompressionAlgorithm.DEFLATE,openfl_utils_CompressionAlgorithm.ZLIB,openfl_utils_CompressionAlgorithm.LZMA,openfl_utils_CompressionAlgorithm.GZIP];
var openfl_utils__$Object_Object_$Impl_$ = {};
$hxClasses["openfl.utils._Object.Object_Impl_"] = openfl_utils__$Object_Object_$Impl_$;
openfl_utils__$Object_Object_$Impl_$.__name__ = ["openfl","utils","_Object","Object_Impl_"];
openfl_utils__$Object_Object_$Impl_$._new = function() {
	return { };
};
openfl_utils__$Object_Object_$Impl_$.hasOwnProperty = function(this1,name) {
	return this1 != null && Object.prototype.hasOwnProperty.call(this1,name);
};
openfl_utils__$Object_Object_$Impl_$.isPrototypeOf = function(this1,theClass) {
	var c;
	if(this1 == null) c = null; else c = js_Boot.getClass(this1);
	while(c != null) {
		if(c == theClass) return true;
		c = Type.getSuperClass(c);
	}
	return false;
};
openfl_utils__$Object_Object_$Impl_$.iterator = function(this1) {
	var fields = Reflect.fields(this1);
	if(fields == null) fields = [];
	return HxOverrides.iter(fields);
};
openfl_utils__$Object_Object_$Impl_$.propertyIsEnumerable = function(this1,name) {
	return this1 != null && Object.prototype.hasOwnProperty.call(this1,name) && Std["is"](Reflect.field(this1,name),haxe_lang_Iterable);
};
openfl_utils__$Object_Object_$Impl_$.toLocaleString = function(this1) {
	return Std.string(this1);
};
openfl_utils__$Object_Object_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
openfl_utils__$Object_Object_$Impl_$.valueOf = function(this1) {
	return this1;
};
openfl_utils__$Object_Object_$Impl_$.__get = function(this1,key) {
	return Reflect.field(this1,key);
};
openfl_utils__$Object_Object_$Impl_$.__set = function(this1,key,value) {
	this1[key] = value;
	return value;
};
var haxe_lang_Iterator = function() { };
$hxClasses["haxe.lang.Iterator"] = haxe_lang_Iterator;
haxe_lang_Iterator.__name__ = ["haxe","lang","Iterator"];
haxe_lang_Iterator.prototype = {
	__class__: haxe_lang_Iterator
};
var haxe_lang_Iterable = function() { };
$hxClasses["haxe.lang.Iterable"] = haxe_lang_Iterable;
haxe_lang_Iterable.__name__ = ["haxe","lang","Iterable"];
haxe_lang_Iterable.prototype = {
	__class__: haxe_lang_Iterable
};
var spritesheet_Spritesheet = function(image,frames,behaviors,imageAlpha) {
	this.sourceImage = image;
	this.sourceImageAlpha = imageAlpha;
	if(frames == null) {
		this.frames = [];
		this.totalFrames = 0;
	} else {
		this.frames = frames;
		this.totalFrames = frames.length;
	}
	if(behaviors == null) this.behaviors = new haxe_ds_StringMap(); else this.behaviors = behaviors;
};
$hxClasses["spritesheet.Spritesheet"] = spritesheet_Spritesheet;
spritesheet_Spritesheet.__name__ = ["spritesheet","Spritesheet"];
spritesheet_Spritesheet.prototype = {
	addBehavior: function(behavior) {
		this.behaviors.set(behavior.name,behavior);
	}
	,addFrame: function(frame) {
		this.frames.push(frame);
		this.totalFrames++;
	}
	,generateBitmaps: function() {
		var _g1 = 0;
		var _g = this.totalFrames;
		while(_g1 < _g) {
			var i = _g1++;
			this.generateBitmap(i);
		}
	}
	,generateBitmap: function(index) {
		var frame = this.frames[index];
		var bitmapData = new openfl_display_BitmapData(frame.width,frame.height,true);
		var sourceRectangle = new openfl_geom_Rectangle(frame.x,frame.y,frame.width,frame.height);
		var targetPoint = new openfl_geom_Point();
		bitmapData.copyPixels(this.sourceImage,sourceRectangle,targetPoint);
		if(this.sourceImageAlpha != null) bitmapData.copyChannel(this.sourceImageAlpha,sourceRectangle,targetPoint,2,8);
		frame.bitmapData = bitmapData;
	}
	,getFrame: function(index,autoGenerate) {
		if(autoGenerate == null) autoGenerate = true;
		var frame = this.frames[index];
		if(frame != null && frame.bitmapData == null && autoGenerate) this.generateBitmap(index);
		return frame;
	}
	,getFrameIDs: function() {
		var ids = [];
		var _g1 = 0;
		var _g = this.totalFrames;
		while(_g1 < _g) {
			var i = _g1++;
			ids.push(i);
		}
		return ids;
	}
	,getFrames: function() {
		return this.frames.slice();
	}
	,merge: function(spritesheet1) {
		var cacheTotalFrames = this.totalFrames;
		var _g1 = 0;
		var _g = spritesheet1.frames.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(spritesheet1.frames[i].bitmapData == null && (spritesheet1.sourceImage != this.sourceImage || spritesheet1.sourceImageAlpha != this.sourceImageAlpha)) spritesheet1.generateBitmap(i);
			this.addFrame(spritesheet1.frames[i]);
		}
		var $it0 = spritesheet1.behaviors.iterator();
		while( $it0.hasNext() ) {
			var behavior = $it0.next();
			if(!this.behaviors.exists(behavior.name)) {
				var clone = behavior.clone();
				clone.name = behavior.name;
				var _g11 = 0;
				var _g2 = behavior.frames.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					behavior.frames[i1] += cacheTotalFrames;
				}
				this.addBehavior(behavior);
			}
		}
		var ids = [];
		var _g12 = cacheTotalFrames;
		var _g3 = this.totalFrames;
		while(_g12 < _g3) {
			var i2 = _g12++;
			ids.push(i2);
		}
		return ids;
	}
	,updateImage: function(image,imageAlpha) {
		this.sourceImage = image;
		this.sourceImageAlpha = imageAlpha;
		var _g = 0;
		var _g1 = this.frames;
		while(_g < _g1.length) {
			var frame = _g1[_g];
			++_g;
			if(frame.bitmapData != null) frame.bitmapData = null;
		}
	}
	,__class__: spritesheet_Spritesheet
};
var spritesheet_data_BehaviorData = function(name,frames,loop,frameRate,originX,originY) {
	if(originY == null) originY = 0;
	if(originX == null) originX = 0;
	if(frameRate == null) frameRate = 30;
	if(loop == null) loop = false;
	if(name == null) name = "";
	if(name == "") name = "behavior" + spritesheet_data_BehaviorData.uniqueID++;
	if(frames == null) frames = [];
	this.name = name;
	this.frames = frames;
	this.loop = loop;
	this.frameRate = frameRate;
	this.originX = originX;
	this.originY = originY;
	this.frameData = [];
	var _g1 = 0;
	var _g = this.frames.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.frameData.push(null);
	}
};
$hxClasses["spritesheet.data.BehaviorData"] = spritesheet_data_BehaviorData;
spritesheet_data_BehaviorData.__name__ = ["spritesheet","data","BehaviorData"];
spritesheet_data_BehaviorData.prototype = {
	clone: function() {
		return new spritesheet_data_BehaviorData("behavior" + spritesheet_data_BehaviorData.uniqueID++,this.frames.slice(),this.loop,this.frameRate,this.originX,this.originY);
	}
	,__class__: spritesheet_data_BehaviorData
};
var spritesheet_data_SpritesheetFrame = function(x,y,width,height,offsetX,offsetY) {
	if(offsetY == null) offsetY = 0;
	if(offsetX == null) offsetX = 0;
	if(height == null) height = 0;
	if(width == null) width = 0;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
};
$hxClasses["spritesheet.data.SpritesheetFrame"] = spritesheet_data_SpritesheetFrame;
spritesheet_data_SpritesheetFrame.__name__ = ["spritesheet","data","SpritesheetFrame"];
spritesheet_data_SpritesheetFrame.prototype = {
	__class__: spritesheet_data_SpritesheetFrame
};
var spritesheet_importers_BitmapImporter = function() { };
$hxClasses["spritesheet.importers.BitmapImporter"] = spritesheet_importers_BitmapImporter;
spritesheet_importers_BitmapImporter.__name__ = ["spritesheet","importers","BitmapImporter"];
spritesheet_importers_BitmapImporter.create = function(bitmapData,columns,rows,tileWidth,tileHeight,adjustLength,scale) {
	if(scale == null) scale = 1;
	if(adjustLength == null) adjustLength = 0;
	var frames = [];
	var totalLength = rows * columns + adjustLength;
	var _g = 0;
	while(_g < rows) {
		var row = _g++;
		var _g1 = 0;
		while(_g1 < columns) {
			var column = _g1++;
			if(frames.length < totalLength) {
				var x = tileWidth * column;
				var y = tileHeight * row;
				var frame = new spritesheet_data_SpritesheetFrame(x,y,tileWidth,tileHeight,0,0);
				if(scale != 1) {
					var sourceBitmapData = new openfl_display_BitmapData(tileWidth,tileHeight,true,0);
					sourceBitmapData.copyPixels(bitmapData,new openfl_geom_Rectangle(x,y,tileWidth,tileHeight),new openfl_geom_Point());
					var bitmap = new openfl_display_Bitmap(sourceBitmapData);
					bitmap.smoothing = true;
					var matrix = new openfl_geom_Matrix();
					matrix.scale(scale,scale);
					var bitmapData1 = new openfl_display_BitmapData(Math.round(tileWidth * scale),Math.round(tileHeight * scale),true,0);
					bitmapData1.draw(bitmap,matrix);
					frame.bitmapData = bitmapData1;
				}
				frames.push(frame);
			}
		}
	}
	while(frames.length < totalLength) frames.push(new spritesheet_data_SpritesheetFrame());
	return new spritesheet_Spritesheet(bitmapData,frames);
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) HxOverrides.indexOf = function(a,o,i) {
	return Array.prototype.indexOf.call(a,o,i);
};
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
haxe_Resource.content = [{ name : "__ASSET__:bitmap_co_doubleduck_utils_SplashBG", data : ""},{ name : "__ASSET__:file___ASSET__images_fonts_white_stroked_big_kern_txt", data : "eyJBIjp7IkEiOi0yLjUsIkIiOi0yLjUsIkMiOi0yLjUsIkQiOi0yLjUsIkUiOi0yLCJGIjotMiwiRyI6LTIuNSwiSCI6LTIsIkkiOi0yLCJKIjotMiwiSyI6LTIsIkwiOi0yLCJNIjotMiwiTiI6LTIuNSwiTyI6LTIuNSwiUCI6LTIuNSwiUSI6LTIuNSwiUiI6LTIuNSwiUyI6LTIuNSwiVCI6LTMuNSwiVSI6LTIsIlYiOi0zLCJXIjotMywiWCI6LTIuNSwiWSI6LTMuNSwiWiI6LTIuNSwiYW55IjotMX0sIkIiOnsiQSI6LTIsIkIiOi0yLCJDIjotMS41LCJEIjotMiwiRSI6LTEuNSwiRiI6LTEuNSwiRyI6LTIsIkgiOi0xLjUsIkkiOi0xLjUsIkoiOi0xLjUsIksiOi0xLjUsIkwiOi0xLjUsIk0iOi0xLjUsIk4iOi0yLCJPIjotMS41LCJQIjotMiwiUSI6LTEuNSwiUiI6LTIsIlMiOi0yLCJUIjotMiwiVSI6LTEuNSwiViI6LTIsIlciOi0yLCJYIjotMiwiWSI6LTIuNSwiWiI6LTIsImFueSI6LTF9LCJDIjp7IkEiOi0yLjUsIkIiOi0yLjUsIkMiOi0yLCJEIjotMi41LCJFIjotMiwiRiI6LTIsIkciOi0yLjUsIkgiOi0yLCJJIjotMiwiSiI6LTIsIksiOi0yLCJMIjotMiwiTSI6LTIsIk4iOi0yLjUsIk8iOi0yLjUsIlAiOi0yLjUsIlEiOi0yLjUsIlIiOi0yLjUsIlMiOi0yLjUsIlQiOi0yLjUsIlUiOi0yLCJWIjotMiwiVyI6LTIuNSwiWCI6LTIuNSwiWSI6LTIuNSwiWiI6LTIuNSwiYW55IjotMX0sIkQiOnsiQSI6LTIuNSwiQiI6LTIuNSwiQyI6LTIsIkQiOi0yLjUsIkUiOi0yLCJGIjotMiwiRyI6LTIuNSwiSCI6LTIsIkkiOi0yLCJKIjotMiwiSyI6LTIsIkwiOi0yLCJNIjotMiwiTiI6LTIuNSwiTyI6LTIsIlAiOi0yLjUsIlEiOi0yLCJSIjotMi41LCJTIjotMi41LCJUIjotMi41LCJVIjotMiwiViI6LTIuNSwiVyI6LTIuNSwiWCI6LTIuNSwiWSI6LTIuNSwiWiI6LTIuNSwiYW55IjotMX0sIkUiOnsiQSI6LTIuNSwiQiI6LTIuNSwiQyI6LTIsIkQiOi0yLjUsIkUiOi0yLCJGIjotMiwiRyI6LTIuNSwiSCI6LTIsIkkiOi0yLCJKIjotMiwiSyI6LTIsIkwiOi0yLCJNIjotMiwiTiI6LTIuNSwiTyI6LTIsIlAiOi0yLjUsIlEiOi0yLCJSIjotMi41LCJTIjotMi41LCJUIjotMi41LCJVIjotMiwiViI6LTIsIlciOi0yLjUsIlgiOi0yLjUsIlkiOi0yLjUsIloiOi0yLjUsImFueSI6LTF9LCJGIjp7IkEiOi0zLCJCIjotMiwiQyI6LTIsIkQiOi0yLCJFIjotMS41LCJGIjotMS41LCJHIjotMi41LCJIIjotMS41LCJJIjotMS41LCJKIjotMiwiSyI6LTEuNSwiTCI6LTEuNSwiTSI6LTIsIk4iOi0yLCJPIjotMiwiUCI6LTIsIlEiOi0yLCJSIjotMiwiUyI6LTIsIlQiOi0yLCJVIjotMS41LCJWIjotMS41LCJXIjotMiwiWCI6LTIsIlkiOi0yLCJaIjotMiwiYW55IjotMX0sIkciOnsiQSI6LTIuNSwiQiI6LTIuNSwiQyI6LTIsIkQiOi0yLjUsIkUiOi0yLCJGIjotMiwiRyI6LTIuNSwiSCI6LTIsIkkiOi0yLCJKIjotMiwiSyI6LTIsIkwiOi0yLCJNIjotMiwiTiI6LTIuNSwiTyI6LTIsIlAiOi0yLjUsIlEiOi0yLCJSIjotMi41LCJTIjotMi41LCJUIjotMywiVSI6LTIsIlYiOi0yLjUsIlciOi0yLjUsIlgiOi0yLjUsIlkiOi0zLCJaIjotMi41LCJhbnkiOi0xfSwiSCI6eyJBIjotMiwiQiI6LTIsIkMiOi0xLjUsIkQiOi0yLCJFIjotMS41LCJGIjotMS41LCJHIjotMiwiSCI6LTEuNSwiSSI6LTEuNSwiSiI6LTEuNSwiSyI6LTEuNSwiTCI6LTEuNSwiTSI6LTEuNSwiTiI6LTIsIk8iOi0xLjUsIlAiOi0yLCJRIjotMS41LCJSIjotMiwiUyI6LTIsIlQiOi0yLCJVIjotMS41LCJWIjotMS41LCJXIjotMiwiWCI6LTIsIlkiOi0yLCJaIjotMiwiYW55IjotMX0sIkkiOnsiQSI6LTIuNSwiQiI6LTIuNSwiQyI6LTIsIkQiOi0yLjUsIkUiOi0yLCJGIjotMiwiRyI6LTIuNSwiSCI6LTIsIkkiOi0yLCJKIjotMiwiSyI6LTIsIkwiOi0yLCJNIjotMiwiTiI6LTIuNSwiTyI6LTIsIlAiOi0yLjUsIlEiOi0yLCJSIjotMi41LCJTIjotMi41LCJUIjotMi41LCJVIjotMiwiViI6LTIsIlciOi0yLjUsIlgiOi0yLjUsIlkiOi0yLjUsIloiOi0yLjUsImFueSI6LTF9LCJKIjp7IkEiOi0yLjUsIkIiOi0yLjUsIkMiOi0yLCJEIjotMi41LCJFIjotMiwiRiI6LTIsIkciOi0yLjUsIkgiOi0yLCJJIjotMiwiSiI6LTIsIksiOi0yLCJMIjotMiwiTSI6LTIsIk4iOi0yLjUsIk8iOi0yLCJQIjotMi41LCJRIjotMiwiUiI6LTIuNSwiUyI6LTIuNSwiVCI6LTIuNSwiVSI6LTIsIlYiOi0yLCJXIjotMi41LCJYIjotMi41LCJZIjotMi41LCJaIjotMi41LCJhbnkiOi0xfSwiSyI6eyJBIjotMiwiQiI6LTIsIkMiOi0yLCJEIjotMiwiRSI6LTEuNSwiRiI6LTEuNSwiRyI6LTIuNSwiSCI6LTEuNSwiSSI6LTEuNSwiSiI6LTEuNSwiSyI6LTEuNSwiTCI6LTEuNSwiTSI6LTEuNSwiTiI6LTIsIk8iOi0yLCJQIjotMiwiUSI6LTIsIlIiOi0yLCJTIjotMiwiVCI6LTIsIlUiOi0xLjUsIlYiOi0xLjUsIlciOi0yLCJYIjotMiwiWSI6LTIsIloiOi0yLCJhbnkiOi0xfSwiTCI6eyJBIjotMi41LCJCIjotMi41LCJDIjotMiwiRCI6LTIuNSwiRSI6LTIsIkYiOi0yLCJHIjotMi41LCJIIjotMiwiSSI6LTIsIkoiOi0yLCJLIjotMiwiTCI6LTIsIk0iOi0yLCJOIjotMi41LCJPIjotMi41LCJQIjotMi41LCJRIjotMi41LCJSIjotMi41LCJTIjotMi41LCJUIjotMy41LCJVIjotMiwiViI6LTMsIlciOi0zLCJYIjotMi41LCJZIjotMy41LCJaIjotMi41LCJhbnkiOi0xfSwiTSI6eyJBIjotMiwiQiI6LTIsIkMiOi0xLjUsIkQiOi0yLCJFIjotMS41LCJGIjotMS41LCJHIjotMiwiSCI6LTEuNSwiSSI6LTEuNSwiSiI6LTEuNSwiSyI6LTEuNSwiTCI6LTEuNSwiTSI6LTEuNSwiTiI6LTIsIk8iOi0xLjUsIlAiOi0yLCJRIjotMS41LCJSIjotMiwiUyI6LTIsIlQiOi0yLjUsIlUiOi0xLjUsIlYiOi0yLCJXIjotMiwiWCI6LTIsIlkiOi0yLjUsIloiOi0yLCJhbnkiOi0xfSwiTiI6eyJBIjotMi41LCJCIjotMi41LCJDIjotMiwiRCI6LTIuNSwiRSI6LTIsIkYiOi0yLCJHIjotMi41LCJIIjotMiwiSSI6LTIsIkoiOi0yLCJLIjotMiwiTCI6LTIsIk0iOi0yLCJOIjotMi41LCJPIjotMiwiUCI6LTIuNSwiUSI6LTIsIlIiOi0yLjUsIlMiOi0yLjUsIlQiOi0yLjUsIlUiOi0yLCJWIjotMiwiVyI6LTIuNSwiWCI6LTIuNSwiWSI6LTIuNSwiWiI6LTIuNSwiYW55IjotMX0sIk8iOnsiQSI6LTIuNSwiQiI6LTIsIkMiOi0xLjUsIkQiOi0yLCJFIjotMS41LCJGIjotMS41LCJHIjotMiwiSCI6LTEuNSwiSSI6LTEuNSwiSiI6LTIsIksiOi0xLjUsIkwiOi0xLjUsIk0iOi0xLjUsIk4iOi0yLCJPIjotMS41LCJQIjotMiwiUSI6LTEuNSwiUiI6LTIsIlMiOi0yLCJUIjotMi41LCJVIjotMS41LCJWIjotMiwiVyI6LTIsIlgiOi0yLjUsIlkiOi0yLjUsIloiOi0yLjUsImFueSI6LTF9LCJQIjp7IkEiOi0zLCJCIjotMi41LCJDIjotMiwiRCI6LTIuNSwiRSI6LTIsIkYiOi0yLCJHIjotMi41LCJIIjotMiwiSSI6LTIsIkoiOi0yLjUsIksiOi0yLCJMIjotMiwiTSI6LTIsIk4iOi0yLjUsIk8iOi0yLCJQIjotMi41LCJRIjotMiwiUiI6LTIuNSwiUyI6LTIuNSwiVCI6LTIuNSwiVSI6LTIsIlYiOi0yLCJXIjotMi41LCJYIjotMi41LCJZIjotMi41LCJaIjotMi41LCJhbnkiOi0xfSwiUSI6eyJBIjotMi41LCJCIjotMi41LCJDIjotMiwiRCI6LTIuNSwiRSI6LTIsIkYiOi0yLCJHIjotMi41LCJIIjotMiwiSSI6LTIsIkoiOi0yLCJLIjotMiwiTCI6LTIsIk0iOi0yLCJOIjotMi41LCJPIjotMiwiUCI6LTIuNSwiUSI6LTIsIlIiOi0yLjUsIlMiOi0yLjUsIlQiOi0zLCJVIjotMiwiViI6LTIuNSwiVyI6LTIuNSwiWCI6LTIuNSwiWSI6LTMsIloiOi0yLjUsImFueSI6LTF9LCJSIjp7IkEiOi0yLCJCIjotMiwiQyI6LTIsIkQiOi0yLCJFIjotMS41LCJGIjotMS41LCJHIjotMi41LCJIIjotMS41LCJJIjotMS41LCJKIjotMS41LCJLIjotMS41LCJMIjotMS41LCJNIjotMS41LCJOIjotMiwiTyI6LTIsIlAiOi0yLCJRIjotMiwiUiI6LTIsIlMiOi0yLCJUIjotMi41LCJVIjotMiwiViI6LTIsIlciOi0yLjUsIlgiOi0yLCJZIjotMi41LCJaIjotMiwiYW55IjotMX0sIlMiOnsiQSI6LTIuNSwiQiI6LTIuNSwiQyI6LTIsIkQiOi0yLjUsIkUiOi0yLCJGIjotMiwiRyI6LTIuNSwiSCI6LTIsIkkiOi0yLCJKIjotMiwiSyI6LTIsIkwiOi0yLCJNIjotMiwiTiI6LTIuNSwiTyI6LTIsIlAiOi0yLjUsIlEiOi0yLCJSIjotMi41LCJTIjotMi41LCJUIjotMi41LCJVIjotMiwiViI6LTIsIlciOi0yLjUsIlgiOi0yLjUsIlkiOi0yLjUsIloiOi0yLjUsImFueSI6LTF9LCJUIjp7IkEiOi0zLCJCIjotMiwiQyI6LTIsIkQiOi0yLCJFIjotMS41LCJGIjotMS41LCJHIjotMiwiSCI6LTEuNSwiSSI6LTEuNSwiSiI6LTIsIksiOi0xLjUsIkwiOi0xLjUsIk0iOi0yLCJOIjotMiwiTyI6LTIsIlAiOi0yLCJRIjotMiwiUiI6LTIsIlMiOi0yLCJUIjotMiwiVSI6LTEuNSwiViI6LTEuNSwiVyI6LTIsIlgiOi0yLCJZIjotMiwiWiI6LTIsImFueSI6LTF9LCJVIjp7IkEiOi0yLjUsIkIiOi0yLCJDIjotMS41LCJEIjotMiwiRSI6LTEuNSwiRiI6LTEuNSwiRyI6LTIsIkgiOi0xLjUsIkkiOi0xLjUsIkoiOi0xLjUsIksiOi0xLjUsIkwiOi0xLjUsIk0iOi0xLjUsIk4iOi0yLCJPIjotMS41LCJQIjotMiwiUSI6LTEuNSwiUiI6LTIsIlMiOi0yLCJUIjotMiwiVSI6LTEuNSwiViI6LTEuNSwiVyI6LTIsIlgiOi0yLCJZIjotMiwiWiI6LTIsImFueSI6LTF9LCJWIjp7IkEiOi0zLCJCIjotMi41LCJDIjotMiwiRCI6LTIuNSwiRSI6LTIsIkYiOi0yLCJHIjotMi41LCJIIjotMiwiSSI6LTIsIkoiOi0yLjUsIksiOi0yLCJMIjotMiwiTSI6LTIuNSwiTiI6LTIuNSwiTyI6LTIsIlAiOi0yLjUsIlEiOi0yLCJSIjotMi41LCJTIjotMi41LCJUIjotMi41LCJVIjotMiwiViI6LTIsIlciOi0yLjUsIlgiOi0yLjUsIlkiOi0yLjUsIloiOi0yLjUsImFueSI6LTF9LCJXIjp7IkEiOi0yLjUsIkIiOi0yLCJDIjotMiwiRCI6LTIsIkUiOi0xLjUsIkYiOi0xLjUsIkciOi0yLCJIIjotMS41LCJJIjotMS41LCJKIjotMiwiSyI6LTEuNSwiTCI6LTEuNSwiTSI6LTIsIk4iOi0yLCJPIjotMiwiUCI6LTIsIlEiOi0yLCJSIjotMiwiUyI6LTIsIlQiOi0yLCJVIjotMS41LCJWIjotMS41LCJXIjotMiwiWCI6LTIsIlkiOi0yLCJaIjotMiwiYW55IjotMX0sIlgiOnsiQSI6LTIsIkIiOi0yLCJDIjotMiwiRCI6LTIsIkUiOi0xLjUsIkYiOi0xLjUsIkciOi0yLjUsIkgiOi0xLjUsIkkiOi0xLjUsIkoiOi0xLjUsIksiOi0xLjUsIkwiOi0xLjUsIk0iOi0xLjUsIk4iOi0yLCJPIjotMiwiUCI6LTIsIlEiOi0yLjUsIlIiOi0yLCJTIjotMiwiVCI6LTIuNSwiVSI6LTIsIlYiOi0yLCJXIjotMi41LCJYIjotMiwiWSI6LTIuNSwiWiI6LTIsImFueSI6LTF9LCJZIjp7IkEiOi0zLjUsIkIiOi0yLjUsIkMiOi0yLjUsIkQiOi0yLjUsIkUiOi0yLCJGIjotMiwiRyI6LTMsIkgiOi0yLCJJIjotMiwiSiI6LTIuNSwiSyI6LTIsIkwiOi0yLCJNIjotMi41LCJOIjotMi41LCJPIjotMi41LCJQIjotMi41LCJRIjotMi41LCJSIjotMi41LCJTIjotMi41LCJUIjotMi41LCJVIjotMiwiViI6LTIsIlciOi0yLjUsIlgiOi0yLjUsIlkiOi0yLjUsIloiOi0yLjUsImFueSI6LTF9LCJaIjp7IkEiOi0yLjUsIkIiOi0yLjUsIkMiOi0yLCJEIjotMi41LCJFIjotMiwiRiI6LTIsIkciOi0yLjUsIkgiOi0yLCJJIjotMiwiSiI6LTIsIksiOi0yLCJMIjotMiwiTSI6LTIsIk4iOi0yLjUsIk8iOi0yLjUsIlAiOi0yLjUsIlEiOi0yLjUsIlIiOi0yLjUsIlMiOi0yLjUsIlQiOi0yLjUsIlUiOi0yLCJWIjotMiwiVyI6LTIuNSwiWCI6LTIuNSwiWSI6LTIuNSwiWiI6LTIuNSwiYW55IjotMX0sImFueSI6eyJhbnkiOi0xfX0"},{ name : "__ASSET__:file___ASSET__images_fonts_black_medium_kern_txt", data : "eyIjIjp7IiMiOjEuNSwiMCI6MS41LCIxIjoxLCIyIjowLjUsIjMiOjAuNSwiNCI6MSwiNSI6MS41LCI2IjoxLjUsIjciOjAuNSwiOCI6MS41LCI5IjoxLjUsImFueSI6Mn0sIjAiOnsiIyI6MS41LCIwIjoxLjUsIjEiOjEsIjIiOjEsIjMiOjAuNSwiNCI6MS41LCI1IjoxLjUsIjYiOjEuNSwiNyI6MSwiOCI6MS41LCI5IjoxLjUsImFueSI6Mn0sIjEiOnsiIyI6MS41LCIwIjoxLjUsIjEiOjEuNSwiMiI6MS41LCIzIjoxLCI0IjoxLjUsIjUiOjEuNSwiNiI6MS41LCI3IjoxLjUsIjgiOjEuNSwiOSI6MS41LCJhbnkiOjJ9LCIyIjp7IiMiOjEsIjAiOjEsIjEiOjEsIjIiOjEsIjMiOjEsIjQiOjEsIjUiOjEuNSwiNiI6MSwiNyI6MSwiOCI6MS41LCI5IjoxLCJhbnkiOjJ9LCIzIjp7IiMiOjEuNSwiMCI6MS41LCIxIjoxLjUsIjIiOjEuNSwiMyI6MSwiNCI6MS41LCI1IjoxLjUsIjYiOjEuNSwiNyI6MSwiOCI6MS41LCI5IjoxLjUsImFueSI6Mn0sIjQiOnsiIyI6MS41LCIwIjoxLjUsIjEiOjEsIjIiOjEsIjMiOjAuNSwiNCI6MS41LCI1IjoxLCI2IjoxLjUsIjciOjEsIjgiOjEuNSwiOSI6MSwiYW55IjoyfSwiNSI6eyIjIjoxLjUsIjAiOjEuNSwiMSI6MSwiMiI6MSwiMyI6MC41LCI0IjoxLjUsIjUiOjEsIjYiOjEuNSwiNyI6MSwiOCI6MS41LCI5IjoxLCJhbnkiOjJ9LCI2Ijp7IiMiOjEuNSwiMCI6MS41LCIxIjoxLCIyIjoxLCIzIjoxLCI0IjoxLjUsIjUiOjEuNSwiNiI6MS41LCI3IjoxLCI4IjoxLjUsIjkiOjEuNSwiYW55IjoyfSwiNyI6eyIjIjoxLjUsIjAiOjEuNSwiMSI6MS41LCIyIjoxLjUsIjMiOjEsIjQiOjEsIjUiOjEuNSwiNiI6MSwiNyI6MS41LCI4IjoxLjUsIjkiOjEuNSwiYW55IjoyfSwiOCI6eyIjIjoxLjUsIjAiOjEuNSwiMSI6MS41LCIyIjoxLjUsIjMiOjEsIjQiOjEuNSwiNSI6MS41LCI2IjoxLjUsIjciOjEsIjgiOjEuNSwiOSI6MS41LCJhbnkiOjJ9LCI5Ijp7IiMiOjEuNSwiMCI6MS41LCIxIjoxLCIyIjoxLCIzIjowLjUsIjQiOjEsIjUiOjEuNSwiNiI6MS41LCI3IjoxLCI4IjoxLjUsIjkiOjEuNSwiYW55IjoyfSwiYW55Ijp7ImFueSI6Mn19"},{ name : "__ASSET__:file___ASSET__data_gameplay_js", data : ""},{ name : "__ASSET__:bitmap_co_doubleduck_utils_ProgFill", data : "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQU9ZQUFBQVBDQVlBQUFEd0liUHhBQUFBQVhOU1IwSUFyczRjNlFBQUFBbHdTRmx6QUFBTEV3QUFDeE1CQUpxY0dBQUFBV1JwVkZoMFdFMU1PbU52YlM1aFpHOWlaUzU0YlhBQUFBQUFBRHg0T25odGNHMWxkR0VnZUcxc2JuTTZlRDBpWVdSdlltVTZibk02YldWMFlTOGlJSGc2ZUcxd2RHczlJbGhOVUNCRGIzSmxJRFV1TkM0d0lqNEtJQ0FnUEhKa1pqcFNSRVlnZUcxc2JuTTZjbVJtUFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMekF5THpJeUxYSmtaaTF6ZVc1MFlYZ3Ribk1qSWo0S0lDQWdJQ0FnUEhKa1pqcEVaWE5qY21sd2RHbHZiaUJ5WkdZNllXSnZkWFE5SWlJS0lDQWdJQ0FnSUNBZ0lDQWdlRzFzYm5NNmVHMXdQU0pvZEhSd09pOHZibk11WVdSdlltVXVZMjl0TDNoaGNDOHhMakF2SWo0S0lDQWdJQ0FnSUNBZ1BIaHRjRHBEY21WaGRHOXlWRzl2YkQ1QlpHOWlaU0JKYldGblpWSmxZV1I1UEM5NGJYQTZRM0psWVhSdmNsUnZiMncrQ2lBZ0lDQWdJRHd2Y21SbU9rUmxjMk55YVhCMGFXOXVQZ29nSUNBOEwzSmtaanBTUkVZK0Nqd3ZlRHA0YlhCdFpYUmhQZ3BxTURCWEFBQUJTVWxFUVZSb0JlM1lNVTdETUJURzhXY25CQ1FHTmk3QndqWFlPUVVERWpNN1YyQm5oUU53RkVZa1JsYUVTaEw3OFJ5a3F2RWJhU0loL2xZajFVMWtWNy8yMDN1SkNBTUJCQkJBQUFFRUVFQUFnVDhwRU9wdmZmVnljU2t4M0VxV1ZyVSt5eHdCQlBZbEVFcjZvb3c2NUx2N3MrZkgzWFhiM1VsNXIxbXZ1K1AyZlB6SzRsSmJYOHdjQVFSK0pkQWVSaG1TM3RnaVQzWnNTNkVQcGdSTlE1WnNCd01CQkpZVlNIRktZMis3YkVOWmRyU1A1OFBLNit5QytWbG1DQ0N3aG9Dcm1LR3hiVXNQU3grN2hqOTcvSGNCeTltVXVjckJCZlBqZFJCSjl1cHBaU3NycGdqc1hhRHByR21ONnNxZ0MrYm5XMjhKamxMdU14a0lJTENzUUhNUUpZOCtheTZZcGJBMkhiM3NzajhIcXlQd0kxQ3lwaW00WnowdW1Pbjk2RUZPTnljcVZsNTVETVQvQjRIbEJLeis2U2JybExubGRtRmxCQkJBQUFFRUVFQUFBUVRXRlBnRzFkZEV2UTRua3ZBQUFBQUFTVVZPUks1Q1lJST0"},{ name : "__ASSET__:file___ASSET__images_fonts_white_stroked_small_kern_txt", data : ""},{ name : "__ASSET__:file___ASSET__images_fonts_black_small_kern_txt", data : ""},{ name : "__ASSET__:file___ASSET__images_atlas_4_json", data : "eyJkYXRhIjpbeyJwYXRoIjoiaW1hZ2VzL3Nlc3Npb24vYWJpbGl0aWVzL2Z4L2JsYXN0X3dhdGVyLnBuZyIsIndpZHRoIjo1ODAsInJvdGF0ZWQiOmZhbHNlLCJ4IjowLCJ5IjowLCJoZWlnaHQiOjQ3MH0seyJwYXRoIjoiaW1hZ2VzL3Nlc3Npb24vYWJpbGl0aWVzL2Z4L3JhaW5ib3cucG5nIiwid2lkdGgiOjU2MCwicm90YXRlZCI6ZmFsc2UsIngiOjAsInkiOjQ3MCwiaGVpZ2h0Ijo0NzV9LHsicGF0aCI6ImltYWdlcy9tYXAvbW9kYWxzL2VuZW15L2JnX2FyZW5hLnBuZyIsIndpZHRoIjoyODUsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo1ODAsInkiOjAsImhlaWdodCI6MzU1fSx7InBhdGgiOiJpbWFnZXMvc2hvcC9iZ19zaG9wLnBuZyIsIndpZHRoIjoyODUsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo1ODAsInkiOjM1NSwiaGVpZ2h0IjozNTV9LHsicGF0aCI6ImltYWdlcy9zZXNzaW9uL2FiaWxpdGllcy9meC93aW50ZXIucG5nIiwid2lkdGgiOjMwMCwicm90YXRlZCI6ZmFsc2UsIngiOjU2MCwieSI6NzEwLCJoZWlnaHQiOjE1MH0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvcGVkZXN0YWwucG5nIiwid2lkdGgiOjIzMiwicm90YXRlZCI6ZmFsc2UsIngiOjU2MCwieSI6ODYwLCJoZWlnaHQiOjE0MX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvbW9ucy9rb2JhbHQvYmFjay5wbmciLCJ3aWR0aCI6MTIwLCJyb3RhdGVkIjpmYWxzZSwieCI6ODY1LCJ5IjowLCJoZWlnaHQiOjE0NX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvbW9ucy9rb2JhbHQvZnJvbnQucG5nIiwid2lkdGgiOjEyMCwicm90YXRlZCI6ZmFsc2UsIngiOjg2NSwieSI6MTQ1LCJoZWlnaHQiOjE0NX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvbW9ucy9rcmltc29uL2JhY2sucG5nIiwid2lkdGgiOjEyMCwicm90YXRlZCI6ZmFsc2UsIngiOjg2NSwieSI6MjkwLCJoZWlnaHQiOjE0NX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvbW9ucy9rcmltc29uL2Zyb250LnBuZyIsIndpZHRoIjoxMjAsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo4NjUsInkiOjQzNSwiaGVpZ2h0IjoxNDV9LHsicGF0aCI6ImltYWdlcy9nZW5lcmFsL21vbnMvbWFsYWtpdGUvYmFjay5wbmciLCJ3aWR0aCI6MTIwLCJyb3RhdGVkIjpmYWxzZSwieCI6ODY1LCJ5Ijo1ODAsImhlaWdodCI6MTQ1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9tb25zL21hbGFraXRlL2Zyb250LnBuZyIsIndpZHRoIjoxMjAsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo4NjAsInkiOjcyNSwiaGVpZ2h0IjoxNDV9LHsicGF0aCI6ImltYWdlcy9nZW5lcmFsL21vbnMvZmFsY2Fuby9iYWNrLnBuZyIsIndpZHRoIjoxMTUsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo3OTIsInkiOjg3MCwiaGVpZ2h0IjoxNDV9LHsicGF0aCI6ImltYWdlcy9nZW5lcmFsL21vbnMvZmFsY2Fuby9mcm9udC5wbmciLCJ3aWR0aCI6MTE1LCJyb3RhdGVkIjpmYWxzZSwieCI6OTA3LCJ5Ijo4NzAsImhlaWdodCI6MTQ1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9odWRzL3BhbmVfdGh1bWJfd2F0ZXIucG5nIiwid2lkdGgiOjEyMCwicm90YXRlZCI6ZmFsc2UsIngiOjAsInkiOjk0NSwiaGVpZ2h0Ijo2NX0seyJwYXRoIjoiaW1hZ2VzL3RlYW0vdGVhbV9zbG90LnBuZyIsIndpZHRoIjoxMjAsInJvdGF0ZWQiOmZhbHNlLCJ4IjoxMjAsInkiOjk0NSwiaGVpZ2h0Ijo2NX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvYnRuX2xldmVsdXAucG5nIiwid2lkdGgiOjEyMCwicm90YXRlZCI6ZmFsc2UsIngiOjI0MCwieSI6OTQ1LCJoZWlnaHQiOjQ1fSx7InBhdGgiOiJpbWFnZXMvc2hvcC9idG5fYnV5LnBuZyIsIndpZHRoIjoxMTUsInJvdGF0ZWQiOmZhbHNlLCJ4IjozNjAsInkiOjk0NSwiaGVpZ2h0Ijo1MH0seyJwYXRoIjoiaW1hZ2VzL3RlYW0vYnRuX2hlYWxfc21hbGxfbm9raXQucG5nIiwid2lkdGgiOjgwLCJyb3RhdGVkIjpmYWxzZSwieCI6NDc1LCJ5Ijo5NDUsImhlaWdodCI6NDB9LHsicGF0aCI6ImltYWdlcy90ZWFtL2J0bl9iYWNrX21hcC5wbmciLCJ3aWR0aCI6ODAsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo0NzUsInkiOjk4NSwiaGVpZ2h0IjozNX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvaWNvbl9hdGsucG5nIiwid2lkdGgiOjc1LCJyb3RhdGVkIjpmYWxzZSwieCI6MjQwLCJ5Ijo5OTAsImhlaWdodCI6MzB9LHsicGF0aCI6ImltYWdlcy9zZXNzaW9uL3VpL3JlcG9ydF9zdHJvbmcucG5nIiwid2lkdGgiOjc1LCJyb3RhdGVkIjpmYWxzZSwieCI6MzE1LCJ5Ijo5OTUsImhlaWdodCI6MjV9LHsicGF0aCI6ImltYWdlcy9zZXNzaW9uL3VpL3JlcG9ydF93ZWFrLnBuZyIsIndpZHRoIjo1NSwicm90YXRlZCI6ZmFsc2UsIngiOjM5MCwieSI6OTk1LCJoZWlnaHQiOjI1fV19"},{ name : "__ASSET__:file___ASSET__images_atlas_3_json", data : "eyJkYXRhIjpbeyJwYXRoIjoiaW1hZ2VzL3Nlc3Npb24vYWJpbGl0aWVzL2Z4L3JhZ2VfZnhfZnJvbnQucG5nIiwid2lkdGgiOjYwNCwicm90YXRlZCI6ZmFsc2UsIngiOjAsInkiOjAsImhlaWdodCI6NDU4fSx7InBhdGgiOiJpbWFnZXMvc2Vzc2lvbi9hYmlsaXRpZXMvZngvYmxhc3QucG5nIiwid2lkdGgiOjU4MCwicm90YXRlZCI6ZmFsc2UsIngiOjAsInkiOjQ1OCwiaGVpZ2h0Ijo0NzB9LHsicGF0aCI6ImltYWdlcy9zaG9wL2xvb3RfbGlnaHRzLnBuZyIsIndpZHRoIjozMjAsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo2MDQsInkiOjAsImhlaWdodCI6NTY4fSx7InBhdGgiOiJpbWFnZXMvbWFwL21vZGFscy9yZXNlYXJjaC9iZ19yZXNlYXJjaC5wbmciLCJ3aWR0aCI6Mjg1LCJyb3RhdGVkIjpmYWxzZSwieCI6NTgwLCJ5Ijo1NjgsImhlaWdodCI6MzYwfSx7InBhdGgiOiJpbWFnZXMvbWFwL21vZGFscy9yZXNlYXJjaC9yZXNlYXJjaF9jb21wbGV0ZS5wbmciLCJ3aWR0aCI6MjI1LCJyb3RhdGVkIjpmYWxzZSwieCI6MCwieSI6OTI4LCJoZWlnaHQiOjg1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9tb25zL2ZsYXJpb24vZnJvbnQucG5nIiwid2lkdGgiOjEyMCwicm90YXRlZCI6ZmFsc2UsIngiOjg2NSwieSI6NTY4LCJoZWlnaHQiOjE0NX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvbW9ucy9raXRuZXgvYmFjay5wbmciLCJ3aWR0aCI6MTIwLCJyb3RhdGVkIjpmYWxzZSwieCI6ODY1LCJ5Ijo3MTMsImhlaWdodCI6MTQ1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9tb25zL2tpdG5leC9mcm9udC5wbmciLCJ3aWR0aCI6MTIwLCJyb3RhdGVkIjpmYWxzZSwieCI6ODY1LCJ5Ijo4NTgsImhlaWdodCI6MTQ1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9tb25zL2xhbXBpb24vYmFjay5wbmciLCJ3aWR0aCI6OTUsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo5MjQsInkiOjAsImhlaWdodCI6MTQ1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9tb25zL2xhbXBpb24vZnJvbnQucG5nIiwid2lkdGgiOjk1LCJyb3RhdGVkIjpmYWxzZSwieCI6OTI0LCJ5IjoxNDUsImhlaWdodCI6MTQ1fSx7InBhdGgiOiJpbWFnZXMvbWFwL21vZGFscy9yZXNlYXJjaC9yZXNlYXJjaF9jb21wdXRlci5wbmciLCJ3aWR0aCI6OTUsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo5MjQsInkiOjI5MCwiaGVpZ2h0IjoxNDR9LHsicGF0aCI6ImltYWdlcy9nZW5lcmFsL21vbnMvaG9wY2hvcC9mcm9udC5wbmciLCJ3aWR0aCI6OTUsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo5MjQsInkiOjQzNCwiaGVpZ2h0IjoxMzB9LHsicGF0aCI6ImltYWdlcy9nZW5lcmFsL21vbnMvZ3J1YmJsZS9iYWNrLnBuZyIsIndpZHRoIjoxMjUsInJvdGF0ZWQiOmZhbHNlLCJ4IjoyMjUsInkiOjkyOCwiaGVpZ2h0Ijo5NX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvbW9ucy9ncnViYmxlL2Zyb250LnBuZyIsIndpZHRoIjoxMjAsInJvdGF0ZWQiOmZhbHNlLCJ4IjozNTAsInkiOjkyOCwiaGVpZ2h0Ijo5NX0seyJwYXRoIjoiaW1hZ2VzL21hcC9ub2RlX2FyZW5hLnBuZyIsIndpZHRoIjoxMjAsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo0NzAsInkiOjkyOCwiaGVpZ2h0Ijo4MH0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvaHVkcy9wYW5lX3RodW1iX2VhcnRoLnBuZyIsIndpZHRoIjoxMjAsInJvdGF0ZWQiOmZhbHNlLCJ4Ijo1OTAsInkiOjkyOCwiaGVpZ2h0Ijo2NX0seyJwYXRoIjoiaW1hZ2VzL2dlbmVyYWwvaHVkcy9wYW5lX3RodW1iX2ZpcmUucG5nIiwid2lkdGgiOjEyMCwicm90YXRlZCI6ZmFsc2UsIngiOjcxMCwieSI6OTI4LCJoZWlnaHQiOjY1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9odWRzL3RpcF93ZWFrLnBuZyIsIndpZHRoIjo4MCwicm90YXRlZCI6ZmFsc2UsIngiOjU5MCwieSI6OTkzLCJoZWlnaHQiOjI1fSx7InBhdGgiOiJpbWFnZXMvZ2VuZXJhbC9idG5fbGV2ZWx1cF90ZXh0LnBuZyIsIndpZHRoIjo4MCwicm90YXRlZCI6ZmFsc2UsIngiOjY3MCwieSI6OTkzLCJoZWlnaHQiOjIwfSx7InBhdGgiOiJpbWFnZXMvc2Vzc2lvbi91aS9yZXBvcnRfY3JpdGljYWwucG5nIiwid2lkdGgiOjgwLCJyb3RhdGVkIjpmYWxzZSwieCI6NzUwLCJ5Ijo5OTMsImhlaWdodCI6MjB9XX0"},{ name : "__ASSET__:file___ASSET__images_atlas_1_json", data : ""},{ name : "__ASSET__:file___ASSET__images_atlas_5_json", data : ""},{ name : "__ASSET__:file___ASSET__images_atlas_2_json", data : ""},{ name : "__ASSET__:file___ASSET__images_atlas_6_json", data : ""},{ name : "__ASSET__:file___ASSET__images_fonts_white_shadow_small_kern_txt", data : "eyIwIjp7IjAiOjAsIjEiOjAsIjIiOjAuNSwiMyI6MC41LCI0IjowLCI1IjowLCI2IjowLjUsIjciOjAsIjgiOjAsIjkiOjAuNSwiaCI6MCwibSI6MCwicyI6MCwiYW55IjoxLjV9LCIxIjp7IjAiOjAsIjEiOjAsIjIiOjAuNSwiMyI6MC41LCI0IjowLCI1IjowLCI2IjowLjUsIjciOjAuNSwiOCI6MCwiOSI6MC41LCJoIjowLCJtIjowLCJzIjowLCJhbnkiOjEuNX0sIjIiOnsiMCI6MCwiMSI6MCwiMiI6MC41LCIzIjowLjUsIjQiOjAsIjUiOjAsIjYiOjAuNSwiNyI6MCwiOCI6MCwiOSI6MC41LCJoIjowLCJtIjowLCJzIjowLCJhbnkiOjEuNX0sIjMiOnsiMCI6MCwiMSI6MCwiMiI6MC41LCIzIjowLjUsIjQiOjAsIjUiOjAsIjYiOjAuNSwiNyI6MC41LCI4IjowLCI5IjowLjUsImgiOjAsIm0iOjAsInMiOjAsImFueSI6MS41fSwiNCI6eyIwIjowLjUsIjEiOjAsIjIiOjAuNSwiMyI6MSwiNCI6MC41LCI1IjowLjUsIjYiOjEsIjciOjAuNSwiOCI6MC41LCI5IjowLjUsImgiOjAuNSwibSI6MC41LCJzIjowLjUsImFueSI6MS41fSwiNSI6eyIwIjowLjUsIjEiOjAsIjIiOjAuNSwiMyI6MSwiNCI6MC41LCI1IjowLjUsIjYiOjEsIjciOjAuNSwiOCI6MC41LCI5IjowLjUsImgiOjAuNSwibSI6MC41LCJzIjowLjUsImFueSI6MS41fSwiNiI6eyIwIjowLCIxIjowLCIyIjowLjUsIjMiOjAuNSwiNCI6MCwiNSI6MCwiNiI6MC41LCI3IjowLjUsIjgiOjAsIjkiOjAuNSwiaCI6MCwibSI6MCwicyI6MCwiYW55IjoxLjV9LCI3Ijp7IjAiOjAuNSwiMSI6MC41LCIyIjoxLCIzIjowLjUsIjQiOjAsIjUiOjAuNSwiNiI6MC41LCI3IjoxLCI4IjowLjUsIjkiOjEsImgiOjAuNSwibSI6MC41LCJzIjowLjUsImFueSI6MS41fSwiOCI6eyIwIjowLCIxIjowLCIyIjowLjUsIjMiOjAuNSwiNCI6MCwiNSI6MCwiNiI6MC41LCI3IjowLCI4IjowLCI5IjowLjUsImgiOjAsIm0iOjAsInMiOjAsImFueSI6MS41fSwiOSI6eyIwIjowLCIxIjowLCIyIjowLjUsIjMiOjAuNSwiNCI6MCwiNSI6MCwiNiI6MC41LCI3IjowLjUsIjgiOjAsIjkiOjAuNSwiaCI6MCwibSI6MCwicyI6MCwiYW55IjoxLjV9LCJoIjp7IjAiOjAsIjEiOjAsIjIiOjAuNSwiMyI6MC41LCI0IjowLCI1IjowLCI2IjowLjUsIjciOjAsIjgiOjAsIjkiOjAuNSwiaCI6MCwibSI6MCwicyI6MCwiYW55IjoxLjV9LCJtIjp7IjAiOjAsIjEiOjAsIjIiOjAuNSwiMyI6MC41LCI0IjowLCI1IjowLCI2IjowLjUsIjciOjAsIjgiOjAsIjkiOjAuNSwiaCI6MCwibSI6MCwicyI6MCwiYW55IjoxLjV9LCJzIjp7IjAiOjAsIjEiOjAsIjIiOjAuNSwiMyI6MC41LCI0IjowLCI1IjowLCI2IjowLjUsIjciOjAsIjgiOjAsIjkiOjAuNSwiaCI6MCwibSI6MCwicyI6MCwiYW55IjoxLjV9LCJhbnkiOnsiYW55IjoxLjV9fQ"},{ name : "__ASSET__:file___ASSET__images_atlas_0_json", data : ""},{ name : "__ASSET__:file___ASSET__images_fonts_white_small_kern_txt", data : ""},{ name : "__ASSET__:bitmap_co_doubleduck_utils_ProgBG", data : "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQU9ZQUFBQVBDQVlBQUFEd0liUHhBQUFBQVhOU1IwSUFyczRjNlFBQUFBbHdTRmx6QUFBTEV3QUFDeE1CQUpxY0dBQUFBV1JwVkZoMFdFMU1PbU52YlM1aFpHOWlaUzU0YlhBQUFBQUFBRHg0T25odGNHMWxkR0VnZUcxc2JuTTZlRDBpWVdSdlltVTZibk02YldWMFlTOGlJSGc2ZUcxd2RHczlJbGhOVUNCRGIzSmxJRFV1TkM0d0lqNEtJQ0FnUEhKa1pqcFNSRVlnZUcxc2JuTTZjbVJtUFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMekF5THpJeUxYSmtaaTF6ZVc1MFlYZ3Ribk1qSWo0S0lDQWdJQ0FnUEhKa1pqcEVaWE5qY21sd2RHbHZiaUJ5WkdZNllXSnZkWFE5SWlJS0lDQWdJQ0FnSUNBZ0lDQWdlRzFzYm5NNmVHMXdQU0pvZEhSd09pOHZibk11WVdSdlltVXVZMjl0TDNoaGNDOHhMakF2SWo0S0lDQWdJQ0FnSUNBZ1BIaHRjRHBEY21WaGRHOXlWRzl2YkQ1QlpHOWlaU0JKYldGblpWSmxZV1I1UEM5NGJYQTZRM0psWVhSdmNsUnZiMncrQ2lBZ0lDQWdJRHd2Y21SbU9rUmxjMk55YVhCMGFXOXVQZ29nSUNBOEwzSmtaanBTUkVZK0Nqd3ZlRHA0YlhCdFpYUmhQZ3BxTURCWEFBQUJ3a2xFUVZSb0JlMmFUVW9ETVJpR3Y4eVAwNllVWExRTGV3aWhJSW9IRVZ6MUNoN0FkUS9nRmJvcWVCQlJoSUkzY0ZNWHVoQ2g2ZDgwTVpsT011TllYSWhwaGI3WlpESUorVExQOFBCbGhoQ2hnQUFJL0RzQ3JMb2lmdDdyaXNXMFE2dFZ0UXR0RUFDQnZ5WVFoc1FQNm1OeE54aVZweTdFVklvbDNZdXI1V3phbDJuS3k0TndEUUlnNEk5QUVFVWlydFd2NTZQYkcySk1tVWhPek1aWjczajYvdllnWDhaSmxpMlo2L0szSXN3TUF2dE9RR2tQZGRZTWpqcnorbUhyZEhJL2VESklJc3Rsc3Zob2s1SUpTVWtVQlBZMmFoQUFBWjhFVEFMVXprbnRYdVpnSHFzd01FK2hQdGVBdVVFQUJINGdVSExRWmN4c3VOMittcXlKQWdJZ3NCMEN4anZyWGg2eEVETk5pWktFcU4waVdpNTFONzR4dC9OV0VHVy9DZWh2ekRoZXUyY2N6RXNoWm5aRHk5aHNmclBYRGtZTkFpRGdnWUQ1QVZSSmhJV1labjlyK3MyZ2JLQ0hCV0JLRUFDQnpRUXFHMVQzOHlkVWtVNlZLQ0FBQXJzam9KeWVUc3hheUo5MVkxNU5xYnRiSkNLRHdMNFFZR1RjYTBUTlYvdkV6bEM5ZlYyZi9GR3lMMG5oNUk4bGhCb0VQQk1JaUltWUJadFAvdGpZL09TeUsyYWlZOXVvUVFBRS9CTGdOVDRXajhNdloyWDlSc1RzSUFBQ3Z5THdDYW9qWjJyNVBwKytBQUFBQUVsRlRrU3VRbUND"}];
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
var DataView = $global.DataView || js_html_compat_DataView;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
var this1;
this1 = new Uint32Array(256);
lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16 = this1;
var _g = 0;
while(_g < 256) {
	var i = _g++;
	var val = Math.ceil(i * 257.003921568627447);
	lime_math_color__$RGBA_RGBA_$Impl_$.__alpha16[i] = val;
}
var this2;
this2 = new Uint8Array(510);
lime_math_color__$RGBA_RGBA_$Impl_$.__clamp = this2;
var _g1 = 0;
while(_g1 < 255) {
	var i1 = _g1++;
	lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[i1] = i1;
}
var _g11 = 255;
var _g2 = 511;
while(_g11 < _g2) {
	var i2 = _g11++;
	lime_math_color__$RGBA_RGBA_$Impl_$.__clamp[i2] = 255;
}
lime_system_CFFI.available = false;
lime_system_CFFI.enabled = false;
if(window.createjs != null) createjs.Sound.alternateExtensions = ["ogg","mp3","wav"];
_$_$ASSET_$_$data_$gameplay_$js.resourceName = "__ASSET__:file___ASSET__data_gameplay_js";
_$_$ASSET_$_$images_$atlas_$0_$json.resourceName = "__ASSET__:file___ASSET__images_atlas_0_json";
_$_$ASSET_$_$images_$atlas_$1_$json.resourceName = "__ASSET__:file___ASSET__images_atlas_1_json";
_$_$ASSET_$_$images_$atlas_$2_$json.resourceName = "__ASSET__:file___ASSET__images_atlas_2_json";
_$_$ASSET_$_$images_$atlas_$3_$json.resourceName = "__ASSET__:file___ASSET__images_atlas_3_json";
_$_$ASSET_$_$images_$atlas_$4_$json.resourceName = "__ASSET__:file___ASSET__images_atlas_4_json";
_$_$ASSET_$_$images_$atlas_$5_$json.resourceName = "__ASSET__:file___ASSET__images_atlas_5_json";
_$_$ASSET_$_$images_$atlas_$6_$json.resourceName = "__ASSET__:file___ASSET__images_atlas_6_json";
_$_$ASSET_$_$images_$fonts_$black_$medium_$kern_$txt.resourceName = "__ASSET__:file___ASSET__images_fonts_black_medium_kern_txt";
_$_$ASSET_$_$images_$fonts_$black_$small_$kern_$txt.resourceName = "__ASSET__:file___ASSET__images_fonts_black_small_kern_txt";
_$_$ASSET_$_$images_$fonts_$white_$shadow_$small_$kern_$txt.resourceName = "__ASSET__:file___ASSET__images_fonts_white_shadow_small_kern_txt";
_$_$ASSET_$_$images_$fonts_$white_$small_$kern_$txt.resourceName = "__ASSET__:file___ASSET__images_fonts_white_small_kern_txt";
_$_$ASSET_$_$images_$fonts_$white_$stroked_$big_$kern_$txt.resourceName = "__ASSET__:file___ASSET__images_fonts_white_stroked_big_kern_txt";
_$_$ASSET_$_$images_$fonts_$white_$stroked_$small_$kern_$txt.resourceName = "__ASSET__:file___ASSET__images_fonts_white_stroked_small_kern_txt";
ApplicationMain.embeddedFiles = [];
openfl_display_DisplayObject.__instanceCount = 0;
openfl_display_DisplayObject.__worldRenderDirty = 0;
openfl_display_DisplayObject.__worldTransformDirty = 0;
openfl_display_DisplayObject.__cacheAsBitmapMode = false;
GlobalVars.gameVersion = "1.0.0";
GlobalVars.heyzapId = "26bee5d4ae4c9f3f926d55e532aa0d17";
co_doubleduck_d2p2_P2Log.DATA_VER = "1.0.0";
co_doubleduck_d2p2_P2Log.DATA_KEY = "Data";
co_doubleduck_dynamons2_Game.PLAYTIME_EVENT = "playtime_event";
co_doubleduck_dynamons2_Game.GAME_DOMAIN = "dynamons2";
co_doubleduck_dynamons2_Game.KIZI = true;
co_doubleduck_utils_KiziPreloader.KIZI = false;
co_doubleduck_dynamons2_core_Ability.TITLE_FONT = "images/fonts/white_stroked_big/";
co_doubleduck_dynamons2_core_Ability.ACTED_EVENT = "ActedEvent";
co_doubleduck_dynamons2_core_BlastAnim.SHEET_ROWS = 1;
co_doubleduck_dynamons2_core_BlastAnim.SHEET_COLS = 4;
co_doubleduck_dynamons2_core_SplashAnim.SHEET_ROWS = 1;
co_doubleduck_dynamons2_core_SplashAnim.SHEET_COLS = 4;
co_doubleduck_dynamons2_core_ShieldAnim.SHEET_ROWS = 2;
co_doubleduck_dynamons2_core_ShieldAnim.SHEET_COLS = 5;
co_doubleduck_dynamons2_core_Battle.lastNodeId = -1;
co_doubleduck_dynamons2_core_Battle._inBattleNow = false;
co_doubleduck_dynamons2_core_CatchDiskAnim.SHEET_ROWS = 1;
co_doubleduck_dynamons2_core_CatchDiskAnim.SHEET_COLS = 8;
co_doubleduck_dynamons2_core_LevelUpScr.DONE_SCREEN_EVENT = "DoneScreenEvent";
co_doubleduck_dynamons2_core_Mon.AUTO_HEAL_DELAY = 1000;
co_doubleduck_dynamons2_core_Mon.STAT_NAMES = ["atk","def","aim"];
co_doubleduck_dynamons2_core_Mon.SKILL_FONT = "images/fonts/white_stroked_big/";
co_doubleduck_dynamons2_core_Mon.LEVEL_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_core_Mon.SWAP_EVENT = "SwapEvent";
co_doubleduck_dynamons2_core_Mon.GAIN_XP_EVENT = "GainXPEvent";
co_doubleduck_dynamons2_core_Mon.CHANGE_STATE_EVENT = "ChangeStateEvent";
co_doubleduck_dynamons2_core_Mon.HP_CHANGE_EVENT = "HPChangeEvent";
co_doubleduck_dynamons2_core_Mon.LEVELUP_EVENT = "ShowLevelupEvent";
co_doubleduck_dynamons2_core_Mon.DIED_EVENT = "DiedEvent";
co_doubleduck_dynamons2_core_MonPane.PANE_TYPES = ["big","mini","thumb","tooltip"];
co_doubleduck_dynamons2_core_MonPane.BIG_FONT = "images/fonts/white_stroked_big/";
co_doubleduck_dynamons2_core_MonPane.SMALL_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_core_MonPane.LEVEL_FONT = "images/fonts/black_medium/";
co_doubleduck_dynamons2_core_MonPane.HEAL_LABEL_FONT = "images/fonts/white_shadow_small/";
co_doubleduck_dynamons2_core_MonPane.HEAL_TIME_LABEL_THRESHOLD = -1;
co_doubleduck_dynamons2_core_MonPane._typeCounts = [0,0,0,0];
co_doubleduck_dynamons2_core_UiHud.AMOUNT_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_core_UiHud.ESCAPE_EVENT = "EscapeEvent";
co_doubleduck_dynamons2_core_UiHud.CATCH_EVENT = "CatchEvent";
co_doubleduck_dynamons2_core_UiHud.BTN_SIZE = -1;
co_doubleduck_dynamons2_meta_CaptainHud.TITLE_FONT = "images/fonts/white_stroked_big/";
co_doubleduck_dynamons2_meta_DialogBox.HEIGHT = 200;
co_doubleduck_dynamons2_meta_DialogBox._createDialog = false;
co_doubleduck_dynamons2_meta_DialogBox._dialogsSeen = null;
co_doubleduck_utils_DrawBuffer.disableAllBuffers = false;
co_doubleduck_dynamons2_meta_DialogMsg.MSG_FONT = "images/fonts/black_small/";
co_doubleduck_dynamons2_meta_EnemyModal.FIGHT_EVENT = "FightEvent";
co_doubleduck_dynamons2_meta_FlowEvents.BACK_TO_MAP = "FlowBackToMenu";
co_doubleduck_dynamons2_meta_FlowEvents.START_BATTLE = "FlowStartSession";
co_doubleduck_dynamons2_meta_GameState.PLAYER_COINS_CHANGE = "PlayerCoinsChangeEvent";
co_doubleduck_dynamons2_meta_InventoryScr.TITLE_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_meta_InventoryScr.DESC_FONT = "images/fonts/white_small/";
co_doubleduck_dynamons2_meta_InventoryScr.CLOSED_SCREEN = "ClosedScreenEvent";
co_doubleduck_utils_Button.BUTTON_ACT_EVENT = "BUTTON_ACT_EVENT";
co_doubleduck_utils_Button.DOWN_EVENT = null;
co_doubleduck_utils_Button.OUT_EVENT = null;
co_doubleduck_utils_Button.UP_EVENT = null;
co_doubleduck_utils_Button.SCALE_FACTOR = 0.93;
co_doubleduck_utils_Button.JIGGLE_FACTOR = 0.3;
co_doubleduck_utils_Button.defaultClickSound = null;
co_doubleduck_dynamons2_meta_ItemBtn.AMOUNT_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_meta_LootShop.MESSAGE_FONT = "images/fonts/black_small/";
co_doubleduck_dynamons2_meta_LootShop.ITEM_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_meta_ShopProduct.ITEM_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_meta_MapNode.GOTO_NODE_EVENT = "GotoNodeEvent";
co_doubleduck_dynamons2_meta_NodesMap._isFirstRun = true;
co_doubleduck_dynamons2_meta_RewardsScr.DONE_SCREEN_EVENT = "DoneScreenEvent";
co_doubleduck_dynamons2_meta_RewardsScr.AMOUNT_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_meta_ScrolledContainer.BAND_FACTOR = 0.07;
co_doubleduck_dynamons2_meta_ScrolledContainer.BAND_RETURN = 190;
co_doubleduck_dynamons2_meta_ScrolledContainer.DRAG_THRESHOLD = 8;
co_doubleduck_dynamons2_meta_ScrolledContainer.SNAP_LIMIT = 4;
co_doubleduck_dynamons2_meta_TeamScreen.DRAG_IS_TAP_THRESH = 5;
co_doubleduck_dynamons2_meta_MonInfoPane.MON_RELEASE_EVENT = "monReleaseEvent";
co_doubleduck_dynamons2_meta_MonInfoPane.MON_DESC_FONT = "images/fonts/black_small/";
co_doubleduck_dynamons2_meta_MonInfoPane.LEVEL_FONT = "images/fonts/black_medium/";
co_doubleduck_dynamons2_meta_MonInfoPane.ABIL_TITLE_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_dynamons2_meta_MonInfoPane.ABIL_DESC_FONT = "images/fonts/white_small/";
co_doubleduck_dynamons2_meta_TopHud.NUMS_FONT = "images/fonts/white_stroked_small/";
co_doubleduck_utils_TutorMgr.TUTOR_STEP = "TUTOR_STEP";
co_doubleduck_gameops_GOPFuntomicAds.AD_READY_EVENT = "ad_ready";
co_doubleduck_gameops_GOPFuntomicAds.AD_STARTED_EVENT = "ad_started";
co_doubleduck_gameops_GOPFuntomicAds.AD_CLICKED_EVENT = "ad_clicked";
co_doubleduck_gameops_GOPFuntomicAds.AD_CLOSED_EVENT = "ad_closed";
co_doubleduck_gameops_GOPFuntomicAds.AD_ERROR_EVENT = "ad_error";
co_doubleduck_utils_AdManager.INCENTIVIZED_STORAGE_KEY = "incentivizedUsageHistory";
co_doubleduck_utils_AdManager.defaultAdData = { 'showCrossPromoOnStart' : true, 'nativeAdDelaySecs' : 0, 'maxDailyIncentivized' : 999};
co_doubleduck_utils_AdManager.adCloseEvents = [];
co_doubleduck_utils_AdManager.lastAdShowTime = 0;
co_doubleduck_utils_AdManager.disableAds = false;
co_doubleduck_utils_BmpMagic.alphasDisabled = "";
co_doubleduck_utils_DDAssets.scale = 1.0;
co_doubleduck_utils_DDAssets.globalSmoothing = false;
co_doubleduck_utils_DDAssets.prefix = "";
co_doubleduck_utils_DDAssets._cache = new haxe_ds_StringMap();
co_doubleduck_utils_DDAssets._spritesheetCache = new haxe_ds_StringMap();
co_doubleduck_utils_DDAssets.localisedPaths = new haxe_ds_StringMap();
openfl_events_Event.ACTIVATE = "activate";
openfl_events_Event.ADDED = "added";
openfl_events_Event.ADDED_TO_STAGE = "addedToStage";
openfl_events_Event.CANCEL = "cancel";
openfl_events_Event.CHANGE = "change";
openfl_events_Event.CLOSE = "close";
openfl_events_Event.COMPLETE = "complete";
openfl_events_Event.CONNECT = "connect";
openfl_events_Event.CONTEXT3D_CREATE = "context3DCreate";
openfl_events_Event.DEACTIVATE = "deactivate";
openfl_events_Event.ENTER_FRAME = "enterFrame";
openfl_events_Event.ID3 = "id3";
openfl_events_Event.INIT = "init";
openfl_events_Event.MOUSE_LEAVE = "mouseLeave";
openfl_events_Event.OPEN = "open";
openfl_events_Event.REMOVED = "removed";
openfl_events_Event.REMOVED_FROM_STAGE = "removedFromStage";
openfl_events_Event.RENDER = "render";
openfl_events_Event.RESIZE = "resize";
openfl_events_Event.SCROLL = "scroll";
openfl_events_Event.SELECT = "select";
openfl_events_Event.SOUND_COMPLETE = "soundComplete";
openfl_events_Event.TAB_CHILDREN_CHANGE = "tabChildrenChange";
openfl_events_Event.TAB_ENABLED_CHANGE = "tabEnabledChange";
openfl_events_Event.TAB_INDEX_CHANGE = "tabIndexChange";
openfl_events_Event.UNLOAD = "unload";
co_doubleduck_utils_Fonter.CHARSET_OFFSET = 32;
co_doubleduck_utils_Fonter.CHARSET_VALUES = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
co_doubleduck_utils_Fonter._defaultFont = null;
co_doubleduck_utils_Fonter._fontCache = null;
co_doubleduck_utils_Fonter._noCharBmp = null;
co_doubleduck_utils_KiziExtension.RATE_EVENT = "rate";
co_doubleduck_utils_KiziExtension.MIN_SPLASH_DISPLAY_TIME = 3;
co_doubleduck_utils_KiziExtension.splashShowTime = 0;
co_doubleduck_utils_KiziExtension.backEnabled = true;
openfl_display_BitmapData.__isGLES = null;
co_doubleduck_utils_SplashBG.resourceType = "image/jpg";
co_doubleduck_utils_SplashBG.resourceName = "__ASSET__:bitmap_co_doubleduck_utils_SplashBG";
co_doubleduck_utils_ProgBG.resourceType = "image/png";
co_doubleduck_utils_ProgBG.resourceName = "__ASSET__:bitmap_co_doubleduck_utils_ProgBG";
co_doubleduck_utils_ProgFill.resourceType = "image/png";
co_doubleduck_utils_ProgFill.resourceName = "__ASSET__:bitmap_co_doubleduck_utils_ProgFill";
co_doubleduck_utils_NotifManager.inited = false;
co_doubleduck_utils_PlayTimer.IAA_DELAY = 5;
co_doubleduck_utils_SoundMgr.audios = new haxe_ds_StringMap();
co_doubleduck_utils_SoundMgr.isChrome = /Chrome/.test(navigator.userAgent);
co_doubleduck_utils_SoundMgr.isAndroidBrowser = /Android/.test(navigator.userAgent);
co_doubleduck_utils_SoundMgr.available = true;
co_doubleduck_utils_SoundMgr._idCounter = 0;
co_doubleduck_utils_SoundMgr._fileType = null;
co_doubleduck_utils_SoundMgr._forceHandle = "";
co_doubleduck_utils_TweenChain.allowNew = false;
co_doubleduck_utils_TweenChain.activeChains = [];
co_doubleduck_utils_TweenChain.count = 0;
co_doubleduck_utils_TweenChain.autoVisible = true;
com_funtomic_GameOps.isEventsTraceOnly = false;
com_funtomic_GameOps.apiURLPrefix = "http://tools.funtomic.com/";
com_funtomic_GameOps.gameOpsVersion = "0.7.8";
com_funtomic_GameOps.apiEventsLocation = "v2/events/";
com_funtomic_GameOps.apiTokensLocation = "v1/game_data/";
com_funtomic_GameOps.apiConfigLocation = "v1/config/";
com_funtomic_GameOps.apiSetUserEmailLocation = "v1/user_email_set/";
com_funtomic_GameOps.status = com_funtomic_GameOpsStatus.UNINITIALIZED;
com_funtomic_GameOps.onInitDoneFunctions = [];
com_funtomic_GameOps.MAX_SAVED_UNSENT_EVENTS = 1000;
com_funtomic_GameOps.localStorage = { };
com_funtomic_GameOps.gameStateGameOpsData = { };
com_funtomic_GameOps.gameOpsNEListeners = { };
com_funtomic_GameOps.flags = { };
com_funtomic_GameOps.productsInfoCache = { };
com_funtomic_GameOps.appsflyerConversionData = null;
com_funtomic_GameOps.additionalEventsParams = null;
com_funtomic_GameOps.firstSession = false;
com_funtomic_GameOps.isDebugMode = false;
com_funtomic_GameOps.levelsNumbers = [];
com_funtomic_GameOps.deferredReportEvents = [];
com_funtomic_GameOps.movesDuration = [];
com_funtomic_GameOps.timers = { };
com_funtomic_GameOpsLogger.logLevel = 0;
flambe_System.storage = new flambe_Storage();
flambe_System.external = new flambe_External();
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = Type;
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.CODES = null;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var x = new haxe__$Int64__$_$_$Int64(0,0);
	$r = x;
	return $r;
}(this));
js_Boot.__toStr = {}.toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
lime_Assets.cache = new lime_AssetCache();
lime_Assets.libraries = new haxe_ds_StringMap();
lime_Assets.onChange = new lime_app_Event_$Void_$Void();
lime_Assets.initialized = false;
lime__$backend_html5_HTML5Window.windowID = 0;
lime_app_Preloader.images = new haxe_ds_StringMap();
lime_app_Preloader.loaders = new haxe_ds_StringMap();
lime_audio_openal_AL.NONE = 0;
lime_audio_openal_AL.FALSE = 0;
lime_audio_openal_AL.TRUE = 1;
lime_audio_openal_AL.SOURCE_RELATIVE = 514;
lime_audio_openal_AL.CONE_INNER_ANGLE = 4097;
lime_audio_openal_AL.CONE_OUTER_ANGLE = 4098;
lime_audio_openal_AL.PITCH = 4099;
lime_audio_openal_AL.POSITION = 4100;
lime_audio_openal_AL.DIRECTION = 4101;
lime_audio_openal_AL.VELOCITY = 4102;
lime_audio_openal_AL.LOOPING = 4103;
lime_audio_openal_AL.BUFFER = 4105;
lime_audio_openal_AL.GAIN = 4106;
lime_audio_openal_AL.MIN_GAIN = 4109;
lime_audio_openal_AL.MAX_GAIN = 4110;
lime_audio_openal_AL.ORIENTATION = 4111;
lime_audio_openal_AL.SOURCE_STATE = 4112;
lime_audio_openal_AL.INITIAL = 4113;
lime_audio_openal_AL.PLAYING = 4114;
lime_audio_openal_AL.PAUSED = 4115;
lime_audio_openal_AL.STOPPED = 4116;
lime_audio_openal_AL.BUFFERS_QUEUED = 4117;
lime_audio_openal_AL.BUFFERS_PROCESSED = 4118;
lime_audio_openal_AL.REFERENCE_DISTANCE = 4128;
lime_audio_openal_AL.ROLLOFF_FACTOR = 4129;
lime_audio_openal_AL.CONE_OUTER_GAIN = 4130;
lime_audio_openal_AL.MAX_DISTANCE = 4131;
lime_audio_openal_AL.SEC_OFFSET = 4132;
lime_audio_openal_AL.SAMPLE_OFFSET = 4133;
lime_audio_openal_AL.BYTE_OFFSET = 4134;
lime_audio_openal_AL.SOURCE_TYPE = 4135;
lime_audio_openal_AL.STATIC = 4136;
lime_audio_openal_AL.STREAMING = 4137;
lime_audio_openal_AL.UNDETERMINED = 4144;
lime_audio_openal_AL.FORMAT_MONO8 = 4352;
lime_audio_openal_AL.FORMAT_MONO16 = 4353;
lime_audio_openal_AL.FORMAT_STEREO8 = 4354;
lime_audio_openal_AL.FORMAT_STEREO16 = 4355;
lime_audio_openal_AL.FREQUENCY = 8193;
lime_audio_openal_AL.BITS = 8194;
lime_audio_openal_AL.CHANNELS = 8195;
lime_audio_openal_AL.SIZE = 8196;
lime_audio_openal_AL.NO_ERROR = 0;
lime_audio_openal_AL.INVALID_NAME = 40961;
lime_audio_openal_AL.INVALID_ENUM = 40962;
lime_audio_openal_AL.INVALID_VALUE = 40963;
lime_audio_openal_AL.INVALID_OPERATION = 40964;
lime_audio_openal_AL.OUT_OF_MEMORY = 40965;
lime_audio_openal_AL.VENDOR = 45057;
lime_audio_openal_AL.VERSION = 45058;
lime_audio_openal_AL.RENDERER = 45059;
lime_audio_openal_AL.EXTENSIONS = 45060;
lime_audio_openal_AL.DOPPLER_FACTOR = 49152;
lime_audio_openal_AL.SPEED_OF_SOUND = 49155;
lime_audio_openal_AL.DOPPLER_VELOCITY = 49153;
lime_audio_openal_AL.DISTANCE_MODEL = 53248;
lime_audio_openal_AL.INVERSE_DISTANCE = 53249;
lime_audio_openal_AL.INVERSE_DISTANCE_CLAMPED = 53250;
lime_audio_openal_AL.LINEAR_DISTANCE = 53251;
lime_audio_openal_AL.LINEAR_DISTANCE_CLAMPED = 53252;
lime_audio_openal_AL.EXPONENT_DISTANCE = 53253;
lime_audio_openal_AL.EXPONENT_DISTANCE_CLAMPED = 53254;
lime_audio_openal_ALC.FALSE = 0;
lime_audio_openal_ALC.TRUE = 1;
lime_audio_openal_ALC.FREQUENCY = 4103;
lime_audio_openal_ALC.REFRESH = 4104;
lime_audio_openal_ALC.SYNC = 4105;
lime_audio_openal_ALC.MONO_SOURCES = 4112;
lime_audio_openal_ALC.STEREO_SOURCES = 4113;
lime_audio_openal_ALC.NO_ERROR = 0;
lime_audio_openal_ALC.INVALID_DEVICE = 40961;
lime_audio_openal_ALC.INVALID_CONTEXT = 40962;
lime_audio_openal_ALC.INVALID_ENUM = 40963;
lime_audio_openal_ALC.INVALID_VALUE = 40964;
lime_audio_openal_ALC.OUT_OF_MEMORY = 40965;
lime_audio_openal_ALC.ATTRIBUTES_SIZE = 4098;
lime_audio_openal_ALC.ALL_ATTRIBUTES = 4099;
lime_audio_openal_ALC.DEFAULT_DEVICE_SPECIFIER = 4100;
lime_audio_openal_ALC.DEVICE_SPECIFIER = 4101;
lime_audio_openal_ALC.EXTENSIONS = 4102;
lime_audio_openal_ALC.ENUMERATE_ALL_EXT = 1;
lime_audio_openal_ALC.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
lime_audio_openal_ALC.ALL_DEVICES_SPECIFIER = 4115;
lime_graphics_Image.__base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
lime_graphics_cairo__$CairoFTFontFace_CairoFTFontFace_$Impl_$.FT_LOAD_FORCE_AUTOHINT = 32;
lime_graphics_opengl_GL.DEPTH_BUFFER_BIT = 256;
lime_graphics_opengl_GL.STENCIL_BUFFER_BIT = 1024;
lime_graphics_opengl_GL.COLOR_BUFFER_BIT = 16384;
lime_graphics_opengl_GL.POINTS = 0;
lime_graphics_opengl_GL.LINES = 1;
lime_graphics_opengl_GL.LINE_LOOP = 2;
lime_graphics_opengl_GL.LINE_STRIP = 3;
lime_graphics_opengl_GL.TRIANGLES = 4;
lime_graphics_opengl_GL.TRIANGLE_STRIP = 5;
lime_graphics_opengl_GL.TRIANGLE_FAN = 6;
lime_graphics_opengl_GL.ZERO = 0;
lime_graphics_opengl_GL.ONE = 1;
lime_graphics_opengl_GL.SRC_COLOR = 768;
lime_graphics_opengl_GL.ONE_MINUS_SRC_COLOR = 769;
lime_graphics_opengl_GL.SRC_ALPHA = 770;
lime_graphics_opengl_GL.ONE_MINUS_SRC_ALPHA = 771;
lime_graphics_opengl_GL.DST_ALPHA = 772;
lime_graphics_opengl_GL.ONE_MINUS_DST_ALPHA = 773;
lime_graphics_opengl_GL.DST_COLOR = 774;
lime_graphics_opengl_GL.ONE_MINUS_DST_COLOR = 775;
lime_graphics_opengl_GL.SRC_ALPHA_SATURATE = 776;
lime_graphics_opengl_GL.FUNC_ADD = 32774;
lime_graphics_opengl_GL.BLEND_EQUATION = 32777;
lime_graphics_opengl_GL.BLEND_EQUATION_RGB = 32777;
lime_graphics_opengl_GL.BLEND_EQUATION_ALPHA = 34877;
lime_graphics_opengl_GL.FUNC_SUBTRACT = 32778;
lime_graphics_opengl_GL.FUNC_REVERSE_SUBTRACT = 32779;
lime_graphics_opengl_GL.BLEND_DST_RGB = 32968;
lime_graphics_opengl_GL.BLEND_SRC_RGB = 32969;
lime_graphics_opengl_GL.BLEND_DST_ALPHA = 32970;
lime_graphics_opengl_GL.BLEND_SRC_ALPHA = 32971;
lime_graphics_opengl_GL.CONSTANT_COLOR = 32769;
lime_graphics_opengl_GL.ONE_MINUS_CONSTANT_COLOR = 32770;
lime_graphics_opengl_GL.CONSTANT_ALPHA = 32771;
lime_graphics_opengl_GL.ONE_MINUS_CONSTANT_ALPHA = 32772;
lime_graphics_opengl_GL.BLEND_COLOR = 32773;
lime_graphics_opengl_GL.ARRAY_BUFFER = 34962;
lime_graphics_opengl_GL.ELEMENT_ARRAY_BUFFER = 34963;
lime_graphics_opengl_GL.ARRAY_BUFFER_BINDING = 34964;
lime_graphics_opengl_GL.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
lime_graphics_opengl_GL.STREAM_DRAW = 35040;
lime_graphics_opengl_GL.STATIC_DRAW = 35044;
lime_graphics_opengl_GL.DYNAMIC_DRAW = 35048;
lime_graphics_opengl_GL.BUFFER_SIZE = 34660;
lime_graphics_opengl_GL.BUFFER_USAGE = 34661;
lime_graphics_opengl_GL.CURRENT_VERTEX_ATTRIB = 34342;
lime_graphics_opengl_GL.FRONT = 1028;
lime_graphics_opengl_GL.BACK = 1029;
lime_graphics_opengl_GL.FRONT_AND_BACK = 1032;
lime_graphics_opengl_GL.CULL_FACE = 2884;
lime_graphics_opengl_GL.BLEND = 3042;
lime_graphics_opengl_GL.DITHER = 3024;
lime_graphics_opengl_GL.STENCIL_TEST = 2960;
lime_graphics_opengl_GL.DEPTH_TEST = 2929;
lime_graphics_opengl_GL.SCISSOR_TEST = 3089;
lime_graphics_opengl_GL.POLYGON_OFFSET_FILL = 32823;
lime_graphics_opengl_GL.SAMPLE_ALPHA_TO_COVERAGE = 32926;
lime_graphics_opengl_GL.SAMPLE_COVERAGE = 32928;
lime_graphics_opengl_GL.NO_ERROR = 0;
lime_graphics_opengl_GL.INVALID_ENUM = 1280;
lime_graphics_opengl_GL.INVALID_VALUE = 1281;
lime_graphics_opengl_GL.INVALID_OPERATION = 1282;
lime_graphics_opengl_GL.OUT_OF_MEMORY = 1285;
lime_graphics_opengl_GL.CW = 2304;
lime_graphics_opengl_GL.CCW = 2305;
lime_graphics_opengl_GL.LINE_WIDTH = 2849;
lime_graphics_opengl_GL.ALIASED_POINT_SIZE_RANGE = 33901;
lime_graphics_opengl_GL.ALIASED_LINE_WIDTH_RANGE = 33902;
lime_graphics_opengl_GL.CULL_FACE_MODE = 2885;
lime_graphics_opengl_GL.FRONT_FACE = 2886;
lime_graphics_opengl_GL.DEPTH_RANGE = 2928;
lime_graphics_opengl_GL.DEPTH_WRITEMASK = 2930;
lime_graphics_opengl_GL.DEPTH_CLEAR_VALUE = 2931;
lime_graphics_opengl_GL.DEPTH_FUNC = 2932;
lime_graphics_opengl_GL.STENCIL_CLEAR_VALUE = 2961;
lime_graphics_opengl_GL.STENCIL_FUNC = 2962;
lime_graphics_opengl_GL.STENCIL_FAIL = 2964;
lime_graphics_opengl_GL.STENCIL_PASS_DEPTH_FAIL = 2965;
lime_graphics_opengl_GL.STENCIL_PASS_DEPTH_PASS = 2966;
lime_graphics_opengl_GL.STENCIL_REF = 2967;
lime_graphics_opengl_GL.STENCIL_VALUE_MASK = 2963;
lime_graphics_opengl_GL.STENCIL_WRITEMASK = 2968;
lime_graphics_opengl_GL.STENCIL_BACK_FUNC = 34816;
lime_graphics_opengl_GL.STENCIL_BACK_FAIL = 34817;
lime_graphics_opengl_GL.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
lime_graphics_opengl_GL.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
lime_graphics_opengl_GL.STENCIL_BACK_REF = 36003;
lime_graphics_opengl_GL.STENCIL_BACK_VALUE_MASK = 36004;
lime_graphics_opengl_GL.STENCIL_BACK_WRITEMASK = 36005;
lime_graphics_opengl_GL.VIEWPORT = 2978;
lime_graphics_opengl_GL.SCISSOR_BOX = 3088;
lime_graphics_opengl_GL.COLOR_CLEAR_VALUE = 3106;
lime_graphics_opengl_GL.COLOR_WRITEMASK = 3107;
lime_graphics_opengl_GL.UNPACK_ALIGNMENT = 3317;
lime_graphics_opengl_GL.PACK_ALIGNMENT = 3333;
lime_graphics_opengl_GL.MAX_TEXTURE_SIZE = 3379;
lime_graphics_opengl_GL.MAX_VIEWPORT_DIMS = 3386;
lime_graphics_opengl_GL.SUBPIXEL_BITS = 3408;
lime_graphics_opengl_GL.RED_BITS = 3410;
lime_graphics_opengl_GL.GREEN_BITS = 3411;
lime_graphics_opengl_GL.BLUE_BITS = 3412;
lime_graphics_opengl_GL.ALPHA_BITS = 3413;
lime_graphics_opengl_GL.DEPTH_BITS = 3414;
lime_graphics_opengl_GL.STENCIL_BITS = 3415;
lime_graphics_opengl_GL.POLYGON_OFFSET_UNITS = 10752;
lime_graphics_opengl_GL.POLYGON_OFFSET_FACTOR = 32824;
lime_graphics_opengl_GL.TEXTURE_BINDING_2D = 32873;
lime_graphics_opengl_GL.SAMPLE_BUFFERS = 32936;
lime_graphics_opengl_GL.SAMPLES = 32937;
lime_graphics_opengl_GL.SAMPLE_COVERAGE_VALUE = 32938;
lime_graphics_opengl_GL.SAMPLE_COVERAGE_INVERT = 32939;
lime_graphics_opengl_GL.COMPRESSED_TEXTURE_FORMATS = 34467;
lime_graphics_opengl_GL.DONT_CARE = 4352;
lime_graphics_opengl_GL.FASTEST = 4353;
lime_graphics_opengl_GL.NICEST = 4354;
lime_graphics_opengl_GL.GENERATE_MIPMAP_HINT = 33170;
lime_graphics_opengl_GL.BYTE = 5120;
lime_graphics_opengl_GL.UNSIGNED_BYTE = 5121;
lime_graphics_opengl_GL.SHORT = 5122;
lime_graphics_opengl_GL.UNSIGNED_SHORT = 5123;
lime_graphics_opengl_GL.INT = 5124;
lime_graphics_opengl_GL.UNSIGNED_INT = 5125;
lime_graphics_opengl_GL.FLOAT = 5126;
lime_graphics_opengl_GL.DEPTH_COMPONENT = 6402;
lime_graphics_opengl_GL.ALPHA = 6406;
lime_graphics_opengl_GL.RGB = 6407;
lime_graphics_opengl_GL.RGBA = 6408;
lime_graphics_opengl_GL.BGR_EXT = 32992;
lime_graphics_opengl_GL.BGRA_EXT = 32993;
lime_graphics_opengl_GL.LUMINANCE = 6409;
lime_graphics_opengl_GL.LUMINANCE_ALPHA = 6410;
lime_graphics_opengl_GL.UNSIGNED_SHORT_4_4_4_4 = 32819;
lime_graphics_opengl_GL.UNSIGNED_SHORT_5_5_5_1 = 32820;
lime_graphics_opengl_GL.UNSIGNED_SHORT_5_6_5 = 33635;
lime_graphics_opengl_GL.FRAGMENT_SHADER = 35632;
lime_graphics_opengl_GL.VERTEX_SHADER = 35633;
lime_graphics_opengl_GL.MAX_VERTEX_ATTRIBS = 34921;
lime_graphics_opengl_GL.MAX_VERTEX_UNIFORM_VECTORS = 36347;
lime_graphics_opengl_GL.MAX_VARYING_VECTORS = 36348;
lime_graphics_opengl_GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
lime_graphics_opengl_GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
lime_graphics_opengl_GL.MAX_TEXTURE_IMAGE_UNITS = 34930;
lime_graphics_opengl_GL.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
lime_graphics_opengl_GL.SHADER_TYPE = 35663;
lime_graphics_opengl_GL.DELETE_STATUS = 35712;
lime_graphics_opengl_GL.LINK_STATUS = 35714;
lime_graphics_opengl_GL.VALIDATE_STATUS = 35715;
lime_graphics_opengl_GL.ATTACHED_SHADERS = 35717;
lime_graphics_opengl_GL.ACTIVE_UNIFORMS = 35718;
lime_graphics_opengl_GL.ACTIVE_ATTRIBUTES = 35721;
lime_graphics_opengl_GL.SHADING_LANGUAGE_VERSION = 35724;
lime_graphics_opengl_GL.CURRENT_PROGRAM = 35725;
lime_graphics_opengl_GL.NEVER = 512;
lime_graphics_opengl_GL.LESS = 513;
lime_graphics_opengl_GL.EQUAL = 514;
lime_graphics_opengl_GL.LEQUAL = 515;
lime_graphics_opengl_GL.GREATER = 516;
lime_graphics_opengl_GL.NOTEQUAL = 517;
lime_graphics_opengl_GL.GEQUAL = 518;
lime_graphics_opengl_GL.ALWAYS = 519;
lime_graphics_opengl_GL.KEEP = 7680;
lime_graphics_opengl_GL.REPLACE = 7681;
lime_graphics_opengl_GL.INCR = 7682;
lime_graphics_opengl_GL.DECR = 7683;
lime_graphics_opengl_GL.INVERT = 5386;
lime_graphics_opengl_GL.INCR_WRAP = 34055;
lime_graphics_opengl_GL.DECR_WRAP = 34056;
lime_graphics_opengl_GL.VENDOR = 7936;
lime_graphics_opengl_GL.RENDERER = 7937;
lime_graphics_opengl_GL.VERSION = 7938;
lime_graphics_opengl_GL.NEAREST = 9728;
lime_graphics_opengl_GL.LINEAR = 9729;
lime_graphics_opengl_GL.NEAREST_MIPMAP_NEAREST = 9984;
lime_graphics_opengl_GL.LINEAR_MIPMAP_NEAREST = 9985;
lime_graphics_opengl_GL.NEAREST_MIPMAP_LINEAR = 9986;
lime_graphics_opengl_GL.LINEAR_MIPMAP_LINEAR = 9987;
lime_graphics_opengl_GL.TEXTURE_MAG_FILTER = 10240;
lime_graphics_opengl_GL.TEXTURE_MIN_FILTER = 10241;
lime_graphics_opengl_GL.TEXTURE_WRAP_S = 10242;
lime_graphics_opengl_GL.TEXTURE_WRAP_T = 10243;
lime_graphics_opengl_GL.TEXTURE_2D = 3553;
lime_graphics_opengl_GL.TEXTURE = 5890;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP = 34067;
lime_graphics_opengl_GL.TEXTURE_BINDING_CUBE_MAP = 34068;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
lime_graphics_opengl_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
lime_graphics_opengl_GL.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
lime_graphics_opengl_GL.TEXTURE0 = 33984;
lime_graphics_opengl_GL.TEXTURE1 = 33985;
lime_graphics_opengl_GL.TEXTURE2 = 33986;
lime_graphics_opengl_GL.TEXTURE3 = 33987;
lime_graphics_opengl_GL.TEXTURE4 = 33988;
lime_graphics_opengl_GL.TEXTURE5 = 33989;
lime_graphics_opengl_GL.TEXTURE6 = 33990;
lime_graphics_opengl_GL.TEXTURE7 = 33991;
lime_graphics_opengl_GL.TEXTURE8 = 33992;
lime_graphics_opengl_GL.TEXTURE9 = 33993;
lime_graphics_opengl_GL.TEXTURE10 = 33994;
lime_graphics_opengl_GL.TEXTURE11 = 33995;
lime_graphics_opengl_GL.TEXTURE12 = 33996;
lime_graphics_opengl_GL.TEXTURE13 = 33997;
lime_graphics_opengl_GL.TEXTURE14 = 33998;
lime_graphics_opengl_GL.TEXTURE15 = 33999;
lime_graphics_opengl_GL.TEXTURE16 = 34000;
lime_graphics_opengl_GL.TEXTURE17 = 34001;
lime_graphics_opengl_GL.TEXTURE18 = 34002;
lime_graphics_opengl_GL.TEXTURE19 = 34003;
lime_graphics_opengl_GL.TEXTURE20 = 34004;
lime_graphics_opengl_GL.TEXTURE21 = 34005;
lime_graphics_opengl_GL.TEXTURE22 = 34006;
lime_graphics_opengl_GL.TEXTURE23 = 34007;
lime_graphics_opengl_GL.TEXTURE24 = 34008;
lime_graphics_opengl_GL.TEXTURE25 = 34009;
lime_graphics_opengl_GL.TEXTURE26 = 34010;
lime_graphics_opengl_GL.TEXTURE27 = 34011;
lime_graphics_opengl_GL.TEXTURE28 = 34012;
lime_graphics_opengl_GL.TEXTURE29 = 34013;
lime_graphics_opengl_GL.TEXTURE30 = 34014;
lime_graphics_opengl_GL.TEXTURE31 = 34015;
lime_graphics_opengl_GL.ACTIVE_TEXTURE = 34016;
lime_graphics_opengl_GL.REPEAT = 10497;
lime_graphics_opengl_GL.CLAMP_TO_EDGE = 33071;
lime_graphics_opengl_GL.MIRRORED_REPEAT = 33648;
lime_graphics_opengl_GL.FLOAT_VEC2 = 35664;
lime_graphics_opengl_GL.FLOAT_VEC3 = 35665;
lime_graphics_opengl_GL.FLOAT_VEC4 = 35666;
lime_graphics_opengl_GL.INT_VEC2 = 35667;
lime_graphics_opengl_GL.INT_VEC3 = 35668;
lime_graphics_opengl_GL.INT_VEC4 = 35669;
lime_graphics_opengl_GL.BOOL = 35670;
lime_graphics_opengl_GL.BOOL_VEC2 = 35671;
lime_graphics_opengl_GL.BOOL_VEC3 = 35672;
lime_graphics_opengl_GL.BOOL_VEC4 = 35673;
lime_graphics_opengl_GL.FLOAT_MAT2 = 35674;
lime_graphics_opengl_GL.FLOAT_MAT3 = 35675;
lime_graphics_opengl_GL.FLOAT_MAT4 = 35676;
lime_graphics_opengl_GL.SAMPLER_2D = 35678;
lime_graphics_opengl_GL.SAMPLER_CUBE = 35680;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
lime_graphics_opengl_GL.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
lime_graphics_opengl_GL.VERTEX_PROGRAM_POINT_SIZE = 34370;
lime_graphics_opengl_GL.POINT_SPRITE = 34913;
lime_graphics_opengl_GL.COMPILE_STATUS = 35713;
lime_graphics_opengl_GL.LOW_FLOAT = 36336;
lime_graphics_opengl_GL.MEDIUM_FLOAT = 36337;
lime_graphics_opengl_GL.HIGH_FLOAT = 36338;
lime_graphics_opengl_GL.LOW_INT = 36339;
lime_graphics_opengl_GL.MEDIUM_INT = 36340;
lime_graphics_opengl_GL.HIGH_INT = 36341;
lime_graphics_opengl_GL.FRAMEBUFFER = 36160;
lime_graphics_opengl_GL.RENDERBUFFER = 36161;
lime_graphics_opengl_GL.RGBA4 = 32854;
lime_graphics_opengl_GL.RGB5_A1 = 32855;
lime_graphics_opengl_GL.RGB565 = 36194;
lime_graphics_opengl_GL.DEPTH_COMPONENT16 = 33189;
lime_graphics_opengl_GL.STENCIL_INDEX = 6401;
lime_graphics_opengl_GL.STENCIL_INDEX8 = 36168;
lime_graphics_opengl_GL.DEPTH_STENCIL = 34041;
lime_graphics_opengl_GL.RENDERBUFFER_WIDTH = 36162;
lime_graphics_opengl_GL.RENDERBUFFER_HEIGHT = 36163;
lime_graphics_opengl_GL.RENDERBUFFER_INTERNAL_FORMAT = 36164;
lime_graphics_opengl_GL.RENDERBUFFER_RED_SIZE = 36176;
lime_graphics_opengl_GL.RENDERBUFFER_GREEN_SIZE = 36177;
lime_graphics_opengl_GL.RENDERBUFFER_BLUE_SIZE = 36178;
lime_graphics_opengl_GL.RENDERBUFFER_ALPHA_SIZE = 36179;
lime_graphics_opengl_GL.RENDERBUFFER_DEPTH_SIZE = 36180;
lime_graphics_opengl_GL.RENDERBUFFER_STENCIL_SIZE = 36181;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
lime_graphics_opengl_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
lime_graphics_opengl_GL.COLOR_ATTACHMENT0 = 36064;
lime_graphics_opengl_GL.DEPTH_ATTACHMENT = 36096;
lime_graphics_opengl_GL.STENCIL_ATTACHMENT = 36128;
lime_graphics_opengl_GL.DEPTH_STENCIL_ATTACHMENT = 33306;
lime_graphics_opengl_GL.NONE = 0;
lime_graphics_opengl_GL.FRAMEBUFFER_COMPLETE = 36053;
lime_graphics_opengl_GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
lime_graphics_opengl_GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
lime_graphics_opengl_GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
lime_graphics_opengl_GL.FRAMEBUFFER_UNSUPPORTED = 36061;
lime_graphics_opengl_GL.FRAMEBUFFER_BINDING = 36006;
lime_graphics_opengl_GL.RENDERBUFFER_BINDING = 36007;
lime_graphics_opengl_GL.MAX_RENDERBUFFER_SIZE = 34024;
lime_graphics_opengl_GL.INVALID_FRAMEBUFFER_OPERATION = 1286;
lime_graphics_opengl_GL.UNPACK_FLIP_Y_WEBGL = 37440;
lime_graphics_opengl_GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
lime_graphics_opengl_GL.CONTEXT_LOST_WEBGL = 37442;
lime_graphics_opengl_GL.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
lime_graphics_opengl_GL.BROWSER_DEFAULT_WEBGL = 37444;
lime_math__$ColorMatrix_ColorMatrix_$Impl_$.__identity = [1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0];
lime_math_Matrix3.__identity = new lime_math_Matrix3();
lime_math__$Matrix4_Matrix4_$Impl_$.__identity = [1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_SSL = 1;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_WIN32 = 2;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_ALL = 3;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_NOTHING = 0;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_DEFAULT = 3;
lime_net_curl__$CURL_CURL_$Impl_$.GLOBAL_ACK_EINTR = 4;
lime_system_BackgroundWorker.MESSAGE_COMPLETE = "__COMPLETE__";
lime_system_BackgroundWorker.MESSAGE_ERROR = "__ERROR__";
lime_system_CFFI.__moduleNames = null;
lime_system_CFFI.lime_cffi_set_finalizer = lime_system_CFFI.load("lime","lime_cffi_set_finalizer",1,false);
lime_text__$TextDirection_TextDirection_$Impl_$.INVALID = 0;
lime_text__$TextDirection_TextDirection_$Impl_$.LEFT_TO_RIGHT = 4;
lime_text__$TextDirection_TextDirection_$Impl_$.RIGHT_TO_LEFT = 5;
lime_text__$TextDirection_TextDirection_$Impl_$.TOP_TO_BOTTOM = 6;
lime_text__$TextDirection_TextDirection_$Impl_$.BOTTOM_TO_TOP = 7;
lime_text__$TextScript_TextScript_$Impl_$.COMMON = "Zyyy";
lime_text__$TextScript_TextScript_$Impl_$.INHERITED = "Zinh";
lime_text__$TextScript_TextScript_$Impl_$.UNKNOWN = "Zzzz";
lime_text__$TextScript_TextScript_$Impl_$.ARABIC = "Arab";
lime_text__$TextScript_TextScript_$Impl_$.ARMENIAN = "Armn";
lime_text__$TextScript_TextScript_$Impl_$.BENGALI = "Beng";
lime_text__$TextScript_TextScript_$Impl_$.CYRILLIC = "Cyrl";
lime_text__$TextScript_TextScript_$Impl_$.DEVANAGARI = "Deva";
lime_text__$TextScript_TextScript_$Impl_$.GEORGIAN = "Geor";
lime_text__$TextScript_TextScript_$Impl_$.GREEK = "Grek";
lime_text__$TextScript_TextScript_$Impl_$.GUJARATI = "Gujr";
lime_text__$TextScript_TextScript_$Impl_$.GURMUKHI = "Guru";
lime_text__$TextScript_TextScript_$Impl_$.HANGUL = "Hang";
lime_text__$TextScript_TextScript_$Impl_$.HAN = "Hani";
lime_text__$TextScript_TextScript_$Impl_$.HEBREW = "Hebr";
lime_text__$TextScript_TextScript_$Impl_$.HIRAGANA = "Hira";
lime_text__$TextScript_TextScript_$Impl_$.KANNADA = "Knda";
lime_text__$TextScript_TextScript_$Impl_$.KATAKANA = "Kana";
lime_text__$TextScript_TextScript_$Impl_$.LAO = "Laoo";
lime_text__$TextScript_TextScript_$Impl_$.LATIN = "Latn";
lime_text__$TextScript_TextScript_$Impl_$.MALAYALAM = "Mlym";
lime_text__$TextScript_TextScript_$Impl_$.ORIYA = "Orya";
lime_text__$TextScript_TextScript_$Impl_$.TAMIL = "Taml";
lime_text__$TextScript_TextScript_$Impl_$.TELUGA = "Telu";
lime_text__$TextScript_TextScript_$Impl_$.THAI = "Thai";
lime_text__$TextScript_TextScript_$Impl_$.TIBETAN = "Tibt";
lime_text__$TextScript_TextScript_$Impl_$.BOPOMOFO = "Bopo";
lime_text__$TextScript_TextScript_$Impl_$.BRAILLE = "Brai";
lime_text__$TextScript_TextScript_$Impl_$.CANADIAN_SYLLABICS = "Cans";
lime_text__$TextScript_TextScript_$Impl_$.CHEROKEE = "Cher";
lime_text__$TextScript_TextScript_$Impl_$.ETHIOPIC = "Ethi";
lime_text__$TextScript_TextScript_$Impl_$.KHMER = "Khmr";
lime_text__$TextScript_TextScript_$Impl_$.MONGOLIAN = "Mong";
lime_text__$TextScript_TextScript_$Impl_$.MYANMAR = "Mymr";
lime_text__$TextScript_TextScript_$Impl_$.OGHAM = "Ogam";
lime_text__$TextScript_TextScript_$Impl_$.RUNIC = "Runr";
lime_text__$TextScript_TextScript_$Impl_$.SINHALA = "Sinh";
lime_text__$TextScript_TextScript_$Impl_$.SYRIAC = "Syrc";
lime_text__$TextScript_TextScript_$Impl_$.THAANA = "Thaa";
lime_text__$TextScript_TextScript_$Impl_$.YI = "Yiii";
lime_text__$TextScript_TextScript_$Impl_$.DESERET = "Dsrt";
lime_text__$TextScript_TextScript_$Impl_$.GOTHIC = "Goth";
lime_text__$TextScript_TextScript_$Impl_$.OLD_ITALIC = "Ital";
lime_text__$TextScript_TextScript_$Impl_$.BUHID = "Buhd";
lime_text__$TextScript_TextScript_$Impl_$.HANUNOO = "Hano";
lime_text__$TextScript_TextScript_$Impl_$.TAGALOG = "Tglg";
lime_text__$TextScript_TextScript_$Impl_$.TAGBANWA = "Tagb";
lime_text__$TextScript_TextScript_$Impl_$.CYPRIOT = "Cprt";
lime_text__$TextScript_TextScript_$Impl_$.LIMBU = "Limb";
lime_text__$TextScript_TextScript_$Impl_$.LINEAR_B = "Linb";
lime_text__$TextScript_TextScript_$Impl_$.OSMANYA = "Osma";
lime_text__$TextScript_TextScript_$Impl_$.SHAVIAN = "Shaw";
lime_text__$TextScript_TextScript_$Impl_$.TAI_LE = "Tale";
lime_text__$TextScript_TextScript_$Impl_$.UGARITIC = "Ugar";
lime_text__$TextScript_TextScript_$Impl_$.BUGINESE = "Bugi";
lime_text__$TextScript_TextScript_$Impl_$.COPTIC = "Copt";
lime_text__$TextScript_TextScript_$Impl_$.GLAGOLITIC = "Glag";
lime_text__$TextScript_TextScript_$Impl_$.KHAROSHTHI = "Khar";
lime_text__$TextScript_TextScript_$Impl_$.NEW_TAI_LUE = "Talu";
lime_text__$TextScript_TextScript_$Impl_$.OLD_PERSIAN = "Xpeo";
lime_text__$TextScript_TextScript_$Impl_$.SYLOTI_NAGRI = "Sylo";
lime_text__$TextScript_TextScript_$Impl_$.TIFINAGH = "Tfng";
lime_text__$TextScript_TextScript_$Impl_$.BALINESE = "Bali";
lime_text__$TextScript_TextScript_$Impl_$.CUNEIFORM = "Xsux";
lime_text__$TextScript_TextScript_$Impl_$.NKO = "Nkoo";
lime_text__$TextScript_TextScript_$Impl_$.PHAGS_PA = "Phag";
lime_text__$TextScript_TextScript_$Impl_$.PHOENICIAN = "Phnx";
lime_text__$TextScript_TextScript_$Impl_$.CARIAN = "Cari";
lime_text__$TextScript_TextScript_$Impl_$.CHAM = "Cham";
lime_text__$TextScript_TextScript_$Impl_$.KAYAH_LI = "Kali";
lime_text__$TextScript_TextScript_$Impl_$.LEPCHA = "Lepc";
lime_text__$TextScript_TextScript_$Impl_$.LYCIAN = "Lyci";
lime_text__$TextScript_TextScript_$Impl_$.LYDIAN = "Lydi";
lime_text__$TextScript_TextScript_$Impl_$.OL_CHIKI = "Olck";
lime_text__$TextScript_TextScript_$Impl_$.REJANG = "Rjng";
lime_text__$TextScript_TextScript_$Impl_$.SAURASHTRA = "Saur";
lime_text__$TextScript_TextScript_$Impl_$.SUNDANESE = "Sund";
lime_text__$TextScript_TextScript_$Impl_$.VAI = "Vaii";
lime_text__$TextScript_TextScript_$Impl_$.AVESTAN = "Avst";
lime_text__$TextScript_TextScript_$Impl_$.BAMUM = "Bamu";
lime_text__$TextScript_TextScript_$Impl_$.EGYPTIAN_HIEROGLYPHS = "Egyp";
lime_text__$TextScript_TextScript_$Impl_$.IMPERIAL_ARAMAIC = "Armi";
lime_text__$TextScript_TextScript_$Impl_$.INSCRIPTIONAL_PAHLAVI = "Phli";
lime_text__$TextScript_TextScript_$Impl_$.INSCRIPTIONAL_PARTHIAN = "Prti";
lime_text__$TextScript_TextScript_$Impl_$.JAVANESE = "Java";
lime_text__$TextScript_TextScript_$Impl_$.KAITHI = "Kthi";
lime_text__$TextScript_TextScript_$Impl_$.LISU = "Lisu";
lime_text__$TextScript_TextScript_$Impl_$.MEETEI_MAYEK = "Mtei";
lime_text__$TextScript_TextScript_$Impl_$.OLD_SOUTH_ARABIAN = "Sarb";
lime_text__$TextScript_TextScript_$Impl_$.OLD_TURKIC = "Orkh";
lime_text__$TextScript_TextScript_$Impl_$.SAMARITAN = "Samr";
lime_text__$TextScript_TextScript_$Impl_$.TAI_THAM = "Lana";
lime_text__$TextScript_TextScript_$Impl_$.TAI_VIET = "Tavt";
lime_text__$TextScript_TextScript_$Impl_$.BATAK = "Batk";
lime_text__$TextScript_TextScript_$Impl_$.BRAHMI = "Brah";
lime_text__$TextScript_TextScript_$Impl_$.MANDAIC = "Mand";
lime_text__$TextScript_TextScript_$Impl_$.CHAKMA = "Cakm";
lime_text__$TextScript_TextScript_$Impl_$.MEROITIC_CURSIVE = "Merc";
lime_text__$TextScript_TextScript_$Impl_$.MEROITIC_HIEROGLYPHS = "Mero";
lime_text__$TextScript_TextScript_$Impl_$.MIAO = "Plrd";
lime_text__$TextScript_TextScript_$Impl_$.SHARADA = "Shrd";
lime_text__$TextScript_TextScript_$Impl_$.SORA_SOMPENG = "Sora";
lime_text__$TextScript_TextScript_$Impl_$.TAKRI = "Takr";
lime_text__$TextScript_TextScript_$Impl_$.BASSA_VAH = "Bass";
lime_text__$TextScript_TextScript_$Impl_$.CAUCASIAN_ALBANIAN = "Aghb";
lime_text__$TextScript_TextScript_$Impl_$.DUPLOYAN = "Dupl";
lime_text__$TextScript_TextScript_$Impl_$.ELBASAN = "Elba";
lime_text__$TextScript_TextScript_$Impl_$.GRANTHA = "Gran";
lime_text__$TextScript_TextScript_$Impl_$.KHOJKI = "Khoj";
lime_text__$TextScript_TextScript_$Impl_$.KHUDAWADI = "Sind";
lime_text__$TextScript_TextScript_$Impl_$.LINEAR_A = "Lina";
lime_text__$TextScript_TextScript_$Impl_$.MAHAJANI = "Mahj";
lime_text__$TextScript_TextScript_$Impl_$.MANICHAEAN = "Mani";
lime_text__$TextScript_TextScript_$Impl_$.MENDE_KIKAKUI = "Mend";
lime_text__$TextScript_TextScript_$Impl_$.MODI = "Modi";
lime_text__$TextScript_TextScript_$Impl_$.MRO = "Mroo";
lime_text__$TextScript_TextScript_$Impl_$.NABATAEAN = "Nbat";
lime_text__$TextScript_TextScript_$Impl_$.OLD_NORTH_ARABIAN = "Narb";
lime_text__$TextScript_TextScript_$Impl_$.OLD_PERMIC = "Perm";
lime_text__$TextScript_TextScript_$Impl_$.PAHAWH_HMONG = "Hmng";
lime_text__$TextScript_TextScript_$Impl_$.PALMYRENE = "Palm";
lime_text__$TextScript_TextScript_$Impl_$.PAU_CIN_HAU = "Pauc";
lime_text__$TextScript_TextScript_$Impl_$.PSALTER_PAHLAVI = "Phlp";
lime_text__$TextScript_TextScript_$Impl_$.SIDDHAM = "Sidd";
lime_text__$TextScript_TextScript_$Impl_$.TIRHUTA = "Tirh";
lime_text__$TextScript_TextScript_$Impl_$.WARANG_CITI = "Wara";
lime_ui_Gamepad.devices = new haxe_ds_IntMap();
lime_ui_Gamepad.onConnect = new lime_app_Event_$lime_$ui_$Gamepad_$Void();
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.LEFT_X = 0;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.LEFT_Y = 1;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.RIGHT_X = 2;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.RIGHT_Y = 3;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.TRIGGER_LEFT = 4;
lime_ui__$GamepadAxis_GamepadAxis_$Impl_$.TRIGGER_RIGHT = 5;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.A = 0;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.B = 1;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.X = 2;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.Y = 3;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.BACK = 4;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.GUIDE = 5;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.START = 6;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.LEFT_STICK = 7;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.RIGHT_STICK = 8;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.LEFT_SHOULDER = 9;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.RIGHT_SHOULDER = 10;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_UP = 11;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_DOWN = 12;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_LEFT = 13;
lime_ui__$GamepadButton_GamepadButton_$Impl_$.DPAD_RIGHT = 14;
lime_ui_Joystick.devices = new haxe_ds_IntMap();
lime_ui_Joystick.onConnect = new lime_app_Event_$lime_$ui_$Joystick_$Void();
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.CENTER = 0;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.DOWN = 4;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.LEFT = 8;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.RIGHT = 2;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.UP = 1;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.DOWN_LEFT = 12;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.DOWN_RIGHT = 6;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.UP_LEFT = 9;
lime_ui__$JoystickHatPosition_JoystickHatPosition_$Impl_$.UP_RIGHT = 3;
lime_ui__$KeyCode_KeyCode_$Impl_$.UNKNOWN = 0;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKSPACE = 8;
lime_ui__$KeyCode_KeyCode_$Impl_$.TAB = 9;
lime_ui__$KeyCode_KeyCode_$Impl_$.RETURN = 13;
lime_ui__$KeyCode_KeyCode_$Impl_$.ESCAPE = 27;
lime_ui__$KeyCode_KeyCode_$Impl_$.SPACE = 32;
lime_ui__$KeyCode_KeyCode_$Impl_$.EXCLAMATION = 33;
lime_ui__$KeyCode_KeyCode_$Impl_$.QUOTE = 34;
lime_ui__$KeyCode_KeyCode_$Impl_$.HASH = 35;
lime_ui__$KeyCode_KeyCode_$Impl_$.DOLLAR = 36;
lime_ui__$KeyCode_KeyCode_$Impl_$.PERCENT = 37;
lime_ui__$KeyCode_KeyCode_$Impl_$.AMPERSAND = 38;
lime_ui__$KeyCode_KeyCode_$Impl_$.SINGLE_QUOTE = 39;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_PARENTHESIS = 40;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_PARENTHESIS = 41;
lime_ui__$KeyCode_KeyCode_$Impl_$.ASTERISK = 42;
lime_ui__$KeyCode_KeyCode_$Impl_$.PLUS = 43;
lime_ui__$KeyCode_KeyCode_$Impl_$.COMMA = 44;
lime_ui__$KeyCode_KeyCode_$Impl_$.MINUS = 45;
lime_ui__$KeyCode_KeyCode_$Impl_$.PERIOD = 46;
lime_ui__$KeyCode_KeyCode_$Impl_$.SLASH = 47;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_0 = 48;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_1 = 49;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_2 = 50;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_3 = 51;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_4 = 52;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_5 = 53;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_6 = 54;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_7 = 55;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_8 = 56;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMBER_9 = 57;
lime_ui__$KeyCode_KeyCode_$Impl_$.COLON = 58;
lime_ui__$KeyCode_KeyCode_$Impl_$.SEMICOLON = 59;
lime_ui__$KeyCode_KeyCode_$Impl_$.LESS_THAN = 60;
lime_ui__$KeyCode_KeyCode_$Impl_$.EQUALS = 61;
lime_ui__$KeyCode_KeyCode_$Impl_$.GREATER_THAN = 62;
lime_ui__$KeyCode_KeyCode_$Impl_$.QUESTION = 63;
lime_ui__$KeyCode_KeyCode_$Impl_$.AT = 64;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_BRACKET = 91;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKSLASH = 92;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_BRACKET = 93;
lime_ui__$KeyCode_KeyCode_$Impl_$.CARET = 94;
lime_ui__$KeyCode_KeyCode_$Impl_$.UNDERSCORE = 95;
lime_ui__$KeyCode_KeyCode_$Impl_$.GRAVE = 96;
lime_ui__$KeyCode_KeyCode_$Impl_$.A = 97;
lime_ui__$KeyCode_KeyCode_$Impl_$.B = 98;
lime_ui__$KeyCode_KeyCode_$Impl_$.C = 99;
lime_ui__$KeyCode_KeyCode_$Impl_$.D = 100;
lime_ui__$KeyCode_KeyCode_$Impl_$.E = 101;
lime_ui__$KeyCode_KeyCode_$Impl_$.F = 102;
lime_ui__$KeyCode_KeyCode_$Impl_$.G = 103;
lime_ui__$KeyCode_KeyCode_$Impl_$.H = 104;
lime_ui__$KeyCode_KeyCode_$Impl_$.I = 105;
lime_ui__$KeyCode_KeyCode_$Impl_$.J = 106;
lime_ui__$KeyCode_KeyCode_$Impl_$.K = 107;
lime_ui__$KeyCode_KeyCode_$Impl_$.L = 108;
lime_ui__$KeyCode_KeyCode_$Impl_$.M = 109;
lime_ui__$KeyCode_KeyCode_$Impl_$.N = 110;
lime_ui__$KeyCode_KeyCode_$Impl_$.O = 111;
lime_ui__$KeyCode_KeyCode_$Impl_$.P = 112;
lime_ui__$KeyCode_KeyCode_$Impl_$.Q = 113;
lime_ui__$KeyCode_KeyCode_$Impl_$.R = 114;
lime_ui__$KeyCode_KeyCode_$Impl_$.S = 115;
lime_ui__$KeyCode_KeyCode_$Impl_$.T = 116;
lime_ui__$KeyCode_KeyCode_$Impl_$.U = 117;
lime_ui__$KeyCode_KeyCode_$Impl_$.V = 118;
lime_ui__$KeyCode_KeyCode_$Impl_$.W = 119;
lime_ui__$KeyCode_KeyCode_$Impl_$.X = 120;
lime_ui__$KeyCode_KeyCode_$Impl_$.Y = 121;
lime_ui__$KeyCode_KeyCode_$Impl_$.Z = 122;
lime_ui__$KeyCode_KeyCode_$Impl_$.DELETE = 127;
lime_ui__$KeyCode_KeyCode_$Impl_$.CAPS_LOCK = 1073741881;
lime_ui__$KeyCode_KeyCode_$Impl_$.F1 = 1073741882;
lime_ui__$KeyCode_KeyCode_$Impl_$.F2 = 1073741883;
lime_ui__$KeyCode_KeyCode_$Impl_$.F3 = 1073741884;
lime_ui__$KeyCode_KeyCode_$Impl_$.F4 = 1073741885;
lime_ui__$KeyCode_KeyCode_$Impl_$.F5 = 1073741886;
lime_ui__$KeyCode_KeyCode_$Impl_$.F6 = 1073741887;
lime_ui__$KeyCode_KeyCode_$Impl_$.F7 = 1073741888;
lime_ui__$KeyCode_KeyCode_$Impl_$.F8 = 1073741889;
lime_ui__$KeyCode_KeyCode_$Impl_$.F9 = 1073741890;
lime_ui__$KeyCode_KeyCode_$Impl_$.F10 = 1073741891;
lime_ui__$KeyCode_KeyCode_$Impl_$.F11 = 1073741892;
lime_ui__$KeyCode_KeyCode_$Impl_$.F12 = 1073741893;
lime_ui__$KeyCode_KeyCode_$Impl_$.PRINT_SCREEN = 1073741894;
lime_ui__$KeyCode_KeyCode_$Impl_$.SCROLL_LOCK = 1073741895;
lime_ui__$KeyCode_KeyCode_$Impl_$.PAUSE = 1073741896;
lime_ui__$KeyCode_KeyCode_$Impl_$.INSERT = 1073741897;
lime_ui__$KeyCode_KeyCode_$Impl_$.HOME = 1073741898;
lime_ui__$KeyCode_KeyCode_$Impl_$.PAGE_UP = 1073741899;
lime_ui__$KeyCode_KeyCode_$Impl_$.END = 1073741901;
lime_ui__$KeyCode_KeyCode_$Impl_$.PAGE_DOWN = 1073741902;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT = 1073741903;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT = 1073741904;
lime_ui__$KeyCode_KeyCode_$Impl_$.DOWN = 1073741905;
lime_ui__$KeyCode_KeyCode_$Impl_$.UP = 1073741906;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUM_LOCK = 1073741907;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DIVIDE = 1073741908;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MULTIPLY = 1073741909;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MINUS = 1073741910;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PLUS = 1073741911;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_ENTER = 1073741912;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_1 = 1073741913;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_2 = 1073741914;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_3 = 1073741915;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_4 = 1073741916;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_5 = 1073741917;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_6 = 1073741918;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_7 = 1073741919;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_8 = 1073741920;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_9 = 1073741921;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_0 = 1073741922;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PERIOD = 1073741923;
lime_ui__$KeyCode_KeyCode_$Impl_$.APPLICATION = 1073741925;
lime_ui__$KeyCode_KeyCode_$Impl_$.POWER = 1073741926;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_EQUALS = 1073741927;
lime_ui__$KeyCode_KeyCode_$Impl_$.F13 = 1073741928;
lime_ui__$KeyCode_KeyCode_$Impl_$.F14 = 1073741929;
lime_ui__$KeyCode_KeyCode_$Impl_$.F15 = 1073741930;
lime_ui__$KeyCode_KeyCode_$Impl_$.F16 = 1073741931;
lime_ui__$KeyCode_KeyCode_$Impl_$.F17 = 1073741932;
lime_ui__$KeyCode_KeyCode_$Impl_$.F18 = 1073741933;
lime_ui__$KeyCode_KeyCode_$Impl_$.F19 = 1073741934;
lime_ui__$KeyCode_KeyCode_$Impl_$.F20 = 1073741935;
lime_ui__$KeyCode_KeyCode_$Impl_$.F21 = 1073741936;
lime_ui__$KeyCode_KeyCode_$Impl_$.F22 = 1073741937;
lime_ui__$KeyCode_KeyCode_$Impl_$.F23 = 1073741938;
lime_ui__$KeyCode_KeyCode_$Impl_$.F24 = 1073741939;
lime_ui__$KeyCode_KeyCode_$Impl_$.EXECUTE = 1073741940;
lime_ui__$KeyCode_KeyCode_$Impl_$.HELP = 1073741941;
lime_ui__$KeyCode_KeyCode_$Impl_$.MENU = 1073741942;
lime_ui__$KeyCode_KeyCode_$Impl_$.SELECT = 1073741943;
lime_ui__$KeyCode_KeyCode_$Impl_$.STOP = 1073741944;
lime_ui__$KeyCode_KeyCode_$Impl_$.AGAIN = 1073741945;
lime_ui__$KeyCode_KeyCode_$Impl_$.UNDO = 1073741946;
lime_ui__$KeyCode_KeyCode_$Impl_$.CUT = 1073741947;
lime_ui__$KeyCode_KeyCode_$Impl_$.COPY = 1073741948;
lime_ui__$KeyCode_KeyCode_$Impl_$.PASTE = 1073741949;
lime_ui__$KeyCode_KeyCode_$Impl_$.FIND = 1073741950;
lime_ui__$KeyCode_KeyCode_$Impl_$.MUTE = 1073741951;
lime_ui__$KeyCode_KeyCode_$Impl_$.VOLUME_UP = 1073741952;
lime_ui__$KeyCode_KeyCode_$Impl_$.VOLUME_DOWN = 1073741953;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_COMMA = 1073741957;
lime_ui__$KeyCode_KeyCode_$Impl_$.ALT_ERASE = 1073741977;
lime_ui__$KeyCode_KeyCode_$Impl_$.SYSTEM_REQUEST = 1073741978;
lime_ui__$KeyCode_KeyCode_$Impl_$.CANCEL = 1073741979;
lime_ui__$KeyCode_KeyCode_$Impl_$.CLEAR = 1073741980;
lime_ui__$KeyCode_KeyCode_$Impl_$.PRIOR = 1073741981;
lime_ui__$KeyCode_KeyCode_$Impl_$.RETURN2 = 1073741982;
lime_ui__$KeyCode_KeyCode_$Impl_$.SEPARATOR = 1073741983;
lime_ui__$KeyCode_KeyCode_$Impl_$.OUT = 1073741984;
lime_ui__$KeyCode_KeyCode_$Impl_$.OPER = 1073741985;
lime_ui__$KeyCode_KeyCode_$Impl_$.CLEAR_AGAIN = 1073741986;
lime_ui__$KeyCode_KeyCode_$Impl_$.CRSEL = 1073741987;
lime_ui__$KeyCode_KeyCode_$Impl_$.EXSEL = 1073741988;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_00 = 1073742000;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_000 = 1073742001;
lime_ui__$KeyCode_KeyCode_$Impl_$.THOUSAND_SEPARATOR = 1073742002;
lime_ui__$KeyCode_KeyCode_$Impl_$.DECIMAL_SEPARATOR = 1073742003;
lime_ui__$KeyCode_KeyCode_$Impl_$.CURRENCY_UNIT = 1073742004;
lime_ui__$KeyCode_KeyCode_$Impl_$.CURRENCY_SUBUNIT = 1073742005;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_LEFT_PARENTHESIS = 1073742006;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_RIGHT_PARENTHESIS = 1073742007;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_LEFT_BRACE = 1073742008;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_RIGHT_BRACE = 1073742009;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_TAB = 1073742010;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_BACKSPACE = 1073742011;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_A = 1073742012;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_B = 1073742013;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_C = 1073742014;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_D = 1073742015;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_E = 1073742016;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_F = 1073742017;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_XOR = 1073742018;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_POWER = 1073742019;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PERCENT = 1073742020;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_LESS_THAN = 1073742021;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_GREATER_THAN = 1073742022;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_AMPERSAND = 1073742023;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DOUBLE_AMPERSAND = 1073742024;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_VERTICAL_BAR = 1073742025;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DOUBLE_VERTICAL_BAR = 1073742026;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_COLON = 1073742027;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_HASH = 1073742028;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_SPACE = 1073742029;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_AT = 1073742030;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_EXCLAMATION = 1073742031;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_STORE = 1073742032;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_RECALL = 1073742033;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_CLEAR = 1073742034;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_ADD = 1073742035;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_SUBTRACT = 1073742036;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_MULTIPLY = 1073742037;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_MEM_DIVIDE = 1073742038;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_PLUS_MINUS = 1073742039;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_CLEAR = 1073742040;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_CLEAR_ENTRY = 1073742041;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_BINARY = 1073742042;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_OCTAL = 1073742043;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_DECIMAL = 1073742044;
lime_ui__$KeyCode_KeyCode_$Impl_$.NUMPAD_HEXADECIMAL = 1073742045;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_CTRL = 1073742048;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_SHIFT = 1073742049;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_ALT = 1073742050;
lime_ui__$KeyCode_KeyCode_$Impl_$.LEFT_META = 1073742051;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_CTRL = 1073742052;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_SHIFT = 1073742053;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_ALT = 1073742054;
lime_ui__$KeyCode_KeyCode_$Impl_$.RIGHT_META = 1073742055;
lime_ui__$KeyCode_KeyCode_$Impl_$.MODE = 1073742081;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_NEXT = 1073742082;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_PREVIOUS = 1073742083;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_STOP = 1073742084;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_PLAY = 1073742085;
lime_ui__$KeyCode_KeyCode_$Impl_$.AUDIO_MUTE = 1073742086;
lime_ui__$KeyCode_KeyCode_$Impl_$.MEDIA_SELECT = 1073742087;
lime_ui__$KeyCode_KeyCode_$Impl_$.WWW = 1073742088;
lime_ui__$KeyCode_KeyCode_$Impl_$.MAIL = 1073742089;
lime_ui__$KeyCode_KeyCode_$Impl_$.CALCULATOR = 1073742090;
lime_ui__$KeyCode_KeyCode_$Impl_$.COMPUTER = 1073742091;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_SEARCH = 1073742092;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_HOME = 1073742093;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_BACK = 1073742094;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_FORWARD = 1073742095;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_STOP = 1073742096;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_REFRESH = 1073742097;
lime_ui__$KeyCode_KeyCode_$Impl_$.APP_CONTROL_BOOKMARKS = 1073742098;
lime_ui__$KeyCode_KeyCode_$Impl_$.BRIGHTNESS_DOWN = 1073742099;
lime_ui__$KeyCode_KeyCode_$Impl_$.BRIGHTNESS_UP = 1073742100;
lime_ui__$KeyCode_KeyCode_$Impl_$.DISPLAY_SWITCH = 1073742101;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKLIGHT_TOGGLE = 1073742102;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKLIGHT_DOWN = 1073742103;
lime_ui__$KeyCode_KeyCode_$Impl_$.BACKLIGHT_UP = 1073742104;
lime_ui__$KeyCode_KeyCode_$Impl_$.EJECT = 1073742105;
lime_ui__$KeyCode_KeyCode_$Impl_$.SLEEP = 1073742106;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.NONE = 0;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_SHIFT = 1;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_SHIFT = 2;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_CTRL = 64;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_CTRL = 128;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_ALT = 256;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_ALT = 512;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.LEFT_META = 1024;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.RIGHT_META = 2048;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.NUM_LOCK = 4096;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.CAPS_LOCK = 8192;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.MODE = 16384;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.CTRL = 192;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.SHIFT = 3;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.ALT = 768;
lime_ui__$KeyModifier_KeyModifier_$Impl_$.META = 3072;
lime_ui_Touch.onEnd = new lime_app_Event_$lime_$ui_$Touch_$Void();
lime_ui_Touch.onMove = new lime_app_Event_$lime_$ui_$Touch_$Void();
lime_ui_Touch.onStart = new lime_app_Event_$lime_$ui_$Touch_$Void();
lime_utils_Bytes.cffi_lime_bytes_from_data_pointer = (function($this) {
	var $r;
	var inValue = lime_system_CFFI.load("lime","lime_bytes_from_data_pointer",2,false);
	$r = inValue;
	return $r;
}(this));
lime_utils_Bytes.cffi_lime_bytes_get_data_pointer = (function($this) {
	var $r;
	var inValue = lime_system_CFFI.load("lime","lime_bytes_get_data_pointer",1,false);
	$r = inValue;
	return $r;
}(this));
lime_utils_Bytes.cffi_lime_bytes_read_file = (function($this) {
	var $r;
	var inValue = lime_system_CFFI.load("lime","lime_bytes_read_file",1,false);
	$r = inValue;
	return $r;
}(this));
lime_utils__$Float32Array_Float32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
lime_utils__$Int16Array_Int16Array_$Impl_$.BYTES_PER_ELEMENT = 2;
lime_utils__$Int32Array_Int32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
lime_utils__$UInt16Array_UInt16Array_$Impl_$.BYTES_PER_ELEMENT = 2;
lime_utils__$UInt32Array_UInt32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
lime_utils__$UInt8Array_UInt8Array_$Impl_$.BYTES_PER_ELEMENT = 1;
motion_actuators_SimpleActuator.actuators = [];
motion_actuators_SimpleActuator.actuatorsLength = 0;
motion_actuators_SimpleActuator.addedEvent = false;
motion_Actuate.defaultActuator = motion_actuators_SimpleActuator;
motion_Actuate.defaultEase = motion_easing_Expo.get_easeOut();
motion_Actuate.targetLibraries = new haxe_ds_ObjectMap();
openfl_Assets.cache = new openfl_AssetCache();
openfl_Assets.dispatcher = new openfl_events_EventDispatcher();
openfl_display_LoaderInfo.__rootURL = window.document.URL;
openfl_system_ApplicationDomain.currentDomain = new openfl_system_ApplicationDomain(null);
openfl_geom_Matrix.__identity = new openfl_geom_Matrix();
openfl_geom_Matrix.__temp = new openfl_geom_Matrix();
openfl_Lib.current = new openfl_display_MovieClip();
openfl_Lib.__sentWarnings = new haxe_ds_StringMap();
openfl__$internal_renderer_GraphicsPaths.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_GraphicsPaths.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_cairo_CairoGraphics.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_cairo_CairoGraphics.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_cairo_CairoGraphics.fillCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_cairo_CairoGraphics.strokeCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_canvas_CanvasGraphics.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_canvas_CanvasGraphics.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_canvas_CanvasGraphics.fillCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_canvas_CanvasGraphics.strokeCommands = new openfl__$internal_renderer_DrawCommandBuffer();
openfl__$internal_renderer_opengl_GLBitmap.fbData = [];
openfl__$internal_renderer_opengl_GLRenderer.glContextId = 0;
openfl__$internal_renderer_opengl_GLRenderer.glContexts = [];
openfl__$internal_renderer_opengl_shaders2_Shader.UID = 0;
openfl__$internal_renderer_opengl_shaders2_DefaultShader.VERTEX_SRC = ["attribute vec2 " + "openfl_aPosition" + ";","attribute vec2 " + "openfl_aTexCoord0" + ";","attribute vec4 " + "openfl_aColor" + ";","uniform mat3 " + "openfl_uProjectionMatrix" + ";","uniform bool " + "openfl_uUseColorTransform" + ";","varying vec2 " + "openfl_vTexCoord" + ";","varying vec4 " + "openfl_vColor" + ";","void main(void) {","   gl_Position = vec4((" + "openfl_uProjectionMatrix" + " * vec3(" + "openfl_aPosition" + ", 1.0)).xy, 0.0, 1.0);","   " + "openfl_vTexCoord" + " = " + "openfl_aTexCoord0" + ";","   if(" + "openfl_uUseColorTransform" + ")","   \t" + "openfl_vColor" + " = " + "openfl_aColor" + ";","   else","   \t" + "openfl_vColor" + " = vec4(" + "openfl_aColor" + ".rgb * " + "openfl_aColor" + ".a, " + "openfl_aColor" + ".a);","}"];
openfl__$internal_renderer_opengl_utils_PathBuiler.__currentWinding = 0;
openfl__$internal_renderer_opengl_utils_PathBuiler.__fillIndex = 0;
openfl_geom_Rectangle.__temp = new openfl_geom_Rectangle();
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.fillVertexAttributes = [new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition")];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.drawTrianglesVertexAttributes = [new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition"),new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aTexCoord0"),new openfl__$internal_renderer_opengl_utils_VertexAttribute(4,5121,true,"openfl_aColor")];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.primitiveVertexAttributes = [new openfl__$internal_renderer_opengl_utils_VertexAttribute(2,5126,false,"openfl_aPosition"),new openfl__$internal_renderer_opengl_utils_VertexAttribute(4,5126,false,"openfl_aColor")];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.graphicsDataPool = [];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.bucketPool = [];
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.SIN45 = 0.70710678118654752440084436210485;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.TAN22 = 0.4142135623730950488016887242097;
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectPosition = new openfl_geom_Point();
openfl__$internal_renderer_opengl_utils_GraphicsRenderer.objectBounds = new openfl_geom_Rectangle();
openfl__$internal_renderer_opengl_utils_ShaderManager.compiledShadersCache = new haxe_ds_StringMap();
openfl__$internal_renderer_opengl_utils_SpriteBatch.VERTS_PER_SPRITE = 4;
openfl__$internal_text_TextEngine.UTF8_TAB = 9;
openfl__$internal_text_TextEngine.UTF8_ENDLINE = 10;
openfl__$internal_text_TextEngine.UTF8_SPACE = 32;
openfl__$internal_text_TextEngine.UTF8_HYPHEN = 45;
openfl__$internal_text_TextEngine.__defaultFonts = new haxe_ds_StringMap();
openfl_display_BitmapDataChannel.ALPHA = 8;
openfl_display_BitmapDataChannel.BLUE = 4;
openfl_display_BitmapDataChannel.GREEN = 2;
openfl_display_BitmapDataChannel.RED = 1;
openfl_display_Graphics.TILE_SCALE = 1;
openfl_display_Graphics.TILE_ROTATION = 2;
openfl_display_Graphics.TILE_RGB = 4;
openfl_display_Graphics.TILE_ALPHA = 8;
openfl_display_Graphics.TILE_TRANS_2x2 = 16;
openfl_display_Graphics.TILE_RECT = 32;
openfl_display_Graphics.TILE_ORIGIN = 64;
openfl_display_Graphics.TILE_BLEND_NORMAL = 0;
openfl_display_Graphics.TILE_BLEND_ADD = 65536;
openfl_display_Graphics.TILE_BLEND_MULTIPLY = 131072;
openfl_display_Graphics.TILE_BLEND_SCREEN = 262144;
openfl_display_Graphics.TILE_BLEND_SUBTRACT = 524288;
openfl_display_Graphics.TILE_BLEND_DARKEN = 1048576;
openfl_display_Graphics.TILE_BLEND_LIGHTEN = 2097152;
openfl_display_Graphics.TILE_BLEND_OVERLAY = 4194304;
openfl_display_Graphics.TILE_BLEND_HARDLIGHT = 8388608;
openfl_display_Graphics.TILE_BLEND_DIFFERENCE = 16777216;
openfl_display_Graphics.TILE_BLEND_INVERT = 33554432;
openfl_display_GraphicsPathCommand.LINE_TO = 2;
openfl_display_GraphicsPathCommand.MOVE_TO = 1;
openfl_display_GraphicsPathCommand.CURVE_TO = 3;
openfl_display_GraphicsPathCommand.WIDE_LINE_TO = 5;
openfl_display_GraphicsPathCommand.WIDE_MOVE_TO = 4;
openfl_display_GraphicsPathCommand.NO_OP = 0;
openfl_display_GraphicsPathCommand.CUBIC_CURVE_TO = 6;
openfl_display_OpenGLView.CONTEXT_LOST = "glcontextlost";
openfl_display_OpenGLView.CONTEXT_RESTORED = "glcontextrestored";
openfl_display_Shader.uniformRegex = new EReg("^\\s*uniform\\s+(sampler(?:2D|Cube)|[bi]?vec[234]|float|int|bool|mat[234])\\s+(\\w+)\\s*(?:\\[(\\d+)\\])?\\s*;.*$","gmi");
openfl_display_Shader.aPosition = "openfl_aPosition";
openfl_display_Shader.aTexCoord = "openfl_aTexCoord0";
openfl_display_Shader.aColor = "openfl_aColor";
openfl_display_Shader.uSampler = "openfl_uSampler0";
openfl_display_Shader.uProjectionMatrix = "openfl_uProjectionMatrix";
openfl_display_Shader.uColorMultiplier = "openfl_uColorMultiplier";
openfl_display_Shader.uColorOffset = "openfl_uColorOffset";
openfl_display_Shader.uObjectSize = "openfl_uObjectSize";
openfl_display_Shader.uTextureSize = "openfl_uTextureSize";
openfl_display_Shader.vTexCoord = "openfl_vTexCoord";
openfl_display_Shader.vColor = "openfl_vColor";
openfl_display_Shader.vertexHeader = ["attribute vec2 " + openfl_display_Shader.aPosition + ";","attribute vec2 " + openfl_display_Shader.aTexCoord + ";","attribute vec4 " + openfl_display_Shader.aColor + ";","uniform mat3 " + openfl_display_Shader.uProjectionMatrix + ";","uniform vec2 " + openfl_display_Shader.uObjectSize + ";","uniform vec2 " + openfl_display_Shader.uTextureSize + ";","varying vec2 " + openfl_display_Shader.vTexCoord + ";","varying vec4 " + openfl_display_Shader.vColor + ";"];
openfl_display_Shader.fragmentHeader = ["uniform sampler2D " + openfl_display_Shader.uSampler + ";","uniform vec4 " + openfl_display_Shader.uColorMultiplier + ";","uniform vec4 " + openfl_display_Shader.uColorOffset + ";","uniform vec2 " + openfl_display_Shader.uObjectSize + ";","uniform vec2 " + openfl_display_Shader.uTextureSize + ";","varying vec2 " + openfl_display_Shader.vTexCoord + ";","varying vec4 " + openfl_display_Shader.vColor + ";","vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {","   vec4 unmultiply = vec4(color.rgb / color.a, color.a);","   vec4 result = unmultiply * tint * multiplier;","   result = result + offset;","   result = clamp(result, 0., 1.);","   result = vec4(result.rgb * result.a, result.a);","   return result;","}"];
openfl_display_Tilesheet.TILE_SCALE = 1;
openfl_display_Tilesheet.TILE_ROTATION = 2;
openfl_display_Tilesheet.TILE_RGB = 4;
openfl_display_Tilesheet.TILE_ALPHA = 8;
openfl_display_Tilesheet.TILE_TRANS_2x2 = 16;
openfl_display_Tilesheet.TILE_RECT = 32;
openfl_display_Tilesheet.TILE_ORIGIN = 64;
openfl_display_Tilesheet.TILE_BLEND_NORMAL = 0;
openfl_display_Tilesheet.TILE_BLEND_ADD = 65536;
openfl_display_Tilesheet.TILE_BLEND_MULTIPLY = 131072;
openfl_display_Tilesheet.TILE_BLEND_SCREEN = 262144;
openfl_display_Tilesheet.TILE_BLEND_SUBTRACT = 524288;
openfl_display_Tilesheet.TILE_BLEND_DARKEN = 1048576;
openfl_display_Tilesheet.TILE_BLEND_LIGHTEN = 2097152;
openfl_display_Tilesheet.TILE_BLEND_OVERLAY = 4194304;
openfl_display_Tilesheet.TILE_BLEND_HARDLIGHT = 8388608;
openfl_display_Tilesheet.TILE_BLEND_DIFFERENCE = 16777216;
openfl_display_Tilesheet.TILE_BLEND_INVERT = 33554432;
openfl_display_Tilesheet.__defaultPoint = new openfl_geom_Point(0,0);
openfl_display3D_Context3D.TEXTURE_MAX_ANISOTROPY_EXT = 34046;
openfl_display3D_Context3D.MAX_SAMPLERS = 8;
openfl_display3D_Context3D.MAX_TEXTURE_MAX_ANISOTROPY_EXT = 34047;
openfl_display3D_Context3D.anisotropySupportTested = false;
openfl_display3D_Context3D.supportsAnisotropy = false;
openfl_display3D_Context3D.maxSupportedAnisotropy = 256;
openfl_display3D_Context3DClearMask.ALL = 17664;
openfl_display3D_Context3DClearMask.COLOR = 16384;
openfl_display3D_Context3DClearMask.DEPTH = 256;
openfl_display3D_Context3DClearMask.STENCIL = 1024;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.ALWAYS = 519;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.EQUAL = 514;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.GREATER = 516;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.GREATER_EQUAL = 518;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.LESS = 513;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.LESS_EQUAL = 515;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.NEVER = 512;
openfl_display3D__$Context3DCompareMode_Context3DCompareMode_$Impl_$.NOT_EQUAL = 517;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.BACK = 1028;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.FRONT = 1029;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.FRONT_AND_BACK = 1032;
openfl_display3D__$Context3DTriangleFace_Context3DTriangleFace_$Impl_$.NONE = 0;
openfl_errors_Error.DEFAULT_TO_STRING = "Error";
openfl_events_ActivityEvent.ACTIVITY = "activity";
openfl_events_TextEvent.LINK = "link";
openfl_events_TextEvent.TEXT_INPUT = "textInput";
openfl_events_ErrorEvent.ERROR = "error";
openfl_events_FocusEvent.FOCUS_IN = "focusIn";
openfl_events_FocusEvent.FOCUS_OUT = "focusOut";
openfl_events_FocusEvent.KEY_FOCUS_CHANGE = "keyFocusChange";
openfl_events_FocusEvent.MOUSE_FOCUS_CHANGE = "mouseFocusChange";
openfl_events_FullScreenEvent.FULL_SCREEN = "fullScreen";
openfl_events_FullScreenEvent.FULL_SCREEN_INTERACTIVE_ACCEPTED = "fullScreenInteractiveAccepted";
openfl_events_GameInputEvent.DEVICE_ADDED = "deviceAdded";
openfl_events_GameInputEvent.DEVICE_REMOVED = "deviceRemoved";
openfl_events_GameInputEvent.DEVICE_UNUSABLE = "deviceUnusable";
openfl_events_HTTPStatusEvent.HTTP_RESPONSE_STATUS = "httpResponseStatus";
openfl_events_HTTPStatusEvent.HTTP_STATUS = "httpStatus";
openfl_events_IOErrorEvent.IO_ERROR = "ioError";
openfl_events_KeyboardEvent.KEY_DOWN = "keyDown";
openfl_events_KeyboardEvent.KEY_UP = "keyUp";
openfl_events_MouseEvent.CLICK = "click";
openfl_events_MouseEvent.DOUBLE_CLICK = "doubleClick";
openfl_events_MouseEvent.MIDDLE_CLICK = "middleClick";
openfl_events_MouseEvent.MIDDLE_MOUSE_DOWN = "middleMouseDown";
openfl_events_MouseEvent.MIDDLE_MOUSE_UP = "middleMouseUp";
openfl_events_MouseEvent.MOUSE_DOWN = "mouseDown";
openfl_events_MouseEvent.MOUSE_MOVE = "mouseMove";
openfl_events_MouseEvent.MOUSE_OUT = "mouseOut";
openfl_events_MouseEvent.MOUSE_OVER = "mouseOver";
openfl_events_MouseEvent.MOUSE_UP = "mouseUp";
openfl_events_MouseEvent.MOUSE_WHEEL = "mouseWheel";
openfl_events_MouseEvent.RIGHT_CLICK = "rightClick";
openfl_events_MouseEvent.RIGHT_MOUSE_DOWN = "rightMouseDown";
openfl_events_MouseEvent.RIGHT_MOUSE_UP = "rightMouseUp";
openfl_events_MouseEvent.ROLL_OUT = "rollOut";
openfl_events_MouseEvent.ROLL_OVER = "rollOver";
openfl_events_NetStatusEvent.NET_STATUS = "netStatus";
openfl_events_ProgressEvent.PROGRESS = "progress";
openfl_events_ProgressEvent.SOCKET_DATA = "socketData";
openfl_events_SecurityErrorEvent.SECURITY_ERROR = "securityError";
openfl_events_TouchEvent.TOUCH_BEGIN = "touchBegin";
openfl_events_TouchEvent.TOUCH_END = "touchEnd";
openfl_events_TouchEvent.TOUCH_MOVE = "touchMove";
openfl_events_TouchEvent.TOUCH_OUT = "touchOut";
openfl_events_TouchEvent.TOUCH_OVER = "touchOver";
openfl_events_TouchEvent.TOUCH_ROLL_OUT = "touchRollOut";
openfl_events_TouchEvent.TOUCH_ROLL_OVER = "touchRollOver";
openfl_events_TouchEvent.TOUCH_TAP = "touchTap";
openfl_media_Sound.__registeredSounds = new haxe_ds_StringMap();
openfl_net_NetConnection.CONNECT_SUCCESS = "connectSuccess";
openfl_net_SharedObject.defaultObjectEncoding = 3;
openfl_system_SecurityDomain.currentDomain = new openfl_system_SecurityDomain();
openfl_text_Font.__registeredFonts = [];
openfl_ui_GameInput.isSupported = true;
openfl_ui_GameInput.numDevices = 0;
openfl_ui_GameInput.__deviceList = [];
openfl_ui_GameInput.__devices = new haxe_ds_ObjectMap();
openfl_ui_GameInput.__instances = [];
openfl_ui_GameInputDevice.MAX_BUFFER_SIZE = 32000;
openfl_ui_Keyboard.NUMBER_0 = 48;
openfl_ui_Keyboard.NUMBER_1 = 49;
openfl_ui_Keyboard.NUMBER_2 = 50;
openfl_ui_Keyboard.NUMBER_3 = 51;
openfl_ui_Keyboard.NUMBER_4 = 52;
openfl_ui_Keyboard.NUMBER_5 = 53;
openfl_ui_Keyboard.NUMBER_6 = 54;
openfl_ui_Keyboard.NUMBER_7 = 55;
openfl_ui_Keyboard.NUMBER_8 = 56;
openfl_ui_Keyboard.NUMBER_9 = 57;
openfl_ui_Keyboard.A = 65;
openfl_ui_Keyboard.B = 66;
openfl_ui_Keyboard.C = 67;
openfl_ui_Keyboard.D = 68;
openfl_ui_Keyboard.E = 69;
openfl_ui_Keyboard.F = 70;
openfl_ui_Keyboard.G = 71;
openfl_ui_Keyboard.H = 72;
openfl_ui_Keyboard.I = 73;
openfl_ui_Keyboard.J = 74;
openfl_ui_Keyboard.K = 75;
openfl_ui_Keyboard.L = 76;
openfl_ui_Keyboard.M = 77;
openfl_ui_Keyboard.N = 78;
openfl_ui_Keyboard.O = 79;
openfl_ui_Keyboard.P = 80;
openfl_ui_Keyboard.Q = 81;
openfl_ui_Keyboard.R = 82;
openfl_ui_Keyboard.S = 83;
openfl_ui_Keyboard.T = 84;
openfl_ui_Keyboard.U = 85;
openfl_ui_Keyboard.V = 86;
openfl_ui_Keyboard.W = 87;
openfl_ui_Keyboard.X = 88;
openfl_ui_Keyboard.Y = 89;
openfl_ui_Keyboard.Z = 90;
openfl_ui_Keyboard.NUMPAD_0 = 96;
openfl_ui_Keyboard.NUMPAD_1 = 97;
openfl_ui_Keyboard.NUMPAD_2 = 98;
openfl_ui_Keyboard.NUMPAD_3 = 99;
openfl_ui_Keyboard.NUMPAD_4 = 100;
openfl_ui_Keyboard.NUMPAD_5 = 101;
openfl_ui_Keyboard.NUMPAD_6 = 102;
openfl_ui_Keyboard.NUMPAD_7 = 103;
openfl_ui_Keyboard.NUMPAD_8 = 104;
openfl_ui_Keyboard.NUMPAD_9 = 105;
openfl_ui_Keyboard.NUMPAD_MULTIPLY = 106;
openfl_ui_Keyboard.NUMPAD_ADD = 107;
openfl_ui_Keyboard.NUMPAD_ENTER = 108;
openfl_ui_Keyboard.NUMPAD_SUBTRACT = 109;
openfl_ui_Keyboard.NUMPAD_DECIMAL = 110;
openfl_ui_Keyboard.NUMPAD_DIVIDE = 111;
openfl_ui_Keyboard.F1 = 112;
openfl_ui_Keyboard.F2 = 113;
openfl_ui_Keyboard.F3 = 114;
openfl_ui_Keyboard.F4 = 115;
openfl_ui_Keyboard.F5 = 116;
openfl_ui_Keyboard.F6 = 117;
openfl_ui_Keyboard.F7 = 118;
openfl_ui_Keyboard.F8 = 119;
openfl_ui_Keyboard.F9 = 120;
openfl_ui_Keyboard.F10 = 121;
openfl_ui_Keyboard.F11 = 122;
openfl_ui_Keyboard.F12 = 123;
openfl_ui_Keyboard.F13 = 124;
openfl_ui_Keyboard.F14 = 125;
openfl_ui_Keyboard.F15 = 126;
openfl_ui_Keyboard.BACKSPACE = 8;
openfl_ui_Keyboard.TAB = 9;
openfl_ui_Keyboard.ALTERNATE = 18;
openfl_ui_Keyboard.ENTER = 13;
openfl_ui_Keyboard.COMMAND = 15;
openfl_ui_Keyboard.SHIFT = 16;
openfl_ui_Keyboard.CONTROL = 17;
openfl_ui_Keyboard.BREAK = 19;
openfl_ui_Keyboard.CAPS_LOCK = 20;
openfl_ui_Keyboard.NUMPAD = 21;
openfl_ui_Keyboard.ESCAPE = 27;
openfl_ui_Keyboard.SPACE = 32;
openfl_ui_Keyboard.PAGE_UP = 33;
openfl_ui_Keyboard.PAGE_DOWN = 34;
openfl_ui_Keyboard.END = 35;
openfl_ui_Keyboard.HOME = 36;
openfl_ui_Keyboard.LEFT = 37;
openfl_ui_Keyboard.RIGHT = 39;
openfl_ui_Keyboard.UP = 38;
openfl_ui_Keyboard.DOWN = 40;
openfl_ui_Keyboard.INSERT = 45;
openfl_ui_Keyboard.DELETE = 46;
openfl_ui_Keyboard.NUMLOCK = 144;
openfl_ui_Keyboard.SEMICOLON = 186;
openfl_ui_Keyboard.EQUAL = 187;
openfl_ui_Keyboard.COMMA = 188;
openfl_ui_Keyboard.MINUS = 189;
openfl_ui_Keyboard.PERIOD = 190;
openfl_ui_Keyboard.SLASH = 191;
openfl_ui_Keyboard.BACKQUOTE = 192;
openfl_ui_Keyboard.LEFTBRACKET = 219;
openfl_ui_Keyboard.BACKSLASH = 220;
openfl_ui_Keyboard.RIGHTBRACKET = 221;
openfl_ui_Keyboard.QUOTE = 222;
spritesheet_data_BehaviorData.uniqueID = 0;
ApplicationMain.main();
})(typeof console != "undefined" ? console : {log:function(){}}, typeof window != "undefined" ? window : exports, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);